{"ast":null,"code":"\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { INTERNAL_HOOKS } from 'rc-table';\nimport { convertChildrenToColumns } from \"rc-table/es/hooks/useColumns\";\nimport omit from \"rc-util/es/omit\";\nimport useProxyImperativeHandle from '../_util/hooks/useProxyImperativeHandle';\nimport scrollTo from '../_util/scrollTo';\nimport { devUseWarning } from '../_util/warning';\nimport { ConfigContext } from '../config-provider/context';\nimport DefaultRenderEmpty from '../config-provider/defaultRenderEmpty';\nimport useCSSVarCls from '../config-provider/hooks/useCSSVarCls';\nimport useSize from '../config-provider/hooks/useSize';\nimport useBreakpoint from '../grid/hooks/useBreakpoint';\nimport defaultLocale from '../locale/en_US';\nimport Pagination from '../pagination';\nimport Spin from '../spin';\nimport { useToken } from '../theme/internal';\nimport renderExpandIcon from './ExpandIcon';\nimport useContainerWidth from './hooks/useContainerWidth';\nimport useFilter, { getFilterData } from './hooks/useFilter';\nimport useLazyKVMap from './hooks/useLazyKVMap';\nimport usePagination, { DEFAULT_PAGE_SIZE, getPaginationParam } from './hooks/usePagination';\nimport useSelection from './hooks/useSelection';\nimport useSorter, { getSortData } from './hooks/useSorter';\nimport useTitleColumns from './hooks/useTitleColumns';\nimport RcTable from './RcTable';\nimport RcVirtualTable from './RcTable/VirtualTable';\nimport useStyle from './style';\nconst EMPTY_LIST = [];\nconst InternalTable = (props, ref) => {\n  const {\n    prefixCls: customizePrefixCls,\n    className,\n    rootClassName,\n    style,\n    size: customizeSize,\n    bordered,\n    dropdownPrefixCls: customizeDropdownPrefixCls,\n    dataSource,\n    pagination,\n    rowSelection,\n    rowKey = 'key',\n    rowClassName,\n    columns,\n    children,\n    childrenColumnName: legacyChildrenColumnName,\n    onChange,\n    getPopupContainer,\n    loading,\n    expandIcon,\n    expandable,\n    expandedRowRender,\n    expandIconColumnIndex,\n    indentSize,\n    scroll,\n    sortDirections,\n    locale,\n    showSorterTooltip = true,\n    virtual\n  } = props;\n  const warning = devUseWarning('Table');\n  if (process.env.NODE_ENV !== 'production') {\n    process.env.NODE_ENV !== \"production\" ? warning(!(typeof rowKey === 'function' && rowKey.length > 1), 'usage', '`index` parameter of `rowKey` function is deprecated. There is no guarantee that it will work as expected.') : void 0;\n  }\n  const baseColumns = React.useMemo(() => columns || convertChildrenToColumns(children), [columns, children]);\n  const needResponsive = React.useMemo(() => baseColumns.some(col => col.responsive), [baseColumns]);\n  const screens = useBreakpoint(needResponsive);\n  const mergedColumns = React.useMemo(() => {\n    const matched = new Set(Object.keys(screens).filter(m => screens[m]));\n    return baseColumns.filter(c => !c.responsive || c.responsive.some(r => matched.has(r)));\n  }, [baseColumns, screens]);\n  const tableProps = omit(props, ['className', 'style', 'columns']);\n  const {\n    locale: contextLocale = defaultLocale,\n    direction,\n    table,\n    renderEmpty,\n    getPrefixCls,\n    getPopupContainer: getContextPopupContainer\n  } = React.useContext(ConfigContext);\n  const mergedSize = useSize(customizeSize);\n  const tableLocale = Object.assign(Object.assign({}, contextLocale.Table), locale);\n  const rawData = dataSource || EMPTY_LIST;\n  const prefixCls = getPrefixCls('table', customizePrefixCls);\n  const dropdownPrefixCls = getPrefixCls('dropdown', customizeDropdownPrefixCls);\n  const [, token] = useToken();\n  const rootCls = useCSSVarCls(prefixCls);\n  const [wrapCSSVar, hashId, cssVarCls] = useStyle(prefixCls, rootCls);\n  const mergedExpandable = Object.assign({\n    childrenColumnName: legacyChildrenColumnName,\n    expandIconColumnIndex\n  }, expandable);\n  const {\n    childrenColumnName = 'children'\n  } = mergedExpandable;\n  const expandType = React.useMemo(() => {\n    if (rawData.some(item => item === null || item === void 0 ? void 0 : item[childrenColumnName])) {\n      return 'nest';\n    }\n    if (expandedRowRender || expandable && expandable.expandedRowRender) {\n      return 'row';\n    }\n    return null;\n  }, [rawData]);\n  const internalRefs = {\n    body: React.useRef()\n  };\n  // ============================ Width =============================\n  const getContainerWidth = useContainerWidth(prefixCls);\n  // ============================= Refs =============================\n  const rootRef = React.useRef(null);\n  const tblRef = React.useRef(null);\n  useProxyImperativeHandle(ref, () => Object.assign(Object.assign({}, tblRef.current), {\n    nativeElement: rootRef.current\n  }));\n  // ============================ RowKey ============================\n  const getRowKey = React.useMemo(() => {\n    if (typeof rowKey === 'function') {\n      return rowKey;\n    }\n    return record => record === null || record === void 0 ? void 0 : record[rowKey];\n  }, [rowKey]);\n  const [getRecordByKey] = useLazyKVMap(rawData, childrenColumnName, getRowKey);\n  // ============================ Events =============================\n  const changeEventInfo = {};\n  const triggerOnChange = function (info, action) {\n    let reset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    var _a, _b, _c;\n    const changeInfo = Object.assign(Object.assign({}, changeEventInfo), info);\n    if (reset) {\n      (_a = changeEventInfo.resetPagination) === null || _a === void 0 ? void 0 : _a.call(changeEventInfo);\n      // Reset event param\n      if ((_b = changeInfo.pagination) === null || _b === void 0 ? void 0 : _b.current) {\n        changeInfo.pagination.current = 1;\n      }\n      // Trigger pagination events\n      if (pagination && pagination.onChange) {\n        pagination.onChange(1, (_c = changeInfo.pagination) === null || _c === void 0 ? void 0 : _c.pageSize);\n      }\n    }\n    if (scroll && scroll.scrollToFirstRowOnChange !== false && internalRefs.body.current) {\n      scrollTo(0, {\n        getContainer: () => internalRefs.body.current\n      });\n    }\n    onChange === null || onChange === void 0 ? void 0 : onChange(changeInfo.pagination, changeInfo.filters, changeInfo.sorter, {\n      currentDataSource: getFilterData(getSortData(rawData, changeInfo.sorterStates, childrenColumnName), changeInfo.filterStates),\n      action\n    });\n  };\n  /**\r\n   * Controlled state in `columns` is not a good idea that makes too many code (1000+ line?) to read\r\n   * state out and then put it back to title render. Move these code into `hooks` but still too\r\n   * complex. We should provides Table props like `sorter` & `filter` to handle control in next big\r\n   * version.\r\n   */\n  // ============================ Sorter =============================\n  const onSorterChange = (sorter, sorterStates) => {\n    triggerOnChange({\n      sorter,\n      sorterStates\n    }, 'sort', false);\n  };\n  const [transformSorterColumns, sortStates, sorterTitleProps, getSorters] = useSorter({\n    prefixCls,\n    mergedColumns,\n    onSorterChange,\n    sortDirections: sortDirections || ['ascend', 'descend'],\n    tableLocale,\n    showSorterTooltip\n  });\n  const sortedData = React.useMemo(() => getSortData(rawData, sortStates, childrenColumnName), [rawData, sortStates]);\n  changeEventInfo.sorter = getSorters();\n  changeEventInfo.sorterStates = sortStates;\n  // ============================ Filter ============================\n  const onFilterChange = (filters, filterStates) => {\n    triggerOnChange({\n      filters,\n      filterStates\n    }, 'filter', true);\n  };\n  const [transformFilterColumns, filterStates, filters] = useFilter({\n    prefixCls,\n    locale: tableLocale,\n    dropdownPrefixCls,\n    mergedColumns,\n    onFilterChange,\n    getPopupContainer: getPopupContainer || getContextPopupContainer,\n    rootClassName: classNames(rootClassName, rootCls)\n  });\n  const mergedData = getFilterData(sortedData, filterStates);\n  changeEventInfo.filters = filters;\n  changeEventInfo.filterStates = filterStates;\n  // ============================ Column ============================\n  const columnTitleProps = React.useMemo(() => {\n    const mergedFilters = {};\n    Object.keys(filters).forEach(filterKey => {\n      if (filters[filterKey] !== null) {\n        mergedFilters[filterKey] = filters[filterKey];\n      }\n    });\n    return Object.assign(Object.assign({}, sorterTitleProps), {\n      filters: mergedFilters\n    });\n  }, [sorterTitleProps, filters]);\n  const [transformTitleColumns] = useTitleColumns(columnTitleProps);\n  // ========================== Pagination ==========================\n  const onPaginationChange = (current, pageSize) => {\n    triggerOnChange({\n      pagination: Object.assign(Object.assign({}, changeEventInfo.pagination), {\n        current,\n        pageSize\n      })\n    }, 'paginate');\n  };\n  const [mergedPagination, resetPagination] = usePagination(mergedData.length, onPaginationChange, pagination);\n  changeEventInfo.pagination = pagination === false ? {} : getPaginationParam(mergedPagination, pagination);\n  changeEventInfo.resetPagination = resetPagination;\n  // ============================= Data =============================\n  const pageData = React.useMemo(() => {\n    if (pagination === false || !mergedPagination.pageSize) {\n      return mergedData;\n    }\n    const {\n      current = 1,\n      total,\n      pageSize = DEFAULT_PAGE_SIZE\n    } = mergedPagination;\n    process.env.NODE_ENV !== \"production\" ? warning(current > 0, 'usage', '`current` should be positive number.') : void 0;\n    // Dynamic table data\n    if (mergedData.length < total) {\n      if (mergedData.length > pageSize) {\n        process.env.NODE_ENV !== \"production\" ? warning(false, 'usage', '`dataSource` length is less than `pagination.total` but large than `pagination.pageSize`. Please make sure your config correct data with async mode.') : void 0;\n        return mergedData.slice((current - 1) * pageSize, current * pageSize);\n      }\n      return mergedData;\n    }\n    return mergedData.slice((current - 1) * pageSize, current * pageSize);\n  }, [!!pagination, mergedData, mergedPagination && mergedPagination.current, mergedPagination && mergedPagination.pageSize, mergedPagination && mergedPagination.total]);\n  // ========================== Selections ==========================\n  const [transformSelectionColumns, selectedKeySet] = useSelection({\n    prefixCls,\n    data: mergedData,\n    pageData,\n    getRowKey,\n    getRecordByKey,\n    expandType,\n    childrenColumnName,\n    locale: tableLocale,\n    getPopupContainer: getPopupContainer || getContextPopupContainer\n  }, rowSelection);\n  const internalRowClassName = (record, index, indent) => {\n    let mergedRowClassName;\n    if (typeof rowClassName === 'function') {\n      mergedRowClassName = classNames(rowClassName(record, index, indent));\n    } else {\n      mergedRowClassName = classNames(rowClassName);\n    }\n    return classNames({\n      [\"\".concat(prefixCls, \"-row-selected\")]: selectedKeySet.has(getRowKey(record, index))\n    }, mergedRowClassName);\n  };\n  // ========================== Expandable ==========================\n  // Pass origin render status into `rc-table`, this can be removed when refactor with `rc-table`\n  mergedExpandable.__PARENT_RENDER_ICON__ = mergedExpandable.expandIcon;\n  // Customize expandable icon\n  mergedExpandable.expandIcon = mergedExpandable.expandIcon || expandIcon || renderExpandIcon(tableLocale);\n  // Adjust expand icon index, no overwrite expandIconColumnIndex if set.\n  if (expandType === 'nest' && mergedExpandable.expandIconColumnIndex === undefined) {\n    mergedExpandable.expandIconColumnIndex = rowSelection ? 1 : 0;\n  } else if (mergedExpandable.expandIconColumnIndex > 0 && rowSelection) {\n    mergedExpandable.expandIconColumnIndex -= 1;\n  }\n  // Indent size\n  if (typeof mergedExpandable.indentSize !== 'number') {\n    mergedExpandable.indentSize = typeof indentSize === 'number' ? indentSize : 15;\n  }\n  // ============================ Render ============================\n  const transformColumns = React.useCallback(innerColumns => transformTitleColumns(transformSelectionColumns(transformFilterColumns(transformSorterColumns(innerColumns)))), [transformSorterColumns, transformFilterColumns, transformSelectionColumns]);\n  let topPaginationNode;\n  let bottomPaginationNode;\n  if (pagination !== false && (mergedPagination === null || mergedPagination === void 0 ? void 0 : mergedPagination.total)) {\n    let paginationSize;\n    if (mergedPagination.size) {\n      paginationSize = mergedPagination.size;\n    } else {\n      paginationSize = mergedSize === 'small' || mergedSize === 'middle' ? 'small' : undefined;\n    }\n    const renderPagination = position => ( /*#__PURE__*/React.createElement(Pagination, Object.assign({}, mergedPagination, {\n      className: classNames(\"\".concat(prefixCls, \"-pagination \").concat(prefixCls, \"-pagination-\").concat(position), mergedPagination.className),\n      size: paginationSize\n    })));\n    const defaultPosition = direction === 'rtl' ? 'left' : 'right';\n    const {\n      position\n    } = mergedPagination;\n    if (position !== null && Array.isArray(position)) {\n      const topPos = position.find(p => p.includes('top'));\n      const bottomPos = position.find(p => p.includes('bottom'));\n      const isDisable = position.every(p => \"\".concat(p) === 'none');\n      if (!topPos && !bottomPos && !isDisable) {\n        bottomPaginationNode = renderPagination(defaultPosition);\n      }\n      if (topPos) {\n        topPaginationNode = renderPagination(topPos.toLowerCase().replace('top', ''));\n      }\n      if (bottomPos) {\n        bottomPaginationNode = renderPagination(bottomPos.toLowerCase().replace('bottom', ''));\n      }\n    } else {\n      bottomPaginationNode = renderPagination(defaultPosition);\n    }\n  }\n  // >>>>>>>>> Spinning\n  let spinProps;\n  if (typeof loading === 'boolean') {\n    spinProps = {\n      spinning: loading\n    };\n  } else if (typeof loading === 'object') {\n    spinProps = Object.assign({\n      spinning: true\n    }, loading);\n  }\n  const wrapperClassNames = classNames(cssVarCls, rootCls, \"\".concat(prefixCls, \"-wrapper\"), table === null || table === void 0 ? void 0 : table.className, {\n    [\"\".concat(prefixCls, \"-wrapper-rtl\")]: direction === 'rtl'\n  }, className, rootClassName, hashId);\n  const mergedStyle = Object.assign(Object.assign({}, table === null || table === void 0 ? void 0 : table.style), style);\n  const emptyText = locale && locale.emptyText || (renderEmpty === null || renderEmpty === void 0 ? void 0 : renderEmpty('Table')) || ( /*#__PURE__*/React.createElement(DefaultRenderEmpty, {\n    componentName: \"Table\"\n  }));\n  // ========================== Render ==========================\n  const TableComponent = virtual ? RcVirtualTable : RcTable;\n  // >>> Virtual Table props. We set height here since it will affect height collection\n  const virtualProps = {};\n  const listItemHeight = React.useMemo(() => {\n    const {\n      fontSize,\n      lineHeight,\n      padding,\n      paddingXS,\n      paddingSM\n    } = token;\n    const fontHeight = Math.floor(fontSize * lineHeight);\n    switch (mergedSize) {\n      case 'large':\n        return padding * 2 + fontHeight;\n      case 'small':\n        return paddingXS * 2 + fontHeight;\n      default:\n        return paddingSM * 2 + fontHeight;\n    }\n  }, [token, mergedSize]);\n  if (virtual) {\n    virtualProps.listItemHeight = listItemHeight;\n  }\n  return wrapCSSVar( /*#__PURE__*/React.createElement(\"div\", {\n    ref: rootRef,\n    className: wrapperClassNames,\n    style: mergedStyle\n  }, /*#__PURE__*/React.createElement(Spin, Object.assign({\n    spinning: false\n  }, spinProps), topPaginationNode, /*#__PURE__*/React.createElement(TableComponent, Object.assign({}, virtualProps, tableProps, {\n    ref: tblRef,\n    columns: mergedColumns,\n    direction: direction,\n    expandable: mergedExpandable,\n    prefixCls: prefixCls,\n    className: classNames({\n      [\"\".concat(prefixCls, \"-middle\")]: mergedSize === 'middle',\n      [\"\".concat(prefixCls, \"-small\")]: mergedSize === 'small',\n      [\"\".concat(prefixCls, \"-bordered\")]: bordered,\n      [\"\".concat(prefixCls, \"-empty\")]: rawData.length === 0\n    }, cssVarCls, rootCls, hashId),\n    data: pageData,\n    rowKey: getRowKey,\n    rowClassName: internalRowClassName,\n    emptyText: emptyText,\n    // Internal\n    internalHooks: INTERNAL_HOOKS,\n    internalRefs: internalRefs,\n    transformColumns: transformColumns,\n    getContainerWidth: getContainerWidth\n  })), bottomPaginationNode)));\n};\nexport default /*#__PURE__*/React.forwardRef(InternalTable);","map":{"version":3,"names":["React","classNames","INTERNAL_HOOKS","convertChildrenToColumns","omit","useProxyImperativeHandle","scrollTo","devUseWarning","ConfigContext","DefaultRenderEmpty","useCSSVarCls","useSize","useBreakpoint","defaultLocale","Pagination","Spin","useToken","renderExpandIcon","useContainerWidth","useFilter","getFilterData","useLazyKVMap","usePagination","DEFAULT_PAGE_SIZE","getPaginationParam","useSelection","useSorter","getSortData","useTitleColumns","RcTable","RcVirtualTable","useStyle","EMPTY_LIST","InternalTable","props","ref","prefixCls","customizePrefixCls","className","rootClassName","style","size","customizeSize","bordered","dropdownPrefixCls","customizeDropdownPrefixCls","dataSource","pagination","rowSelection","rowKey","rowClassName","columns","children","childrenColumnName","legacyChildrenColumnName","onChange","getPopupContainer","loading","expandIcon","expandable","expandedRowRender","expandIconColumnIndex","indentSize","scroll","sortDirections","locale","showSorterTooltip","virtual","warning","process","env","NODE_ENV","length","baseColumns","useMemo","needResponsive","some","col","responsive","screens","mergedColumns","matched","Set","Object","keys","filter","m","c","r","has","tableProps","contextLocale","direction","table","renderEmpty","getPrefixCls","getContextPopupContainer","useContext","mergedSize","tableLocale","assign","Table","rawData","token","rootCls","wrapCSSVar","hashId","cssVarCls","mergedExpandable","expandType","item","internalRefs","body","useRef","getContainerWidth","rootRef","tblRef","current","nativeElement","getRowKey","record","getRecordByKey","changeEventInfo","triggerOnChange","info","action","reset","arguments","undefined","_a","_b","_c","changeInfo","resetPagination","call","pageSize","scrollToFirstRowOnChange","getContainer","filters","sorter","currentDataSource","sorterStates","filterStates","onSorterChange","transformSorterColumns","sortStates","sorterTitleProps","getSorters","sortedData","onFilterChange","transformFilterColumns","mergedData","columnTitleProps","mergedFilters","forEach","filterKey","transformTitleColumns","onPaginationChange","mergedPagination","pageData","total","slice","transformSelectionColumns","selectedKeySet","data","internalRowClassName","index","indent","mergedRowClassName","concat","__PARENT_RENDER_ICON__","transformColumns","useCallback","innerColumns","topPaginationNode","bottomPaginationNode","paginationSize","renderPagination","position","createElement","defaultPosition","Array","isArray","topPos","find","p","includes","bottomPos","isDisable","every","toLowerCase","replace","spinProps","spinning","wrapperClassNames","mergedStyle","emptyText","componentName","TableComponent","virtualProps","listItemHeight","fontSize","lineHeight","padding","paddingXS","paddingSM","fontHeight","Math","floor","internalHooks","forwardRef"],"sources":["C:/Users/user/Desktop/mcdonald-ec2/client/node_modules/antd/es/table/InternalTable.js"],"sourcesContent":["\"use client\";\r\n\r\nimport * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { INTERNAL_HOOKS } from 'rc-table';\r\nimport { convertChildrenToColumns } from \"rc-table/es/hooks/useColumns\";\r\nimport omit from \"rc-util/es/omit\";\r\nimport useProxyImperativeHandle from '../_util/hooks/useProxyImperativeHandle';\r\nimport scrollTo from '../_util/scrollTo';\r\nimport { devUseWarning } from '../_util/warning';\r\nimport { ConfigContext } from '../config-provider/context';\r\nimport DefaultRenderEmpty from '../config-provider/defaultRenderEmpty';\r\nimport useCSSVarCls from '../config-provider/hooks/useCSSVarCls';\r\nimport useSize from '../config-provider/hooks/useSize';\r\nimport useBreakpoint from '../grid/hooks/useBreakpoint';\r\nimport defaultLocale from '../locale/en_US';\r\nimport Pagination from '../pagination';\r\nimport Spin from '../spin';\r\nimport { useToken } from '../theme/internal';\r\nimport renderExpandIcon from './ExpandIcon';\r\nimport useContainerWidth from './hooks/useContainerWidth';\r\nimport useFilter, { getFilterData } from './hooks/useFilter';\r\nimport useLazyKVMap from './hooks/useLazyKVMap';\r\nimport usePagination, { DEFAULT_PAGE_SIZE, getPaginationParam } from './hooks/usePagination';\r\nimport useSelection from './hooks/useSelection';\r\nimport useSorter, { getSortData } from './hooks/useSorter';\r\nimport useTitleColumns from './hooks/useTitleColumns';\r\nimport RcTable from './RcTable';\r\nimport RcVirtualTable from './RcTable/VirtualTable';\r\nimport useStyle from './style';\r\nconst EMPTY_LIST = [];\r\nconst InternalTable = (props, ref) => {\r\n  const {\r\n    prefixCls: customizePrefixCls,\r\n    className,\r\n    rootClassName,\r\n    style,\r\n    size: customizeSize,\r\n    bordered,\r\n    dropdownPrefixCls: customizeDropdownPrefixCls,\r\n    dataSource,\r\n    pagination,\r\n    rowSelection,\r\n    rowKey = 'key',\r\n    rowClassName,\r\n    columns,\r\n    children,\r\n    childrenColumnName: legacyChildrenColumnName,\r\n    onChange,\r\n    getPopupContainer,\r\n    loading,\r\n    expandIcon,\r\n    expandable,\r\n    expandedRowRender,\r\n    expandIconColumnIndex,\r\n    indentSize,\r\n    scroll,\r\n    sortDirections,\r\n    locale,\r\n    showSorterTooltip = true,\r\n    virtual\r\n  } = props;\r\n  const warning = devUseWarning('Table');\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    process.env.NODE_ENV !== \"production\" ? warning(!(typeof rowKey === 'function' && rowKey.length > 1), 'usage', '`index` parameter of `rowKey` function is deprecated. There is no guarantee that it will work as expected.') : void 0;\r\n  }\r\n  const baseColumns = React.useMemo(() => columns || convertChildrenToColumns(children), [columns, children]);\r\n  const needResponsive = React.useMemo(() => baseColumns.some(col => col.responsive), [baseColumns]);\r\n  const screens = useBreakpoint(needResponsive);\r\n  const mergedColumns = React.useMemo(() => {\r\n    const matched = new Set(Object.keys(screens).filter(m => screens[m]));\r\n    return baseColumns.filter(c => !c.responsive || c.responsive.some(r => matched.has(r)));\r\n  }, [baseColumns, screens]);\r\n  const tableProps = omit(props, ['className', 'style', 'columns']);\r\n  const {\r\n    locale: contextLocale = defaultLocale,\r\n    direction,\r\n    table,\r\n    renderEmpty,\r\n    getPrefixCls,\r\n    getPopupContainer: getContextPopupContainer\r\n  } = React.useContext(ConfigContext);\r\n  const mergedSize = useSize(customizeSize);\r\n  const tableLocale = Object.assign(Object.assign({}, contextLocale.Table), locale);\r\n  const rawData = dataSource || EMPTY_LIST;\r\n  const prefixCls = getPrefixCls('table', customizePrefixCls);\r\n  const dropdownPrefixCls = getPrefixCls('dropdown', customizeDropdownPrefixCls);\r\n  const [, token] = useToken();\r\n  const rootCls = useCSSVarCls(prefixCls);\r\n  const [wrapCSSVar, hashId, cssVarCls] = useStyle(prefixCls, rootCls);\r\n  const mergedExpandable = Object.assign({\r\n    childrenColumnName: legacyChildrenColumnName,\r\n    expandIconColumnIndex\r\n  }, expandable);\r\n  const {\r\n    childrenColumnName = 'children'\r\n  } = mergedExpandable;\r\n  const expandType = React.useMemo(() => {\r\n    if (rawData.some(item => item === null || item === void 0 ? void 0 : item[childrenColumnName])) {\r\n      return 'nest';\r\n    }\r\n    if (expandedRowRender || expandable && expandable.expandedRowRender) {\r\n      return 'row';\r\n    }\r\n    return null;\r\n  }, [rawData]);\r\n  const internalRefs = {\r\n    body: React.useRef()\r\n  };\r\n  // ============================ Width =============================\r\n  const getContainerWidth = useContainerWidth(prefixCls);\r\n  // ============================= Refs =============================\r\n  const rootRef = React.useRef(null);\r\n  const tblRef = React.useRef(null);\r\n  useProxyImperativeHandle(ref, () => Object.assign(Object.assign({}, tblRef.current), {\r\n    nativeElement: rootRef.current\r\n  }));\r\n  // ============================ RowKey ============================\r\n  const getRowKey = React.useMemo(() => {\r\n    if (typeof rowKey === 'function') {\r\n      return rowKey;\r\n    }\r\n    return record => record === null || record === void 0 ? void 0 : record[rowKey];\r\n  }, [rowKey]);\r\n  const [getRecordByKey] = useLazyKVMap(rawData, childrenColumnName, getRowKey);\r\n  // ============================ Events =============================\r\n  const changeEventInfo = {};\r\n  const triggerOnChange = function (info, action) {\r\n    let reset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\r\n    var _a, _b, _c;\r\n    const changeInfo = Object.assign(Object.assign({}, changeEventInfo), info);\r\n    if (reset) {\r\n      (_a = changeEventInfo.resetPagination) === null || _a === void 0 ? void 0 : _a.call(changeEventInfo);\r\n      // Reset event param\r\n      if ((_b = changeInfo.pagination) === null || _b === void 0 ? void 0 : _b.current) {\r\n        changeInfo.pagination.current = 1;\r\n      }\r\n      // Trigger pagination events\r\n      if (pagination && pagination.onChange) {\r\n        pagination.onChange(1, (_c = changeInfo.pagination) === null || _c === void 0 ? void 0 : _c.pageSize);\r\n      }\r\n    }\r\n    if (scroll && scroll.scrollToFirstRowOnChange !== false && internalRefs.body.current) {\r\n      scrollTo(0, {\r\n        getContainer: () => internalRefs.body.current\r\n      });\r\n    }\r\n    onChange === null || onChange === void 0 ? void 0 : onChange(changeInfo.pagination, changeInfo.filters, changeInfo.sorter, {\r\n      currentDataSource: getFilterData(getSortData(rawData, changeInfo.sorterStates, childrenColumnName), changeInfo.filterStates),\r\n      action\r\n    });\r\n  };\r\n  /**\r\n   * Controlled state in `columns` is not a good idea that makes too many code (1000+ line?) to read\r\n   * state out and then put it back to title render. Move these code into `hooks` but still too\r\n   * complex. We should provides Table props like `sorter` & `filter` to handle control in next big\r\n   * version.\r\n   */\r\n  // ============================ Sorter =============================\r\n  const onSorterChange = (sorter, sorterStates) => {\r\n    triggerOnChange({\r\n      sorter,\r\n      sorterStates\r\n    }, 'sort', false);\r\n  };\r\n  const [transformSorterColumns, sortStates, sorterTitleProps, getSorters] = useSorter({\r\n    prefixCls,\r\n    mergedColumns,\r\n    onSorterChange,\r\n    sortDirections: sortDirections || ['ascend', 'descend'],\r\n    tableLocale,\r\n    showSorterTooltip\r\n  });\r\n  const sortedData = React.useMemo(() => getSortData(rawData, sortStates, childrenColumnName), [rawData, sortStates]);\r\n  changeEventInfo.sorter = getSorters();\r\n  changeEventInfo.sorterStates = sortStates;\r\n  // ============================ Filter ============================\r\n  const onFilterChange = (filters, filterStates) => {\r\n    triggerOnChange({\r\n      filters,\r\n      filterStates\r\n    }, 'filter', true);\r\n  };\r\n  const [transformFilterColumns, filterStates, filters] = useFilter({\r\n    prefixCls,\r\n    locale: tableLocale,\r\n    dropdownPrefixCls,\r\n    mergedColumns,\r\n    onFilterChange,\r\n    getPopupContainer: getPopupContainer || getContextPopupContainer,\r\n    rootClassName: classNames(rootClassName, rootCls)\r\n  });\r\n  const mergedData = getFilterData(sortedData, filterStates);\r\n  changeEventInfo.filters = filters;\r\n  changeEventInfo.filterStates = filterStates;\r\n  // ============================ Column ============================\r\n  const columnTitleProps = React.useMemo(() => {\r\n    const mergedFilters = {};\r\n    Object.keys(filters).forEach(filterKey => {\r\n      if (filters[filterKey] !== null) {\r\n        mergedFilters[filterKey] = filters[filterKey];\r\n      }\r\n    });\r\n    return Object.assign(Object.assign({}, sorterTitleProps), {\r\n      filters: mergedFilters\r\n    });\r\n  }, [sorterTitleProps, filters]);\r\n  const [transformTitleColumns] = useTitleColumns(columnTitleProps);\r\n  // ========================== Pagination ==========================\r\n  const onPaginationChange = (current, pageSize) => {\r\n    triggerOnChange({\r\n      pagination: Object.assign(Object.assign({}, changeEventInfo.pagination), {\r\n        current,\r\n        pageSize\r\n      })\r\n    }, 'paginate');\r\n  };\r\n  const [mergedPagination, resetPagination] = usePagination(mergedData.length, onPaginationChange, pagination);\r\n  changeEventInfo.pagination = pagination === false ? {} : getPaginationParam(mergedPagination, pagination);\r\n  changeEventInfo.resetPagination = resetPagination;\r\n  // ============================= Data =============================\r\n  const pageData = React.useMemo(() => {\r\n    if (pagination === false || !mergedPagination.pageSize) {\r\n      return mergedData;\r\n    }\r\n    const {\r\n      current = 1,\r\n      total,\r\n      pageSize = DEFAULT_PAGE_SIZE\r\n    } = mergedPagination;\r\n    process.env.NODE_ENV !== \"production\" ? warning(current > 0, 'usage', '`current` should be positive number.') : void 0;\r\n    // Dynamic table data\r\n    if (mergedData.length < total) {\r\n      if (mergedData.length > pageSize) {\r\n        process.env.NODE_ENV !== \"production\" ? warning(false, 'usage', '`dataSource` length is less than `pagination.total` but large than `pagination.pageSize`. Please make sure your config correct data with async mode.') : void 0;\r\n        return mergedData.slice((current - 1) * pageSize, current * pageSize);\r\n      }\r\n      return mergedData;\r\n    }\r\n    return mergedData.slice((current - 1) * pageSize, current * pageSize);\r\n  }, [!!pagination, mergedData, mergedPagination && mergedPagination.current, mergedPagination && mergedPagination.pageSize, mergedPagination && mergedPagination.total]);\r\n  // ========================== Selections ==========================\r\n  const [transformSelectionColumns, selectedKeySet] = useSelection({\r\n    prefixCls,\r\n    data: mergedData,\r\n    pageData,\r\n    getRowKey,\r\n    getRecordByKey,\r\n    expandType,\r\n    childrenColumnName,\r\n    locale: tableLocale,\r\n    getPopupContainer: getPopupContainer || getContextPopupContainer\r\n  }, rowSelection);\r\n  const internalRowClassName = (record, index, indent) => {\r\n    let mergedRowClassName;\r\n    if (typeof rowClassName === 'function') {\r\n      mergedRowClassName = classNames(rowClassName(record, index, indent));\r\n    } else {\r\n      mergedRowClassName = classNames(rowClassName);\r\n    }\r\n    return classNames({\r\n      [`${prefixCls}-row-selected`]: selectedKeySet.has(getRowKey(record, index))\r\n    }, mergedRowClassName);\r\n  };\r\n  // ========================== Expandable ==========================\r\n  // Pass origin render status into `rc-table`, this can be removed when refactor with `rc-table`\r\n  mergedExpandable.__PARENT_RENDER_ICON__ = mergedExpandable.expandIcon;\r\n  // Customize expandable icon\r\n  mergedExpandable.expandIcon = mergedExpandable.expandIcon || expandIcon || renderExpandIcon(tableLocale);\r\n  // Adjust expand icon index, no overwrite expandIconColumnIndex if set.\r\n  if (expandType === 'nest' && mergedExpandable.expandIconColumnIndex === undefined) {\r\n    mergedExpandable.expandIconColumnIndex = rowSelection ? 1 : 0;\r\n  } else if (mergedExpandable.expandIconColumnIndex > 0 && rowSelection) {\r\n    mergedExpandable.expandIconColumnIndex -= 1;\r\n  }\r\n  // Indent size\r\n  if (typeof mergedExpandable.indentSize !== 'number') {\r\n    mergedExpandable.indentSize = typeof indentSize === 'number' ? indentSize : 15;\r\n  }\r\n  // ============================ Render ============================\r\n  const transformColumns = React.useCallback(innerColumns => transformTitleColumns(transformSelectionColumns(transformFilterColumns(transformSorterColumns(innerColumns)))), [transformSorterColumns, transformFilterColumns, transformSelectionColumns]);\r\n  let topPaginationNode;\r\n  let bottomPaginationNode;\r\n  if (pagination !== false && (mergedPagination === null || mergedPagination === void 0 ? void 0 : mergedPagination.total)) {\r\n    let paginationSize;\r\n    if (mergedPagination.size) {\r\n      paginationSize = mergedPagination.size;\r\n    } else {\r\n      paginationSize = mergedSize === 'small' || mergedSize === 'middle' ? 'small' : undefined;\r\n    }\r\n    const renderPagination = position => ( /*#__PURE__*/React.createElement(Pagination, Object.assign({}, mergedPagination, {\r\n      className: classNames(`${prefixCls}-pagination ${prefixCls}-pagination-${position}`, mergedPagination.className),\r\n      size: paginationSize\r\n    })));\r\n    const defaultPosition = direction === 'rtl' ? 'left' : 'right';\r\n    const {\r\n      position\r\n    } = mergedPagination;\r\n    if (position !== null && Array.isArray(position)) {\r\n      const topPos = position.find(p => p.includes('top'));\r\n      const bottomPos = position.find(p => p.includes('bottom'));\r\n      const isDisable = position.every(p => `${p}` === 'none');\r\n      if (!topPos && !bottomPos && !isDisable) {\r\n        bottomPaginationNode = renderPagination(defaultPosition);\r\n      }\r\n      if (topPos) {\r\n        topPaginationNode = renderPagination(topPos.toLowerCase().replace('top', ''));\r\n      }\r\n      if (bottomPos) {\r\n        bottomPaginationNode = renderPagination(bottomPos.toLowerCase().replace('bottom', ''));\r\n      }\r\n    } else {\r\n      bottomPaginationNode = renderPagination(defaultPosition);\r\n    }\r\n  }\r\n  // >>>>>>>>> Spinning\r\n  let spinProps;\r\n  if (typeof loading === 'boolean') {\r\n    spinProps = {\r\n      spinning: loading\r\n    };\r\n  } else if (typeof loading === 'object') {\r\n    spinProps = Object.assign({\r\n      spinning: true\r\n    }, loading);\r\n  }\r\n  const wrapperClassNames = classNames(cssVarCls, rootCls, `${prefixCls}-wrapper`, table === null || table === void 0 ? void 0 : table.className, {\r\n    [`${prefixCls}-wrapper-rtl`]: direction === 'rtl'\r\n  }, className, rootClassName, hashId);\r\n  const mergedStyle = Object.assign(Object.assign({}, table === null || table === void 0 ? void 0 : table.style), style);\r\n  const emptyText = locale && locale.emptyText || (renderEmpty === null || renderEmpty === void 0 ? void 0 : renderEmpty('Table')) || ( /*#__PURE__*/React.createElement(DefaultRenderEmpty, {\r\n    componentName: \"Table\"\r\n  }));\r\n  // ========================== Render ==========================\r\n  const TableComponent = virtual ? RcVirtualTable : RcTable;\r\n  // >>> Virtual Table props. We set height here since it will affect height collection\r\n  const virtualProps = {};\r\n  const listItemHeight = React.useMemo(() => {\r\n    const {\r\n      fontSize,\r\n      lineHeight,\r\n      padding,\r\n      paddingXS,\r\n      paddingSM\r\n    } = token;\r\n    const fontHeight = Math.floor(fontSize * lineHeight);\r\n    switch (mergedSize) {\r\n      case 'large':\r\n        return padding * 2 + fontHeight;\r\n      case 'small':\r\n        return paddingXS * 2 + fontHeight;\r\n      default:\r\n        return paddingSM * 2 + fontHeight;\r\n    }\r\n  }, [token, mergedSize]);\r\n  if (virtual) {\r\n    virtualProps.listItemHeight = listItemHeight;\r\n  }\r\n  return wrapCSSVar( /*#__PURE__*/React.createElement(\"div\", {\r\n    ref: rootRef,\r\n    className: wrapperClassNames,\r\n    style: mergedStyle\r\n  }, /*#__PURE__*/React.createElement(Spin, Object.assign({\r\n    spinning: false\r\n  }, spinProps), topPaginationNode, /*#__PURE__*/React.createElement(TableComponent, Object.assign({}, virtualProps, tableProps, {\r\n    ref: tblRef,\r\n    columns: mergedColumns,\r\n    direction: direction,\r\n    expandable: mergedExpandable,\r\n    prefixCls: prefixCls,\r\n    className: classNames({\r\n      [`${prefixCls}-middle`]: mergedSize === 'middle',\r\n      [`${prefixCls}-small`]: mergedSize === 'small',\r\n      [`${prefixCls}-bordered`]: bordered,\r\n      [`${prefixCls}-empty`]: rawData.length === 0\r\n    }, cssVarCls, rootCls, hashId),\r\n    data: pageData,\r\n    rowKey: getRowKey,\r\n    rowClassName: internalRowClassName,\r\n    emptyText: emptyText,\r\n    // Internal\r\n    internalHooks: INTERNAL_HOOKS,\r\n    internalRefs: internalRefs,\r\n    transformColumns: transformColumns,\r\n    getContainerWidth: getContainerWidth\r\n  })), bottomPaginationNode)));\r\n};\r\nexport default /*#__PURE__*/React.forwardRef(InternalTable);"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}