{"ast":null,"code":"import { unit } from '@ant-design/cssinjs';\nimport { resetComponent } from '../../style';\nimport { genStyleHooks, mergeToken } from '../../theme/internal';\nconst genQRCodeStyle = token => {\n  const {\n    componentCls,\n    lineWidth,\n    lineType,\n    colorSplit\n  } = token;\n  return {\n    [componentCls]: Object.assign(Object.assign({}, resetComponent(token)), {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      padding: token.paddingSM,\n      backgroundColor: token.colorWhite,\n      borderRadius: token.borderRadiusLG,\n      border: \"\".concat(unit(lineWidth), \" \").concat(lineType, \" \").concat(colorSplit),\n      position: 'relative',\n      overflow: 'hidden',\n      [\"& > \".concat(componentCls, \"-mask\")]: {\n        position: 'absolute',\n        insetBlockStart: 0,\n        insetInlineStart: 0,\n        zIndex: 10,\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n        width: '100%',\n        height: '100%',\n        color: token.colorText,\n        lineHeight: token.lineHeight,\n        background: token.QRCodeMaskBackgroundColor,\n        textAlign: 'center',\n        [\"& > \".concat(componentCls, \"-expired\")]: {\n          color: token.QRCodeExpiredTextColor\n        }\n      },\n      '> canvas': {\n        alignSelf: 'stretch',\n        flex: 'auto',\n        minWidth: 0\n      },\n      '&-icon': {\n        marginBlockEnd: token.marginXS,\n        fontSize: token.controlHeight\n      }\n    }),\n    [\"\".concat(componentCls, \"-borderless\")]: {\n      borderColor: 'transparent'\n    }\n  };\n};\nexport const prepareComponentToken = () => ({});\nexport default genStyleHooks('QRCode', token => {\n  const mergedToken = mergeToken(token, {\n    QRCodeExpiredTextColor: 'rgba(0, 0, 0, 0.88)',\n    QRCodeMaskBackgroundColor: 'rgba(255, 255, 255, 0.96)'\n  });\n  return genQRCodeStyle(mergedToken);\n}, prepareComponentToken);","map":{"version":3,"names":["unit","resetComponent","genStyleHooks","mergeToken","genQRCodeStyle","token","componentCls","lineWidth","lineType","colorSplit","Object","assign","display","justifyContent","alignItems","padding","paddingSM","backgroundColor","colorWhite","borderRadius","borderRadiusLG","border","concat","position","overflow","insetBlockStart","insetInlineStart","zIndex","flexDirection","width","height","color","colorText","lineHeight","background","QRCodeMaskBackgroundColor","textAlign","QRCodeExpiredTextColor","alignSelf","flex","minWidth","marginBlockEnd","marginXS","fontSize","controlHeight","borderColor","prepareComponentToken","mergedToken"],"sources":["C:/Users/user/Desktop/mcdonald-ec2/client/node_modules/antd/es/qr-code/style/index.js"],"sourcesContent":["import { unit } from '@ant-design/cssinjs';\r\nimport { resetComponent } from '../../style';\r\nimport { genStyleHooks, mergeToken } from '../../theme/internal';\r\nconst genQRCodeStyle = token => {\r\n  const {\r\n    componentCls,\r\n    lineWidth,\r\n    lineType,\r\n    colorSplit\r\n  } = token;\r\n  return {\r\n    [componentCls]: Object.assign(Object.assign({}, resetComponent(token)), {\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      padding: token.paddingSM,\r\n      backgroundColor: token.colorWhite,\r\n      borderRadius: token.borderRadiusLG,\r\n      border: `${unit(lineWidth)} ${lineType} ${colorSplit}`,\r\n      position: 'relative',\r\n      overflow: 'hidden',\r\n      [`& > ${componentCls}-mask`]: {\r\n        position: 'absolute',\r\n        insetBlockStart: 0,\r\n        insetInlineStart: 0,\r\n        zIndex: 10,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        width: '100%',\r\n        height: '100%',\r\n        color: token.colorText,\r\n        lineHeight: token.lineHeight,\r\n        background: token.QRCodeMaskBackgroundColor,\r\n        textAlign: 'center',\r\n        [`& > ${componentCls}-expired`]: {\r\n          color: token.QRCodeExpiredTextColor\r\n        }\r\n      },\r\n      '> canvas': {\r\n        alignSelf: 'stretch',\r\n        flex: 'auto',\r\n        minWidth: 0\r\n      },\r\n      '&-icon': {\r\n        marginBlockEnd: token.marginXS,\r\n        fontSize: token.controlHeight\r\n      }\r\n    }),\r\n    [`${componentCls}-borderless`]: {\r\n      borderColor: 'transparent'\r\n    }\r\n  };\r\n};\r\nexport const prepareComponentToken = () => ({});\r\nexport default genStyleHooks('QRCode', token => {\r\n  const mergedToken = mergeToken(token, {\r\n    QRCodeExpiredTextColor: 'rgba(0, 0, 0, 0.88)',\r\n    QRCodeMaskBackgroundColor: 'rgba(255, 255, 255, 0.96)'\r\n  });\r\n  return genQRCodeStyle(mergedToken);\r\n}, prepareComponentToken);"],"mappings":"AAAA,SAASA,IAAI,QAAQ,qBAAqB;AAC1C,SAASC,cAAc,QAAQ,aAAa;AAC5C,SAASC,aAAa,EAAEC,UAAU,QAAQ,sBAAsB;AAChE,MAAMC,cAAc,GAAGC,KAAK,IAAI;EAC9B,MAAM;IACJC,YAAY;IACZC,SAAS;IACTC,QAAQ;IACRC;EACF,CAAC,GAAGJ,KAAK;EACT,OAAO;IACL,CAACC,YAAY,GAAGI,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEV,cAAc,CAACI,KAAK,CAAC,CAAC,EAAE;MACtEO,OAAO,EAAE,MAAM;MACfC,cAAc,EAAE,QAAQ;MACxBC,UAAU,EAAE,QAAQ;MACpBC,OAAO,EAAEV,KAAK,CAACW,SAAS;MACxBC,eAAe,EAAEZ,KAAK,CAACa,UAAU;MACjCC,YAAY,EAAEd,KAAK,CAACe,cAAc;MAClCC,MAAM,KAAAC,MAAA,CAAKtB,IAAI,CAACO,SAAS,CAAC,OAAAe,MAAA,CAAId,QAAQ,OAAAc,MAAA,CAAIb,UAAU,CAAE;MACtDc,QAAQ,EAAE,UAAU;MACpBC,QAAQ,EAAE,QAAQ;MAClB,QAAAF,MAAA,CAAQhB,YAAY,aAAU;QAC5BiB,QAAQ,EAAE,UAAU;QACpBE,eAAe,EAAE,CAAC;QAClBC,gBAAgB,EAAE,CAAC;QACnBC,MAAM,EAAE,EAAE;QACVf,OAAO,EAAE,MAAM;QACfgB,aAAa,EAAE,QAAQ;QACvBf,cAAc,EAAE,QAAQ;QACxBC,UAAU,EAAE,QAAQ;QACpBe,KAAK,EAAE,MAAM;QACbC,MAAM,EAAE,MAAM;QACdC,KAAK,EAAE1B,KAAK,CAAC2B,SAAS;QACtBC,UAAU,EAAE5B,KAAK,CAAC4B,UAAU;QAC5BC,UAAU,EAAE7B,KAAK,CAAC8B,yBAAyB;QAC3CC,SAAS,EAAE,QAAQ;QACnB,QAAAd,MAAA,CAAQhB,YAAY,gBAAa;UAC/ByB,KAAK,EAAE1B,KAAK,CAACgC;QACf;MACF,CAAC;MACD,UAAU,EAAE;QACVC,SAAS,EAAE,SAAS;QACpBC,IAAI,EAAE,MAAM;QACZC,QAAQ,EAAE;MACZ,CAAC;MACD,QAAQ,EAAE;QACRC,cAAc,EAAEpC,KAAK,CAACqC,QAAQ;QAC9BC,QAAQ,EAAEtC,KAAK,CAACuC;MAClB;IACF,CAAC,CAAC;IACF,IAAAtB,MAAA,CAAIhB,YAAY,mBAAgB;MAC9BuC,WAAW,EAAE;IACf;EACF,CAAC;AACH,CAAC;AACD,OAAO,MAAMC,qBAAqB,GAAGA,CAAA,MAAO,CAAC,CAAC,CAAC;AAC/C,eAAe5C,aAAa,CAAC,QAAQ,EAAEG,KAAK,IAAI;EAC9C,MAAM0C,WAAW,GAAG5C,UAAU,CAACE,KAAK,EAAE;IACpCgC,sBAAsB,EAAE,qBAAqB;IAC7CF,yBAAyB,EAAE;EAC7B,CAAC,CAAC;EACF,OAAO/B,cAAc,CAAC2C,WAAW,CAAC;AACpC,CAAC,EAAED,qBAAqB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}