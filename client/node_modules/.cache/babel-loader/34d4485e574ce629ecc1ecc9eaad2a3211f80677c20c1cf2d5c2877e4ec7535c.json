{"ast":null,"code":"import React,{useEffect,useState}from\"react\";import{useParams,NavLink}from\"react-router-dom\";import{API_URL}from\"../../../config/contansts\";import axios from\"axios\";import\"./DetailProduct.scss\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";const DetailProduct=()=>{const{id}=useParams();// 주소에서 상품id 가져옴\nconsole.log(\"디테일 파람스 id: \",id);const[number,setNumber]=useState(1);//상품개수 증감변수\nconst[isOptionVisible,setOptionVisible]=useState(true);//옵션 보여지는 여부\nconst[product,setProduct]=useState({});const[options,setOptions]=useState([]);useEffect(()=>{axios.get(\"\".concat(API_URL,\"/api/product/\").concat(id)).then(res=>{console.log(\"디테일에서받은res.data: \",res.data);setProduct(res.data);}).catch(err=>{console.error(err);});console.log(\"product에 담음:\",product);},[id]);/** 옵션 불러오기 */useEffect(()=>{axios.get(\"\".concat(API_URL,\"/api/option\")).then(res=>{setOptions(res.data);}).catch(err=>{console.error(err);});},[]);useEffect(()=>{if(options.length>0){setOptionQuantities(options.map(option=>({id:option.id,name:option.name,quantity:0,price:option.price})));}},[options]);/**옵션버튼 화살표이미지 */const optionBtn={src1:\"\".concat(API_URL,\"/images/Product/arrow_down_bf.png\"),src2:\"\".concat(API_URL,\"/images/Product/arrow_up_bf.png\")};/**옵션 화살표 버튼 클릭시 이미지가 변하고 옵션 보여짐 */const toggleOption=()=>{setOptionVisible(!isOptionVisible);};/** 상품개수 증감 */const increase=()=>{setNumber(number+1);};const decrease=()=>{if(number>1)setNumber(number-1);};const[isAllergyVisible,setAllergyVisible]=useState(false);const[isOriginVisible,setOriginVisible]=useState(false);/** 영양정보, 알레르기정보, 원산지 정보 */const handleAllergyButtonClick=()=>{setAllergyVisible(!isAllergyVisible);};const handleOriginButtonClick=()=>{setOriginVisible(!isOriginVisible);};const renderButtonContent=isVisible=>{return isVisible?\"-\":\"+\";};/** 각 옵션의 수량을 관리할 상태 배열 (순서 보기) */const[optionQuantities,setOptionQuantities]=useState(options.map(option=>({id:option.id,name:option.name,quantity:0,price:option.price})));/**  옵션수량 증감함수 */const optionDecrease=index=>{const updatedQuantities=[...optionQuantities];if(updatedQuantities[index].quantity>0){updatedQuantities[index].quantity-=1;setOptionQuantities(updatedQuantities);}};const optionIncrease=index=>{const updatedQuantities=[...optionQuantities];updatedQuantities[index].quantity+=1;setOptionQuantities(updatedQuantities);};// 각 옵션의 가격 * 수량 값을 더한 총 가격\n// total 은 누적값 초기값0, option 현재 순회중인 options 배열의 요소, index 순회중인 고유번호\n// reduce는 options 배열의 요소들을 순회하면서 콜백함수를 호출 최종적으로 옵션들의 총값을 추출\nconst totalOptionPrice=options.reduce((total,option,index)=>{var _optionQuantities$ind;return total+option.price*(((_optionQuantities$ind=optionQuantities[index])===null||_optionQuantities$ind===void 0?void 0:_optionQuantities$ind.quantity)||0);},0);// 삼품개수를 적용한 가격\nconst totalProductPrice=product.price*number;/** 장바구니버튼클릭시 로컬스토리지로 값보냄 */const handleCartButtonClick=()=>{// console.log(optionQuantities[0]);\nconst selectedOptions=optionQuantities.filter(option=>option.quantity>0).map(option=>({option_id:option.id,option_name:option.name,option_price:option.price,quantity:option.quantity}));const cartItem={img:product.thumbnail_img_url,name:product.k_name,price:product.price,// 상품 단가\nmenu_id:product.id,//상품 id\nquantity:number,// 옵션 수량 대신 `number`를 사용할 수 있습니다.\ntotalOptionPrice:totalOptionPrice,totalPrice:totalOptionPrice+totalProductPrice,//상품 총가격\noptions:selectedOptions};// 로컬 스토리지에서 기존의 장바구니 아이템을 가져오거나 빈 배열로 초기화합니다.\nconst existingCartItems=JSON.parse(sessionStorage.getItem(\"cart\"))||[];// 새로운 아이템을 장바구니에 추가합니다.\nexistingCartItems.push(cartItem);// 업데이트된 장바구니 아이템을 다시 로컬 스토리지에 저장합니다.\nsessionStorage.setItem(\"cart\",JSON.stringify(existingCartItems));};return/*#__PURE__*/_jsxs(\"div\",{id:\"burger-Detail\",children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"div\",{id:\"contents\",children:[/*#__PURE__*/_jsx(\"div\",{id:\"prod-img\",children:/*#__PURE__*/_jsx(\"img\",{src:API_URL+product.thumbnail_img_url,alt:\"\"})}),/*#__PURE__*/_jsxs(\"form\",{children:[/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:product.k_name}),/*#__PURE__*/_jsx(\"p\",{children:product.e_name}),/*#__PURE__*/_jsx(\"p\",{id:\"info\",children:product.description}),/*#__PURE__*/_jsxs(\"p\",{id:\"sale-time\",children:[\"*\\uD310\\uB9E4\\uC2DC\\uAC04:\",product.sale_start_time,\"~\",product.sale_end_time]})]}),/*#__PURE__*/_jsxs(\"li\",{id:\"prod-count\",children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"h2\",{children:\"\\uC218\\uB7C9\"})}),/*#__PURE__*/_jsxs(\"div\",{id:\"count-btn\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:decrease,children:/*#__PURE__*/_jsx(\"div\",{children:\"-\"})}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",children:number}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:increase,children:/*#__PURE__*/_jsx(\"span\",{children:\"+\"})})]})]}),/*#__PURE__*/_jsxs(\"li\",{id:\"option\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\uC635\\uC158\\uC120\\uD0DD\"}),/*#__PURE__*/_jsx(\"div\",{onClick:toggleOption,children:/*#__PURE__*/_jsx(\"img\",{src:\"\".concat(isOptionVisible===true?optionBtn.src1:optionBtn.src2),alt:\"\"})})]}),!isOptionVisible&&/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"ul\",{id:\"option-ul\",children:!options.length?/*#__PURE__*/_jsx(\"p\",{children:\"\\uC635\\uC158\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"}):/*#__PURE__*/_jsx(_Fragment,{children:options.map((option,index)=>/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"span\",{children:option.name}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"span\",{children:[option.price.toLocaleString(),\" \\uC6D0\"]}),/*#__PURE__*/_jsxs(\"div\",{id:\"option-count-btn\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:()=>optionDecrease(index),children:/*#__PURE__*/_jsx(\"span\",{children:\"-\"})}),/*#__PURE__*/_jsxs(\"button\",{type:\"button\",children:[\" \",optionQuantities[index]&&optionQuantities[index].quantity]}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:()=>optionIncrease(index),children:/*#__PURE__*/_jsx(\"span\",{children:\"+\"})})]})]})]},index))})})})]}),/*#__PURE__*/_jsxs(\"div\",{id:\"order\",children:[/*#__PURE__*/_jsxs(\"div\",{id:\"order-price\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"\\uC0C1\\uD488\\uAE08\\uC561\"}),/*#__PURE__*/_jsxs(\"h2\",{children:[(totalOptionPrice+totalProductPrice).toLocaleString(),\" \\uC6D0\"]})]}),/*#__PURE__*/_jsx(\"div\",{id:\"order-btn\",children:/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(NavLink,{to:\"/mcart\",type:\"button\",id:\"cartBtn\",onClick:handleCartButtonClick,children:\"\\uC7A5\\uBC14\\uAD6C\\uB2C8 \\uB2F4\\uAE30\"})})})]})]})]})}),/*#__PURE__*/_jsxs(\"div\",{id:\"menu-info\",children:[/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsxs(\"button\",{className:\"btn\",onClick:handleAllergyButtonClick,children:[/*#__PURE__*/_jsxs(\"div\",{id:\"toggle-btn\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\uC54C\\uB808\\uB974\\uAE30 \\uC815\\uBCF4\"}),\" \",/*#__PURE__*/_jsxs(\"button\",{children:[\" \",renderButtonContent(isAllergyVisible)]})]}),isAllergyVisible&&/*#__PURE__*/_jsx(\"div\",{id:\"toggle\",children:/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"b\",{children:\"\\uC54C\\uB808\\uB974\\uAE30 \\uC720\\uBC1C \\uAC00\\uB2A5 \\uC2DD\\uC7AC\\uB8CC\"}),/*#__PURE__*/_jsxs(\"span\",{children:[\" \",product.llergen_information]}),\" \",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"b\",{children:\"* \\uC77C\\uBD80 \\uD280\\uAE40\\uB958 \\uC81C\\uD488\\uC740 \\uC0C8\\uC6B0 \\uD328\\uD2F0\\uC640 \\uAC19\\uC740 \\uC870\\uB9AC\\uAE30\\uAD6C\\uB97C \\uC0AC\\uC6A9\\uD558\\uACE0 \\uC788\\uC2B5\\uB2C8\\uB2E4.\"})]})})]})}),/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsxs(\"button\",{className:\"btn\",onClick:handleOriginButtonClick,children:[/*#__PURE__*/_jsxs(\"div\",{id:\"toggle-btn\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\uC6D0\\uC0B0\\uC9C0 \\uC815\\uBCF4\"}),\" \",/*#__PURE__*/_jsx(\"button\",{children:renderButtonContent(isOriginVisible)})]}),isOriginVisible&&/*#__PURE__*/_jsx(\"div\",{id:\"toggle\",children:/*#__PURE__*/_jsx(\"p\",{children:/*#__PURE__*/_jsx(\"b\",{children:product.cuntry_of_origin})})})]})})]})]});};export default DetailProduct;","map":{"version":3,"names":["React","useEffect","useState","useParams","NavLink","API_URL","axios","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","DetailProduct","id","console","log","number","setNumber","isOptionVisible","setOptionVisible","product","setProduct","options","setOptions","get","concat","then","res","data","catch","err","error","length","setOptionQuantities","map","option","name","quantity","price","optionBtn","src1","src2","toggleOption","increase","decrease","isAllergyVisible","setAllergyVisible","isOriginVisible","setOriginVisible","handleAllergyButtonClick","handleOriginButtonClick","renderButtonContent","isVisible","optionQuantities","optionDecrease","index","updatedQuantities","optionIncrease","totalOptionPrice","reduce","total","_optionQuantities$ind","totalProductPrice","handleCartButtonClick","selectedOptions","filter","option_id","option_name","option_price","cartItem","img","thumbnail_img_url","k_name","menu_id","totalPrice","existingCartItems","JSON","parse","sessionStorage","getItem","push","setItem","stringify","children","src","alt","e_name","description","sale_start_time","sale_end_time","type","onClick","toLocaleString","to","className","llergen_information","cuntry_of_origin"],"sources":["C:/Users/user/Desktop/mcdonald-ec2/client/src/page/Menu/DetailProduct/DetailProduct.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useParams, NavLink } from \"react-router-dom\";\r\nimport { API_URL } from \"../../../config/contansts\";\r\nimport axios from \"axios\";\r\nimport \"./DetailProduct.scss\";\r\n\r\nconst DetailProduct = () => {\r\n  const { id } = useParams(); // 주소에서 상품id 가져옴\r\n  console.log(\"디테일 파람스 id: \", id);\r\n  const [number, setNumber] = useState(1); //상품개수 증감변수\r\n  const [isOptionVisible, setOptionVisible] = useState(true); //옵션 보여지는 여부\r\n  const [product, setProduct] = useState({});\r\n  const [options, setOptions] = useState([]);\r\n  useEffect(() => {\r\n    axios\r\n      .get(`${API_URL}/api/product/${id}`)\r\n      .then((res) => {\r\n        console.log(\"디테일에서받은res.data: \", res.data);\r\n        setProduct(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n      });\r\n    console.log(\"product에 담음:\", product);\r\n  }, [id]);\r\n  /** 옵션 불러오기 */\r\n  useEffect(() => {\r\n    axios\r\n      .get(`${API_URL}/api/option`)\r\n      .then((res) => {\r\n        setOptions(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n      });\r\n  }, []);\r\n  useEffect(() => {\r\n    if (options.length > 0) {\r\n      setOptionQuantities(\r\n        options.map((option) => ({\r\n          id: option.id,\r\n          name: option.name,\r\n          quantity: 0,\r\n          price: option.price,\r\n        }))\r\n      );\r\n    }\r\n  }, [options]);\r\n\r\n  /**옵션버튼 화살표이미지 */\r\n  const optionBtn = {\r\n    src1: `${API_URL}/images/Product/arrow_down_bf.png`,\r\n    src2: `${API_URL}/images/Product/arrow_up_bf.png`,\r\n  };\r\n  /**옵션 화살표 버튼 클릭시 이미지가 변하고 옵션 보여짐 */\r\n  const toggleOption = () => {\r\n    setOptionVisible(!isOptionVisible);\r\n  };\r\n  /** 상품개수 증감 */\r\n  const increase = () => {\r\n    setNumber(number + 1);\r\n  };\r\n  const decrease = () => {\r\n    if (number > 1) setNumber(number - 1);\r\n  };\r\n  const [isAllergyVisible, setAllergyVisible] = useState(false);\r\n  const [isOriginVisible, setOriginVisible] = useState(false);\r\n  /** 영양정보, 알레르기정보, 원산지 정보 */\r\n  const handleAllergyButtonClick = () => {\r\n    setAllergyVisible(!isAllergyVisible);\r\n  };\r\n  const handleOriginButtonClick = () => {\r\n    setOriginVisible(!isOriginVisible);\r\n  };\r\n  const renderButtonContent = (isVisible) => {\r\n    return isVisible ? \"-\" : \"+\";\r\n  };\r\n\r\n  /** 각 옵션의 수량을 관리할 상태 배열 (순서 보기) */ \r\n  const [optionQuantities, setOptionQuantities] = useState(\r\n    options.map((option) => ({\r\n      id: option.id,\r\n      name: option.name,\r\n      quantity: 0,\r\n      price: option.price,\r\n    }))\r\n  );\r\n\r\n  /**  옵션수량 증감함수 */\r\n  const optionDecrease = (index) => {\r\n    const updatedQuantities = [...optionQuantities];\r\n    if (updatedQuantities[index].quantity > 0) {\r\n      updatedQuantities[index].quantity -= 1;\r\n      setOptionQuantities(updatedQuantities);\r\n    }\r\n  };\r\n  const optionIncrease = (index) => {\r\n    const updatedQuantities = [...optionQuantities];\r\n    updatedQuantities[index].quantity += 1;\r\n    setOptionQuantities(updatedQuantities);\r\n  };\r\n\r\n  // 각 옵션의 가격 * 수량 값을 더한 총 가격\r\n  // total 은 누적값 초기값0, option 현재 순회중인 options 배열의 요소, index 순회중인 고유번호\r\n  // reduce는 options 배열의 요소들을 순회하면서 콜백함수를 호출 최종적으로 옵션들의 총값을 추출\r\n  const totalOptionPrice = options.reduce((total, option, index) => {\r\n    return total + option.price * (optionQuantities[index]?.quantity || 0);\r\n  }, 0);\r\n\r\n  // 삼품개수를 적용한 가격\r\n  const totalProductPrice = product.price * number;\r\n\r\n  /** 장바구니버튼클릭시 로컬스토리지로 값보냄 */\r\n  const handleCartButtonClick = () => {\r\n    // console.log(optionQuantities[0]);\r\n    const selectedOptions = optionQuantities\r\n      .filter((option) => option.quantity > 0)\r\n      .map((option) => ({\r\n        option_id: option.id,\r\n        option_name: option.name,\r\n        option_price: option.price,\r\n        quantity: option.quantity,\r\n      }));\r\n    const cartItem = {\r\n      img: product.thumbnail_img_url,\r\n      name: product.k_name,\r\n      price: product.price, // 상품 단가\r\n      menu_id: product.id, //상품 id\r\n      quantity: number, // 옵션 수량 대신 `number`를 사용할 수 있습니다.\r\n      totalOptionPrice: totalOptionPrice,\r\n      totalPrice: totalOptionPrice + totalProductPrice, //상품 총가격\r\n      options: selectedOptions,\r\n    };\r\n\r\n    // 로컬 스토리지에서 기존의 장바구니 아이템을 가져오거나 빈 배열로 초기화합니다.\r\n    const existingCartItems = JSON.parse(sessionStorage.getItem(\"cart\")) || [];\r\n    // 새로운 아이템을 장바구니에 추가합니다.\r\n    existingCartItems.push(cartItem);\r\n    // 업데이트된 장바구니 아이템을 다시 로컬 스토리지에 저장합니다.\r\n    sessionStorage.setItem(\"cart\", JSON.stringify(existingCartItems));\r\n  };\r\n\r\n  return (\r\n    <div id=\"burger-Detail\">\r\n      <div>\r\n        <div id=\"contents\">\r\n          <div id=\"prod-img\">\r\n            <img src={API_URL + product.thumbnail_img_url} alt=\"\" />\r\n          </div>\r\n          <form>\r\n            <li>\r\n              <h1>{product.k_name}</h1>\r\n              <p>{product.e_name}</p>\r\n              <p id=\"info\">{product.description}</p>\r\n              <p id=\"sale-time\">\r\n                *판매시간:{product.sale_start_time}~{product.sale_end_time}\r\n              </p>\r\n            </li>\r\n            <li id=\"prod-count\">\r\n              <div>\r\n                <h2>수량</h2>\r\n              </div>\r\n              <div id=\"count-btn\">\r\n                {/* 상품개수 증감버튼 form태그 안에서 type='button'으로해야 새로고침안됨:number값 초기화 안됨 */}\r\n                <button type=\"button\" onClick={decrease}>\r\n                  <div>-</div>\r\n                </button>\r\n                <button type=\"button\">{number}</button>\r\n                <button type=\"button\" onClick={increase}>\r\n                  <span>+</span>\r\n                </button>\r\n              </div>\r\n            </li>\r\n            <li id=\"option\">\r\n              <div>\r\n                <h2>옵션선택</h2>\r\n                <div onClick={toggleOption}>\r\n                  <img\r\n                    src={\r\n                      `${isOptionVisible === true ? optionBtn.src1 : optionBtn.src2}`\r\n                    } \r\n                    alt=\"\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              {!isOptionVisible && (\r\n                <div>\r\n                  <ul id=\"option-ul\">\r\n                    {!options.length ? (\r\n                      <p>옵션이 없습니다.</p>\r\n                    ) : (\r\n                      <>\r\n                        {options.map((option, index) => (\r\n                          <li key={index}>\r\n                            <span>{option.name}</span>\r\n                            <div>\r\n                              <span>{option.price.toLocaleString()} 원</span>\r\n                              <div id=\"option-count-btn\">\r\n                                <button\r\n                                  type=\"button\"\r\n                                  onClick={() => optionDecrease(index)}\r\n                                >\r\n                                  <span>-</span>\r\n                                </button>\r\n                                <button type=\"button\">\r\n                                  {\" \"}\r\n                                  {optionQuantities[index] &&\r\n                                    optionQuantities[index].quantity}\r\n                                </button>\r\n                                <button\r\n                                  type=\"button\"\r\n                                  onClick={() => optionIncrease(index)}\r\n                                >\r\n                                  <span>+</span>\r\n                                </button>\r\n                              </div>\r\n                            </div>\r\n                          </li>\r\n                        ))}\r\n                      </>\r\n                    )}\r\n                  </ul>\r\n                </div>\r\n              )}\r\n            </li>\r\n            <div id=\"order\">\r\n              <div id=\"order-price\">\r\n                <span>상품금액</span>\r\n                <h2>{(totalOptionPrice + totalProductPrice).toLocaleString()} 원</h2>\r\n              </div>\r\n              <div id=\"order-btn\">\r\n                <div>\r\n                  <NavLink\r\n                    to=\"/mcart\"\r\n                    type=\"button\"\r\n                    id=\"cartBtn\"\r\n                    onClick={handleCartButtonClick}\r\n                  >\r\n                    장바구니 담기\r\n                  </NavLink>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n      <div id=\"menu-info\">\r\n        <li>\r\n          <button className=\"btn\" onClick={handleAllergyButtonClick}>\r\n            <div id=\"toggle-btn\">\r\n              <h2>알레르기 정보</h2>{\" \"}\r\n              <button> {renderButtonContent(isAllergyVisible)}</button>\r\n            </div>\r\n            {isAllergyVisible && (\r\n              <div id=\"toggle\">\r\n                <p>\r\n                  <b>알레르기 유발 가능 식재료</b>\r\n                  <span> {product.llergen_information}</span> <br />\r\n                  <b>\r\n                    * 일부 튀김류 제품은 새우 패티와 같은 조리기구를 사용하고\r\n                    있습니다.\r\n                  </b>\r\n                </p>\r\n              </div>\r\n            )}\r\n          </button>\r\n        </li>\r\n        <li>\r\n          <button className=\"btn\" onClick={handleOriginButtonClick}>\r\n            <div id=\"toggle-btn\">\r\n              <h2>원산지 정보</h2>{\" \"}\r\n              <button>{renderButtonContent(isOriginVisible)}</button>\r\n            </div>\r\n            {isOriginVisible && (\r\n              <div id=\"toggle\">\r\n                <p>\r\n                  <b>{product.cuntry_of_origin}</b>\r\n                </p>\r\n              </div>\r\n            )}\r\n          </button>\r\n        </li>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DetailProduct;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,OAASC,SAAS,CAAEC,OAAO,KAAQ,kBAAkB,CACrD,OAASC,OAAO,KAAQ,2BAA2B,CACnD,MAAO,CAAAC,KAAK,KAAM,OAAO,CACzB,MAAO,sBAAsB,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,gCAAAC,QAAA,IAAAC,SAAA,yBAE9B,KAAM,CAAAC,aAAa,CAAGA,CAAA,GAAM,CAC1B,KAAM,CAAEC,EAAG,CAAC,CAAGX,SAAS,CAAC,CAAC,CAAE;AAC5BY,OAAO,CAACC,GAAG,CAAC,cAAc,CAAEF,EAAE,CAAC,CAC/B,KAAM,CAACG,MAAM,CAAEC,SAAS,CAAC,CAAGhB,QAAQ,CAAC,CAAC,CAAC,CAAE;AACzC,KAAM,CAACiB,eAAe,CAAEC,gBAAgB,CAAC,CAAGlB,QAAQ,CAAC,IAAI,CAAC,CAAE;AAC5D,KAAM,CAACmB,OAAO,CAAEC,UAAU,CAAC,CAAGpB,QAAQ,CAAC,CAAC,CAAC,CAAC,CAC1C,KAAM,CAACqB,OAAO,CAAEC,UAAU,CAAC,CAAGtB,QAAQ,CAAC,EAAE,CAAC,CAC1CD,SAAS,CAAC,IAAM,CACdK,KAAK,CACFmB,GAAG,IAAAC,MAAA,CAAIrB,OAAO,kBAAAqB,MAAA,CAAgBZ,EAAE,CAAE,CAAC,CACnCa,IAAI,CAAEC,GAAG,EAAK,CACbb,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAEY,GAAG,CAACC,IAAI,CAAC,CAC1CP,UAAU,CAACM,GAAG,CAACC,IAAI,CAAC,CACtB,CAAC,CAAC,CACDC,KAAK,CAAEC,GAAG,EAAK,CACdhB,OAAO,CAACiB,KAAK,CAACD,GAAG,CAAC,CACpB,CAAC,CAAC,CACJhB,OAAO,CAACC,GAAG,CAAC,cAAc,CAAEK,OAAO,CAAC,CACtC,CAAC,CAAE,CAACP,EAAE,CAAC,CAAC,CACR,cACAb,SAAS,CAAC,IAAM,CACdK,KAAK,CACFmB,GAAG,IAAAC,MAAA,CAAIrB,OAAO,eAAa,CAAC,CAC5BsB,IAAI,CAAEC,GAAG,EAAK,CACbJ,UAAU,CAACI,GAAG,CAACC,IAAI,CAAC,CACtB,CAAC,CAAC,CACDC,KAAK,CAAEC,GAAG,EAAK,CACdhB,OAAO,CAACiB,KAAK,CAACD,GAAG,CAAC,CACpB,CAAC,CAAC,CACN,CAAC,CAAE,EAAE,CAAC,CACN9B,SAAS,CAAC,IAAM,CACd,GAAIsB,OAAO,CAACU,MAAM,CAAG,CAAC,CAAE,CACtBC,mBAAmB,CACjBX,OAAO,CAACY,GAAG,CAAEC,MAAM,GAAM,CACvBtB,EAAE,CAAEsB,MAAM,CAACtB,EAAE,CACbuB,IAAI,CAAED,MAAM,CAACC,IAAI,CACjBC,QAAQ,CAAE,CAAC,CACXC,KAAK,CAAEH,MAAM,CAACG,KAChB,CAAC,CAAC,CACJ,CAAC,CACH,CACF,CAAC,CAAE,CAAChB,OAAO,CAAC,CAAC,CAEb,iBACA,KAAM,CAAAiB,SAAS,CAAG,CAChBC,IAAI,IAAAf,MAAA,CAAKrB,OAAO,qCAAmC,CACnDqC,IAAI,IAAAhB,MAAA,CAAKrB,OAAO,mCAClB,CAAC,CACD,mCACA,KAAM,CAAAsC,YAAY,CAAGA,CAAA,GAAM,CACzBvB,gBAAgB,CAAC,CAACD,eAAe,CAAC,CACpC,CAAC,CACD,cACA,KAAM,CAAAyB,QAAQ,CAAGA,CAAA,GAAM,CACrB1B,SAAS,CAACD,MAAM,CAAG,CAAC,CAAC,CACvB,CAAC,CACD,KAAM,CAAA4B,QAAQ,CAAGA,CAAA,GAAM,CACrB,GAAI5B,MAAM,CAAG,CAAC,CAAEC,SAAS,CAACD,MAAM,CAAG,CAAC,CAAC,CACvC,CAAC,CACD,KAAM,CAAC6B,gBAAgB,CAAEC,iBAAiB,CAAC,CAAG7C,QAAQ,CAAC,KAAK,CAAC,CAC7D,KAAM,CAAC8C,eAAe,CAAEC,gBAAgB,CAAC,CAAG/C,QAAQ,CAAC,KAAK,CAAC,CAC3D,2BACA,KAAM,CAAAgD,wBAAwB,CAAGA,CAAA,GAAM,CACrCH,iBAAiB,CAAC,CAACD,gBAAgB,CAAC,CACtC,CAAC,CACD,KAAM,CAAAK,uBAAuB,CAAGA,CAAA,GAAM,CACpCF,gBAAgB,CAAC,CAACD,eAAe,CAAC,CACpC,CAAC,CACD,KAAM,CAAAI,mBAAmB,CAAIC,SAAS,EAAK,CACzC,MAAO,CAAAA,SAAS,CAAG,GAAG,CAAG,GAAG,CAC9B,CAAC,CAED,kCACA,KAAM,CAACC,gBAAgB,CAAEpB,mBAAmB,CAAC,CAAGhC,QAAQ,CACtDqB,OAAO,CAACY,GAAG,CAAEC,MAAM,GAAM,CACvBtB,EAAE,CAAEsB,MAAM,CAACtB,EAAE,CACbuB,IAAI,CAAED,MAAM,CAACC,IAAI,CACjBC,QAAQ,CAAE,CAAC,CACXC,KAAK,CAAEH,MAAM,CAACG,KAChB,CAAC,CAAC,CACJ,CAAC,CAED,iBACA,KAAM,CAAAgB,cAAc,CAAIC,KAAK,EAAK,CAChC,KAAM,CAAAC,iBAAiB,CAAG,CAAC,GAAGH,gBAAgB,CAAC,CAC/C,GAAIG,iBAAiB,CAACD,KAAK,CAAC,CAAClB,QAAQ,CAAG,CAAC,CAAE,CACzCmB,iBAAiB,CAACD,KAAK,CAAC,CAAClB,QAAQ,EAAI,CAAC,CACtCJ,mBAAmB,CAACuB,iBAAiB,CAAC,CACxC,CACF,CAAC,CACD,KAAM,CAAAC,cAAc,CAAIF,KAAK,EAAK,CAChC,KAAM,CAAAC,iBAAiB,CAAG,CAAC,GAAGH,gBAAgB,CAAC,CAC/CG,iBAAiB,CAACD,KAAK,CAAC,CAAClB,QAAQ,EAAI,CAAC,CACtCJ,mBAAmB,CAACuB,iBAAiB,CAAC,CACxC,CAAC,CAED;AACA;AACA;AACA,KAAM,CAAAE,gBAAgB,CAAGpC,OAAO,CAACqC,MAAM,CAAC,CAACC,KAAK,CAAEzB,MAAM,CAAEoB,KAAK,GAAK,KAAAM,qBAAA,CAChE,MAAO,CAAAD,KAAK,CAAGzB,MAAM,CAACG,KAAK,EAAI,EAAAuB,qBAAA,CAAAR,gBAAgB,CAACE,KAAK,CAAC,UAAAM,qBAAA,iBAAvBA,qBAAA,CAAyBxB,QAAQ,GAAI,CAAC,CAAC,CACxE,CAAC,CAAE,CAAC,CAAC,CAEL;AACA,KAAM,CAAAyB,iBAAiB,CAAG1C,OAAO,CAACkB,KAAK,CAAGtB,MAAM,CAEhD,4BACA,KAAM,CAAA+C,qBAAqB,CAAGA,CAAA,GAAM,CAClC;AACA,KAAM,CAAAC,eAAe,CAAGX,gBAAgB,CACrCY,MAAM,CAAE9B,MAAM,EAAKA,MAAM,CAACE,QAAQ,CAAG,CAAC,CAAC,CACvCH,GAAG,CAAEC,MAAM,GAAM,CAChB+B,SAAS,CAAE/B,MAAM,CAACtB,EAAE,CACpBsD,WAAW,CAAEhC,MAAM,CAACC,IAAI,CACxBgC,YAAY,CAAEjC,MAAM,CAACG,KAAK,CAC1BD,QAAQ,CAAEF,MAAM,CAACE,QACnB,CAAC,CAAC,CAAC,CACL,KAAM,CAAAgC,QAAQ,CAAG,CACfC,GAAG,CAAElD,OAAO,CAACmD,iBAAiB,CAC9BnC,IAAI,CAAEhB,OAAO,CAACoD,MAAM,CACpBlC,KAAK,CAAElB,OAAO,CAACkB,KAAK,CAAE;AACtBmC,OAAO,CAAErD,OAAO,CAACP,EAAE,CAAE;AACrBwB,QAAQ,CAAErB,MAAM,CAAE;AAClB0C,gBAAgB,CAAEA,gBAAgB,CAClCgB,UAAU,CAAEhB,gBAAgB,CAAGI,iBAAiB,CAAE;AAClDxC,OAAO,CAAE0C,eACX,CAAC,CAED;AACA,KAAM,CAAAW,iBAAiB,CAAGC,IAAI,CAACC,KAAK,CAACC,cAAc,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC,EAAI,EAAE,CAC1E;AACAJ,iBAAiB,CAACK,IAAI,CAACX,QAAQ,CAAC,CAChC;AACAS,cAAc,CAACG,OAAO,CAAC,MAAM,CAAEL,IAAI,CAACM,SAAS,CAACP,iBAAiB,CAAC,CAAC,CACnE,CAAC,CAED,mBACElE,KAAA,QAAKI,EAAE,CAAC,eAAe,CAAAsE,QAAA,eACrB5E,IAAA,QAAA4E,QAAA,cACE1E,KAAA,QAAKI,EAAE,CAAC,UAAU,CAAAsE,QAAA,eAChB5E,IAAA,QAAKM,EAAE,CAAC,UAAU,CAAAsE,QAAA,cAChB5E,IAAA,QAAK6E,GAAG,CAAEhF,OAAO,CAAGgB,OAAO,CAACmD,iBAAkB,CAACc,GAAG,CAAC,EAAE,CAAE,CAAC,CACrD,CAAC,cACN5E,KAAA,SAAA0E,QAAA,eACE1E,KAAA,OAAA0E,QAAA,eACE5E,IAAA,OAAA4E,QAAA,CAAK/D,OAAO,CAACoD,MAAM,CAAK,CAAC,cACzBjE,IAAA,MAAA4E,QAAA,CAAI/D,OAAO,CAACkE,MAAM,CAAI,CAAC,cACvB/E,IAAA,MAAGM,EAAE,CAAC,MAAM,CAAAsE,QAAA,CAAE/D,OAAO,CAACmE,WAAW,CAAI,CAAC,cACtC9E,KAAA,MAAGI,EAAE,CAAC,WAAW,CAAAsE,QAAA,EAAC,4BACV,CAAC/D,OAAO,CAACoE,eAAe,CAAC,GAAC,CAACpE,OAAO,CAACqE,aAAa,EACrD,CAAC,EACF,CAAC,cACLhF,KAAA,OAAII,EAAE,CAAC,YAAY,CAAAsE,QAAA,eACjB5E,IAAA,QAAA4E,QAAA,cACE5E,IAAA,OAAA4E,QAAA,CAAI,cAAE,CAAI,CAAC,CACR,CAAC,cACN1E,KAAA,QAAKI,EAAE,CAAC,WAAW,CAAAsE,QAAA,eAEjB5E,IAAA,WAAQmF,IAAI,CAAC,QAAQ,CAACC,OAAO,CAAE/C,QAAS,CAAAuC,QAAA,cACtC5E,IAAA,QAAA4E,QAAA,CAAK,GAAC,CAAK,CAAC,CACN,CAAC,cACT5E,IAAA,WAAQmF,IAAI,CAAC,QAAQ,CAAAP,QAAA,CAAEnE,MAAM,CAAS,CAAC,cACvCT,IAAA,WAAQmF,IAAI,CAAC,QAAQ,CAACC,OAAO,CAAEhD,QAAS,CAAAwC,QAAA,cACtC5E,IAAA,SAAA4E,QAAA,CAAM,GAAC,CAAM,CAAC,CACR,CAAC,EACN,CAAC,EACJ,CAAC,cACL1E,KAAA,OAAII,EAAE,CAAC,QAAQ,CAAAsE,QAAA,eACb1E,KAAA,QAAA0E,QAAA,eACE5E,IAAA,OAAA4E,QAAA,CAAI,0BAAI,CAAI,CAAC,cACb5E,IAAA,QAAKoF,OAAO,CAAEjD,YAAa,CAAAyC,QAAA,cACzB5E,IAAA,QACE6E,GAAG,IAAA3D,MAAA,CACEP,eAAe,GAAK,IAAI,CAAGqB,SAAS,CAACC,IAAI,CAAGD,SAAS,CAACE,IAAI,CAC9D,CACD4C,GAAG,CAAC,EAAE,CACP,CAAC,CACC,CAAC,EACH,CAAC,CACL,CAACnE,eAAe,eACfX,IAAA,QAAA4E,QAAA,cACE5E,IAAA,OAAIM,EAAE,CAAC,WAAW,CAAAsE,QAAA,CACf,CAAC7D,OAAO,CAACU,MAAM,cACdzB,IAAA,MAAA4E,QAAA,CAAG,8CAAS,CAAG,CAAC,cAEhB5E,IAAA,CAAAI,SAAA,EAAAwE,QAAA,CACG7D,OAAO,CAACY,GAAG,CAAC,CAACC,MAAM,CAAEoB,KAAK,gBACzB9C,KAAA,OAAA0E,QAAA,eACE5E,IAAA,SAAA4E,QAAA,CAAOhD,MAAM,CAACC,IAAI,CAAO,CAAC,cAC1B3B,KAAA,QAAA0E,QAAA,eACE1E,KAAA,SAAA0E,QAAA,EAAOhD,MAAM,CAACG,KAAK,CAACsD,cAAc,CAAC,CAAC,CAAC,SAAE,EAAM,CAAC,cAC9CnF,KAAA,QAAKI,EAAE,CAAC,kBAAkB,CAAAsE,QAAA,eACxB5E,IAAA,WACEmF,IAAI,CAAC,QAAQ,CACbC,OAAO,CAAEA,CAAA,GAAMrC,cAAc,CAACC,KAAK,CAAE,CAAA4B,QAAA,cAErC5E,IAAA,SAAA4E,QAAA,CAAM,GAAC,CAAM,CAAC,CACR,CAAC,cACT1E,KAAA,WAAQiF,IAAI,CAAC,QAAQ,CAAAP,QAAA,EAClB,GAAG,CACH9B,gBAAgB,CAACE,KAAK,CAAC,EACtBF,gBAAgB,CAACE,KAAK,CAAC,CAAClB,QAAQ,EAC5B,CAAC,cACT9B,IAAA,WACEmF,IAAI,CAAC,QAAQ,CACbC,OAAO,CAAEA,CAAA,GAAMlC,cAAc,CAACF,KAAK,CAAE,CAAA4B,QAAA,cAErC5E,IAAA,SAAA4E,QAAA,CAAM,GAAC,CAAM,CAAC,CACR,CAAC,EACN,CAAC,EACH,CAAC,GAvBC5B,KAwBL,CACL,CAAC,CACF,CACH,CACC,CAAC,CACF,CACN,EACC,CAAC,cACL9C,KAAA,QAAKI,EAAE,CAAC,OAAO,CAAAsE,QAAA,eACb1E,KAAA,QAAKI,EAAE,CAAC,aAAa,CAAAsE,QAAA,eACnB5E,IAAA,SAAA4E,QAAA,CAAM,0BAAI,CAAM,CAAC,cACjB1E,KAAA,OAAA0E,QAAA,EAAK,CAACzB,gBAAgB,CAAGI,iBAAiB,EAAE8B,cAAc,CAAC,CAAC,CAAC,SAAE,EAAI,CAAC,EACjE,CAAC,cACNrF,IAAA,QAAKM,EAAE,CAAC,WAAW,CAAAsE,QAAA,cACjB5E,IAAA,QAAA4E,QAAA,cACE5E,IAAA,CAACJ,OAAO,EACN0F,EAAE,CAAC,QAAQ,CACXH,IAAI,CAAC,QAAQ,CACb7E,EAAE,CAAC,SAAS,CACZ8E,OAAO,CAAE5B,qBAAsB,CAAAoB,QAAA,CAChC,uCAED,CAAS,CAAC,CACP,CAAC,CACH,CAAC,EACH,CAAC,EACF,CAAC,EACJ,CAAC,CACH,CAAC,cACN1E,KAAA,QAAKI,EAAE,CAAC,WAAW,CAAAsE,QAAA,eACjB5E,IAAA,OAAA4E,QAAA,cACE1E,KAAA,WAAQqF,SAAS,CAAC,KAAK,CAACH,OAAO,CAAE1C,wBAAyB,CAAAkC,QAAA,eACxD1E,KAAA,QAAKI,EAAE,CAAC,YAAY,CAAAsE,QAAA,eAClB5E,IAAA,OAAA4E,QAAA,CAAI,uCAAO,CAAI,CAAC,CAAC,GAAG,cACpB1E,KAAA,WAAA0E,QAAA,EAAQ,GAAC,CAAChC,mBAAmB,CAACN,gBAAgB,CAAC,EAAS,CAAC,EACtD,CAAC,CACLA,gBAAgB,eACftC,IAAA,QAAKM,EAAE,CAAC,QAAQ,CAAAsE,QAAA,cACd1E,KAAA,MAAA0E,QAAA,eACE5E,IAAA,MAAA4E,QAAA,CAAG,uEAAc,CAAG,CAAC,cACrB1E,KAAA,SAAA0E,QAAA,EAAM,GAAC,CAAC/D,OAAO,CAAC2E,mBAAmB,EAAO,CAAC,IAAC,cAAAxF,IAAA,QAAK,CAAC,cAClDA,IAAA,MAAA4E,QAAA,CAAG,qLAGH,CAAG,CAAC,EACH,CAAC,CACD,CACN,EACK,CAAC,CACP,CAAC,cACL5E,IAAA,OAAA4E,QAAA,cACE1E,KAAA,WAAQqF,SAAS,CAAC,KAAK,CAACH,OAAO,CAAEzC,uBAAwB,CAAAiC,QAAA,eACvD1E,KAAA,QAAKI,EAAE,CAAC,YAAY,CAAAsE,QAAA,eAClB5E,IAAA,OAAA4E,QAAA,CAAI,iCAAM,CAAI,CAAC,CAAC,GAAG,cACnB5E,IAAA,WAAA4E,QAAA,CAAShC,mBAAmB,CAACJ,eAAe,CAAC,CAAS,CAAC,EACpD,CAAC,CACLA,eAAe,eACdxC,IAAA,QAAKM,EAAE,CAAC,QAAQ,CAAAsE,QAAA,cACd5E,IAAA,MAAA4E,QAAA,cACE5E,IAAA,MAAA4E,QAAA,CAAI/D,OAAO,CAAC4E,gBAAgB,CAAI,CAAC,CAChC,CAAC,CACD,CACN,EACK,CAAC,CACP,CAAC,EACF,CAAC,EACH,CAAC,CAEV,CAAC,CAED,cAAe,CAAApF,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}