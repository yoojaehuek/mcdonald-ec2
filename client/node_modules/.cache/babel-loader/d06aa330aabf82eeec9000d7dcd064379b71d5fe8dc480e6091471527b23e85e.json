{"ast":null,"code":"/*!\r\n * Chart.js v3.0.0\r\n * https://www.chartjs.org\r\n * (c) 2021 Chart.js Contributors\r\n * Released under the MIT License\r\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, b as isArray, d as defaults, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as isNullOrUndef, k as clipArea, m as unclipArea, _ as _arrayUnique, t as toRadians, n as toPercentage, o as toDimension, T as TAU, p as formatNumber, q as _angleBetween, H as HALF_PI, P as PI, w as isNumber, x as _limitValue, y as _lookupByKey, z as getRelativePosition$1, A as _isPointInArea, B as _rlookupByKey, C as toPadding, D as each, E as getMaximumSize, F as _getParentNode, G as readUsedSize, I as throttled, J as supportsEventListenerOptions, K as log10, L as _factorize, M as finiteOrDefault, N as callback, O as toDegrees, Q as _measureText, R as _int16Range, S as _alignPixel, U as renderText, V as toFont, W as _toLeftRightCenter, X as _alignStartEnd, Y as overrides, Z as merge, $ as _capitalize, a0 as descriptors, a1 as isFunction, a2 as _attachContext, a3 as _createResolver, a4 as _descriptors, a5 as mergeIf, a6 as uid, a7 as debounce, a8 as retinaScale, a9 as clearCanvas, aa as _elementsEqual, ab as getAngleFromPoint, ac as _updateBezierControlPoints, ad as _computeSegments, ae as _boundSegments, af as _steppedInterpolation, ag as _bezierInterpolation, ah as _pointInLine, ai as _steppedLineTo, aj as _bezierCurveTo, ak as drawPoint, al as toTRBL, am as toTRBLCorners, an as _boundSegment, ao as _normalizeAngle, ap as getRtlAdapter, aq as overrideTextDirection, ar as _textX, as as restoreTextDirection, at as noop, au as distanceBetweenPoints, av as _addGrace, aw as _setMinAndMaxByKey, ax as niceNum, ay as almostWhole, az as almostEquals, aA as _decimalPlaces, aB as _longestText, aC as _filterBetween, aD as _lookup } from './chunks/helpers.segment.js';\nexport { d as defaults } from './chunks/helpers.segment.js';\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n  _refresh() {\n    const me = this;\n    if (me._request) {\n      return;\n    }\n    me._running = true;\n    me._request = requestAnimFrame.call(window, () => {\n      me._update();\n      me._request = null;\n      if (me._running) {\n        me._refresh();\n      }\n    });\n  }\n  _update() {\n    let date = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Date.now();\n    const me = this;\n    let remaining = 0;\n    me._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n      for (; i >= 0; --i) {\n        item = items[i];\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n      if (draw) {\n        chart.draw();\n        me._notify(chart, anims, date, 'progress');\n      }\n      if (!items.length) {\n        anims.running = false;\n        me._notify(chart, anims, date, 'complete');\n      }\n      remaining += items.length;\n    });\n    me._lastDate = date;\n    if (remaining === 0) {\n      me._running = false;\n    }\n  }\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\nvar animator = new Animator();\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color(from, to, factor) {\n    const c0 = color(from || transparent);\n    const c1 = c0.valid && color(to || transparent);\n    return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  active() {\n    return this._active;\n  }\n  update(cfg, to, date) {\n    const me = this;\n    if (me._active) {\n      me._notify(false);\n      const currentValue = me._target[me._prop];\n      const elapsed = date - me._start;\n      const remain = me._duration - elapsed;\n      me._start = date;\n      me._duration = Math.floor(Math.max(remain, cfg.duration));\n      me._total += elapsed;\n      me._loop = !!cfg.loop;\n      me._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      me._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n  cancel() {\n    const me = this;\n    if (me._active) {\n      me.tick(Date.now());\n      me._active = false;\n      me._notify(false);\n    }\n  }\n  tick(date) {\n    const me = this;\n    const elapsed = date - me._start;\n    const duration = me._duration;\n    const prop = me._prop;\n    const from = me._from;\n    const loop = me._loop;\n    const to = me._to;\n    let factor;\n    me._active = from !== to && (loop || elapsed < duration);\n    if (!me._active) {\n      me._target[prop] = to;\n      me._notify(true);\n      return;\n    }\n    if (elapsed < 0) {\n      me._target[prop] = from;\n      return;\n    }\n    factor = elapsed / duration % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = me._easing(Math.min(1, Math.max(0, factor)));\n    me._target[prop] = me._fn(from, to, factor);\n  }\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({\n        res,\n        rej\n      });\n    });\n  }\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined\n});\nconst animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: name => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  }\n});\ndefaults.describe('animations', {\n  _fallback: 'animation'\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      }\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: v => v | 0\n      }\n    }\n  }\n});\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach(prop => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {});\n    }\n    return animations;\n  }\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n    const animations = this._createAnimations(target, values);\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {\n      $shared: false,\n      $animations: {}\n    });\n  }\n  return options;\n}\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  let t, r, b, l;\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction applyStack(stack, value, dsIndex, options) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return indexScale.id + '.' + valueScale.id + '.' + meta.stack + '.' + meta.type;\n}\nfunction getUserBounds(scale) {\n  const {\n    min,\n    max,\n    minDefined,\n    maxDefined\n  } = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction updateStacks(controller, parsed) {\n  const {\n    chart,\n    _cachedMeta: meta\n  } = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {\n    iScale,\n    vScale,\n    index: datasetIndex\n  } = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {\n      [iAxis]: index,\n      [vAxis]: value\n    } = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return Object.assign(Object.create(parent), {\n    active: false,\n    dataset: undefined,\n    datasetIndex: index,\n    index,\n    mode: 'default',\n    type: 'dataset'\n  });\n}\nfunction createDataContext(parent, index, element) {\n  return Object.assign(Object.create(parent), {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[meta.vScale.id] === undefined || stacks[meta.vScale.id][meta.index] === undefined) {\n      return;\n    }\n    delete stacks[meta.vScale.id][meta.index];\n  }\n}\nconst isDirectUpdateMode = mode => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nclass DatasetController {\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.$context = undefined;\n    this.initialize();\n  }\n  initialize() {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.configure();\n    me.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    me.addElements();\n  }\n  updateIndex(datasetIndex) {\n    this.index = datasetIndex;\n  }\n  linkScales() {\n    const me = this;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const dataset = me.getDataset();\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = me.getScaleForId(xid);\n    meta.yScale = me.getScaleForId(yid);\n    meta.rScale = me.getScaleForId(rid);\n    meta.iScale = me.getScaleForId(iid);\n    meta.vScale = me.getScaleForId(vid);\n  }\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale ? meta.vScale : meta.iScale;\n  }\n  reset() {\n    this._update('reset');\n  }\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n  _dataCheck() {\n    const me = this;\n    const dataset = me.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    if (isObject(data)) {\n      me._data = convertObjectDataToArray(data);\n    } else if (me._data !== data) {\n      if (me._data) {\n        unlistenArrayEvents(me._data, me);\n        clearStacks(me._cachedMeta);\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, me);\n      }\n      me._data = data;\n    }\n  }\n  addElements() {\n    const me = this;\n    const meta = me._cachedMeta;\n    me._dataCheck();\n    if (me.datasetElementType) {\n      meta.dataset = new me.datasetElementType();\n    }\n  }\n  buildOrUpdateElements(resetNewElements) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const dataset = me.getDataset();\n    let stackChanged = false;\n    me._dataCheck();\n    meta._stacked = isStacked(meta.vScale, meta);\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n    me._resyncElements(resetNewElements);\n    if (stackChanged) {\n      updateStacks(me, meta._parsed);\n    }\n  }\n  configure() {\n    const me = this;\n    const config = me.chart.config;\n    const scopeKeys = config.datasetScopeKeys(me._type);\n    const scopes = config.getOptionScopes(me.getDataset(), scopeKeys, true);\n    me.options = config.createResolver(scopes, me.getContext());\n    me._parsing = me.options.parsing;\n  }\n  parse(start, count) {\n    const me = this;\n    const {\n      _cachedMeta: meta,\n      _data: data\n    } = me;\n    const {\n      iScale,\n      _stacked\n    } = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n    if (me._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n    } else {\n      if (isArray(data[start])) {\n        parsed = me.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = me.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = me.parsePrimitiveData(meta, data, start, count);\n      }\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n    if (_stacked) {\n      updateStacks(me, parsed);\n    }\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const {\n      iScale,\n      vScale\n    } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const {\n      xScale,\n      yScale\n    } = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const {\n      xScale,\n      yScale\n    } = meta;\n    const {\n      xAxisKey = 'x',\n      yAxisKey = 'y'\n    } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {\n      mode\n    });\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      range.min = Math.min(range.min, value);\n      range.max = Math.max(range.max, value);\n      value = applyStack(stack, parsedValue, this._cachedMeta.index, {\n        all: true\n      });\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n  getMinMax(scale, canStack) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = me._getOtherScale(scale);\n    const stack = canStack && meta._stacked && {\n      keys: getSortedDatasetIndices(me.chart, true),\n      values: null\n    };\n    const range = {\n      min: Number.POSITIVE_INFINITY,\n      max: Number.NEGATIVE_INFINITY\n    };\n    const {\n      min: otherMin,\n      max: otherMax\n    } = getUserBounds(otherScale);\n    let i, value, parsed, otherValue;\n    function _skip() {\n      parsed = _parsed[i];\n      value = parsed[scale.axis];\n      otherValue = parsed[otherScale.axis];\n      return !isNumberFinite(value) || otherMin > otherValue || otherMax < otherValue;\n    }\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      me.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        break;\n      }\n    }\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        me.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isNumberFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n  getMaxOverflow() {\n    return false;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = me.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n  _update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.configure();\n    me._cachedDataOpts = {};\n    me.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(me.options.clip, defaultClip(meta.xScale, meta.yScale, me.getMaxOverflow())));\n  }\n  update(mode) {}\n  draw() {\n    const me = this;\n    const ctx = me._ctx;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = me._drawStart || 0;\n    const count = me._drawCount || elements.length - start;\n    let i;\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.active) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n  }\n  getContext(index, active, mode) {\n    const me = this;\n    const dataset = me.getDataset();\n    let context;\n    if (index >= 0 && index < me._cachedMeta.data.length) {\n      const element = me._cachedMeta.data[index];\n      context = element.$context || (element.$context = createDataContext(me.getContext(), index, element));\n      context.parsed = me.getParsed(index);\n      context.raw = dataset.data[index];\n    } else {\n      context = me.$context || (me.$context = createDatasetContext(me.chart.getContext(), me.index));\n      context.dataset = dataset;\n    }\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n  _resolveElementOptions(elementType) {\n    let mode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'default';\n    let index = arguments.length > 2 ? arguments[2] : undefined;\n    const me = this;\n    const active = mode === 'active';\n    const cache = me._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = me.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = me.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(me._type, elementType);\n    const prefixes = active ? [\"\".concat(elementType, \"Hover\"), 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    const context = () => me.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n    return values;\n  }\n  _resolveAnimations(index, transition, active) {\n    const me = this;\n    const chart = me.chart;\n    const cache = me._cachedDataOpts;\n    const cacheKey = \"animation-\".concat(transition);\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = me.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(me._type, transition);\n      const scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, me.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: !active && this.getSharedOptions(options) || options\n    });\n  }\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n  _resyncElements(resetNewElements) {\n    const me = this;\n    const numMeta = me._cachedMeta.data.length;\n    const numData = me._data.length;\n    if (numData > numMeta) {\n      me._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      me._removeElements(numData, numMeta - numData);\n    }\n    const count = Math.min(numData, numMeta);\n    if (count) {\n      me.parse(0, count);\n    }\n  }\n  _insertElements(start, count) {\n    let resetNewElements = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    const me = this;\n    const meta = me._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n    const move = arr => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n    for (i = start; i < end; ++i) {\n      data[i] = new me.dataElementType();\n    }\n    if (me._parsing) {\n      move(meta._parsed);\n    }\n    me.parse(start, count);\n    if (resetNewElements) {\n      me.updateElements(data, start, count, 'reset');\n    }\n  }\n  updateElements(element, start, count, mode) {}\n  _removeElements(start, count) {\n    const me = this;\n    const meta = me._cachedMeta;\n    if (me._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n  _onDataPush() {\n    const count = arguments.length;\n    this._insertElements(this.getDataset().data.length - count, count);\n  }\n  _onDataPop() {\n    this._removeElements(this._cachedMeta.data.length - 1, 1);\n  }\n  _onDataShift() {\n    this._removeElements(0, 1);\n  }\n  _onDataSplice(start, count) {\n    this._removeElements(start, count);\n    this._insertElements(start, arguments.length - 2);\n  }\n  _onDataUnshift() {\n    this._insertElements(0, arguments.length);\n  }\n}\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\nfunction getAllScaleValues(scale) {\n  if (!scale._cache.$bar) {\n    const metas = scale.getMatchingVisibleMetas('bar');\n    let values = [];\n    for (let i = 0, ilen = metas.length; i < ilen; i++) {\n      values = values.concat(metas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(scale) {\n  const values = getAllScaleValues(scale);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    min = Math.min(min, i && Math.abs(curr - prev) || min);\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - size / 2\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nclass BarController extends DatasetController {\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseObjectData(meta, data, start, count) {\n    const {\n      iScale,\n      vScale\n    } = meta;\n    const {\n      xAxisKey = 'x',\n      yAxisKey = 'y'\n    } = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {\n      iScale,\n      vScale\n    } = meta;\n    const parsed = me.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n  initialize() {\n    const me = this;\n    me.enableOptionSharing = true;\n    super.initialize();\n    const meta = me._cachedMeta;\n    meta.stack = me.getDataset().stack;\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n  updateElements(bars, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const vScale = me._cachedMeta.vScale;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = me._getRuler();\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n    for (let i = start; i < start + count; i++) {\n      const vpixels = reset ? {\n        base,\n        head: base\n      } : me._calculateBarValuePixels(i);\n      const ipixels = me._calculateBarIndexPixels(i, ruler);\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : undefined,\n        width: horizontal ? undefined : ipixels.size\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, mode);\n      }\n      me.updateElement(bars[i], i, properties, mode);\n    }\n  }\n  _getStacks(last, dataIndex) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const metasets = iScale.getMatchingVisibleMetas(me._type);\n    const stacked = iScale.options.stacked;\n    const ilen = metasets.length;\n    const stacks = [];\n    let i, item;\n    for (i = 0; i < ilen; ++i) {\n      item = metasets[i];\n      if (typeof dataIndex !== 'undefined') {\n        const val = item.controller.getParsed(dataIndex)[item.controller._cachedMeta.vScale.axis];\n        if (isNullOrUndef(val) || isNaN(val)) {\n          continue;\n        }\n      }\n      if (stacked === false || stacks.indexOf(item.stack) === -1 || stacked === undefined && item.stack === undefined) {\n        stacks.push(item.stack);\n      }\n      if (item.index === last) {\n        break;\n      }\n    }\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n    return stacks;\n  }\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n  _getStackIndex(datasetIndex, name) {\n    const stacks = this._getStacks(datasetIndex);\n    const index = name !== undefined ? stacks.indexOf(name) : -1;\n    return index === -1 ? stacks.length - 1 : index;\n  }\n  _getRuler() {\n    const me = this;\n    const opts = me.options;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(me.getParsed(i)[iScale.axis], i));\n    }\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(iScale);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: me._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n  _calculateBarValuePixels(index) {\n    const me = this;\n    const {\n      vScale,\n      _stacked\n    } = me._cachedMeta;\n    const {\n      base: baseValue,\n      minBarLength\n    } = me.options;\n    const parsed = me.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? me.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n    size = head - base;\n    if (minBarLength !== undefined && Math.abs(size) < minBarLength) {\n      size = size < 0 ? -minBarLength : minBarLength;\n      if (value === 0) {\n        base -= size / 2;\n      }\n      head = base + size;\n    }\n    const actualBase = baseValue || 0;\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = vScale.getLineWidthForValue(actualBase) / 2;\n      if (size > 0) {\n        base += halfGrid;\n        size -= halfGrid;\n      } else if (size < 0) {\n        base -= halfGrid;\n        size += halfGrid;\n      }\n    }\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n  _calculateBarIndexPixels(index, ruler) {\n    const me = this;\n    const scale = ruler.scale;\n    const options = me.options;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = options.skipNull ? me._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n      const stackIndex = me._getStackIndex(me.index, me._cachedMeta.stack);\n      center = range.start + range.chunk * stackIndex + range.chunk / 2;\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(me.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n  draw() {\n    const me = this;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n    clipArea(chart.ctx, chart.chartArea);\n    for (; i < ilen; ++i) {\n      if (me.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(me._ctx);\n      }\n    }\n    unclipArea(chart.ctx);\n  }\n}\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  interaction: {\n    mode: 'index'\n  },\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true\n    }\n  }\n};\nclass BubbleController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  parseObjectData(meta, data, start, count) {\n    const {\n      xScale,\n      yScale\n    } = meta;\n    const {\n      xAxisKey = 'x',\n      yAxisKey = 'y'\n    } = this._parsing;\n    const parsed = [];\n    let i, ilen, item;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      item = data[i];\n      parsed.push({\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), i),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), i),\n        _custom: item && item.r && +item.r\n      });\n    }\n    return parsed;\n  }\n  getMaxOverflow() {\n    const {\n      data,\n      _parsed\n    } = this._cachedMeta;\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size() / 2, _parsed[i]._custom);\n    }\n    return max > 0 && max;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {\n      xScale,\n      yScale\n    } = meta;\n    const parsed = me.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: meta.label,\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n  update(mode) {\n    const me = this;\n    const points = me._cachedMeta.data;\n    me.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const {\n      xScale,\n      yScale\n    } = me._cachedMeta;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && me.getParsed(i);\n      const x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(parsed.x);\n      const y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(parsed.y);\n      const properties = {\n        x,\n        y,\n        skip: isNaN(x) || isNaN(y)\n      };\n      if (includeOptions) {\n        properties.options = me.resolveDataElementOptions(i, mode);\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n      me.updateElement(point, i, properties, mode);\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n    if (values.$shared) {\n      values = Object.assign({}, values, {\n        $shared: false\n      });\n    }\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n    return values;\n  }\n}\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        }\n      }\n    }\n  }\n};\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {\n    ratioX,\n    ratioY,\n    offsetX,\n    offsetY\n  };\n}\nclass DoughnutController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n  linkScales() {}\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n    let i, ilen;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      meta._parsed[i] = +data[i];\n    }\n  }\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n    const me = this;\n    for (let i = 0; i < me.chart.data.datasets.length; ++i) {\n      if (me.chart.isDatasetVisible(i)) {\n        const controller = me.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n    return {\n      rotation: min,\n      circumference: max - min\n    };\n  }\n  update(mode) {\n    const me = this;\n    const chart = me.chart;\n    const {\n      chartArea\n    } = chart;\n    const meta = me._cachedMeta;\n    const arcs = meta.data;\n    const spacing = me.getMaxBorderWidth() + me.getMaxOffset(arcs);\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(me.options.cutout, maxSize), 1);\n    const chartWeight = me._getRingWeight(me.index);\n    const {\n      circumference,\n      rotation\n    } = me._getRotationExtents();\n    const {\n      ratioX,\n      ratioY,\n      offsetX,\n      offsetY\n    } = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(me.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / me._getVisibleDatasetWeightTotal();\n    me.offsetX = offsetX * outerRadius;\n    me.offsetY = offsetY * outerRadius;\n    meta.total = me.calculateTotal();\n    me.outerRadius = outerRadius - radiusLength * me._getRingWeightOffset(me.index);\n    me.innerRadius = Math.max(me.outerRadius - radiusLength * chartWeight, 0);\n    me.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _circumference(i, reset) {\n    const me = this;\n    const opts = me.options;\n    const meta = me._cachedMeta;\n    const circumference = me._getCircumference();\n    if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null) {\n      return 0;\n    }\n    return me.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n  updateElements(arcs, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const chart = me.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : me.innerRadius;\n    const outerRadius = animateScale ? 0 : me.outerRadius;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    let startAngle = me._getRotation();\n    let i;\n    for (i = 0; i < start; ++i) {\n      startAngle += me._circumference(i, reset);\n    }\n    for (i = start; i < start + count; ++i) {\n      const circumference = me._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + me.offsetX,\n        y: centerY + me.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, mode);\n      }\n      startAngle += circumference;\n      me.updateElement(arc, i, properties, mode);\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i)) {\n        total += Math.abs(value);\n      }\n    }\n    return total;\n  }\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const chart = me.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value\n    };\n  }\n  getMaxBorderWidth(arcs) {\n    const me = this;\n    let max = 0;\n    const chart = me.chart;\n    let i, ilen, meta, controller, options;\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          if (controller !== me) {\n            controller.configure();\n          }\n          break;\n        }\n      }\n    }\n    if (!arcs) {\n      return 0;\n    }\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n  getMaxOffset(arcs) {\n    let max = 0;\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n    return ringWeightOffset;\n  }\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth']\n    }\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  indexAxis: 'r'\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(tooltipItem) {\n          let dataLabel = tooltipItem.label;\n          const value = ': ' + tooltipItem.formattedValue;\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\nclass LineController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {\n      dataset: line,\n      data: points = [],\n      _dataset\n    } = meta;\n    const animationsDisabled = me.chart._animationsDisabled;\n    let {\n      start,\n      count\n    } = getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    me._drawStart = start;\n    me._drawCount = count;\n    if (scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    if (mode !== 'resize') {\n      const options = me.resolveDatasetElementOptions(mode);\n      if (!me.options.showLine) {\n        options.borderWidth = 0;\n      }\n      me.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options\n      }, mode);\n    }\n    me.updateElements(points, start, count, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const {\n      xScale,\n      yScale,\n      _stacked\n    } = me._cachedMeta;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    const spanGaps = me.options.spanGaps;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = me.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && me.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = me.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const x = properties.x = xScale.getPixelForValue(parsed.x, i);\n      const y = properties.y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(_stacked ? me.applyStack(yScale, parsed, _stacked) : parsed.y, i);\n      properties.skip = isNaN(x) || isNaN(y);\n      properties.stop = i > 0 && parsed.x - prevParsed.x > maxGapLength;\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, mode);\n      }\n      if (!directUpdate) {\n        me.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  getMaxOverflow() {\n    const me = this;\n    const meta = me._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(me.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(me.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n  draw() {\n    this._cachedMeta.dataset.updateControlPoints(this.chart.chartArea);\n    super.draw();\n  }\n}\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category'\n    },\n    _value_: {\n      type: 'linear'\n    }\n  }\n};\nfunction getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  const pointCount = points.length;\n  let start = 0;\n  let count = pointCount;\n  if (meta._sorted) {\n    const {\n      iScale,\n      _parsed\n    } = meta;\n    const axis = iScale.axis;\n    const {\n      min,\n      max,\n      minDefined,\n      maxDefined\n    } = iScale.getUserBounds();\n    if (minDefined) {\n      start = _limitValue(Math.min(_lookupByKey(_parsed, iScale.axis, min).lo, animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo), 0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(_lookupByKey(_parsed, iScale.axis, max).hi + 1, animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max)).hi + 1), start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n  return {\n    start,\n    count\n  };\n}\nfunction scaleRangesChanged(meta) {\n  const {\n    xScale,\n    yScale,\n    _scaleRanges\n  } = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\nclass PolarAreaController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _updateRadius() {\n    const me = this;\n    const chart = me.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    me.outerRadius = outerRadius - radiusLength * me.index;\n    me.innerRadius = me.outerRadius - radiusLength;\n  }\n  updateElements(arcs, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const chart = me.chart;\n    const dataset = me.getDataset();\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = me._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / me.countVisibleElements();\n    for (i = 0; i < start; ++i) {\n      angle += me._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + me._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(dataset.data[i]) : 0;\n      angle = endAngle;\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: me.resolveDataElementOptions(i, mode)\n      };\n      me.updateElement(arc, i, properties, mode);\n    }\n  }\n  countVisibleElements() {\n    const dataset = this.getDataset();\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(dataset.data[index]) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n  }\n}\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    }\n  },\n  indexAxis: 'r',\n  startAngle: 0\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\nclass PieController extends DoughnutController {}\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\nclass RadarController extends DatasetController {\n  getLabelAndValue(index) {\n    const me = this;\n    const vScale = me._cachedMeta.vScale;\n    const parsed = me.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n    if (mode !== 'resize') {\n      const options = me.resolveDatasetElementOptions(mode);\n      if (!me.options.showLine) {\n        options.borderWidth = 0;\n      }\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      me.updateElement(line, undefined, properties, mode);\n    }\n    me.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const dataset = me.getDataset();\n    const scale = me._cachedMeta.rScale;\n    const reset = mode === 'reset';\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = me.resolveDataElementOptions(i, mode);\n      const pointPosition = scale.getPointPositionForValue(i, dataset.data[i]);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      me.updateElement(point, i, properties, mode);\n    }\n  }\n}\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  }\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear'\n    }\n  }\n};\nclass ScatterController extends LineController {}\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\nvar controllers = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  BarController: BarController,\n  BubbleController: BubbleController,\n  DoughnutController: DoughnutController,\n  LineController: LineController,\n  PolarAreaController: PolarAreaController,\n  PieController: PieController,\n  RadarController: RadarController,\n  ScatterController: ScatterController\n});\nfunction abstract() {\n  throw new Error('This method is not implemented: either no adapter can be found or an incomplete integration was provided.');\n}\nclass DateAdapter {\n  constructor(options) {\n    this.options = options || {};\n  }\n  formats() {\n    return abstract();\n  }\n  parse(value, format) {\n    return abstract();\n  }\n  format(timestamp, format) {\n    return abstract();\n  }\n  add(timestamp, amount, unit) {\n    return abstract();\n  }\n  diff(a, b, unit) {\n    return abstract();\n  }\n  startOf(timestamp, unit, weekday) {\n    return abstract();\n  }\n  endOf(timestamp, unit) {\n    return abstract();\n  }\n}\nDateAdapter.override = function (members) {\n  Object.assign(DateAdapter.prototype, members);\n};\nvar adapters = {\n  _date: DateAdapter\n};\nfunction getRelativePosition(e, chart) {\n  if ('native' in e) {\n    return {\n      x: e.x,\n      y: e.y\n    };\n  }\n  return getRelativePosition$1(e, chart);\n}\nfunction evaluateAllVisibleItems(chart, handler) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  let index, data, element;\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    ({\n      index,\n      data\n    } = metasets[i]);\n    for (let j = 0, jlen = data.length; j < jlen; ++j) {\n      element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {\n    controller,\n    data,\n    _sorted\n  } = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {\n          lo: start.lo,\n          hi: end.hi\n        };\n      }\n    }\n  }\n  return {\n    lo: 0,\n    hi: data.length - 1\n  };\n}\nfunction optimizedEvaluateItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {\n      index,\n      data\n    } = metasets[i];\n    const {\n      lo,\n      hi\n    } = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function (pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition) {\n  const items = [];\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  const evaluationFunc = function (element, datasetIndex, index) {\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({\n        element,\n        datasetIndex,\n        index\n      });\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition) {\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n  let items = [];\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  const evaluationFunc = function (element, datasetIndex, index) {\n    if (intersect && !element.inRange(position.x, position.y, useFinalPosition)) {\n      return;\n    }\n    const center = element.getCenterPoint(useFinalPosition);\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{\n        element,\n        datasetIndex,\n        index\n      }];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({\n        element,\n        datasetIndex,\n        index\n      });\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getAxisItems(chart, e, options, useFinalPosition) {\n  const position = getRelativePosition(e, chart);\n  const items = [];\n  const axis = options.axis;\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateAllVisibleItems(chart, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({\n        element,\n        datasetIndex,\n        index\n      });\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      intersectsItem = true;\n    }\n  });\n  if (options.intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = {\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition) : getNearestItems(chart, position, axis, false, useFinalPosition);\n      const elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach(meta => {\n        const index = items[0].index;\n        const element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({\n            element,\n            datasetIndex: meta.index,\n            index\n          });\n        }\n      });\n      return elements;\n    },\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition) : getNearestItems(chart, position, axis, false, useFinalPosition);\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({\n            element: data[i],\n            datasetIndex,\n            index: i\n          });\n        }\n      }\n      return items;\n    },\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getIntersectItems(chart, position, axis, useFinalPosition);\n    },\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition);\n    },\n    x(chart, e, options, useFinalPosition) {\n      options.axis = 'x';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    },\n    y(chart, e, options, useFinalPosition) {\n      options.axis = 'y';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    }\n  }\n};\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos: box.position,\n      horizontal: box.isHorizontal(),\n      weight: box.weight\n    });\n  }\n  return layoutBoxes;\n}\nfunction setLayoutDims(layouts, params) {\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    if (layout.horizontal) {\n      layout.width = layout.box.fullSize && params.availableWidth;\n      layout.height = params.hBoxMaxHeight;\n    } else {\n      layout.width = params.vBoxMaxWidth;\n      layout.height = layout.box.fullSize && params.availableHeight;\n    }\n  }\n}\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout) {\n  const box = layout.box;\n  const maxPadding = chartArea.maxPadding;\n  if (isObject(layout.pos)) {\n    return {\n      same: false,\n      other: false\n    };\n  }\n  if (layout.size) {\n    chartArea[layout.pos] -= layout.size;\n  }\n  layout.size = layout.horizontal ? box.height : box.width;\n  chartArea[layout.pos] += layout.size;\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal ? {\n    same: widthChanged,\n    other: heightChanged\n  } : {\n    same: heightChanged,\n    other: widthChanged\n  };\n}\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    const margin = {\n      left: 0,\n      top: 0,\n      right: 0,\n      bottom: 0\n    };\n    positions.forEach(pos => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal ? marginForPositions(['left', 'right']) : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n    const {\n      same,\n      other\n    } = updateDims(chartArea, params, layout);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params) || changed;\n}\nfunction placeBoxes(boxes, chartArea, params) {\n  const userPadding = params.padding;\n  let x = chartArea.x;\n  let y = chartArea.y;\n  let i, ilen, layout, box;\n  for (i = 0, ilen = boxes.length; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    if (layout.horizontal) {\n      box.left = box.fullSize ? userPadding.left : chartArea.left;\n      box.right = box.fullSize ? params.outerWidth - userPadding.right : chartArea.left + chartArea.w;\n      box.top = y;\n      box.bottom = y + box.height;\n      box.width = box.right - box.left;\n      y = box.bottom;\n    } else {\n      box.left = x;\n      box.right = x + box.width;\n      box.top = box.fullSize ? userPadding.top : chartArea.top;\n      box.bottom = box.fullSize ? params.outerHeight - userPadding.right : chartArea.top + chartArea.h;\n      box.height = box.bottom - box.top;\n      x = box.right;\n    }\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\ndefaults.set('layout', {\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function () {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = width - padding.width;\n    const availableHeight = height - padding.height;\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) => wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params);\n    fitBoxes(verticalBoxes, chartArea, params);\n    if (fitBoxes(horizontalBoxes, chartArea, params)) {\n      fitBoxes(verticalBoxes, chartArea, params);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w\n    };\n    each(boxes.chartArea, layout => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h);\n    });\n  }\n};\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n  releaseContext(context) {\n    return false;\n  }\n  addEventListener(chart, type, listener) {}\n  removeEventListener(chart, type, listener) {}\n  getDevicePixelRatio() {\n    return 1;\n  }\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n  isAttached(canvas) {\n    return true;\n  }\n}\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n}\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nconst isNullOrEmpty = value => value === null || value === '';\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {\n  passive: true\n} : false;\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {\n    x,\n    y\n  } = getRelativePosition$1(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null\n  };\n}\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  const element = container || canvas;\n  const observer = new MutationObserver(entries => {\n    const parent = _getParentNode(element);\n    entries.forEach(entry => {\n      for (let i = 0; i < entry.addedNodes.length; i++) {\n        const added = entry.addedNodes[i];\n        if (added === element || added === parent) {\n          listener(entry.target);\n        }\n      }\n    });\n  });\n  observer.observe(document, {\n    childList: true,\n    subtree: true\n  });\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const observer = new MutationObserver(entries => {\n    entries.forEach(entry => {\n      for (let i = 0; i < entry.removedNodes.length; i++) {\n        if (entry.removedNodes[i] === canvas) {\n          listener();\n          break;\n        }\n      }\n    });\n  });\n  observer.observe(container, {\n    childList: true\n  });\n  return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled(event => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, args => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n    return null;\n  }\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach(prop => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach(key => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n    if (!proxy) {\n      return;\n    }\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && _getParentNode(container));\n  }\n}\nclass Element {\n  constructor() {\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n  tooltipPosition(useFinalPosition) {\n    const {\n      x,\n      y\n    } = this.getProps(['x', 'y'], useFinalPosition);\n    return {\n      x,\n      y\n    };\n  }\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n  getProps(props, final) {\n    const me = this;\n    const anims = this.$animations;\n    if (!final || !anims) {\n      return me;\n    }\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : me[prop];\n    });\n    return ret;\n  }\n}\nElement.defaults = {};\nElement.defaultRoutes = undefined;\nconst formatters = {\n  values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue;\n    if (ticks.length > 1) {\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n      delta = calculateDelta(tickValue, ticks);\n    }\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    const options = {\n      notation,\n      minimumFractionDigits: numDecimal,\n      maximumFractionDigits: numDecimal\n    };\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n};\nfunction calculateDelta(tickValue, ticks) {\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n  if (Math.abs(delta) > 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\nvar Ticks = {\n  formatters\n};\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: (_ctx, options) => options.lineWidth,\n    tickColor: (_ctx, options) => options.color,\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderColor: (_ctx, options) => options.color,\n    borderWidth: (_ctx, options) => options.lineWidth\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near'\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: name => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n  _indexable: name => name !== 'borderDash' && name !== 'tickBorderDash'\n});\ndefaults.describe('scales', {\n  _fallback: 'scale'\n});\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\nconst reverseAlign = align => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  each(caches, cache => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n  return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return Object.assign(Object.create(parent), {\n    scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return Object.assign(Object.create(parent), {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if (reverse && position !== 'right' || !reverse && position === 'right') {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  const {\n    top,\n    left,\n    bottom,\n    right\n  } = scale;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    titleY = offsetFromEdge(scale, position, offset);\n    maxWidth = right - left;\n  } else {\n    titleX = offsetFromEdge(scale, position, offset);\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {\n    titleX,\n    titleY,\n    maxWidth,\n    rotation\n  };\n}\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n  init(options) {\n    const me = this;\n    me.options = options;\n    me.axis = options.axis;\n    me._userMin = me.parse(options.min);\n    me._userMax = me.parse(options.max);\n    me._suggestedMin = me.parse(options.suggestedMin);\n    me._suggestedMax = me.parse(options.suggestedMax);\n  }\n  parse(raw, index) {\n    return raw;\n  }\n  getUserBounds() {\n    let {\n      _userMin,\n      _userMax,\n      _suggestedMin,\n      _suggestedMax\n    } = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isNumberFinite(_userMin),\n      maxDefined: isNumberFinite(_userMax)\n    };\n  }\n  getMinMax(canStack) {\n    const me = this;\n    let {\n      min,\n      max,\n      minDefined,\n      maxDefined\n    } = me.getUserBounds();\n    let range;\n    if (minDefined && maxDefined) {\n      return {\n        min,\n        max\n      };\n    }\n    const metas = me.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(me, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n  getPadding() {\n    const me = this;\n    return {\n      left: me.paddingLeft || 0,\n      top: me.paddingTop || 0,\n      right: me.paddingRight || 0,\n      bottom: me.paddingBottom || 0\n    };\n  }\n  getTicks() {\n    return this.ticks;\n  }\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n  beforeUpdate() {\n    callback(this.options.beforeUpdate, [this]);\n  }\n  update(maxWidth, maxHeight, margins) {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    const sampleSize = tickOpts.sampleSize;\n    me.beforeUpdate();\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    me.ticks = null;\n    me._labelSizes = null;\n    me._gridLineItems = null;\n    me._labelItems = null;\n    me.beforeSetDimensions();\n    me.setDimensions();\n    me.afterSetDimensions();\n    me._maxLength = me.isHorizontal() ? me.width + margins.left + margins.right : me.height + margins.top + margins.bottom;\n    if (!me._dataLimitsCached) {\n      me.beforeDataLimits();\n      me.determineDataLimits();\n      me.afterDataLimits();\n      me._dataLimitsCached = true;\n    }\n    me.beforeBuildTicks();\n    me.ticks = me.buildTicks() || [];\n    me.afterBuildTicks();\n    const samplingEnabled = sampleSize < me.ticks.length;\n    me._convertTicksToLabels(samplingEnabled ? sample(me.ticks, sampleSize) : me.ticks);\n    me.configure();\n    me.beforeCalculateLabelRotation();\n    me.calculateLabelRotation();\n    me.afterCalculateLabelRotation();\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      me.ticks = autoSkip(me, me.ticks);\n      me._labelSizes = null;\n    }\n    if (samplingEnabled) {\n      me._convertTicksToLabels(me.ticks);\n    }\n    me.beforeFit();\n    me.fit();\n    me.afterFit();\n    me.afterUpdate();\n  }\n  configure() {\n    const me = this;\n    let reversePixels = me.options.reverse;\n    let startPixel, endPixel;\n    if (me.isHorizontal()) {\n      startPixel = me.left;\n      endPixel = me.right;\n    } else {\n      startPixel = me.top;\n      endPixel = me.bottom;\n      reversePixels = !reversePixels;\n    }\n    me._startPixel = startPixel;\n    me._endPixel = endPixel;\n    me._reversePixels = reversePixels;\n    me._length = endPixel - startPixel;\n    me._alignToPixels = me.options.alignToPixels;\n  }\n  afterUpdate() {\n    callback(this.options.afterUpdate, [this]);\n  }\n  beforeSetDimensions() {\n    callback(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    const me = this;\n    if (me.isHorizontal()) {\n      me.width = me.maxWidth;\n      me.left = 0;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight;\n      me.top = 0;\n      me.bottom = me.height;\n    }\n    me.paddingLeft = 0;\n    me.paddingTop = 0;\n    me.paddingRight = 0;\n    me.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    callback(this.options.afterSetDimensions, [this]);\n  }\n  _callHooks(name) {\n    const me = this;\n    me.chart.notifyPlugins(name, me.getContext());\n    callback(me.options[name], [me]);\n  }\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n  beforeTickToLabelConversion() {\n    callback(this.options.beforeTickToLabelConversion, [this]);\n  }\n  generateTickLabels(ticks) {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], me);\n    }\n  }\n  afterTickToLabelConversion() {\n    callback(this.options.afterTickToLabelConversion, [this]);\n  }\n  beforeCalculateLabelRotation() {\n    callback(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const me = this;\n    const options = me.options;\n    const tickOpts = options.ticks;\n    const numTicks = me.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n    if (!me._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !me.isHorizontal()) {\n      me.labelRotation = minRotation;\n      return;\n    }\n    const labelSizes = me._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n    const maxWidth = _limitValue(me.chart.width - maxLabelWidth, 0, me.maxWidth);\n    tickWidth = options.offset ? me.maxWidth / numTicks : maxWidth / (numTicks - 1);\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = me.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, me.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(Math.asin(Math.min((labelSizes.highest.height + 6) / tickWidth, 1)), Math.asin(Math.min(maxHeight / maxLabelDiagonal, 1)) - Math.asin(maxLabelHeight / maxLabelDiagonal)));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n    me.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    callback(this.options.afterCalculateLabelRotation, [this]);\n  }\n  beforeFit() {\n    callback(this.options.beforeFit, [this]);\n  }\n  fit() {\n    const me = this;\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {\n      chart,\n      options: {\n        ticks: tickOpts,\n        title: titleOpts,\n        grid: gridOpts\n      }\n    } = me;\n    const display = me._isVisible();\n    const isHorizontal = me.isHorizontal();\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = me.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = me.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n      if (tickOpts.display && me.ticks.length) {\n        const {\n          first,\n          last,\n          widest,\n          highest\n        } = me._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(me.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n        if (isHorizontal) {\n          const labelHeight = sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(me.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        me._calculatePadding(first, last, sin, cos);\n      }\n    }\n    me._handleMargins();\n    if (isHorizontal) {\n      me.width = me._length = chart.width - me._margins.left - me._margins.right;\n      me.height = minSize.height;\n    } else {\n      me.width = minSize.width;\n      me.height = me._length = chart.height - me._margins.top - me._margins.bottom;\n    }\n  }\n  _calculatePadding(first, last, sin, cos) {\n    const me = this;\n    const {\n      ticks: {\n        align,\n        padding\n      },\n      position\n    } = me.options;\n    const isRotated = me.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && me.axis === 'x';\n    if (me.isHorizontal()) {\n      const offsetLeft = me.getPixelForTick(0) - me.left;\n      const offsetRight = me.right - me.getPixelForTick(me.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n      me.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * me.width / (me.width - offsetLeft), 0);\n      me.paddingRight = Math.max((paddingRight - offsetRight + padding) * me.width / (me.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n      me.paddingTop = paddingTop + padding;\n      me.paddingBottom = paddingBottom + padding;\n    }\n  }\n  _handleMargins() {\n    const me = this;\n    if (me._margins) {\n      me._margins.left = Math.max(me.paddingLeft, me._margins.left);\n      me._margins.top = Math.max(me.paddingTop, me._margins.top);\n      me._margins.right = Math.max(me.paddingRight, me._margins.right);\n      me._margins.bottom = Math.max(me.paddingBottom, me._margins.bottom);\n    }\n  }\n  afterFit() {\n    callback(this.options.afterFit, [this]);\n  }\n  isHorizontal() {\n    const {\n      axis,\n      position\n    } = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  isFullSize() {\n    return this.options.fullSize;\n  }\n  _convertTicksToLabels(ticks) {\n    const me = this;\n    me.beforeTickToLabelConversion();\n    me.generateTickLabels(ticks);\n    me.afterTickToLabelConversion();\n  }\n  _getLabelSizes() {\n    const me = this;\n    let labelSizes = me._labelSizes;\n    if (!labelSizes) {\n      const sampleSize = me.options.ticks.sampleSize;\n      let ticks = me.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n      me._labelSizes = labelSizes = me._computeLabelSizes(ticks, ticks.length);\n    }\n    return labelSizes;\n  }\n  _computeLabelSizes(ticks, length) {\n    const {\n      ctx,\n      _longestTextCache: caches\n    } = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {\n        data: {},\n        gc: []\n      };\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n    const valueAt = idx => ({\n      width: widths[idx] || 0,\n      height: heights[idx] || 0\n    });\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest)\n    };\n  }\n  getLabelForValue(value) {\n    return value;\n  }\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n  getValueForPixel(pixel) {}\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getPixelForDecimal(decimal) {\n    const me = this;\n    if (me._reversePixels) {\n      decimal = 1 - decimal;\n    }\n    const pixel = me._startPixel + decimal * me._length;\n    return _int16Range(me._alignToPixels ? _alignPixel(me.chart, pixel, 0) : pixel);\n  }\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n  getBaseValue() {\n    const {\n      min,\n      max\n    } = this;\n    return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n  }\n  getContext(index) {\n    const me = this;\n    const ticks = me.ticks || [];\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context || (tick.$context = createTickContext(me.getContext(), index, tick));\n    }\n    return me.$context || (me.$context = createScaleContext(me.chart.getContext(), me));\n  }\n  _tickSize() {\n    const me = this;\n    const optionTicks = me.options.ticks;\n    const rot = toRadians(me.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n    const labelSizes = me._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return me.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n  }\n  _isVisible() {\n    const display = this.options.display;\n    if (display !== 'auto') {\n      return !!display;\n    }\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n  _computeGridLineItems(chartArea) {\n    const me = this;\n    const axis = me.axis;\n    const chart = me.chart;\n    const options = me.options;\n    const {\n      grid,\n      position\n    } = options;\n    const offset = grid.offset;\n    const isHorizontal = me.isHorizontal();\n    const ticks = me.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = grid.setContext(me.getContext(0));\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function (pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n    if (position === 'top') {\n      borderValue = alignBorderValue(me.bottom);\n      ty1 = me.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(me.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = me.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(me.right);\n      tx1 = me.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(me.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = me.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(me.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(me.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n    for (i = 0; i < ticksLength; ++i) {\n      const optsAtIndex = grid.setContext(me.getContext(i));\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = grid.borderDash || [];\n      const borderDashOffset = optsAtIndex.borderDashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(me, i, offset);\n      if (lineValue === undefined) {\n        continue;\n      }\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset\n      });\n    }\n    me._ticksLength = ticksLength;\n    me._borderValue = borderValue;\n    return items;\n  }\n  _computeLabelItems(chartArea) {\n    const me = this;\n    const axis = me.axis;\n    const options = me.options;\n    const {\n      position,\n      ticks: optionTicks\n    } = options;\n    const isHorizontal = me.isHorizontal();\n    const ticks = me.ticks;\n    const {\n      align,\n      crossAlign,\n      padding\n    } = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const rotation = -toRadians(me.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n    if (position === 'top') {\n      y = me.bottom - tickAndPadding;\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = me.top + tickAndPadding;\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = me.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = me.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n    const labelSizes = me._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(me.getContext(i));\n      pixel = me.getPixelForTick(i) + optionTicks.labelOffset;\n      font = me._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      if (isHorizontal) {\n        x = pixel;\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign,\n        textBaseline,\n        translation: [x, y]\n      });\n    }\n    return items;\n  }\n  _getXAxisLabelAlignment() {\n    const me = this;\n    const {\n      position,\n      ticks\n    } = me.options;\n    const rotation = -toRadians(me.labelRotation);\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n    let align = 'center';\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    }\n    return align;\n  }\n  _getYAxisLabelAlignment(tl) {\n    const me = this;\n    const {\n      position,\n      ticks: {\n        crossAlign,\n        mirror,\n        padding\n      }\n    } = me.options;\n    const labelSizes = me._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n    if (position === 'left') {\n      if (mirror) {\n        textAlign = 'left';\n        x = me.right - padding;\n      } else {\n        x = me.right - tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= widest / 2;\n        } else {\n          textAlign = 'left';\n          x = me.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        textAlign = 'right';\n        x = me.left + padding;\n      } else {\n        x = me.left + tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = me.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n    return {\n      textAlign,\n      x\n    };\n  }\n  _computeLabelArea() {\n    const me = this;\n    if (me.options.ticks.mirror) {\n      return;\n    }\n    const chart = me.chart;\n    const position = me.options.position;\n    if (position === 'left' || position === 'right') {\n      return {\n        top: 0,\n        left: me.left,\n        bottom: chart.height,\n        right: me.right\n      };\n    }\n    if (position === 'top' || position === 'bottom') {\n      return {\n        top: me.top,\n        left: 0,\n        bottom: me.bottom,\n        right: chart.width\n      };\n    }\n  }\n  drawBackground() {\n    const {\n      ctx,\n      options: {\n        backgroundColor\n      },\n      left,\n      top,\n      width,\n      height\n    } = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n  getLineWidthForValue(value) {\n    const me = this;\n    const grid = me.options.grid;\n    if (!me._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = me.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(me.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n  drawGrid(chartArea) {\n    const me = this;\n    const grid = me.options.grid;\n    const ctx = me.ctx;\n    const chart = me.chart;\n    const borderOpts = grid.setContext(me.getContext(0));\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n    const items = me._gridLineItems || (me._gridLineItems = me._computeGridLineItems(chartArea));\n    let i, ilen;\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n        if (grid.drawOnChartArea) {\n          drawLine({\n            x: item.x1,\n            y: item.y1\n          }, {\n            x: item.x2,\n            y: item.y2\n          }, item);\n        }\n        if (grid.drawTicks) {\n          drawLine({\n            x: item.tx1,\n            y: item.ty1\n          }, {\n            x: item.tx2,\n            y: item.ty2\n          }, {\n            color: item.tickColor,\n            width: item.tickWidth,\n            borderDash: item.tickBorderDash,\n            borderDashOffset: item.tickBorderDashOffset\n          });\n        }\n      }\n    }\n    if (axisWidth) {\n      const edgeOpts = grid.setContext(me.getContext(me._ticksLength - 1));\n      const lastLineWidth = edgeOpts.lineWidth;\n      const borderValue = me._borderValue;\n      let x1, x2, y1, y2;\n      if (me.isHorizontal()) {\n        x1 = _alignPixel(chart, me.left, axisWidth) - axisWidth / 2;\n        x2 = _alignPixel(chart, me.right, lastLineWidth) + lastLineWidth / 2;\n        y1 = y2 = borderValue;\n      } else {\n        y1 = _alignPixel(chart, me.top, axisWidth) - axisWidth / 2;\n        y2 = _alignPixel(chart, me.bottom, lastLineWidth) + lastLineWidth / 2;\n        x1 = x2 = borderValue;\n      }\n      drawLine({\n        x: x1,\n        y: y1\n      }, {\n        x: x2,\n        y: y2\n      }, {\n        width: axisWidth,\n        color: edgeOpts.borderColor\n      });\n    }\n  }\n  drawLabels(chartArea) {\n    const me = this;\n    const optionTicks = me.options.ticks;\n    if (!optionTicks.display) {\n      return;\n    }\n    const ctx = me.ctx;\n    const area = me._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n    const items = me._labelItems || (me._labelItems = me._computeLabelItems(chartArea));\n    let i, ilen;\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n  drawTitle() {\n    const {\n      ctx,\n      options: {\n        position,\n        title,\n        reverse\n      }\n    } = this;\n    if (!title.display) {\n      return;\n    }\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n    if (position === 'bottom') {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n    const {\n      titleX,\n      titleY,\n      maxWidth,\n      rotation\n    } = titleArgs(this, offset, position, align);\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY]\n    });\n  }\n  draw(chartArea) {\n    const me = this;\n    if (!me._isVisible()) {\n      return;\n    }\n    me.drawBackground();\n    me.drawGrid(chartArea);\n    me.drawTitle();\n    me.drawLabels(chartArea);\n  }\n  _layers() {\n    const me = this;\n    const opts = me.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = opts.grid && opts.grid.z || 0;\n    if (!me._isVisible() || tz === gz || me.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n        draw(chartArea) {\n          me.draw(chartArea);\n        }\n      }];\n    }\n    return [{\n      z: gz,\n      draw(chartArea) {\n        me.drawBackground();\n        me.drawGrid(chartArea);\n        me.drawTitle();\n      }\n    }, {\n      z: tz,\n      draw(chartArea) {\n        me.drawLabels(chartArea);\n      }\n    }];\n  }\n  getMatchingVisibleMetas(type) {\n    const me = this;\n    const metas = me.chart.getSortedVisibleDatasetMetas();\n    const axisID = me.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === me.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n}\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n  register(item) {\n    const me = this;\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n    if (isIChartComponent(proto)) {\n      parentScope = me.register(proto);\n    }\n    const items = me.items;\n    const id = item.id;\n    const scope = me.scope + '.' + id;\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n    if (id in items) {\n      return scope;\n    }\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (me.override) {\n      defaults.override(item.id, item.overrides);\n    }\n    return scope;\n  }\n  get(id) {\n    return this.items[id];\n  }\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n    if (id in items) {\n      delete items[id];\n    }\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = merge(Object.create(null), [parentScope ? defaults.get(parentScope) : {}, defaults.get(scope), item.defaults]);\n  defaults.set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  add() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    this._each('register', args);\n  }\n  remove() {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n    this._each('unregister', args);\n  }\n  addControllers() {\n    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n    this._each('register', args, this.controllers);\n  }\n  addElements() {\n    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n    this._each('register', args, this.elements);\n  }\n  addPlugins() {\n    for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n      args[_key5] = arguments[_key5];\n    }\n    this._each('register', args, this.plugins);\n  }\n  addScales() {\n    for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n      args[_key6] = arguments[_key6];\n    }\n    this._each('register', args, this.scales);\n  }\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n  removeControllers() {\n    for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n      args[_key7] = arguments[_key7];\n    }\n    this._each('unregister', args, this.controllers);\n  }\n  removeElements() {\n    for (var _len8 = arguments.length, args = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {\n      args[_key8] = arguments[_key8];\n    }\n    this._each('unregister', args, this.elements);\n  }\n  removePlugins() {\n    for (var _len9 = arguments.length, args = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {\n      args[_key9] = arguments[_key9];\n    }\n    this._each('unregister', args, this.plugins);\n  }\n  removeScales() {\n    for (var _len10 = arguments.length, args = new Array(_len10), _key10 = 0; _key10 < _len10; _key10++) {\n      args[_key10] = arguments[_key10];\n    }\n    this._each('unregister', args, this.scales);\n  }\n  _each(method, args, typedRegistry) {\n    const me = this;\n    [...args].forEach(arg => {\n      const reg = typedRegistry || me._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || reg === me.plugins && arg.id) {\n        me._exec(method, reg, arg);\n      } else {\n        each(arg, item => {\n          const itemReg = typedRegistry || me._getRegistryForType(item);\n          me._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    callback(component['before' + camelMethod], [], component);\n    registry[method](component);\n    callback(component['after' + camelMethod], [], component);\n  }\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    return this.plugins;\n  }\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n}\nvar registry = new Registry();\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n  notify(chart, hook, args) {\n    const me = this;\n    if (hook === 'beforeInit') {\n      me._init = me._createDescriptors(chart, true);\n      me._notify(me._init, chart, 'install');\n    }\n    const descriptors = me._descriptors(chart);\n    const result = me._notify(descriptors, chart, hook, args);\n    if (hook === 'destroy') {\n      me._notify(descriptors, chart, 'stop');\n      me._notify(me._init, chart, 'uninstall');\n    }\n    return result;\n  }\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n    return true;\n  }\n  invalidate() {\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n    const descriptors = this._cache = this._createDescriptors(chart);\n    this._notifyStateChanges(chart);\n    return descriptors;\n  }\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\nfunction allPlugins(config) {\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n    }\n  }\n  return plugins;\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, plugins, options, all) {\n  const result = [];\n  const context = chart.getContext();\n  for (let i = 0; i < plugins.length; i++) {\n    const plugin = plugins[i];\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, plugin, opts, context)\n    });\n  }\n  return result;\n}\nfunction pluginOpts(config, plugin, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  return config.createResolver(scopes, context, [''], {\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {\n    scales: {}\n  };\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const firstIDs = Object.create(null);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{\n      axis\n    }, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{\n        axis\n      }, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initConfig(config) {\n  config = config || {};\n  const data = config.data = config.data || {\n    datasets: [],\n    labels: []\n  };\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  initOptions(config);\n  return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  get type() {\n    return this._config.type;\n  }\n  set type(type) {\n    this._config.type = type;\n  }\n  get data() {\n    return this._config.data;\n  }\n  set data(data) {\n    this._config.data = data;\n  }\n  get options() {\n    return this._config.options;\n  }\n  set options(options) {\n    this._config.options = options;\n  }\n  get plugins() {\n    return this._config.plugins;\n  }\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType, () => [[\"datasets.\".concat(datasetType), '']]);\n  }\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(\"\".concat(datasetType, \".transition.\").concat(transition), () => [[\"datasets.\".concat(datasetType, \".transitions.\").concat(transition), \"transitions.\".concat(transition)], [\"datasets.\".concat(datasetType), '']]);\n  }\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(\"\".concat(datasetType, \"-\").concat(elementType), () => [[\"datasets.\".concat(datasetType, \".elements.\").concat(elementType), \"datasets.\".concat(datasetType), \"elements.\".concat(elementType), '']]);\n  }\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(\"\".concat(type, \"-plugin-\").concat(id), () => [[\"plugins.\".concat(id), ...(plugin.additionalOptionScopes || [])]]);\n  }\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {\n      options,\n      type\n    } = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n    const array = [...scopes];\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n  chartOptionScopes() {\n    const {\n      options,\n      type\n    } = this;\n    return [options, overrides[type] || {}, defaults.datasets[type] || {}, {\n      type\n    }, defaults, descriptors];\n  }\n  resolveNamedOptions(scopes, names, context) {\n    let prefixes = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [''];\n    const result = {\n      $shared: true\n    };\n    const {\n      resolver,\n      subPrefixes\n    } = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n  createResolver(scopes, context) {\n    let prefixes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [''];\n    let descriptorDefaults = arguments.length > 3 ? arguments[3] : undefined;\n    const {\n      resolver\n    } = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n  }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nfunction needContext(proxy, names) {\n  const {\n    isScriptable,\n    isIndexable\n  } = _descriptors(proxy);\n  for (const prop of names) {\n    if (isScriptable(prop) && isFunction(proxy[prop]) || isIndexable(prop) && isArray(proxy[prop])) {\n      return true;\n    }\n  }\n  return false;\n}\nvar version = \"3.0.0\";\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n  return function (a, b) {\n    return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction isDomSupported() {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\nfunction getCanvas(item) {\n  if (isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nconst instances = {};\nconst getChart = key => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter(c => c.canvas === canvas).pop();\n};\nclass Chart {\n  constructor(item, config) {\n    const me = this;\n    this.config = config = new Config(config);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas can be reused.');\n    }\n    const options = config.createResolver(config.chartOptionScopes(), me.getContext());\n    this.platform = me._initializePlatform(initialCanvas, config);\n    const context = me.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._sortedMetasets = [];\n    this.scales = {};\n    this.scale = undefined;\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(() => this.update('resize'), options.resizeDelay || 0);\n    instances[me.id] = me;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(me, 'complete', onAnimationsComplete);\n    animator.listen(me, 'progress', onAnimationProgress);\n    me._initialize();\n    if (me.attached) {\n      me.update();\n    }\n  }\n  get aspectRatio() {\n    const {\n      options: {\n        aspectRatio,\n        maintainAspectRatio\n      },\n      width,\n      height,\n      _aspectRatio\n    } = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      return aspectRatio;\n    }\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n    return height ? width / height : null;\n  }\n  get data() {\n    return this.config.data;\n  }\n  set data(data) {\n    this.config.data = data;\n  }\n  get options() {\n    return this._options;\n  }\n  set options(options) {\n    this.config.options = options;\n  }\n  _initialize() {\n    const me = this;\n    me.notifyPlugins('beforeInit');\n    if (me.options.responsive) {\n      me.resize();\n    } else {\n      retinaScale(me, me.options.devicePixelRatio);\n    }\n    me.bindEvents();\n    me.notifyPlugins('afterInit');\n    return me;\n  }\n  _initializePlatform(canvas, config) {\n    if (config.platform) {\n      return new config.platform();\n    } else if (!isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n      return new BasicPlatform();\n    }\n    return new DomPlatform();\n  }\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {\n        width,\n        height\n      };\n    }\n  }\n  _resize(width, height) {\n    const me = this;\n    const options = me.options;\n    const canvas = me.canvas;\n    const aspectRatio = options.maintainAspectRatio && me.aspectRatio;\n    const newSize = me.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const oldRatio = me.currentDevicePixelRatio;\n    const newRatio = options.devicePixelRatio || me.platform.getDevicePixelRatio();\n    if (me.width === newSize.width && me.height === newSize.height && oldRatio === newRatio) {\n      return;\n    }\n    me.width = newSize.width;\n    me.height = newSize.height;\n    me._aspectRatio = me.aspectRatio;\n    retinaScale(me, newRatio, true);\n    me.notifyPlugins('resize', {\n      size: newSize\n    });\n    callback(options.onResize, [me, newSize], me);\n    if (me.attached) {\n      if (me._doResize()) {\n        me.render();\n      }\n    }\n  }\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n  buildOrUpdateScales() {\n    const me = this;\n    const options = me.options;\n    const scaleOpts = options.scales;\n    const scales = me.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n    if (scaleOpts) {\n      items = items.concat(Object.keys(scaleOpts).map(id => {\n        const scaleOptions = scaleOpts[id];\n        const axis = determineAxis(id, scaleOptions);\n        const isRadial = axis === 'r';\n        const isHorizontal = axis === 'x';\n        return {\n          options: scaleOptions,\n          dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n          dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n        };\n      }));\n    }\n    each(items, item => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: me.ctx,\n          chart: me\n        });\n        scales[scale.id] = scale;\n      }\n      scale.init(scaleOptions, options);\n    });\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    each(scales, scale => {\n      layouts.configure(me, scale, scale.options);\n      layouts.addBox(me, scale);\n    });\n  }\n  _updateMetasetIndex(meta, index) {\n    const metasets = this._metasets;\n    const oldIndex = meta.index;\n    if (oldIndex !== index) {\n      metasets[oldIndex] = metasets[index];\n      metasets[index] = meta;\n      meta.index = index;\n    }\n  }\n  _updateMetasets() {\n    const me = this;\n    const metasets = me._metasets;\n    const numData = me.data.datasets.length;\n    const numMeta = metasets.length;\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        me._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    me._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n  _removeUnreferencedMetasets() {\n    const me = this;\n    const {\n      _metasets: metasets,\n      data: {\n        datasets\n      }\n    } = me;\n    if (metasets.length > datasets.length) {\n      delete me._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        me._destroyDatasetMeta(index);\n      }\n    });\n  }\n  buildOrUpdateControllers() {\n    const me = this;\n    const newControllers = [];\n    const datasets = me.data.datasets;\n    let i, ilen;\n    me._removeUnreferencedMetasets();\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = me.getDatasetMeta(i);\n      const type = dataset.type || me.config.type;\n      if (meta.type && meta.type !== type) {\n        me._destroyDatasetMeta(i);\n        meta = me.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, me.options);\n      meta.order = dataset.order || 0;\n      me._updateMetasetIndex(meta, i);\n      meta.label = '' + dataset.label;\n      meta.visible = me.isDatasetVisible(i);\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {\n          datasetElementType,\n          dataElementType\n        } = defaults.datasets[type];\n        Object.assign(ControllerClass.prototype, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(me, i);\n        newControllers.push(meta.controller);\n      }\n    }\n    me._updateMetasets();\n    return newControllers;\n  }\n  _resetElements() {\n    const me = this;\n    each(me.data.datasets, (dataset, datasetIndex) => {\n      me.getDatasetMeta(datasetIndex).controller.reset();\n    }, me);\n  }\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n  update(mode) {\n    const me = this;\n    const config = me.config;\n    config.update();\n    me._options = config.createResolver(config.chartOptionScopes(), me.getContext());\n    each(me.scales, scale => {\n      layouts.removeBox(me, scale);\n    });\n    const animsDisabled = me._animationsDisabled = !me.options.animation;\n    me.ensureScalesHaveIDs();\n    me.buildOrUpdateScales();\n    me._plugins.invalidate();\n    if (me.notifyPlugins('beforeUpdate', {\n      mode,\n      cancelable: true\n    }) === false) {\n      return;\n    }\n    const newControllers = me.buildOrUpdateControllers();\n    me.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n    for (let i = 0, ilen = me.data.datasets.length; i < ilen; i++) {\n      const {\n        controller\n      } = me.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    me._minPadding = minPadding;\n    me._updateLayout(minPadding);\n    if (!animsDisabled) {\n      each(newControllers, controller => {\n        controller.reset();\n      });\n    }\n    me._updateDatasets(mode);\n    me.notifyPlugins('afterUpdate', {\n      mode\n    });\n    me._layers.sort(compare2Level('z', '_idx'));\n    if (me._lastEvent) {\n      me._eventHandler(me._lastEvent, true);\n    }\n    me.render();\n  }\n  _updateLayout(minPadding) {\n    const me = this;\n    if (me.notifyPlugins('beforeLayout', {\n      cancelable: true\n    }) === false) {\n      return;\n    }\n    layouts.update(me, me.width, me.height, minPadding);\n    const area = me.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    me._layers = [];\n    each(me.boxes, box => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n      if (box.configure) {\n        box.configure();\n      }\n      me._layers.push(...box._layers());\n    }, me);\n    me._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n    me.notifyPlugins('afterLayout');\n  }\n  _updateDatasets(mode) {\n    const me = this;\n    const isFunction = typeof mode === 'function';\n    if (me.notifyPlugins('beforeDatasetsUpdate', {\n      mode,\n      cancelable: true\n    }) === false) {\n      return;\n    }\n    for (let i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n      me._updateDataset(i, isFunction ? mode({\n        datasetIndex: i\n      }) : mode);\n    }\n    me.notifyPlugins('afterDatasetsUpdate', {\n      mode\n    });\n  }\n  _updateDataset(index, mode) {\n    const me = this;\n    const meta = me.getDatasetMeta(index);\n    const args = {\n      meta,\n      index,\n      mode,\n      cancelable: true\n    };\n    if (me.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n    meta.controller._update(mode);\n    args.cancelable = false;\n    me.notifyPlugins('afterDatasetUpdate', args);\n  }\n  render() {\n    const me = this;\n    if (me.notifyPlugins('beforeRender', {\n      cancelable: true\n    }) === false) {\n      return;\n    }\n    if (animator.has(me)) {\n      if (me.attached && !animator.running(me)) {\n        animator.start(me);\n      }\n    } else {\n      me.draw();\n      onAnimationsComplete({\n        chart: me\n      });\n    }\n  }\n  draw() {\n    const me = this;\n    let i;\n    if (me._resizeBeforeDraw) {\n      const {\n        width,\n        height\n      } = me._resizeBeforeDraw;\n      me._resize(width, height);\n      me._resizeBeforeDraw = null;\n    }\n    me.clear();\n    if (me.width <= 0 || me.height <= 0) {\n      return;\n    }\n    if (me.notifyPlugins('beforeDraw', {\n      cancelable: true\n    }) === false) {\n      return;\n    }\n    const layers = me._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(me.chartArea);\n    }\n    me._drawDatasets();\n    for (; i < layers.length; ++i) {\n      layers[i].draw(me.chartArea);\n    }\n    me.notifyPlugins('afterDraw');\n  }\n  _getSortedDatasetMetas(filterVisible) {\n    const me = this;\n    const metasets = me._sortedMetasets;\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n  _drawDatasets() {\n    const me = this;\n    if (me.notifyPlugins('beforeDatasetsDraw', {\n      cancelable: true\n    }) === false) {\n      return;\n    }\n    const metasets = me.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      me._drawDataset(metasets[i]);\n    }\n    me.notifyPlugins('afterDatasetsDraw');\n  }\n  _drawDataset(meta) {\n    const me = this;\n    const ctx = me.ctx;\n    const clip = meta._clip;\n    const area = me.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    if (me.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n    clipArea(ctx, {\n      left: clip.left === false ? 0 : area.left - clip.left,\n      right: clip.right === false ? me.width : area.right + clip.right,\n      top: clip.top === false ? 0 : area.top - clip.top,\n      bottom: clip.bottom === false ? me.height : area.bottom + clip.bottom\n    });\n    meta.controller.draw();\n    unclipArea(ctx);\n    args.cancelable = false;\n    me.notifyPlugins('afterDatasetDraw', args);\n  }\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n    return [];\n  }\n  getDatasetMeta(datasetIndex) {\n    const me = this;\n    const dataset = me.data.datasets[datasetIndex];\n    const metasets = me._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n    if (!meta) {\n      meta = metasets[datasetIndex] = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n    }\n    return meta;\n  }\n  getContext() {\n    return this.$context || (this.$context = {\n      chart: this,\n      type: 'chart'\n    });\n  }\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n  _updateDatasetVisibility(datasetIndex, visible) {\n    const me = this;\n    const mode = visible ? 'show' : 'hide';\n    const meta = me.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n    me.setDatasetVisibility(datasetIndex, visible);\n    anims.update(meta, {\n      visible\n    });\n    me.update(ctx => ctx.datasetIndex === datasetIndex ? mode : undefined);\n  }\n  hide(datasetIndex) {\n    this._updateDatasetVisibility(datasetIndex, false);\n  }\n  show(datasetIndex) {\n    this._updateDatasetVisibility(datasetIndex, true);\n  }\n  _destroyDatasetMeta(datasetIndex) {\n    const me = this;\n    const meta = me._metasets && me._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n      delete me._metasets[datasetIndex];\n    }\n  }\n  destroy() {\n    const me = this;\n    const {\n      canvas,\n      ctx\n    } = me;\n    let i, ilen;\n    me.stop();\n    animator.remove(me);\n    for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n      me._destroyDatasetMeta(i);\n    }\n    me.config.clearCache();\n    if (canvas) {\n      me.unbindEvents();\n      clearCanvas(canvas, ctx);\n      me.platform.releaseContext(ctx);\n      me.canvas = null;\n      me.ctx = null;\n    }\n    me.notifyPlugins('destroy');\n    delete instances[me.id];\n  }\n  toBase64Image() {\n    return this.canvas.toDataURL(...arguments);\n  }\n  bindEvents() {\n    const me = this;\n    const listeners = me._listeners;\n    const platform = me.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(me, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(me, type, listener);\n        delete listeners[type];\n      }\n    };\n    let listener = function (e, x, y) {\n      e.offsetX = x;\n      e.offsetY = y;\n      me._eventHandler(e);\n    };\n    each(me.options.events, type => _add(type, listener));\n    if (me.options.responsive) {\n      listener = (width, height) => {\n        if (me.canvas) {\n          me.resize(width, height);\n        }\n      };\n      let detached;\n      const attached = () => {\n        _remove('attach', attached);\n        me.attached = true;\n        me.resize();\n        _add('resize', listener);\n        _add('detach', detached);\n      };\n      detached = () => {\n        me.attached = false;\n        _remove('resize', listener);\n        _add('attach', attached);\n      };\n      if (platform.isAttached(me.canvas)) {\n        attached();\n      } else {\n        detached();\n      }\n    } else {\n      me.attached = true;\n    }\n  }\n  unbindEvents() {\n    const me = this;\n    const listeners = me._listeners;\n    if (!listeners) {\n      return;\n    }\n    delete me._listeners;\n    each(listeners, (listener, type) => {\n      me.platform.removeEventListener(me, type, listener);\n    });\n  }\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements) {\n    const me = this;\n    const lastActive = me._active || [];\n    const active = activeElements.map(_ref => {\n      let {\n        datasetIndex,\n        index\n      } = _ref;\n      const meta = me.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed) {\n      me._active = active;\n      me._updateHoverStyles(active, lastActive);\n    }\n  }\n  notifyPlugins(hook, args) {\n    return this._plugins.notify(this, hook, args);\n  }\n  _updateHoverStyles(active, lastActive, replay) {\n    const me = this;\n    const hoverOptions = me.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n    if (deactivated.length) {\n      me.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n    if (activated.length && hoverOptions.mode) {\n      me.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n  _eventHandler(e, replay) {\n    const me = this;\n    const args = {\n      event: e,\n      replay,\n      cancelable: true\n    };\n    if (me.notifyPlugins('beforeEvent', args) === false) {\n      return;\n    }\n    const changed = me._handleEvent(e, replay);\n    args.cancelable = false;\n    me.notifyPlugins('afterEvent', args);\n    if (changed || args.changed) {\n      me.render();\n    }\n    return me;\n  }\n  _handleEvent(e, replay) {\n    const me = this;\n    const {\n      _active: lastActive = [],\n      options\n    } = me;\n    const hoverOptions = options.hover;\n    const useFinalPosition = replay;\n    let active = [];\n    let changed = false;\n    let lastEvent = null;\n    if (e.type !== 'mouseout') {\n      active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n      lastEvent = e.type === 'click' ? me._lastEvent : e;\n    }\n    me._lastEvent = null;\n    callback(options.onHover, [e, active, me], me);\n    if (e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu') {\n      if (_isPointInArea(e, me.chartArea, me._minPadding)) {\n        callback(options.onClick, [e, active, me], me);\n      }\n    }\n    changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      me._active = active;\n      me._updateHoverStyles(active, lastActive, replay);\n    }\n    me._lastEvent = lastEvent;\n    return changed;\n  }\n}\nconst invalidatePlugins = () => each(Chart.instances, chart => chart._plugins.invalidate());\nconst enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable,\n    value: registry\n  },\n  version: {\n    enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable,\n    value: function () {\n      registry.add(...arguments);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable,\n    value: function () {\n      registry.remove(...arguments);\n      invalidatePlugins();\n    }\n  }\n});\nfunction clipArc(ctx, element) {\n  const {\n    startAngle,\n    endAngle,\n    pixelMargin,\n    x,\n    y,\n    outerRadius,\n    innerRadius\n  } = element;\n  let angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction pathArc(ctx, element) {\n  const {\n    x,\n    y,\n    startAngle,\n    endAngle,\n    pixelMargin\n  } = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, endAngle);\n  ctx.arc(x, y, innerRadius, endAngle, startAngle, true);\n  ctx.closePath();\n}\nfunction drawArc(ctx, element) {\n  if (element.fullCircles) {\n    element.endAngle = element.startAngle + TAU;\n    pathArc(ctx, element);\n    for (let i = 0; i < element.fullCircles; ++i) {\n      ctx.fill();\n    }\n  }\n  if (!isNaN(element.circumference)) {\n    element.endAngle = element.startAngle + element.circumference % TAU;\n  }\n  pathArc(ctx, element);\n  ctx.fill();\n}\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {\n    x,\n    y,\n    startAngle,\n    endAngle,\n    pixelMargin\n  } = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  let i;\n  if (inner) {\n    element.endAngle = element.startAngle + TAU;\n    clipArc(ctx, element);\n    element.endAngle = endAngle;\n    if (element.endAngle === element.startAngle) {\n      element.endAngle += TAU;\n      element.fullCircles--;\n    }\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n  for (i = 0; i < element.fullCircles; ++i) {\n    ctx.stroke();\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n  for (i = 0; i < element.fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\nfunction drawBorder(ctx, element) {\n  const {\n    x,\n    y,\n    startAngle,\n    endAngle,\n    pixelMargin,\n    options\n  } = element;\n  const outerRadius = element.outerRadius;\n  const innerRadius = element.innerRadius + pixelMargin;\n  const inner = options.borderAlign === 'inner';\n  if (!options.borderWidth) {\n    return;\n  }\n  if (inner) {\n    ctx.lineWidth = options.borderWidth * 2;\n    ctx.lineJoin = 'round';\n  } else {\n    ctx.lineWidth = options.borderWidth;\n    ctx.lineJoin = 'bevel';\n  }\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n  if (inner) {\n    clipArc(ctx, element);\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, endAngle);\n  ctx.arc(x, y, innerRadius, endAngle, startAngle, true);\n  ctx.closePath();\n  ctx.stroke();\n}\nclass ArcElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {\n      angle,\n      distance\n    } = getAngleFromPoint(point, {\n      x: chartX,\n      y: chartY\n    });\n    const {\n      startAngle,\n      endAngle,\n      innerRadius,\n      outerRadius,\n      circumference\n    } = this.getProps(['startAngle', 'endAngle', 'innerRadius', 'outerRadius', 'circumference'], useFinalPosition);\n    const betweenAngles = circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = distance >= innerRadius && distance <= outerRadius;\n    return betweenAngles && withinRadius;\n  }\n  getCenterPoint(useFinalPosition) {\n    const {\n      x,\n      y,\n      startAngle,\n      endAngle,\n      innerRadius,\n      outerRadius\n    } = this.getProps(['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius'], useFinalPosition);\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n  draw(ctx) {\n    const me = this;\n    const options = me.options;\n    const offset = options.offset || 0;\n    me.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n    me.fullCircles = Math.floor(me.circumference / TAU);\n    if (me.circumference === 0 || me.innerRadius < 0 || me.outerRadius < 0) {\n      return;\n    }\n    ctx.save();\n    if (offset && me.circumference < TAU) {\n      const halfAngle = (me.startAngle + me.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n    }\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    drawArc(ctx, me);\n    drawBorder(ctx, me);\n    ctx.restore();\n  }\n}\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderWidth: 2,\n  offset: 0,\n  angle: undefined\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\nfunction setStyle(ctx, vm) {\n  ctx.lineCap = vm.borderCapStyle;\n  ctx.setLineDash(vm.borderDash);\n  ctx.lineDashOffset = vm.borderDashOffset;\n  ctx.lineJoin = vm.borderJoinStyle;\n  ctx.lineWidth = vm.borderWidth;\n  ctx.strokeStyle = vm.borderColor;\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n  if (options.tension) {\n    return _bezierCurveTo;\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment, params) {\n  params = params || {};\n  const count = points.length;\n  const start = Math.max(params.start || 0, segment.start);\n  const end = Math.min(params.end || count - 1, segment.end);\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  const {\n    points,\n    options\n  } = line;\n  const {\n    count,\n    start,\n    loop,\n    ilen\n  } = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {\n    move = true,\n    reverse\n  } = params || {};\n  let i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {\n    count,\n    start,\n    ilen\n  } = pathVars(points, segment, params);\n  const {\n    move = true,\n    reverse\n  } = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n  const pointIndex = index => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n  if (options.tension) {\n    return _bezierInterpolation;\n  }\n  return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  ctx.beginPath();\n  if (line.path(ctx, start, count)) {\n    ctx.closePath();\n  }\n  ctx.stroke();\n}\nconst usePath2D = typeof Path2D === 'function';\nconst strokePath = usePath2D ? strokePathWithCache : strokePathDirect;\nclass LineElement extends Element {\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  updateControlPoints(chartArea) {\n    const me = this;\n    const options = me.options;\n    if (options.tension && !options.stepped && !me._pointsUpdated) {\n      const loop = options.spanGaps ? me._loop : me._fullLoop;\n      _updateBezierControlPoints(me._points, options, chartArea, loop);\n      me._pointsUpdated = true;\n    }\n  }\n  set points(points) {\n    const me = this;\n    me._points = points;\n    delete me._segments;\n    delete me._path;\n    me._pointsUpdated = false;\n  }\n  get points() {\n    return this._points;\n  }\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this));\n  }\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n  interpolate(point, property) {\n    const me = this;\n    const options = me.options;\n    const value = point[property];\n    const points = me.points;\n    const segments = _boundSegments(me, {\n      property,\n      start: value,\n      end: value\n    });\n    if (!segments.length) {\n      return;\n    }\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {\n        start,\n        end\n      } = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n  path(ctx, start, count) {\n    const me = this;\n    const segments = me.segments;\n    const ilen = segments.length;\n    const segmentMethod = _getSegmentMethod(me);\n    let loop = me._loop;\n    start = start || 0;\n    count = count || me.points.length - start;\n    for (let i = 0; i < ilen; ++i) {\n      loop &= segmentMethod(ctx, me, segments[i], {\n        start,\n        end: start + count - 1\n      });\n    }\n    return !!loop;\n  }\n  draw(ctx, chartArea, start, count) {\n    const me = this;\n    const options = me.options || {};\n    const points = me.points || [];\n    if (!points.length || !options.borderWidth) {\n      return;\n    }\n    ctx.save();\n    setStyle(ctx, options);\n    strokePath(ctx, me, start, count);\n    ctx.restore();\n    if (me.animated) {\n      me._pointsUpdated = false;\n      me._path = undefined;\n    }\n  }\n}\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: name => name !== 'borderDash' && name !== 'fill'\n};\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {\n    [axis]: value\n  } = el.getProps([axis], useFinalPosition);\n  return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass PointElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {\n      x,\n      y\n    } = this.getProps(['x', 'y'], useFinalPosition);\n    return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {\n      x,\n      y\n    } = this.getProps(['x', 'y'], useFinalPosition);\n    return {\n      x,\n      y\n    };\n  }\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n  draw(ctx) {\n    const me = this;\n    const options = me.options;\n    if (me.skip || options.radius < 0.1) {\n      return;\n    }\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, me.x, me.y);\n  }\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n}\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nfunction getBarBounds(bar, useFinalPosition) {\n  const {\n    x,\n    y,\n    base,\n    width,\n    height\n  } = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {\n    left,\n    top,\n    right,\n    bottom\n  };\n}\nfunction parseBorderSkipped(bar) {\n  let edge = bar.options.borderSkipped;\n  const res = {};\n  if (!edge) {\n    return res;\n  }\n  edge = bar.horizontal ? parseEdge(edge, 'left', 'right', bar.base > bar.x) : parseEdge(edge, 'bottom', 'top', bar.base < bar.y);\n  res[edge] = true;\n  return res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : Math.max(Math.min(value, max), min);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = parseBorderSkipped(bar);\n  const o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = parseBorderSkipped(bar);\n  return {\n    topLeft: skipOrLimit(skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n      }\n    }\n  };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds && (skipX || x >= bounds.left && x <= bounds.right) && (skipY || y >= bounds.top && y <= bounds.bottom);\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addRoundedRectPath(ctx, rect) {\n  const {\n    x,\n    y,\n    w,\n    h,\n    radius\n  } = rect;\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n  ctx.lineTo(x + w, y + radius.topRight);\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n  ctx.lineTo(x + radius.topLeft, y);\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nclass BarElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  draw(ctx) {\n    const options = this.options;\n    const {\n      inner,\n      outer\n    } = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n    ctx.save();\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, outer);\n      ctx.clip();\n      addRectPath(ctx, inner);\n      ctx.fillStyle = options.borderColor;\n      ctx.fill('evenodd');\n    }\n    ctx.beginPath();\n    addRectPath(ctx, inner);\n    ctx.fillStyle = options.backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {\n      x,\n      y,\n      base,\n      horizontal\n    } = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nvar elements = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  ArcElement: ArcElement,\n  LineElement: LineElement,\n  PointElement: PointElement,\n  BarElement: BarElement\n});\nfunction lttbDecimation(data, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n  const decimated = [];\n  const bucketWidth = (data.length - 2) / (samples - 2);\n  let sampledIndex = 0;\n  let a = 0;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, data.length);\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX = data[j].x;\n      avgY = data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1;\n    const rangeTo = Math.floor((i + 1) * bucketWidth) + 1;\n    const {\n      x: pointAx,\n      y: pointAy\n    } = data[a];\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[data.length - 1];\n  return decimated;\n}\nfunction minMaxDecimation(data, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const xMin = data[0].x;\n  const xMax = data[data.length - 1].x;\n  const dx = xMax - xMin;\n  for (i = 0; i < data.length; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      return;\n    }\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {\n        _data,\n        indexAxis\n      } = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (meta.type !== 'line') {\n        return;\n      }\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      if (data.length <= 4 * availableWidth) {\n        return;\n      }\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function () {\n            return this._decimated;\n          },\n          set: function (d) {\n            this._data = d;\n          }\n        });\n      }\n      let decimated;\n      switch (options.algorithm) {\n        case 'lttb':\n          decimated = lttbDecimation(data, availableWidth, options);\n          break;\n        case 'min-max':\n          decimated = minMaxDecimation(data, availableWidth);\n          break;\n        default:\n          throw new Error(\"Unsupported decimation algorithm '\".concat(options.algorithm, \"'\"));\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy(chart) {\n    chart.data.datasets.forEach(dataset => {\n      if (dataset._decimated) {\n        const data = dataset._data;\n        delete dataset._decimated;\n        delete dataset._data;\n        Object.defineProperty(dataset, 'data', {\n          value: data\n        });\n      }\n    });\n  }\n};\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\nfunction decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  let target = parseFloat(fill);\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    if (fill[0] === '-' || fill[0] === '+') {\n      target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n      return false;\n    }\n    return target;\n  }\n  return ['origin', 'start', 'end', 'stack'].indexOf(fill) >= 0 && fill;\n}\nfunction computeLinearBoundary(source) {\n  const {\n    scale = {},\n    fill\n  } = source;\n  let target = null;\n  let horizontal;\n  if (fill === 'start') {\n    target = scale.bottom;\n  } else if (fill === 'end') {\n    target = scale.top;\n  } else if (isObject(fill)) {\n    target = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    target = scale.getBasePixel();\n  }\n  if (isNumberFinite(target)) {\n    horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? target : null,\n      y: horizontal ? null : target\n    };\n  }\n  return null;\n}\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  pathSegment(ctx, bounds, opts) {\n    const {\n      x,\n      y,\n      radius\n    } = this;\n    bounds = bounds || {\n      start: 0,\n      end: TAU\n    };\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n  interpolate(point) {\n    const {\n      x,\n      y,\n      radius\n    } = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\nfunction computeCircularBoundary(source) {\n  const {\n    scale,\n    fill\n  } = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const target = [];\n  const start = options.reverse ? scale.max : scale.min;\n  const end = options.reverse ? scale.min : scale.max;\n  let i, center, value;\n  if (fill === 'start') {\n    value = start;\n  } else if (fill === 'end') {\n    value = end;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  if (options.grid.circular) {\n    center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction pointsFromSegments(boundary, line) {\n  const {\n    x = null,\n    y = null\n  } = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(segment => {\n    const first = linePoints[segment.start];\n    const last = linePoints[segment.end];\n    if (y !== null) {\n      points.push({\n        x: first.x,\n        y\n      });\n      points.push({\n        x: last.x,\n        y\n      });\n    } else if (x !== null) {\n      points.push({\n        x,\n        y: first.y\n      });\n      points.push({\n        x,\n        y: last.y\n      });\n    }\n  });\n  return points;\n}\nfunction buildStackLine(source) {\n  const {\n    chart,\n    scale,\n    index,\n    line\n  } = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(chart, index);\n  linesBelow.push(createBoundaryLine({\n    x: null,\n    y: scale.bottom\n  }, line));\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({\n    points,\n    options: {}\n  });\n}\nconst isLineAndNotInHideAnimation = meta => meta.type === 'line' && !meta.hidden;\nfunction getLinesBelow(chart, index) {\n  const below = [];\n  const metas = chart.getSortedVisibleDatasetMetas();\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (isLineAndNotInHideAnimation(meta)) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {\n      first,\n      last,\n      point\n    } = findPoint(line, sourcePoint, 'x');\n    if (!point || first && last) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (pointValue >= firstValue && pointValue <= lastValue) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {\n    first,\n    last,\n    point\n  };\n}\nfunction getTarget(source) {\n  const {\n    chart,\n    fill,\n    line\n  } = source;\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return buildStackLine(source);\n  }\n  const boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return createBoundaryLine(boundary, line);\n}\nfunction createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points,\n    options: {\n      tension: 0\n    },\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\nfunction resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _clip(ctx, target, clipY) {\n  ctx.beginPath();\n  target.path(ctx);\n  ctx.lineTo(target.last().x, clipY);\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {\n    property,\n    start,\n    end\n  };\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const bounds = getBounds(property, points[segment.start], points[segment.end], segment.loop);\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[segment.start],\n        end: points[segment.end]\n      });\n      continue;\n    }\n    const subs = _boundSegments(target, bounds);\n    for (let j = 0; j < subs.length; ++j) {\n      const sub = subs[j];\n      const subBounds = getBounds(property, tpoints[sub.start], tpoints[sub.end], sub.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n      for (let k = 0; k < fillSources.length; k++) {\n        parts.push({\n          source: fillSources[k],\n          target: sub,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\nfunction clipBounds(ctx, scale, bounds) {\n  const {\n    top,\n    bottom\n  } = scale.chart.chartArea;\n  const {\n    property,\n    start,\n    end\n  } = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\nfunction _fill(ctx, cfg) {\n  const {\n    line,\n    target,\n    property,\n    color,\n    scale\n  } = cfg;\n  const segments = _segments(line, target, property);\n  ctx.fillStyle = color;\n  for (let i = 0, ilen = segments.length; i < ilen; ++i) {\n    const {\n      source: src,\n      target: tgt,\n      start,\n      end\n    } = segments[i];\n    ctx.save();\n    clipBounds(ctx, scale, getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      interpolatedLineTo(ctx, target, end, property);\n    }\n    const targetLoop = !!target.pathSegment(ctx, tgt, {\n      move: lineLoop,\n      reverse: true\n    });\n    const loop = lineLoop && targetLoop;\n    if (!loop) {\n      interpolatedLineTo(ctx, target, start, property);\n    }\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\nfunction doFill(ctx, cfg) {\n  const {\n    line,\n    target,\n    above,\n    below,\n    area,\n    scale\n  } = cfg;\n  const property = line._loop ? 'angle' : 'x';\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    _clip(ctx, target, area.top);\n    _fill(ctx, {\n      line,\n      target,\n      color: above,\n      scale,\n      property\n    });\n    ctx.restore();\n    ctx.save();\n    _clip(ctx, target, area.bottom);\n  }\n  _fill(ctx, {\n    line,\n    target,\n    color: below,\n    scale,\n    property\n  });\n  ctx.restore();\n}\nvar plugin_filler = {\n  id: 'filler',\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const propagate = options.propagate;\n    const sources = [];\n    let meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: decodeFill(line, i, count),\n          chart,\n          scale: meta.vScale,\n          line\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = resolveTarget(sources, i, propagate);\n    }\n  },\n  beforeDatasetsDraw(chart) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    let i, meta;\n    for (i = metasets.length - 1; i >= 0; --i) {\n      meta = metasets[i].$filler;\n      if (meta) {\n        meta.line.updateControlPoints(area);\n      }\n    }\n  },\n  beforeDatasetDraw(chart, args) {\n    const area = chart.chartArea;\n    const ctx = chart.ctx;\n    const source = args.meta.$filler;\n    if (!source || source.fill === false) {\n      return;\n    }\n    const target = getTarget(source);\n    const {\n      line,\n      scale\n    } = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const {\n      above = color,\n      below = color\n    } = fillOption || {};\n    if (target && line.points.length) {\n      clipArea(ctx, area);\n      doFill(ctx, {\n        line,\n        target,\n        above,\n        below,\n        area,\n        scale\n      });\n      unclipArea(ctx);\n    }\n  },\n  defaults: {\n    propagate: true\n  }\n};\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {\n    boxHeight = fontSize,\n    boxWidth = fontSize\n  } = labelOpts;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight, margins) {\n    const me = this;\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me._margins = margins;\n    me.setDimensions();\n    me.buildLabels();\n    me.fit();\n  }\n  setDimensions() {\n    const me = this;\n    if (me.isHorizontal()) {\n      me.width = me.maxWidth;\n      me.left = 0;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight;\n      me.top = 0;\n      me.bottom = me.height;\n    }\n  }\n  buildLabels() {\n    const me = this;\n    const labelOpts = me.options.labels || {};\n    let legendItems = callback(labelOpts.generateLabels, [me.chart], me) || [];\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter(item => labelOpts.filter(item, me.chart.data));\n    }\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, me.chart.data));\n    }\n    if (me.options.reverse) {\n      legendItems.reverse();\n    }\n    me.legendItems = legendItems;\n  }\n  fit() {\n    const me = this;\n    const {\n      options,\n      ctx\n    } = me;\n    if (!options.display) {\n      me.width = me.height = 0;\n      return;\n    }\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = me._computeTitleHeight();\n    const {\n      boxWidth,\n      itemHeight\n    } = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n    if (me.isHorizontal()) {\n      width = me.maxWidth;\n      height = me._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = me.maxHeight;\n      width = me._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    }\n    me.width = Math.min(width, options.maxWidth || me.maxWidth);\n    me.height = Math.min(height, options.maxHeight || me.maxHeight);\n  }\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const me = this;\n    const {\n      ctx,\n      maxWidth,\n      options: {\n        labels: {\n          padding\n        }\n      }\n    } = me;\n    const hitboxes = me.legendHitBoxes = [];\n    const lineWidths = me.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    me.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n      hitboxes[i] = {\n        left: 0,\n        top,\n        row,\n        width: itemWidth,\n        height: itemHeight\n      };\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n    const me = this;\n    const {\n      ctx,\n      maxHeight,\n      options: {\n        labels: {\n          padding\n        }\n      }\n    } = me;\n    const hitboxes = me.legendHitBoxes = [];\n    const columnSizes = me.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let top = 0;\n    let col = 0;\n    me.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n      if (i > 0 && currentColHeight + fontSize + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({\n          width: currentColWidth,\n          height: currentColHeight\n        });\n        left += currentColWidth + padding;\n        col++;\n        top = 0;\n        currentColWidth = currentColHeight = 0;\n      }\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += fontSize + padding;\n      hitboxes[i] = {\n        left,\n        top,\n        col,\n        width: itemWidth,\n        height: itemHeight\n      };\n      top += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({\n      width: currentColWidth,\n      height: currentColHeight\n    });\n    return totalWidth;\n  }\n  adjustHitBoxes() {\n    const me = this;\n    if (!me.options.display) {\n      return;\n    }\n    const titleHeight = me._computeTitleHeight();\n    const {\n      legendHitBoxes: hitboxes,\n      options: {\n        align,\n        labels: {\n          padding\n        }\n      }\n    } = me;\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, me.left + padding, me.right - me.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, me.left + padding, me.right - me.lineWidths[row]);\n        }\n        hitbox.top += me.top + titleHeight + padding;\n        hitbox.left = left;\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += me.left + padding;\n        top += hitbox.height + padding;\n      }\n    }\n  }\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n  draw() {\n    const me = this;\n    if (me.options.display) {\n      const ctx = me.ctx;\n      clipArea(ctx, me);\n      me._draw();\n      unclipArea(ctx);\n    }\n  }\n  _draw() {\n    const me = this;\n    const {\n      options: opts,\n      columnSizes,\n      lineWidths,\n      ctx\n    } = me;\n    const {\n      align,\n      labels: labelOpts\n    } = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, me.left, me.width);\n    const labelFont = toFont(labelOpts.font);\n    const {\n      color: fontColor,\n      padding\n    } = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    me.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.strokeStyle = fontColor;\n    ctx.fillStyle = fontColor;\n    ctx.font = labelFont.string;\n    const {\n      boxWidth,\n      boxHeight,\n      itemHeight\n    } = getBoxSize(labelOpts, fontSize);\n    const drawLegendBox = function (x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n      ctx.save();\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxWidth * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        ctx.fillRect(rtlHelper.leftForLtr(x, boxWidth), yBoxTop, boxWidth, boxHeight);\n        if (lineWidth !== 0) {\n          ctx.strokeRect(rtlHelper.leftForLtr(x, boxWidth), yBoxTop, boxWidth, boxHeight);\n        }\n      }\n      ctx.restore();\n    };\n    const fillText = function (x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: legendItem.textAlign\n      });\n    };\n    const isHorizontal = me.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, me.left + padding, me.right - lineWidths[0]),\n        y: me.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: me.left + padding,\n        y: _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n    overrideTextDirection(me.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    me.legendItems.forEach((legendItem, i) => {\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + fontSize / 2 + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(me.width);\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > me.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, me.left + padding, me.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > me.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - columnSizes[cursor.line].height);\n      }\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = _textX(textAlign, x + boxWidth + halfFontSize, me.right);\n      fillText(rtlHelper.x(x), y, legendItem);\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    restoreTextDirection(me.ctx, opts.textDirection);\n  }\n  drawTitle() {\n    const me = this;\n    const opts = me.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    if (!titleOpts.display) {\n      return;\n    }\n    const rtlHelper = getRtlAdapter(opts.rtl, me.left, me.width);\n    const ctx = me.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = me.left;\n    let maxWidth = me.width;\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...me.lineWidths);\n      y = me.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, me.right - maxWidth);\n    } else {\n      const maxHeight = me.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, me.top, me.bottom - maxHeight - opts.labels.padding - me._computeTitleHeight());\n    }\n    const x = _alignStartEnd(position, left, left + maxWidth);\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n  _getLegendItemAt(x, y) {\n    const me = this;\n    let i, hitBox, lh;\n    if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n      lh = me.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n        if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n          return me.legendItems[i];\n        }\n      }\n    }\n    return null;\n  }\n  handleEvent(e) {\n    const me = this;\n    const opts = me.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n    const hoveredItem = me._getLegendItemAt(e.x, e.y);\n    if (e.type === 'mousemove') {\n      const previous = me._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        callback(opts.onLeave, [e, previous, me], me);\n      }\n      me._hoveredItem = hoveredItem;\n      if (hoveredItem && !sameItem) {\n        callback(opts.onHover, [e, hoveredItem, me], me);\n      }\n    } else if (hoveredItem) {\n      callback(opts.onClick, [e, hoveredItem, me], me);\n    }\n  }\n}\nfunction isListened(type, opts) {\n  if (type === 'mousemove' && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: ctx => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {\n          labels: {\n            usePointStyle,\n            pointStyle,\n            textAlign\n          }\n        } = chart.legend.options;\n        return chart._getSortedDatasetMetas().map(meta => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: ctx => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: ''\n    }\n  },\n  descriptors: {\n    _scriptable: name => !name.startsWith('on'),\n    labels: {\n      _scriptable: name => !['generateLabels', 'filter', 'sort'].includes(name)\n    }\n  }\n};\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight) {\n    const me = this;\n    const opts = me.options;\n    me.left = 0;\n    me.top = 0;\n    if (!opts.display) {\n      me.width = me.height = me.right = me.bottom = 0;\n      return;\n    }\n    me.width = me.right = maxWidth;\n    me.height = me.bottom = maxHeight;\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    me._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + me._padding.height;\n    if (me.isHorizontal()) {\n      me.height = textSize;\n    } else {\n      me.width = textSize;\n    }\n  }\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n  _drawArgs(offset) {\n    const {\n      top,\n      left,\n      bottom,\n      right,\n      options\n    } = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {\n      titleX,\n      titleY,\n      maxWidth,\n      rotation\n    };\n  }\n  draw() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    if (!opts.display) {\n      return;\n    }\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + me._padding.top;\n    const {\n      titleX,\n      titleY,\n      maxWidth,\n      rotation\n    } = me._drawArgs(offset);\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY]\n    });\n  }\n}\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      style: 'bold'\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false\n  }\n};\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest(items, eventPosition) {\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x,\n      y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  const {\n    element,\n    datasetIndex,\n    index\n  } = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {\n    label,\n    value\n  } = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip._chart.ctx;\n  const {\n    body,\n    footer,\n    title\n  } = tooltip;\n  const {\n    boxWidth,\n    boxHeight\n  } = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n  }\n  let widthPadding = 0;\n  const maxLineWidth = function (line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? boxWidth + 2 : 0;\n  each(body, bodyItem => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {\n    width,\n    height\n  };\n}\nfunction determineYAlign(chart, size) {\n  const {\n    y,\n    height\n  } = size;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > chart.height - height / 2) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {\n    x,\n    width\n  } = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {\n    x,\n    width\n  } = size;\n  const {\n    width: chartWidth,\n    chartArea: {\n      left,\n      right\n    }\n  } = chart;\n  let xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  const yAlign = options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  let {\n    x,\n    width\n  } = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= width / 2;\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {\n    y,\n    height\n  } = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= height / 2;\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {\n    caretSize,\n    caretPadding,\n    cornerRadius\n  } = options;\n  const {\n    xAlign,\n    yAlign\n  } = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const radiusAndPadding = cornerRadius + caretPadding;\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= radiusAndPadding;\n  } else if (xAlign === 'right') {\n    x += radiusAndPadding;\n  }\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n  return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return Object.assign(Object.create(parent), {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nclass Tooltip extends Element {\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._chart = config._chart;\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n  _resolveAnimations() {\n    const me = this;\n    const cached = me._cachedAnimations;\n    if (cached) {\n      return cached;\n    }\n    const chart = me._chart;\n    const options = me.options.setContext(me.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(me._chart, opts);\n    if (opts._cacheable) {\n      me._cachedAnimations = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getContext() {\n    const me = this;\n    return me.$context || (me.$context = createTooltipContext(me._chart.getContext(), me, me._tooltipItems));\n  }\n  getTitle(context, options) {\n    const me = this;\n    const {\n      callbacks\n    } = options;\n    const beforeTitle = callbacks.beforeTitle.apply(me, [context]);\n    const title = callbacks.title.apply(me, [context]);\n    const afterTitle = callbacks.afterTitle.apply(me, [context]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n  }\n  getBody(tooltipItems, options) {\n    const me = this;\n    const {\n      callbacks\n    } = options;\n    const bodyItems = [];\n    each(tooltipItems, context => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(me, context)));\n      pushOrConcat(bodyItem.lines, scoped.label.call(me, context));\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(me, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n  }\n  getFooter(tooltipItems, options) {\n    const me = this;\n    const {\n      callbacks\n    } = options;\n    const beforeFooter = callbacks.beforeFooter.apply(me, [tooltipItems]);\n    const footer = callbacks.footer.apply(me, [tooltipItems]);\n    const afterFooter = callbacks.afterFooter.apply(me, [tooltipItems]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n  _createItems(options) {\n    const me = this;\n    const active = me._active;\n    const data = me._chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(me._chart, active[i]));\n    }\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n    each(tooltipItems, context => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(scoped.labelColor.call(me, context));\n      labelPointStyles.push(scoped.labelPointStyle.call(me, context));\n      labelTextColors.push(scoped.labelTextColor.call(me, context));\n    });\n    me.labelColors = labelColors;\n    me.labelPointStyles = labelPointStyles;\n    me.labelTextColors = labelTextColors;\n    me.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n  update(changed, replay) {\n    const me = this;\n    const options = me.options.setContext(me.getContext());\n    const active = me._active;\n    let properties;\n    let tooltipItems = [];\n    if (!active.length) {\n      if (me.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(me, active, me._eventPosition);\n      tooltipItems = me._createItems(options);\n      me.title = me.getTitle(tooltipItems, options);\n      me.beforeBody = me.getBeforeBody(tooltipItems, options);\n      me.body = me.getBody(tooltipItems, options);\n      me.afterBody = me.getAfterBody(tooltipItems, options);\n      me.footer = me.getFooter(tooltipItems, options);\n      const size = me._size = getTooltipSize(me, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(me._chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, me._chart);\n      me.xAlign = alignment.xAlign;\n      me.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n    me._tooltipItems = tooltipItems;\n    me.$context = undefined;\n    if (properties) {\n      me._resolveAnimations().update(me, properties);\n    }\n    if (changed && options.external) {\n      options.external.call(me, {\n        chart: me._chart,\n        tooltip: me,\n        replay\n      });\n    }\n  }\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n  getCaretPosition(tooltipPoint, size, options) {\n    const {\n      xAlign,\n      yAlign\n    } = this;\n    const {\n      cornerRadius,\n      caretSize\n    } = options;\n    const {\n      x: ptX,\n      y: ptY\n    } = tooltipPoint;\n    const {\n      width,\n      height\n    } = size;\n    let x1, x2, x3, y1, y2, y3;\n    if (yAlign === 'center') {\n      y2 = ptY + height / 2;\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + cornerRadius + caretSize;\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - cornerRadius - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {\n      x1,\n      x2,\n      x3,\n      y1,\n      y2,\n      y3\n    };\n  }\n  drawTitle(pt, ctx, options) {\n    const me = this;\n    const title = me.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n      pt.x = getAlignedX(me, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const me = this;\n    const labelColors = me.labelColors[i];\n    const labelPointStyle = me.labelPointStyles[i];\n    const {\n      boxHeight,\n      boxWidth\n    } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(me, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.fillStyle = options.multiKeyBackground;\n      ctx.fillRect(rtlHelper.leftForLtr(rtlColorX, boxWidth), colorY, boxWidth, boxHeight);\n      ctx.lineWidth = 1;\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.strokeRect(rtlHelper.leftForLtr(rtlColorX, boxWidth), colorY, boxWidth, boxHeight);\n      ctx.fillStyle = labelColors.backgroundColor;\n      ctx.fillRect(rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2), colorY + 1, boxWidth - 2, boxHeight - 2);\n    }\n    ctx.fillStyle = me.labelTextColors[i];\n  }\n  drawBody(pt, ctx, options) {\n    const me = this;\n    const {\n      body\n    } = me;\n    const {\n      bodySpacing,\n      bodyAlign,\n      displayColors,\n      boxHeight,\n      boxWidth\n    } = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n    const fillLineOfText = function (line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(me, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    each(me.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + 1 : boxWidth + 2 : 0;\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = me.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n      if (displayColors && lines.length) {\n        me._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n      each(bodyItem.after, fillLineOfText);\n    }\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    each(me.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n  drawFooter(pt, ctx, options) {\n    const me = this;\n    const footer = me.footer;\n    const length = footer.length;\n    let footerFont, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n      pt.x = getAlignedX(me, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = toFont(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {\n      xAlign,\n      yAlign\n    } = this;\n    const {\n      x,\n      y\n    } = pt;\n    const {\n      width,\n      height\n    } = tooltipSize;\n    const radius = options.cornerRadius;\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + radius, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - radius, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - radius);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + radius, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + radius);\n    ctx.quadraticCurveTo(x, y, x + radius, y);\n    ctx.closePath();\n    ctx.fill();\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n  _updateAnimationTarget(options) {\n    const me = this;\n    const chart = me._chart;\n    const anims = me.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(me, me._active, me._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = me._size = getTooltipSize(me, options);\n      const positionAndSize = Object.assign({}, position, me._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        me.xAlign = alignment.xAlign;\n        me.yAlign = alignment.yAlign;\n        me.width = size.width;\n        me.height = size.height;\n        me.caretX = position.x;\n        me.caretY = position.y;\n        me._resolveAnimations().update(me, point);\n      }\n    }\n  }\n  draw(ctx) {\n    const me = this;\n    const options = me.options.setContext(me.getContext());\n    let opacity = me.opacity;\n    if (!opacity) {\n      return;\n    }\n    me._updateAnimationTarget(options);\n    const tooltipSize = {\n      width: me.width,\n      height: me.height\n    };\n    const pt = {\n      x: me.x,\n      y: me.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = toPadding(options.padding);\n    const hasTooltipContent = me.title.length || me.beforeBody.length || me.body.length || me.afterBody.length || me.footer.length;\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      me.drawBackground(pt, ctx, tooltipSize, options);\n      overrideTextDirection(ctx, options.textDirection);\n      pt.y += padding.top;\n      me.drawTitle(pt, ctx, options);\n      me.drawBody(pt, ctx, options);\n      me.drawFooter(pt, ctx, options);\n      restoreTextDirection(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements, eventPosition) {\n    const me = this;\n    const lastActive = me._active;\n    const active = activeElements.map(_ref2 => {\n      let {\n        datasetIndex,\n        index\n      } = _ref2;\n      const meta = me._chart.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = me._positionChanged(active, eventPosition);\n    if (changed || positionChanged) {\n      me._active = active;\n      me._eventPosition = eventPosition;\n      me.update(true);\n    }\n  }\n  handleEvent(e, replay) {\n    const me = this;\n    const options = me.options;\n    const lastActive = me._active || [];\n    let changed = false;\n    let active = [];\n    if (e.type !== 'mouseout') {\n      active = me._chart.getElementsAtEventForMode(e, options.mode, options, replay);\n      if (options.reverse) {\n        active.reverse();\n      }\n    }\n    const positionChanged = me._positionChanged(active, e);\n    changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n    if (changed) {\n      me._active = active;\n      if (options.enabled || options.external) {\n        me._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        me.update(true, replay);\n      }\n    }\n    return changed;\n  }\n  _positionChanged(active, e) {\n    const me = this;\n    const position = positioners[me.options.position].call(me, active, e);\n    return me.caretX !== position.x || me.caretY !== position.y;\n  }\n}\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({\n        _chart: chart,\n        options\n      });\n    }\n  },\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n    const args = {\n      tooltip\n    };\n    if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n      return;\n    }\n    if (tooltip) {\n      tooltip.draw(chart.ctx);\n    }\n    chart.notifyPlugins('afterTooltipDraw', args);\n  },\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      style: 'bold'\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {},\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      style: 'bold'\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart'\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY']\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n      title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          const item = tooltipItems[0];\n          const labels = item.chart.data.labels;\n          const labelCount = labels ? labels.length : 0;\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n        return '';\n      },\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n      label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n          label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n        return label;\n      },\n      labelColor(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor\n        };\n      },\n      labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation\n        };\n      },\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: name => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\nvar plugins = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  Decimation: plugin_decimation,\n  Filler: plugin_filler,\n  Legend: plugin_legend,\n  Title: plugin_title,\n  Tooltip: plugin_tooltip\n});\nconst addIfString = (labels, raw, index) => typeof raw === 'string' ? labels.push(raw) - 1 : isNaN(raw) ? null : index;\nfunction findOrAddLabel(labels, raw, index) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\nclass CategoryScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw));\n    return validIndex(index, labels.length - 1);\n  }\n  determineDataLimits() {\n    const me = this;\n    const {\n      minDefined,\n      maxDefined\n    } = me.getUserBounds();\n    let {\n      min,\n      max\n    } = me.getMinMax(true);\n    if (me.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = me.getLabels().length - 1;\n      }\n    }\n    me.min = min;\n    me.max = max;\n  }\n  buildTicks() {\n    const me = this;\n    const min = me.min;\n    const max = me.max;\n    const offset = me.options.offset;\n    const ticks = [];\n    let labels = me.getLabels();\n    labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n    me._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    me._startValue = me.min - (offset ? 0.5 : 0);\n    for (let value = min; value <= max; value++) {\n      ticks.push({\n        value\n      });\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    const me = this;\n    const labels = me.getLabels();\n    if (value >= 0 && value < labels.length) {\n      return labels[value];\n    }\n    return value;\n  }\n  configure() {\n    const me = this;\n    super.configure();\n    if (!me.isHorizontal()) {\n      me._reversePixels = !me._reversePixels;\n    }\n  }\n  getPixelForValue(value) {\n    const me = this;\n    if (typeof value !== 'number') {\n      value = me.parse(value);\n    }\n    return value === null ? NaN : me.getPixelForDecimal((value - me._startValue) / me._valueRange);\n  }\n  getPixelForTick(index) {\n    const me = this;\n    const ticks = me.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return me.getPixelForValue(ticks[index].value);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    return Math.round(me._startValue + me.getDecimalForPixel(pixel) * me._valueRange);\n  }\n  getBasePixel() {\n    return this.bottom;\n  }\n}\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {\n    step,\n    min,\n    max,\n    precision,\n    count,\n    maxTicks\n  } = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {\n    min: rmin,\n    max: rmax\n  } = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{\n      value: rmin\n    }, {\n      value: rmax\n    }];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  niceMin = Math.floor(rmin / spacing) * spacing;\n  niceMax = Math.ceil(rmax / spacing) * spacing;\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.min((max - min) / spacing, maxTicks);\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  factor = Math.pow(10, isNullOrUndef(precision) ? _decimalPlaces(spacing) : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n  if (minDefined) {\n    ticks.push({\n      value: min\n    });\n    if (niceMin < min) {\n      j++;\n    }\n    if (almostWhole(Math.round((niceMin + j * spacing) * factor) / factor / min, spacing / 1000)) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    ticks.push({\n      value: Math.round((niceMin + j * spacing) * factor) / factor\n    });\n  }\n  if (maxDefined) {\n    if (almostWhole(ticks[ticks.length - 1].value / max, spacing / 1000)) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({\n        value: max\n      });\n    }\n  } else {\n    ticks.push({\n      value: niceMax\n    });\n  }\n  return ticks;\n}\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n    return +raw;\n  }\n  handleTickRangeOptions() {\n    const me = this;\n    const {\n      beginAtZero,\n      stacked\n    } = me.options;\n    const {\n      minDefined,\n      maxDefined\n    } = me.getUserBounds();\n    let {\n      min,\n      max\n    } = me;\n    const setMin = v => min = minDefined ? min : v;\n    const setMax = v => max = maxDefined ? max : v;\n    if (beginAtZero || stacked) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n    if (min === max) {\n      setMax(max + 1);\n      if (!beginAtZero) {\n        setMin(min - 1);\n      }\n    }\n    me.min = min;\n    me.max = max;\n  }\n  getTickLimit() {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    let {\n      maxTicksLimit,\n      stepSize\n    } = tickOpts;\n    let maxTicks;\n    if (stepSize) {\n      maxTicks = Math.ceil(me.max / stepSize) - Math.floor(me.min / stepSize) + 1;\n    } else {\n      maxTicks = me.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n    return maxTicks;\n  }\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n  buildTicks() {\n    const me = this;\n    const opts = me.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = me.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count\n    };\n    const ticks = generateTicks$1(numericGeneratorOptions, _addGrace(me, opts.grace));\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, me, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      me.start = me.max;\n      me.end = me.min;\n    } else {\n      me.start = me.min;\n      me.end = me.max;\n    }\n    return ticks;\n  }\n  configure() {\n    const me = this;\n    const ticks = me.ticks;\n    let start = me.min;\n    let end = me.max;\n    super.configure();\n    if (me.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    me._startValue = start;\n    me._endValue = end;\n    me._valueRange = end - start;\n  }\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale);\n  }\n}\nclass LinearScale extends LinearScaleBase {\n  determineDataLimits() {\n    const me = this;\n    const {\n      min,\n      max\n    } = me.getMinMax(true);\n    me.min = isNumberFinite(min) ? min : 0;\n    me.max = isNumberFinite(max) ? max : 1;\n    me.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    const me = this;\n    if (me.isHorizontal()) {\n      return Math.ceil(me.width / 40);\n    }\n    const tickFont = me._resolveTickFontOptions(0);\n    return Math.ceil(me.height / tickFont.lineHeight);\n  }\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\nfunction isMajor(tickVal) {\n  const remain = tickVal / Math.pow(10, Math.floor(log10(tickVal)));\n  return remain === 1;\n}\nfunction generateTicks(generationOptions, dataRange) {\n  const endExp = Math.floor(log10(dataRange.max));\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  const ticks = [];\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  let exp = Math.floor(log10(tickVal));\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  do {\n    ticks.push({\n      value: tickVal,\n      major: isMajor(tickVal)\n    });\n    ++significand;\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || exp === endExp && significand < endSignificand);\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({\n    value: lastTick,\n    major: isMajor(tickVal)\n  });\n  return ticks;\n}\nclass LogarithmicScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isNumberFinite(value) && value > 0 ? value : null;\n  }\n  determineDataLimits() {\n    const me = this;\n    const {\n      min,\n      max\n    } = me.getMinMax(true);\n    me.min = isNumberFinite(min) ? Math.max(0, min) : null;\n    me.max = isNumberFinite(max) ? Math.max(0, max) : null;\n    if (me.options.beginAtZero) {\n      me._zero = true;\n    }\n    me.handleTickRangeOptions();\n  }\n  handleTickRangeOptions() {\n    const me = this;\n    const {\n      minDefined,\n      maxDefined\n    } = me.getUserBounds();\n    let min = me.min;\n    let max = me.max;\n    const setMin = v => min = minDefined ? min : v;\n    const setMax = v => max = maxDefined ? max : v;\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(exp(min, -1));\n        setMax(exp(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(exp(max, -1));\n    }\n    if (max <= 0) {\n      setMax(exp(min, +1));\n    }\n    if (me._zero && me.min !== me._suggestedMin && min === exp(me.min, 0)) {\n      setMin(exp(min, -1));\n    }\n    me.min = min;\n    me.max = max;\n  }\n  buildTicks() {\n    const me = this;\n    const opts = me.options;\n    const generationOptions = {\n      min: me._userMin,\n      max: me._userMax\n    };\n    const ticks = generateTicks(generationOptions, me);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, me, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      me.start = me.max;\n      me.end = me.min;\n    } else {\n      me.start = me.min;\n      me.end = me.max;\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    return value === undefined ? '0' : formatNumber(value, this.chart.options.locale);\n  }\n  configure() {\n    const me = this;\n    const start = me.min;\n    super.configure();\n    me._startValue = log10(start);\n    me._valueRange = log10(me.max) - log10(start);\n  }\n  getPixelForValue(value) {\n    const me = this;\n    if (value === undefined || value === 0) {\n      value = me.min;\n    }\n    return me.getPixelForDecimal(value === me.min ? 0 : (log10(value) - me._startValue) / me._valueRange);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const decimal = me.getDecimalForPixel(pixel);\n    return Math.pow(10, me._startValue + decimal * me._valueRange);\n  }\n}\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, lineHeight, label) {\n  if (isArray(label)) {\n    return {\n      w: _longestText(ctx, ctx.font, label),\n      h: label.length * lineHeight\n    };\n  }\n  return {\n    w: ctx.measureText(label).width,\n    h: lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - size / 2,\n      end: pos + size / 2\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  const furthestLimits = {\n    l: 0,\n    r: scale.width,\n    t: 0,\n    b: scale.height - scale.paddingTop\n  };\n  const furthestAngles = {};\n  let i, textSize, pointPosition;\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale.getLabels().length;\n  for (i = 0; i < valueCount; i++) {\n    const opts = scale.options.pointLabels.setContext(scale.getContext(i));\n    padding[i] = opts.padding;\n    pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i]);\n    const plFont = toFont(opts.font);\n    scale.ctx.font = plFont.string;\n    textSize = measureLabelSize(scale.ctx, plFont.lineHeight, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    const angleRadians = scale.getIndexAngle(i);\n    const angle = toDegrees(angleRadians);\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    if (hLimits.start < furthestLimits.l) {\n      furthestLimits.l = hLimits.start;\n      furthestAngles.l = angleRadians;\n    }\n    if (hLimits.end > furthestLimits.r) {\n      furthestLimits.r = hLimits.end;\n      furthestAngles.r = angleRadians;\n    }\n    if (vLimits.start < furthestLimits.t) {\n      furthestLimits.t = vLimits.start;\n      furthestAngles.t = angleRadians;\n    }\n    if (vLimits.end > furthestLimits.b) {\n      furthestLimits.b = vLimits.end;\n      furthestAngles.b = angleRadians;\n    }\n  }\n  scale._setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n  scale._pointLabelItems = [];\n  const opts = scale.options;\n  const tickBackdropHeight = getTickBackdropHeight(opts);\n  const outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max);\n  for (i = 0; i < valueCount; i++) {\n    const extra = i === 0 ? tickBackdropHeight / 2 : 0;\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i]);\n    const angle = toDegrees(scale.getIndexAngle(i));\n    const size = labelSizes[i];\n    adjustPointPositionForLabelHeight(angle, size, pointLabelPosition);\n    const textAlign = getTextAlignForAngle(angle);\n    let left;\n    if (textAlign === 'left') {\n      left = pointLabelPosition.x;\n    } else if (textAlign === 'center') {\n      left = pointLabelPosition.x - size.w / 2;\n    } else {\n      left = pointLabelPosition.x - size.w;\n    }\n    const right = left + size.w;\n    scale._pointLabelItems[i] = {\n      x: pointLabelPosition.x,\n      y: pointLabelPosition.y,\n      textAlign,\n      left,\n      top: pointLabelPosition.y,\n      right,\n      bottom: pointLabelPosition.y + size.h\n    };\n  }\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction adjustPointPositionForLabelHeight(angle, textSize, position) {\n  if (angle === 90 || angle === 270) {\n    position.y -= textSize.h / 2;\n  } else if (angle > 270 || angle < 90) {\n    position.y -= textSize.h;\n  }\n}\nfunction drawPointLabels(scale, labelCount) {\n  const {\n    ctx,\n    options: {\n      pointLabels\n    }\n  } = scale;\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {\n      x,\n      y,\n      textAlign,\n      left,\n      top,\n      right,\n      bottom\n    } = scale._pointLabelItems[i];\n    const {\n      backdropColor\n    } = optsAtIndex;\n    if (!isNullOrUndef(backdropColor)) {\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      ctx.fillRect(left - padding.left, top - padding.top, right - left + padding.width, bottom - top + padding.height);\n    }\n    renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n      color: optsAtIndex.color,\n      textAlign: textAlign,\n      textBaseline: 'middle'\n    });\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {\n    ctx\n  } = scale;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {\n    color,\n    lineWidth\n  } = gridLineOpts;\n  if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction numberOrZero(param) {\n  return isNumber(param) ? param : 0;\n}\nclass RadialLinearScale extends LinearScaleBase {\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n  setDimensions() {\n    const me = this;\n    me.width = me.maxWidth;\n    me.height = me.maxHeight;\n    me.paddingTop = getTickBackdropHeight(me.options) / 2;\n    me.xCenter = Math.floor(me.width / 2);\n    me.yCenter = Math.floor((me.height - me.paddingTop) / 2);\n    me.drawingArea = Math.min(me.height - me.paddingTop, me.width) / 2;\n  }\n  determineDataLimits() {\n    const me = this;\n    const {\n      min,\n      max\n    } = me.getMinMax(false);\n    me.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n    me.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n    me.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n  generateTickLabels(ticks) {\n    const me = this;\n    LinearScaleBase.prototype.generateTickLabels.call(me, ticks);\n    me._pointLabels = me.getLabels().map((value, index) => {\n      const label = callback(me.options.pointLabels.callback, [value, index], me);\n      return label || label === 0 ? label : '';\n    });\n  }\n  fit() {\n    const me = this;\n    const opts = me.options;\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(me);\n    } else {\n      me.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n  _setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n    const me = this;\n    let radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n    let radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n    let radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n    let radiusReductionBottom = -Math.max(furthestLimits.b - (me.height - me.paddingTop), 0) / Math.cos(furthestAngles.b);\n    radiusReductionLeft = numberOrZero(radiusReductionLeft);\n    radiusReductionRight = numberOrZero(radiusReductionRight);\n    radiusReductionTop = numberOrZero(radiusReductionTop);\n    radiusReductionBottom = numberOrZero(radiusReductionBottom);\n    me.drawingArea = Math.max(largestPossibleRadius / 2, Math.min(Math.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2), Math.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2)));\n    me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n  }\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    const me = this;\n    const maxRight = me.width - rightMovement - me.drawingArea;\n    const maxLeft = leftMovement + me.drawingArea;\n    const maxTop = topMovement + me.drawingArea;\n    const maxBottom = me.height - me.paddingTop - bottomMovement - me.drawingArea;\n    me.xCenter = Math.floor((maxLeft + maxRight) / 2 + me.left);\n    me.yCenter = Math.floor((maxTop + maxBottom) / 2 + me.top + me.paddingTop);\n  }\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / this.getLabels().length;\n    const startAngle = this.options.startAngle || 0;\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n  getDistanceFromCenterForValue(value) {\n    const me = this;\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n    const scalingFactor = me.drawingArea / (me.max - me.min);\n    if (me.options.reverse) {\n      return (me.max - value) * scalingFactor;\n    }\n    return (value - me.min) * scalingFactor;\n  }\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n    const me = this;\n    const scaledDistance = distance / (me.drawingArea / (me.max - me.min));\n    return me.options.reverse ? me.max - scaledDistance : me.min + scaledDistance;\n  }\n  getPointPosition(index, distanceFromCenter) {\n    const me = this;\n    const angle = me.getIndexAngle(index) - HALF_PI;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + me.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + me.yCenter,\n      angle\n    };\n  }\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n  getPointLabelPosition(index) {\n    const {\n      left,\n      top,\n      right,\n      bottom\n    } = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom\n    };\n  }\n  drawBackground() {\n    const me = this;\n    const {\n      backgroundColor,\n      grid: {\n        circular\n      }\n    } = me.options;\n    if (backgroundColor) {\n      const ctx = me.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(me, me.getDistanceFromCenterForValue(me._endValue), circular, me.getLabels().length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n  drawGrid() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    const {\n      angleLines,\n      grid\n    } = opts;\n    const labelCount = me.getLabels().length;\n    let i, offset, position;\n    if (opts.pointLabels.display) {\n      drawPointLabels(me, labelCount);\n    }\n    if (grid.display) {\n      me.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = me.getDistanceFromCenterForValue(tick.value);\n          const optsAtIndex = grid.setContext(me.getContext(index - 1));\n          drawRadiusLine(me, optsAtIndex, offset, labelCount);\n        }\n      });\n    }\n    if (angleLines.display) {\n      ctx.save();\n      for (i = me.getLabels().length - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(me.getContext(i));\n        const {\n          color,\n          lineWidth\n        } = optsAtIndex;\n        if (!lineWidth || !color) {\n          continue;\n        }\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = me.getDistanceFromCenterForValue(opts.ticks.reverse ? me.min : me.max);\n        position = me.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(me.xCenter, me.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n      ctx.restore();\n    }\n  }\n  drawLabels() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    const tickOpts = opts.ticks;\n    if (!tickOpts.display) {\n      return;\n    }\n    const startAngle = me.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(me.xCenter, me.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    me.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n      const optsAtIndex = tickOpts.setContext(me.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = me.getDistanceFromCenterForValue(me.ticks[index].value);\n      if (optsAtIndex.showLabelBackdrop) {\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n      }\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color\n      });\n    });\n    ctx.restore();\n  }\n  drawTitle() {}\n}\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    backdropColor: 'rgba(255,255,255,0.75)',\n    backdropPadding: 2,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback(label) {\n      return label;\n    },\n    padding: 5\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\nconst INTERVALS = {\n  millisecond: {\n    common: true,\n    size: 1,\n    steps: 1000\n  },\n  second: {\n    common: true,\n    size: 1000,\n    steps: 60\n  },\n  minute: {\n    common: true,\n    size: 60000,\n    steps: 60\n  },\n  hour: {\n    common: true,\n    size: 3600000,\n    steps: 24\n  },\n  day: {\n    common: true,\n    size: 86400000,\n    steps: 30\n  },\n  week: {\n    common: false,\n    size: 604800000,\n    steps: 4\n  },\n  month: {\n    common: true,\n    size: 2.628e9,\n    steps: 12\n  },\n  quarter: {\n    common: false,\n    size: 7.884e9,\n    steps: 4\n  },\n  year: {\n    common: true,\n    size: 3.154e10\n  }\n};\nconst UNITS = Object.keys(INTERVALS);\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n  const adapter = scale._adapter;\n  const options = scale.options.time;\n  const {\n    parser,\n    round,\n    isoWeekday\n  } = options;\n  let value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string' ? adapter.parse(value, parser) : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {\n      lo,\n      hi\n    } = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n  return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n  }\n  init(scaleOpts, opts) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n    mergeIf(time.displayFormats, adapter.formats());\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n  determineDataLimits() {\n    const me = this;\n    const options = me.options;\n    const adapter = me._adapter;\n    const unit = options.time.unit || 'day';\n    let {\n      min,\n      max,\n      minDefined,\n      maxDefined\n    } = me.getUserBounds();\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n    if (!minDefined || !maxDefined) {\n      _applyBounds(me._getLabelBounds());\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(me.getMinMax(false));\n      }\n    }\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    me.min = Math.min(min, max - 1);\n    me.max = Math.max(min + 1, max);\n  }\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {\n      min,\n      max\n    };\n  }\n  buildTicks() {\n    const me = this;\n    const options = me.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? me.getLabelTimestamps() : me._generate();\n    if (options.bounds === 'ticks' && timestamps.length) {\n      me.min = me._userMin || timestamps[0];\n      me.max = me._userMax || timestamps[timestamps.length - 1];\n    }\n    const min = me.min;\n    const max = me.max;\n    const ticks = _filterBetween(timestamps, min, max);\n    me._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, me.min, me.max, me._getLabelCapacity(min)) : determineUnitForFormatting(me, ticks.length, timeOpts.minUnit, me.min, me.max));\n    me._majorUnit = !tickOpts.major.enabled || me._unit === 'year' ? undefined : determineMajorUnit(me._unit);\n    me.initOffsets(timestamps);\n    if (options.reverse) {\n      ticks.reverse();\n    }\n    return ticksFromTimestamps(me, ticks, me._majorUnit);\n  }\n  initOffsets(timestamps) {\n    const me = this;\n    let start = 0;\n    let end = 0;\n    let first, last;\n    if (me.options.offset && timestamps.length) {\n      first = me.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (me.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = me.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - me.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n    me._offsets = {\n      start,\n      end,\n      factor: 1 / (start + 1 + end)\n    };\n  }\n  _generate() {\n    const me = this;\n    const adapter = me._adapter;\n    const min = me.min;\n    const max = me.max;\n    const options = me.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, me._getLabelCapacity(min));\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n    const timestamps = options.ticks.source === 'data' && me.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n  getLabelForValue(value) {\n    const me = this;\n    const adapter = me._adapter;\n    const timeOpts = me.options.time;\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n  _tickFormatFunction(time, index, ticks, format) {\n    const me = this;\n    const options = me.options;\n    const formats = options.time.displayFormats;\n    const unit = me._unit;\n    const majorUnit = me._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n    const label = me._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    const formatter = options.ticks.callback;\n    return formatter ? formatter(label, index, ticks) : label;\n  }\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n  getDecimalForValue(value) {\n    const me = this;\n    return value === null ? NaN : (value - me.min) / (me.max - me.min);\n  }\n  getPixelForValue(value) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me.getDecimalForValue(value);\n    return me.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return me.min + pos * (me.max - me.min);\n  }\n  _getLabelSize(label) {\n    const me = this;\n    const ticksOpts = me.options.ticks;\n    const tickLabelWidth = me.ctx.measureText(label).width;\n    const angle = toRadians(me.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = me._resolveTickFontOptions(0).size;\n    return {\n      w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n      h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n    };\n  }\n  _getLabelCapacity(exampleTime) {\n    const me = this;\n    const timeOpts = me.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = me._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(me, [exampleTime], me._majorUnit), format);\n    const size = me._getLabelSize(exampleLabel);\n    const capacity = Math.floor(me.isHorizontal() ? me.width / size.w : me.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n  getDataTimestamps() {\n    const me = this;\n    let timestamps = me._cache.data || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const metas = me.getMatchingVisibleMetas();\n    if (me._normalized && metas.length) {\n      return me._cache.data = metas[0].controller.getAllParsedValues(me);\n    }\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(me));\n    }\n    return me._cache.data = me.normalize(timestamps);\n  }\n  getLabelTimestamps() {\n    const me = this;\n    const timestamps = me._cache.labels || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const labels = me.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(me, labels[i]));\n    }\n    return me._cache.labels = me._normalized ? timestamps : me.normalize(timestamps);\n  }\n  normalize(values) {\n    return _arrayUnique(values.sort(sorter));\n  }\n}\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\nfunction interpolate(table, val, reverse) {\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    prevSource = Math.floor(val);\n    nextSource = Math.ceil(val);\n    prevTarget = table[prevSource];\n    nextTarget = table[nextSource];\n  } else {\n    const result = _lookup(table, val);\n    prevTarget = result.lo;\n    nextTarget = result.hi;\n    prevSource = table[prevTarget];\n    nextSource = table[nextTarget];\n  }\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._maxIndex = undefined;\n  }\n  initOffsets() {\n    const me = this;\n    const timestamps = me._getTimestampsForTable();\n    me._table = me.buildLookupTable(timestamps);\n    me._maxIndex = me._table.length - 1;\n    super.initOffsets(timestamps);\n  }\n  buildLookupTable(timestamps) {\n    const me = this;\n    const {\n      min,\n      max\n    } = me;\n    if (!timestamps.length) {\n      return [{\n        time: min,\n        pos: 0\n      }, {\n        time: max,\n        pos: 1\n      }];\n    }\n    const items = [min];\n    let i, ilen, curr;\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr > min && curr < max) {\n        items.push(curr);\n      }\n    }\n    items.push(max);\n    return items;\n  }\n  _getTimestampsForTable() {\n    const me = this;\n    let timestamps = me._cache.all || [];\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const data = me.getDataTimestamps();\n    const label = me.getLabelTimestamps();\n    if (data.length && label.length) {\n      timestamps = me.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = me._cache.all = timestamps;\n    return timestamps;\n  }\n  getPixelForValue(value, index) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me._normalized && me._maxIndex > 0 && !isNullOrUndef(index) ? index / me._maxIndex : me.getDecimalForValue(value);\n    return me.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getDecimalForValue(value) {\n    return interpolate(this._table, value) / this._maxIndex;\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const offsets = me._offsets;\n    const decimal = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(me._table, decimal * this._maxIndex, true);\n  }\n}\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\nvar scales = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  CategoryScale: CategoryScale,\n  LinearScale: LinearScale,\n  LogarithmicScale: LogarithmicScale,\n  RadialLinearScale: RadialLinearScale,\n  TimeScale: TimeScale,\n  TimeSeriesScale: TimeSeriesScale\n});\nconst registerables = [controllers, elements, plugins, scales];\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, plugin_filler as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, animator, controllers, elements, layouts, plugins, registerables, registry, scales };","map":{"version":3,"names":["r","requestAnimFrame","a","resolve","e","effects","c","color","i","isObject","b","isArray","d","defaults","v","valueOrDefault","u","unlistenArrayEvents","l","listenArrayEvents","f","resolveObjectKey","g","isNumberFinite","h","defined","s","sign","j","isNullOrUndef","k","clipArea","m","unclipArea","_","_arrayUnique","t","toRadians","n","toPercentage","o","toDimension","T","TAU","p","formatNumber","q","_angleBetween","H","HALF_PI","P","PI","w","isNumber","x","_limitValue","y","_lookupByKey","z","getRelativePosition$1","A","_isPointInArea","B","_rlookupByKey","C","toPadding","D","each","E","getMaximumSize","F","_getParentNode","G","readUsedSize","I","throttled","J","supportsEventListenerOptions","K","log10","L","_factorize","M","finiteOrDefault","N","callback","O","toDegrees","Q","_measureText","R","_int16Range","S","_alignPixel","U","renderText","V","toFont","W","_toLeftRightCenter","X","_alignStartEnd","Y","overrides","Z","merge","$","_capitalize","a0","descriptors","a1","isFunction","a2","_attachContext","a3","_createResolver","a4","_descriptors","a5","mergeIf","a6","uid","a7","debounce","a8","retinaScale","a9","clearCanvas","aa","_elementsEqual","ab","getAngleFromPoint","ac","_updateBezierControlPoints","ad","_computeSegments","ae","_boundSegments","af","_steppedInterpolation","ag","_bezierInterpolation","ah","_pointInLine","ai","_steppedLineTo","aj","_bezierCurveTo","ak","drawPoint","al","toTRBL","am","toTRBLCorners","an","_boundSegment","ao","_normalizeAngle","ap","getRtlAdapter","aq","overrideTextDirection","ar","_textX","as","restoreTextDirection","at","noop","au","distanceBetweenPoints","av","_addGrace","aw","_setMinAndMaxByKey","ax","niceNum","ay","almostWhole","az","almostEquals","aA","_decimalPlaces","aB","_longestText","aC","_filterBetween","aD","_lookup","Animator","constructor","_request","_charts","Map","_running","_lastDate","undefined","_notify","chart","anims","date","type","callbacks","listeners","numSteps","duration","forEach","fn","currentStep","Math","min","start","_refresh","me","call","window","_update","arguments","length","Date","now","remaining","running","items","draw","item","_active","_total","tick","pop","_getAnims","charts","get","complete","progress","set","listen","event","cb","push","add","has","reduce","acc","cur","max","_duration","stop","cancel","remove","delete","animator","transparent","interpolators","boolean","from","to","factor","c0","c1","valid","mix","hexString","number","Animation","cfg","target","prop","currentValue","_fn","_easing","easing","linear","_start","floor","delay","_loop","loop","_target","_prop","_from","_to","_promises","active","update","elapsed","remain","wait","promises","Promise","res","rej","resolved","method","numbers","colors","animationOptions","Object","keys","animation","describe","_fallback","_indexable","_scriptable","name","properties","resize","show","animations","visible","hide","Animations","config","_chart","_properties","configure","animatedProps","getOwnPropertyNames","key","option","_animateOptions","values","newOptions","options","resolveTargetOptions","_createAnimations","$shared","awaitAll","$animations","then","props","charAt","value","size","assign","anim","all","scaleClip","scale","allowedOverflow","opts","reverse","end","defaultClip","xScale","yScale","top","right","bottom","left","toClip","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","ilen","index","applyStack","stack","dsIndex","singleMode","mode","datasetIndex","otherValue","convertObjectDataToArray","data","adata","Array","isStacked","meta","stacked","getStackKey","indexScale","valueScale","id","getUserBounds","minDefined","maxDefined","Number","NEGATIVE_INFINITY","POSITIVE_INFINITY","getOrCreateStack","stacks","stackKey","indexValue","subStack","updateStacks","controller","parsed","_cachedMeta","_stacks","iScale","vScale","iAxis","axis","vAxis","itemStacks","getFirstScaleId","scales","filter","shift","createDatasetContext","parent","create","dataset","createDataContext","element","dataIndex","raw","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","_ctx","ctx","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","$context","initialize","linkScales","_stacked","addElements","updateIndex","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","indexAxis","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","datasets","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","isExtensible","datasetElementType","buildOrUpdateElements","resetNewElements","stackChanged","_resyncElements","scopeKeys","datasetScopeKeys","scopes","getOptionScopes","createResolver","getContext","parsing","parse","count","sorted","_sorted","prev","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","range","parsedValue","NaN","getMinMax","canStack","otherScale","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","clip","elements","area","chartArea","getStyle","resolveDatasetElementOptions","resolveDataElementOptions","context","_resolveElementOptions","dataElementType","elementType","cache","cacheKey","sharing","datasetElementScopeKeys","prefixes","concat","names","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","_cacheable","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","updateElement","updateSharedOptions","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","numMeta","numData","_insertElements","_removeElements","move","arr","updateElements","removed","splice","_onDataPush","_onDataPop","_onDataShift","_onDataSplice","_onDataUnshift","prototype","getAllScaleValues","_cache","$bar","metas","getMatchingVisibleMetas","sort","computeMinSampleSize","_length","curr","updateMinAndPrev","abs","getPixelForValue","ticks","getPixelForTick","computeFitCategoryTraits","ruler","stackCount","thickness","barThickness","ratio","categoryPercentage","barPercentage","chunk","pixels","computeFlexCategoryTraits","next","percent","parseFloatBar","entry","startValue","endValue","barStart","barEnd","_custom","parseValue","parseArrayOrPrimitive","isFloatBar","custom","BarController","iAxisKey","vAxisKey","obj","bars","base","getBasePixel","horizontal","isHorizontal","_getRuler","firstOpts","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","height","width","_getStacks","last","val","isNaN","indexOf","_getStackCount","_getStackIndex","_startPixel","_endPixel","grouped","baseValue","minBarLength","floating","getDataVisibility","actualBase","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","skipNull","stackIndex","rects","interaction","_index_","offset","grid","_value_","beginAtZero","BubbleController","points","point","getPixelForDecimal","skip","radius","plugins","tooltip","title","getRatioAndOffset","rotation","circumference","cutout","ratioX","ratioY","offsetX","offsetY","startAngle","endAngle","startX","cos","startY","sin","endX","endY","calcMax","angle","calcMin","maxX","maxY","minX","minY","DoughnutController","innerRadius","outerRadius","_getRotation","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","spacing","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","maxWidth","maxHeight","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","arc","metaData","locale","borderAlign","borderWidth","hoverBorderWidth","hoverOffset","ringWeightOffset","weight","aspectRatio","legend","generateLabels","map","style","text","fillStyle","backgroundColor","strokeStyle","borderColor","lineWidth","hidden","onClick","legendItem","toggleDataVisibility","tooltipItem","dataLabel","formattedValue","slice","LineController","line","_dataset","animationsDisabled","getStartAndCountOfVisiblePoints","scaleRangesChanged","_decimated","showLine","animated","spanGaps","maxGapLength","directUpdate","prevParsed","border","firstPoint","lastPoint","updateControlPoints","pointCount","lo","hi","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","PolarAreaController","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","angleLines","display","circular","pointLabels","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","fill","ScatterController","controllers","__proto__","abstract","Error","DateAdapter","formats","format","timestamp","amount","unit","diff","startOf","weekday","endOf","override","members","adapters","_date","getRelativePosition","evaluateAllVisibleItems","handler","getSortedVisibleDatasetMetas","jlen","binarySearch","metaset","intersect","lookupMethod","_reversePixels","el","getRange","optimizedEvaluateItems","position","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","sqrt","pow","getIntersectItems","useFinalPosition","_minPadding","evaluationFunc","inRange","getNearestItems","distanceMetric","minDistance","getCenterPoint","distance","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","array","pos","filterDynamicPositionByAxis","box","sortByWeight","v0","v1","wrapBoxes","boxes","layoutBoxes","setLayoutDims","layouts","params","layout","fullSize","availableWidth","hBoxMaxHeight","vBoxMaxWidth","availableHeight","buildLayoutBoxes","wrap","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","same","other","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","handleMaxPadding","updatePos","change","getMargins","marginForPositions","positions","margin","fitBoxes","refitBoxes","refit","placeBoxes","userPadding","padding","addBox","_layers","removeBox","layoutItem","minPadding","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","BasePlatform","acquireContext","canvas","releaseContext","addEventListener","listener","removeEventListener","getDevicePixelRatio","isAttached","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","initCanvas","renderHeight","getAttribute","renderWidth","initial","boxSizing","displayWidth","displayHeight","eventListenerOptions","passive","addListener","node","removeListener","fromNativeEvent","native","createAttachObserver","container","observer","MutationObserver","entries","addedNodes","added","observe","document","childList","subtree","createDetachObserver","removedNodes","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","devicePixelRatio","currentDevicePixelRatio","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","clientWidth","ResizeObserver","contentRect","releaseObserver","disconnect","createProxyAndListen","proxy","args","DomPlatform","removeAttribute","setAttribute","proxies","$proxies","handlers","attach","detach","Element","tooltipPosition","getProps","hasValue","final","ret","defaultRoutes","formatters","numeric","tickValue","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","Ticks","bounds","grace","drawBorder","drawOnChartArea","drawTicks","tickLength","tickWidth","tickColor","borderDash","borderDashOffset","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","align","crossAlign","route","startsWith","tickOpts","ticksLimit","maxTicksLimit","determineMaxTicks","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","calculateSpacing","avgMajorSpacing","round","_tickSize","maxScale","maxChart","_maxLength","evenMajorSpacing","getEvenSpacing","factors","result","ceil","majorStart","majorEnd","len","reverseAlign","offsetFromEdge","edge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","epsilon","lineValue","garbageCollect","caches","gc","gcLen","getTickMarkLength","getTitleHeight","fallback","font","lines","lineHeight","createScaleContext","createTickContext","titleAlign","titleArgs","titleX","titleY","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","init","suggestedMin","suggestedMax","getTicks","xLabels","yLabels","beforeUpdate","margins","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","source","beforeFit","fit","afterFit","afterUpdate","reversePixels","startPixel","endPixel","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","widths","heights","widestLabelSize","highestLabelSize","tickFont","fontString","nestedLabel","_resolveTickFontOptions","string","valueAt","idx","getValueForPixel","pixel","decimal","getDecimalForPixel","getBaseValue","optionTicks","rot","_computeGridLineItems","ticksLength","tl","borderOpts","setContext","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","optsAtIndex","lineColor","tickBorderDash","tickBorderDashOffset","_computeLabelItems","tickAndPadding","textAlign","lineCount","textOffset","textBaseline","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","strokeColor","strokeWidth","translation","_computeLabelArea","drawBackground","save","fillRect","restore","findIndex","drawGrid","drawLine","p1","p2","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","edgeOpts","lastLineWidth","drawLabels","drawTitle","tz","gz","axisID","TypedRegistry","scope","isForType","isPrototypeOf","register","proto","getPrototypeOf","parentScope","isIChartComponent","registerDefaults","unregister","itemDefaults","routeDefaults","routes","property","propertyParts","split","sourceName","sourceScope","join","parts","targetName","targetScope","Registry","_typedRegistries","_len","_key","_each","_len2","_key2","addControllers","_len3","_key3","_len4","_key4","addPlugins","_len5","_key5","addScales","_len6","_key6","getController","_get","getElement","getPlugin","getScale","removeControllers","_len7","_key7","removeElements","_len8","_key8","removePlugins","_len9","_key9","removeScales","_len10","_key10","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","registry","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","allPlugins","createDescriptors","previousDescriptors","some","local","getOpts","pluginOpts","pluginScopeKeys","scriptable","indexable","allKeys","getIndexAxis","datasetDefaults","datasetOptions","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","axisFromPosition","determineAxis","scaleOptions","toLowerCase","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","firstIDs","scaleConf","defaultId","defaultScaleOptions","defaultID","initOptions","initConfig","keyCache","keysCached","Set","cachedKeys","generate","addIfFound","Config","_config","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","resolver","subPrefixes","getResolver","needContext","subResolver","descriptorDefaults","resolverCache","includes","isScriptable","isIndexable","version","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","isDomSupported","getCanvas","getElementById","instances","getChart","Chart","initialCanvas","existingChart","platform","_initializePlatform","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","console","error","_initialize","maintainAspectRatio","responsive","bindEvents","OffscreenCanvas","_resize","_resizeBeforeDraw","newSize","oldRatio","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","scaleClass","hasUpdated","_updateMetasetIndex","oldIndex","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateLayout","_updateDatasets","_eventHandler","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","getElementsAtEventForMode","setDatasetVisibility","_updateDatasetVisibility","destroy","unbindEvents","toBase64Image","toDataURL","_add","_remove","events","detached","updateHoverStyle","prefix","getActiveElements","setActiveElements","activeElements","lastActive","_ref","_updateHoverStyles","replay","hoverOptions","hover","deactivated","activated","_handleEvent","lastEvent","onHover","invalidatePlugins","enumerable","defineProperties","clipArc","pixelMargin","angleMargin","closePath","pathArc","drawArc","fullCircles","drawFullCircleBorders","inner","lineJoin","ArcElement","chartX","chartY","betweenAngles","withinRadius","halfAngle","halfRadius","translate","setStyle","vm","lineCap","borderCapStyle","borderJoinStyle","previous","getLineMethod","stepped","tension","pathVars","segment","pathSegment","lineMethod","fastPathSegment","avgX","countX","prevX","lastY","pointIndex","drawX","truncX","_getSegmentMethod","useFastPath","_getInterpolationMethod","strokePathWithCache","path","_path","Path2D","strokePathDirect","usePath2D","strokePath","LineElement","_points","_segments","_pointsUpdated","segments","interpolate","_interpolate","interpolated","segmentMethod","capBezierPoints","cubicInterpolationMode","inRange$1","hitRadius","PointElement","mouseX","mouseY","inXRange","inYRange","hoverRadius","pointStyle","getBarBounds","bar","half","parseBorderSkipped","borderSkipped","parseEdge","swap","startEnd","orig","v2","skipOrLimit","parseBorderWidth","maxW","maxH","parseBorderRadius","borderRadius","maxR","topLeft","topRight","bottomLeft","bottomRight","boundingRects","outer","skipX","skipY","skipBoth","hasRadius","addRoundedRectPath","rect","addNormalRectPath","BarElement","addRectPath","lttbDecimation","samples","decimated","bucketWidth","sampledIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","minMaxDecimation","minIndex","maxIndex","startIndex","xMin","xMax","dx","lastIndex","intermediateIndex1","intermediateIndex2","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","defineProperty","configurable","getLineByIndex","parseFillOption","fillOption","decodeFill","parseFloat","computeLinearBoundary","simpleArc","computeCircularBoundary","computeBoundary","pointsFromSegments","boundary","linePoints","buildStackLine","sourcePoints","linesBelow","getLinesBelow","createBoundaryLine","addPointsBelow","isLineAndNotInHideAnimation","below","unshift","sourcePoint","postponed","findPoint","pointValue","firstValue","lastValue","getTarget","resolveTarget","sources","propagate","visited","clipY","getBounds","_getEdge","tpoints","subs","sub","subBounds","fillSources","clipBounds","interpolatedLineTo","interpolatedPoint","_fill","src","tgt","lineLoop","targetLoop","doFill","above","plugin_filler","afterDatasetsUpdate","_args","$filler","beforeDatasetsDraw","beforeDatasetDraw","lineOpts","getBoxSize","labelOpts","fontSize","boxHeight","boxWidth","usePointStyle","itemHeight","itemsEqual","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","itemWidth","measureText","heightLimit","totalWidth","currentColWidth","currentColHeight","col","adjustHitBoxes","hitbox","_draw","defaultColor","rtlHelper","rtl","fontColor","halfFontSize","cursor","drawLegendBox","lineDash","drawOptions","SQRT2","xPlus","yBoxTop","leftForLtr","strokeRect","fillText","strikethrough","textDirection","textWidth","setWidth","realX","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","isListened","hoveredItem","sameItem","onLeave","plugin_legend","_element","afterEvent","ci","Title","_padding","textSize","_drawArgs","fontOpts","createTitle","titleBlock","plugin_title","positioners","average","eventPosition","nearestElement","tp","pushOrConcat","toPush","apply","splitNewlines","str","String","createTooltipItem","getTooltipSize","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","bodyLineHeight","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","caretSize","caretPadding","determineXAlign","yAlign","chartWidth","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","cornerRadius","radiusAndPadding","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","beforeTitle","afterTitle","getBeforeBody","getBody","bodyItems","scoped","beforeLabel","afterLabel","getAfterBody","getFooter","beforeFooter","afterFooter","_createItems","itemSort","labelColor","labelPointStyle","labelTextColor","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","pt","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","drawBody","bodyAlign","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","bodyColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","hasTooltipContent","globalAlpha","_ref2","positionChanged","_positionChanged","plugin_tooltip","afterInit","afterDraw","labelCount","Decimation","Filler","addIfString","findOrAddLabel","lastIndexOf","CategoryScale","_startValue","_valueRange","isFinite","generateTicks$1","generationOptions","dataRange","MIN_SPACING","step","precision","maxTicks","maxSpaces","rmin","rmax","countDefined","niceMin","niceMax","numSpaces","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","numericGeneratorOptions","LinearScale","isMajor","tickVal","generateTicks","endExp","endSignificand","exp","significand","lastTick","LogarithmicScale","_zero","getTickBackdropHeight","backdropPadding","measureLabelSize","determineLimits","fitWithPointLabels","furthestLimits","furthestAngles","valueCount","getPointPosition","drawingArea","plFont","_pointLabels","hLimits","vLimits","_setReductions","_pointLabelItems","tickBackdropHeight","outerDistance","extra","pointLabelPosition","adjustPointPositionForLabelHeight","getTextAlignForAngle","drawPointLabels","backdropColor","pathRadiusLine","drawRadiusLine","gridLineOpts","numberOrZero","param","RadialLinearScale","setCenterPoint","largestPossibleRadius","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","angleMultiplier","scalingFactor","getValueForDistanceFromCenter","scaledDistance","distanceFromCenter","getBasePosition","getPointLabelPosition","rotate","showLabelBackdrop","animate","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","input","adapter","_adapter","time","parser","isoWeekday","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","determineUnitForFormatting","determineMajorUnit","addTick","timestamps","setMajorTicks","majorUnit","ticksFromTimestamps","TimeScale","_unit","_majorUnit","_offsets","_normalized","displayFormats","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","initOffsets","getDecimalForValue","limit","hasWeekday","getDataTimestamps","tooltipFormat","datetime","_tickFormatFunction","minorFormat","majorFormat","formatter","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","normalize","table","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_maxIndex","_getTimestampsForTable","buildLookupTable","registerables","_adapters"],"sources":["C:/Users/user/Desktop/mcdonald-ec2/client/node_modules/chart.js/dist/chart.esm.js"],"sourcesContent":["/*!\r\n * Chart.js v3.0.0\r\n * https://www.chartjs.org\r\n * (c) 2021 Chart.js Contributors\r\n * Released under the MIT License\r\n */\r\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, b as isArray, d as defaults, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as isNullOrUndef, k as clipArea, m as unclipArea, _ as _arrayUnique, t as toRadians, n as toPercentage, o as toDimension, T as TAU, p as formatNumber, q as _angleBetween, H as HALF_PI, P as PI, w as isNumber, x as _limitValue, y as _lookupByKey, z as getRelativePosition$1, A as _isPointInArea, B as _rlookupByKey, C as toPadding, D as each, E as getMaximumSize, F as _getParentNode, G as readUsedSize, I as throttled, J as supportsEventListenerOptions, K as log10, L as _factorize, M as finiteOrDefault, N as callback, O as toDegrees, Q as _measureText, R as _int16Range, S as _alignPixel, U as renderText, V as toFont, W as _toLeftRightCenter, X as _alignStartEnd, Y as overrides, Z as merge, $ as _capitalize, a0 as descriptors, a1 as isFunction, a2 as _attachContext, a3 as _createResolver, a4 as _descriptors, a5 as mergeIf, a6 as uid, a7 as debounce, a8 as retinaScale, a9 as clearCanvas, aa as _elementsEqual, ab as getAngleFromPoint, ac as _updateBezierControlPoints, ad as _computeSegments, ae as _boundSegments, af as _steppedInterpolation, ag as _bezierInterpolation, ah as _pointInLine, ai as _steppedLineTo, aj as _bezierCurveTo, ak as drawPoint, al as toTRBL, am as toTRBLCorners, an as _boundSegment, ao as _normalizeAngle, ap as getRtlAdapter, aq as overrideTextDirection, ar as _textX, as as restoreTextDirection, at as noop, au as distanceBetweenPoints, av as _addGrace, aw as _setMinAndMaxByKey, ax as niceNum, ay as almostWhole, az as almostEquals, aA as _decimalPlaces, aB as _longestText, aC as _filterBetween, aD as _lookup } from './chunks/helpers.segment.js';\r\nexport { d as defaults } from './chunks/helpers.segment.js';\r\n\r\nclass Animator {\r\n  constructor() {\r\n    this._request = null;\r\n    this._charts = new Map();\r\n    this._running = false;\r\n    this._lastDate = undefined;\r\n  }\r\n  _notify(chart, anims, date, type) {\r\n    const callbacks = anims.listeners[type];\r\n    const numSteps = anims.duration;\r\n    callbacks.forEach(fn => fn({\r\n      chart,\r\n      numSteps,\r\n      currentStep: Math.min(date - anims.start, numSteps)\r\n    }));\r\n  }\r\n  _refresh() {\r\n    const me = this;\r\n    if (me._request) {\r\n      return;\r\n    }\r\n    me._running = true;\r\n    me._request = requestAnimFrame.call(window, () => {\r\n      me._update();\r\n      me._request = null;\r\n      if (me._running) {\r\n        me._refresh();\r\n      }\r\n    });\r\n  }\r\n  _update(date = Date.now()) {\r\n    const me = this;\r\n    let remaining = 0;\r\n    me._charts.forEach((anims, chart) => {\r\n      if (!anims.running || !anims.items.length) {\r\n        return;\r\n      }\r\n      const items = anims.items;\r\n      let i = items.length - 1;\r\n      let draw = false;\r\n      let item;\r\n      for (; i >= 0; --i) {\r\n        item = items[i];\r\n        if (item._active) {\r\n          if (item._total > anims.duration) {\r\n            anims.duration = item._total;\r\n          }\r\n          item.tick(date);\r\n          draw = true;\r\n        } else {\r\n          items[i] = items[items.length - 1];\r\n          items.pop();\r\n        }\r\n      }\r\n      if (draw) {\r\n        chart.draw();\r\n        me._notify(chart, anims, date, 'progress');\r\n      }\r\n      if (!items.length) {\r\n        anims.running = false;\r\n        me._notify(chart, anims, date, 'complete');\r\n      }\r\n      remaining += items.length;\r\n    });\r\n    me._lastDate = date;\r\n    if (remaining === 0) {\r\n      me._running = false;\r\n    }\r\n  }\r\n  _getAnims(chart) {\r\n    const charts = this._charts;\r\n    let anims = charts.get(chart);\r\n    if (!anims) {\r\n      anims = {\r\n        running: false,\r\n        items: [],\r\n        listeners: {\r\n          complete: [],\r\n          progress: []\r\n        }\r\n      };\r\n      charts.set(chart, anims);\r\n    }\r\n    return anims;\r\n  }\r\n  listen(chart, event, cb) {\r\n    this._getAnims(chart).listeners[event].push(cb);\r\n  }\r\n  add(chart, items) {\r\n    if (!items || !items.length) {\r\n      return;\r\n    }\r\n    this._getAnims(chart).items.push(...items);\r\n  }\r\n  has(chart) {\r\n    return this._getAnims(chart).items.length > 0;\r\n  }\r\n  start(chart) {\r\n    const anims = this._charts.get(chart);\r\n    if (!anims) {\r\n      return;\r\n    }\r\n    anims.running = true;\r\n    anims.start = Date.now();\r\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\r\n    this._refresh();\r\n  }\r\n  running(chart) {\r\n    if (!this._running) {\r\n      return false;\r\n    }\r\n    const anims = this._charts.get(chart);\r\n    if (!anims || !anims.running || !anims.items.length) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n  stop(chart) {\r\n    const anims = this._charts.get(chart);\r\n    if (!anims || !anims.items.length) {\r\n      return;\r\n    }\r\n    const items = anims.items;\r\n    let i = items.length - 1;\r\n    for (; i >= 0; --i) {\r\n      items[i].cancel();\r\n    }\r\n    anims.items = [];\r\n    this._notify(chart, anims, Date.now(), 'complete');\r\n  }\r\n  remove(chart) {\r\n    return this._charts.delete(chart);\r\n  }\r\n}\r\nvar animator = new Animator();\r\n\r\nconst transparent = 'transparent';\r\nconst interpolators = {\r\n  boolean(from, to, factor) {\r\n    return factor > 0.5 ? to : from;\r\n  },\r\n  color(from, to, factor) {\r\n    const c0 = color(from || transparent);\r\n    const c1 = c0.valid && color(to || transparent);\r\n    return c1 && c1.valid\r\n      ? c1.mix(c0, factor).hexString()\r\n      : to;\r\n  },\r\n  number(from, to, factor) {\r\n    return from + (to - from) * factor;\r\n  }\r\n};\r\nclass Animation {\r\n  constructor(cfg, target, prop, to) {\r\n    const currentValue = target[prop];\r\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\r\n    const from = resolve([cfg.from, currentValue, to]);\r\n    this._active = true;\r\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\r\n    this._easing = effects[cfg.easing] || effects.linear;\r\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\r\n    this._duration = this._total = Math.floor(cfg.duration);\r\n    this._loop = !!cfg.loop;\r\n    this._target = target;\r\n    this._prop = prop;\r\n    this._from = from;\r\n    this._to = to;\r\n    this._promises = undefined;\r\n  }\r\n  active() {\r\n    return this._active;\r\n  }\r\n  update(cfg, to, date) {\r\n    const me = this;\r\n    if (me._active) {\r\n      me._notify(false);\r\n      const currentValue = me._target[me._prop];\r\n      const elapsed = date - me._start;\r\n      const remain = me._duration - elapsed;\r\n      me._start = date;\r\n      me._duration = Math.floor(Math.max(remain, cfg.duration));\r\n      me._total += elapsed;\r\n      me._loop = !!cfg.loop;\r\n      me._to = resolve([cfg.to, to, currentValue, cfg.from]);\r\n      me._from = resolve([cfg.from, currentValue, to]);\r\n    }\r\n  }\r\n  cancel() {\r\n    const me = this;\r\n    if (me._active) {\r\n      me.tick(Date.now());\r\n      me._active = false;\r\n      me._notify(false);\r\n    }\r\n  }\r\n  tick(date) {\r\n    const me = this;\r\n    const elapsed = date - me._start;\r\n    const duration = me._duration;\r\n    const prop = me._prop;\r\n    const from = me._from;\r\n    const loop = me._loop;\r\n    const to = me._to;\r\n    let factor;\r\n    me._active = from !== to && (loop || (elapsed < duration));\r\n    if (!me._active) {\r\n      me._target[prop] = to;\r\n      me._notify(true);\r\n      return;\r\n    }\r\n    if (elapsed < 0) {\r\n      me._target[prop] = from;\r\n      return;\r\n    }\r\n    factor = (elapsed / duration) % 2;\r\n    factor = loop && factor > 1 ? 2 - factor : factor;\r\n    factor = me._easing(Math.min(1, Math.max(0, factor)));\r\n    me._target[prop] = me._fn(from, to, factor);\r\n  }\r\n  wait() {\r\n    const promises = this._promises || (this._promises = []);\r\n    return new Promise((res, rej) => {\r\n      promises.push({res, rej});\r\n    });\r\n  }\r\n  _notify(resolved) {\r\n    const method = resolved ? 'res' : 'rej';\r\n    const promises = this._promises || [];\r\n    for (let i = 0; i < promises.length; i++) {\r\n      promises[i][method]();\r\n    }\r\n  }\r\n}\r\n\r\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\r\nconst colors = ['color', 'borderColor', 'backgroundColor'];\r\ndefaults.set('animation', {\r\n  delay: undefined,\r\n  duration: 1000,\r\n  easing: 'easeOutQuart',\r\n  fn: undefined,\r\n  from: undefined,\r\n  loop: undefined,\r\n  to: undefined,\r\n  type: undefined,\r\n});\r\nconst animationOptions = Object.keys(defaults.animation);\r\ndefaults.describe('animation', {\r\n  _fallback: false,\r\n  _indexable: false,\r\n  _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\r\n});\r\ndefaults.set('animations', {\r\n  colors: {\r\n    type: 'color',\r\n    properties: colors\r\n  },\r\n  numbers: {\r\n    type: 'number',\r\n    properties: numbers\r\n  },\r\n});\r\ndefaults.describe('animations', {\r\n  _fallback: 'animation',\r\n});\r\ndefaults.set('transitions', {\r\n  active: {\r\n    animation: {\r\n      duration: 400\r\n    }\r\n  },\r\n  resize: {\r\n    animation: {\r\n      duration: 0\r\n    }\r\n  },\r\n  show: {\r\n    animations: {\r\n      colors: {\r\n        from: 'transparent'\r\n      },\r\n      visible: {\r\n        type: 'boolean',\r\n        duration: 0\r\n      },\r\n    }\r\n  },\r\n  hide: {\r\n    animations: {\r\n      colors: {\r\n        to: 'transparent'\r\n      },\r\n      visible: {\r\n        type: 'boolean',\r\n        easing: 'linear',\r\n        fn: v => v | 0\r\n      },\r\n    }\r\n  }\r\n});\r\nclass Animations {\r\n  constructor(chart, config) {\r\n    this._chart = chart;\r\n    this._properties = new Map();\r\n    this.configure(config);\r\n  }\r\n  configure(config) {\r\n    if (!isObject(config)) {\r\n      return;\r\n    }\r\n    const animatedProps = this._properties;\r\n    Object.getOwnPropertyNames(config).forEach(key => {\r\n      const cfg = config[key];\r\n      if (!isObject(cfg)) {\r\n        return;\r\n      }\r\n      const resolved = {};\r\n      for (const option of animationOptions) {\r\n        resolved[option] = cfg[option];\r\n      }\r\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\r\n        if (prop === key || !animatedProps.has(prop)) {\r\n          animatedProps.set(prop, resolved);\r\n        }\r\n      });\r\n    });\r\n  }\r\n  _animateOptions(target, values) {\r\n    const newOptions = values.options;\r\n    const options = resolveTargetOptions(target, newOptions);\r\n    if (!options) {\r\n      return [];\r\n    }\r\n    const animations = this._createAnimations(options, newOptions);\r\n    if (newOptions.$shared) {\r\n      awaitAll(target.options.$animations, newOptions).then(() => {\r\n        target.options = newOptions;\r\n      }, () => {\r\n      });\r\n    }\r\n    return animations;\r\n  }\r\n  _createAnimations(target, values) {\r\n    const animatedProps = this._properties;\r\n    const animations = [];\r\n    const running = target.$animations || (target.$animations = {});\r\n    const props = Object.keys(values);\r\n    const date = Date.now();\r\n    let i;\r\n    for (i = props.length - 1; i >= 0; --i) {\r\n      const prop = props[i];\r\n      if (prop.charAt(0) === '$') {\r\n        continue;\r\n      }\r\n      if (prop === 'options') {\r\n        animations.push(...this._animateOptions(target, values));\r\n        continue;\r\n      }\r\n      const value = values[prop];\r\n      let animation = running[prop];\r\n      const cfg = animatedProps.get(prop);\r\n      if (animation) {\r\n        if (cfg && animation.active()) {\r\n          animation.update(cfg, value, date);\r\n          continue;\r\n        } else {\r\n          animation.cancel();\r\n        }\r\n      }\r\n      if (!cfg || !cfg.duration) {\r\n        target[prop] = value;\r\n        continue;\r\n      }\r\n      running[prop] = animation = new Animation(cfg, target, prop, value);\r\n      animations.push(animation);\r\n    }\r\n    return animations;\r\n  }\r\n  update(target, values) {\r\n    if (this._properties.size === 0) {\r\n      Object.assign(target, values);\r\n      return;\r\n    }\r\n    const animations = this._createAnimations(target, values);\r\n    if (animations.length) {\r\n      animator.add(this._chart, animations);\r\n      return true;\r\n    }\r\n  }\r\n}\r\nfunction awaitAll(animations, properties) {\r\n  const running = [];\r\n  const keys = Object.keys(properties);\r\n  for (let i = 0; i < keys.length; i++) {\r\n    const anim = animations[keys[i]];\r\n    if (anim && anim.active()) {\r\n      running.push(anim.wait());\r\n    }\r\n  }\r\n  return Promise.all(running);\r\n}\r\nfunction resolveTargetOptions(target, newOptions) {\r\n  if (!newOptions) {\r\n    return;\r\n  }\r\n  let options = target.options;\r\n  if (!options) {\r\n    target.options = newOptions;\r\n    return;\r\n  }\r\n  if (options.$shared) {\r\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\r\n  }\r\n  return options;\r\n}\r\n\r\nfunction scaleClip(scale, allowedOverflow) {\r\n  const opts = scale && scale.options || {};\r\n  const reverse = opts.reverse;\r\n  const min = opts.min === undefined ? allowedOverflow : 0;\r\n  const max = opts.max === undefined ? allowedOverflow : 0;\r\n  return {\r\n    start: reverse ? max : min,\r\n    end: reverse ? min : max\r\n  };\r\n}\r\nfunction defaultClip(xScale, yScale, allowedOverflow) {\r\n  if (allowedOverflow === false) {\r\n    return false;\r\n  }\r\n  const x = scaleClip(xScale, allowedOverflow);\r\n  const y = scaleClip(yScale, allowedOverflow);\r\n  return {\r\n    top: y.end,\r\n    right: x.end,\r\n    bottom: y.start,\r\n    left: x.start\r\n  };\r\n}\r\nfunction toClip(value) {\r\n  let t, r, b, l;\r\n  if (isObject(value)) {\r\n    t = value.top;\r\n    r = value.right;\r\n    b = value.bottom;\r\n    l = value.left;\r\n  } else {\r\n    t = r = b = l = value;\r\n  }\r\n  return {\r\n    top: t,\r\n    right: r,\r\n    bottom: b,\r\n    left: l\r\n  };\r\n}\r\nfunction getSortedDatasetIndices(chart, filterVisible) {\r\n  const keys = [];\r\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\r\n  let i, ilen;\r\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\r\n    keys.push(metasets[i].index);\r\n  }\r\n  return keys;\r\n}\r\nfunction applyStack(stack, value, dsIndex, options) {\r\n  const keys = stack.keys;\r\n  const singleMode = options.mode === 'single';\r\n  let i, ilen, datasetIndex, otherValue;\r\n  if (value === null) {\r\n    return;\r\n  }\r\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\r\n    datasetIndex = +keys[i];\r\n    if (datasetIndex === dsIndex) {\r\n      if (options.all) {\r\n        continue;\r\n      }\r\n      break;\r\n    }\r\n    otherValue = stack.values[datasetIndex];\r\n    if (isNumberFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\r\n      value += otherValue;\r\n    }\r\n  }\r\n  return value;\r\n}\r\nfunction convertObjectDataToArray(data) {\r\n  const keys = Object.keys(data);\r\n  const adata = new Array(keys.length);\r\n  let i, ilen, key;\r\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\r\n    key = keys[i];\r\n    adata[i] = {\r\n      x: key,\r\n      y: data[key]\r\n    };\r\n  }\r\n  return adata;\r\n}\r\nfunction isStacked(scale, meta) {\r\n  const stacked = scale && scale.options.stacked;\r\n  return stacked || (stacked === undefined && meta.stack !== undefined);\r\n}\r\nfunction getStackKey(indexScale, valueScale, meta) {\r\n  return indexScale.id + '.' + valueScale.id + '.' + meta.stack + '.' + meta.type;\r\n}\r\nfunction getUserBounds(scale) {\r\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\r\n  return {\r\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\r\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\r\n  };\r\n}\r\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\r\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\r\n  return subStack[indexValue] || (subStack[indexValue] = {});\r\n}\r\nfunction updateStacks(controller, parsed) {\r\n  const {chart, _cachedMeta: meta} = controller;\r\n  const stacks = chart._stacks || (chart._stacks = {});\r\n  const {iScale, vScale, index: datasetIndex} = meta;\r\n  const iAxis = iScale.axis;\r\n  const vAxis = vScale.axis;\r\n  const key = getStackKey(iScale, vScale, meta);\r\n  const ilen = parsed.length;\r\n  let stack;\r\n  for (let i = 0; i < ilen; ++i) {\r\n    const item = parsed[i];\r\n    const {[iAxis]: index, [vAxis]: value} = item;\r\n    const itemStacks = item._stacks || (item._stacks = {});\r\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\r\n    stack[datasetIndex] = value;\r\n  }\r\n}\r\nfunction getFirstScaleId(chart, axis) {\r\n  const scales = chart.scales;\r\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\r\n}\r\nfunction createDatasetContext(parent, index) {\r\n  return Object.assign(Object.create(parent),\r\n    {\r\n      active: false,\r\n      dataset: undefined,\r\n      datasetIndex: index,\r\n      index,\r\n      mode: 'default',\r\n      type: 'dataset'\r\n    }\r\n  );\r\n}\r\nfunction createDataContext(parent, index, element) {\r\n  return Object.assign(Object.create(parent), {\r\n    active: false,\r\n    dataIndex: index,\r\n    parsed: undefined,\r\n    raw: undefined,\r\n    element,\r\n    index,\r\n    mode: 'default',\r\n    type: 'data'\r\n  });\r\n}\r\nfunction clearStacks(meta, items) {\r\n  items = items || meta._parsed;\r\n  for (const parsed of items) {\r\n    const stacks = parsed._stacks;\r\n    if (!stacks || stacks[meta.vScale.id] === undefined || stacks[meta.vScale.id][meta.index] === undefined) {\r\n      return;\r\n    }\r\n    delete stacks[meta.vScale.id][meta.index];\r\n  }\r\n}\r\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\r\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\r\nclass DatasetController {\r\n  constructor(chart, datasetIndex) {\r\n    this.chart = chart;\r\n    this._ctx = chart.ctx;\r\n    this.index = datasetIndex;\r\n    this._cachedDataOpts = {};\r\n    this._cachedMeta = this.getMeta();\r\n    this._type = this._cachedMeta.type;\r\n    this.options = undefined;\r\n    this._parsing = false;\r\n    this._data = undefined;\r\n    this._objectData = undefined;\r\n    this._sharedOptions = undefined;\r\n    this._drawStart = undefined;\r\n    this._drawCount = undefined;\r\n    this.enableOptionSharing = false;\r\n    this.$context = undefined;\r\n    this.initialize();\r\n  }\r\n  initialize() {\r\n    const me = this;\r\n    const meta = me._cachedMeta;\r\n    me.configure();\r\n    me.linkScales();\r\n    meta._stacked = isStacked(meta.vScale, meta);\r\n    me.addElements();\r\n  }\r\n  updateIndex(datasetIndex) {\r\n    this.index = datasetIndex;\r\n  }\r\n  linkScales() {\r\n    const me = this;\r\n    const chart = me.chart;\r\n    const meta = me._cachedMeta;\r\n    const dataset = me.getDataset();\r\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\r\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\r\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\r\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\r\n    const indexAxis = meta.indexAxis;\r\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\r\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\r\n    meta.xScale = me.getScaleForId(xid);\r\n    meta.yScale = me.getScaleForId(yid);\r\n    meta.rScale = me.getScaleForId(rid);\r\n    meta.iScale = me.getScaleForId(iid);\r\n    meta.vScale = me.getScaleForId(vid);\r\n  }\r\n  getDataset() {\r\n    return this.chart.data.datasets[this.index];\r\n  }\r\n  getMeta() {\r\n    return this.chart.getDatasetMeta(this.index);\r\n  }\r\n  getScaleForId(scaleID) {\r\n    return this.chart.scales[scaleID];\r\n  }\r\n  _getOtherScale(scale) {\r\n    const meta = this._cachedMeta;\r\n    return scale === meta.iScale\r\n      ? meta.vScale\r\n      : meta.iScale;\r\n  }\r\n  reset() {\r\n    this._update('reset');\r\n  }\r\n  _destroy() {\r\n    const meta = this._cachedMeta;\r\n    if (this._data) {\r\n      unlistenArrayEvents(this._data, this);\r\n    }\r\n    if (meta._stacked) {\r\n      clearStacks(meta);\r\n    }\r\n  }\r\n  _dataCheck() {\r\n    const me = this;\r\n    const dataset = me.getDataset();\r\n    const data = dataset.data || (dataset.data = []);\r\n    if (isObject(data)) {\r\n      me._data = convertObjectDataToArray(data);\r\n    } else if (me._data !== data) {\r\n      if (me._data) {\r\n        unlistenArrayEvents(me._data, me);\r\n        clearStacks(me._cachedMeta);\r\n      }\r\n      if (data && Object.isExtensible(data)) {\r\n        listenArrayEvents(data, me);\r\n      }\r\n      me._data = data;\r\n    }\r\n  }\r\n  addElements() {\r\n    const me = this;\r\n    const meta = me._cachedMeta;\r\n    me._dataCheck();\r\n    if (me.datasetElementType) {\r\n      meta.dataset = new me.datasetElementType();\r\n    }\r\n  }\r\n  buildOrUpdateElements(resetNewElements) {\r\n    const me = this;\r\n    const meta = me._cachedMeta;\r\n    const dataset = me.getDataset();\r\n    let stackChanged = false;\r\n    me._dataCheck();\r\n    meta._stacked = isStacked(meta.vScale, meta);\r\n    if (meta.stack !== dataset.stack) {\r\n      stackChanged = true;\r\n      clearStacks(meta);\r\n      meta.stack = dataset.stack;\r\n    }\r\n    me._resyncElements(resetNewElements);\r\n    if (stackChanged) {\r\n      updateStacks(me, meta._parsed);\r\n    }\r\n  }\r\n  configure() {\r\n    const me = this;\r\n    const config = me.chart.config;\r\n    const scopeKeys = config.datasetScopeKeys(me._type);\r\n    const scopes = config.getOptionScopes(me.getDataset(), scopeKeys, true);\r\n    me.options = config.createResolver(scopes, me.getContext());\r\n    me._parsing = me.options.parsing;\r\n  }\r\n  parse(start, count) {\r\n    const me = this;\r\n    const {_cachedMeta: meta, _data: data} = me;\r\n    const {iScale, _stacked} = meta;\r\n    const iAxis = iScale.axis;\r\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\r\n    let prev = start > 0 && meta._parsed[start - 1];\r\n    let i, cur, parsed;\r\n    if (me._parsing === false) {\r\n      meta._parsed = data;\r\n      meta._sorted = true;\r\n    } else {\r\n      if (isArray(data[start])) {\r\n        parsed = me.parseArrayData(meta, data, start, count);\r\n      } else if (isObject(data[start])) {\r\n        parsed = me.parseObjectData(meta, data, start, count);\r\n      } else {\r\n        parsed = me.parsePrimitiveData(meta, data, start, count);\r\n      }\r\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\r\n      for (i = 0; i < count; ++i) {\r\n        meta._parsed[i + start] = cur = parsed[i];\r\n        if (sorted) {\r\n          if (isNotInOrderComparedToPrev()) {\r\n            sorted = false;\r\n          }\r\n          prev = cur;\r\n        }\r\n      }\r\n      meta._sorted = sorted;\r\n    }\r\n    if (_stacked) {\r\n      updateStacks(me, parsed);\r\n    }\r\n  }\r\n  parsePrimitiveData(meta, data, start, count) {\r\n    const {iScale, vScale} = meta;\r\n    const iAxis = iScale.axis;\r\n    const vAxis = vScale.axis;\r\n    const labels = iScale.getLabels();\r\n    const singleScale = iScale === vScale;\r\n    const parsed = new Array(count);\r\n    let i, ilen, index;\r\n    for (i = 0, ilen = count; i < ilen; ++i) {\r\n      index = i + start;\r\n      parsed[i] = {\r\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\r\n        [vAxis]: vScale.parse(data[index], index)\r\n      };\r\n    }\r\n    return parsed;\r\n  }\r\n  parseArrayData(meta, data, start, count) {\r\n    const {xScale, yScale} = meta;\r\n    const parsed = new Array(count);\r\n    let i, ilen, index, item;\r\n    for (i = 0, ilen = count; i < ilen; ++i) {\r\n      index = i + start;\r\n      item = data[index];\r\n      parsed[i] = {\r\n        x: xScale.parse(item[0], index),\r\n        y: yScale.parse(item[1], index)\r\n      };\r\n    }\r\n    return parsed;\r\n  }\r\n  parseObjectData(meta, data, start, count) {\r\n    const {xScale, yScale} = meta;\r\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\r\n    const parsed = new Array(count);\r\n    let i, ilen, index, item;\r\n    for (i = 0, ilen = count; i < ilen; ++i) {\r\n      index = i + start;\r\n      item = data[index];\r\n      parsed[i] = {\r\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\r\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\r\n      };\r\n    }\r\n    return parsed;\r\n  }\r\n  getParsed(index) {\r\n    return this._cachedMeta._parsed[index];\r\n  }\r\n  getDataElement(index) {\r\n    return this._cachedMeta.data[index];\r\n  }\r\n  applyStack(scale, parsed, mode) {\r\n    const chart = this.chart;\r\n    const meta = this._cachedMeta;\r\n    const value = parsed[scale.axis];\r\n    const stack = {\r\n      keys: getSortedDatasetIndices(chart, true),\r\n      values: parsed._stacks[scale.axis]\r\n    };\r\n    return applyStack(stack, value, meta.index, {mode});\r\n  }\r\n  updateRangeFromParsed(range, scale, parsed, stack) {\r\n    const parsedValue = parsed[scale.axis];\r\n    let value = parsedValue === null ? NaN : parsedValue;\r\n    const values = stack && parsed._stacks[scale.axis];\r\n    if (stack && values) {\r\n      stack.values = values;\r\n      range.min = Math.min(range.min, value);\r\n      range.max = Math.max(range.max, value);\r\n      value = applyStack(stack, parsedValue, this._cachedMeta.index, {all: true});\r\n    }\r\n    range.min = Math.min(range.min, value);\r\n    range.max = Math.max(range.max, value);\r\n  }\r\n  getMinMax(scale, canStack) {\r\n    const me = this;\r\n    const meta = me._cachedMeta;\r\n    const _parsed = meta._parsed;\r\n    const sorted = meta._sorted && scale === meta.iScale;\r\n    const ilen = _parsed.length;\r\n    const otherScale = me._getOtherScale(scale);\r\n    const stack = canStack && meta._stacked && {keys: getSortedDatasetIndices(me.chart, true), values: null};\r\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\r\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\r\n    let i, value, parsed, otherValue;\r\n    function _skip() {\r\n      parsed = _parsed[i];\r\n      value = parsed[scale.axis];\r\n      otherValue = parsed[otherScale.axis];\r\n      return !isNumberFinite(value) || otherMin > otherValue || otherMax < otherValue;\r\n    }\r\n    for (i = 0; i < ilen; ++i) {\r\n      if (_skip()) {\r\n        continue;\r\n      }\r\n      me.updateRangeFromParsed(range, scale, parsed, stack);\r\n      if (sorted) {\r\n        break;\r\n      }\r\n    }\r\n    if (sorted) {\r\n      for (i = ilen - 1; i >= 0; --i) {\r\n        if (_skip()) {\r\n          continue;\r\n        }\r\n        me.updateRangeFromParsed(range, scale, parsed, stack);\r\n        break;\r\n      }\r\n    }\r\n    return range;\r\n  }\r\n  getAllParsedValues(scale) {\r\n    const parsed = this._cachedMeta._parsed;\r\n    const values = [];\r\n    let i, ilen, value;\r\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\r\n      value = parsed[i][scale.axis];\r\n      if (isNumberFinite(value)) {\r\n        values.push(value);\r\n      }\r\n    }\r\n    return values;\r\n  }\r\n  getMaxOverflow() {\r\n    return false;\r\n  }\r\n  getLabelAndValue(index) {\r\n    const me = this;\r\n    const meta = me._cachedMeta;\r\n    const iScale = meta.iScale;\r\n    const vScale = meta.vScale;\r\n    const parsed = me.getParsed(index);\r\n    return {\r\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\r\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\r\n    };\r\n  }\r\n  _update(mode) {\r\n    const me = this;\r\n    const meta = me._cachedMeta;\r\n    me.configure();\r\n    me._cachedDataOpts = {};\r\n    me.update(mode || 'default');\r\n    meta._clip = toClip(valueOrDefault(me.options.clip, defaultClip(meta.xScale, meta.yScale, me.getMaxOverflow())));\r\n  }\r\n  update(mode) {}\r\n  draw() {\r\n    const me = this;\r\n    const ctx = me._ctx;\r\n    const chart = me.chart;\r\n    const meta = me._cachedMeta;\r\n    const elements = meta.data || [];\r\n    const area = chart.chartArea;\r\n    const active = [];\r\n    const start = me._drawStart || 0;\r\n    const count = me._drawCount || (elements.length - start);\r\n    let i;\r\n    if (meta.dataset) {\r\n      meta.dataset.draw(ctx, area, start, count);\r\n    }\r\n    for (i = start; i < start + count; ++i) {\r\n      const element = elements[i];\r\n      if (element.active) {\r\n        active.push(element);\r\n      } else {\r\n        element.draw(ctx, area);\r\n      }\r\n    }\r\n    for (i = 0; i < active.length; ++i) {\r\n      active[i].draw(ctx, area);\r\n    }\r\n  }\r\n  getStyle(index, active) {\r\n    const mode = active ? 'active' : 'default';\r\n    return index === undefined && this._cachedMeta.dataset\r\n      ? this.resolveDatasetElementOptions(mode)\r\n      : this.resolveDataElementOptions(index || 0, mode);\r\n  }\r\n  getContext(index, active, mode) {\r\n    const me = this;\r\n    const dataset = me.getDataset();\r\n    let context;\r\n    if (index >= 0 && index < me._cachedMeta.data.length) {\r\n      const element = me._cachedMeta.data[index];\r\n      context = element.$context ||\r\n        (element.$context = createDataContext(me.getContext(), index, element));\r\n      context.parsed = me.getParsed(index);\r\n      context.raw = dataset.data[index];\r\n    } else {\r\n      context = me.$context ||\r\n        (me.$context = createDatasetContext(me.chart.getContext(), me.index));\r\n      context.dataset = dataset;\r\n    }\r\n    context.active = !!active;\r\n    context.mode = mode;\r\n    return context;\r\n  }\r\n  resolveDatasetElementOptions(mode) {\r\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\r\n  }\r\n  resolveDataElementOptions(index, mode) {\r\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\r\n  }\r\n  _resolveElementOptions(elementType, mode = 'default', index) {\r\n    const me = this;\r\n    const active = mode === 'active';\r\n    const cache = me._cachedDataOpts;\r\n    const cacheKey = elementType + '-' + mode;\r\n    const cached = cache[cacheKey];\r\n    const sharing = me.enableOptionSharing && defined(index);\r\n    if (cached) {\r\n      return cloneIfNotShared(cached, sharing);\r\n    }\r\n    const config = me.chart.config;\r\n    const scopeKeys = config.datasetElementScopeKeys(me._type, elementType);\r\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\r\n    const scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\r\n    const names = Object.keys(defaults.elements[elementType]);\r\n    const context = () => me.getContext(index, active);\r\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\r\n    if (values.$shared) {\r\n      values.$shared = sharing;\r\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\r\n    }\r\n    return values;\r\n  }\r\n  _resolveAnimations(index, transition, active) {\r\n    const me = this;\r\n    const chart = me.chart;\r\n    const cache = me._cachedDataOpts;\r\n    const cacheKey = `animation-${transition}`;\r\n    const cached = cache[cacheKey];\r\n    if (cached) {\r\n      return cached;\r\n    }\r\n    let options;\r\n    if (chart.options.animation !== false) {\r\n      const config = me.chart.config;\r\n      const scopeKeys = config.datasetAnimationScopeKeys(me._type, transition);\r\n      const scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\r\n      options = config.createResolver(scopes, me.getContext(index, active, transition));\r\n    }\r\n    const animations = new Animations(chart, options && options.animations);\r\n    if (options && options._cacheable) {\r\n      cache[cacheKey] = Object.freeze(animations);\r\n    }\r\n    return animations;\r\n  }\r\n  getSharedOptions(options) {\r\n    if (!options.$shared) {\r\n      return;\r\n    }\r\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\r\n  }\r\n  includeOptions(mode, sharedOptions) {\r\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\r\n  }\r\n  updateElement(element, index, properties, mode) {\r\n    if (isDirectUpdateMode(mode)) {\r\n      Object.assign(element, properties);\r\n    } else {\r\n      this._resolveAnimations(index, mode).update(element, properties);\r\n    }\r\n  }\r\n  updateSharedOptions(sharedOptions, mode, newOptions) {\r\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\r\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\r\n    }\r\n  }\r\n  _setStyle(element, index, mode, active) {\r\n    element.active = active;\r\n    const options = this.getStyle(index, active);\r\n    this._resolveAnimations(index, mode, active).update(element, {\r\n      options: (!active && this.getSharedOptions(options)) || options\r\n    });\r\n  }\r\n  removeHoverStyle(element, datasetIndex, index) {\r\n    this._setStyle(element, index, 'active', false);\r\n  }\r\n  setHoverStyle(element, datasetIndex, index) {\r\n    this._setStyle(element, index, 'active', true);\r\n  }\r\n  _removeDatasetHoverStyle() {\r\n    const element = this._cachedMeta.dataset;\r\n    if (element) {\r\n      this._setStyle(element, undefined, 'active', false);\r\n    }\r\n  }\r\n  _setDatasetHoverStyle() {\r\n    const element = this._cachedMeta.dataset;\r\n    if (element) {\r\n      this._setStyle(element, undefined, 'active', true);\r\n    }\r\n  }\r\n  _resyncElements(resetNewElements) {\r\n    const me = this;\r\n    const numMeta = me._cachedMeta.data.length;\r\n    const numData = me._data.length;\r\n    if (numData > numMeta) {\r\n      me._insertElements(numMeta, numData - numMeta, resetNewElements);\r\n    } else if (numData < numMeta) {\r\n      me._removeElements(numData, numMeta - numData);\r\n    }\r\n    const count = Math.min(numData, numMeta);\r\n    if (count) {\r\n      me.parse(0, count);\r\n    }\r\n  }\r\n  _insertElements(start, count, resetNewElements = true) {\r\n    const me = this;\r\n    const meta = me._cachedMeta;\r\n    const data = meta.data;\r\n    const end = start + count;\r\n    let i;\r\n    const move = (arr) => {\r\n      arr.length += count;\r\n      for (i = arr.length - 1; i >= end; i--) {\r\n        arr[i] = arr[i - count];\r\n      }\r\n    };\r\n    move(data);\r\n    for (i = start; i < end; ++i) {\r\n      data[i] = new me.dataElementType();\r\n    }\r\n    if (me._parsing) {\r\n      move(meta._parsed);\r\n    }\r\n    me.parse(start, count);\r\n    if (resetNewElements) {\r\n      me.updateElements(data, start, count, 'reset');\r\n    }\r\n  }\r\n  updateElements(element, start, count, mode) {}\r\n  _removeElements(start, count) {\r\n    const me = this;\r\n    const meta = me._cachedMeta;\r\n    if (me._parsing) {\r\n      const removed = meta._parsed.splice(start, count);\r\n      if (meta._stacked) {\r\n        clearStacks(meta, removed);\r\n      }\r\n    }\r\n    meta.data.splice(start, count);\r\n  }\r\n  _onDataPush() {\r\n    const count = arguments.length;\r\n    this._insertElements(this.getDataset().data.length - count, count);\r\n  }\r\n  _onDataPop() {\r\n    this._removeElements(this._cachedMeta.data.length - 1, 1);\r\n  }\r\n  _onDataShift() {\r\n    this._removeElements(0, 1);\r\n  }\r\n  _onDataSplice(start, count) {\r\n    this._removeElements(start, count);\r\n    this._insertElements(start, arguments.length - 2);\r\n  }\r\n  _onDataUnshift() {\r\n    this._insertElements(0, arguments.length);\r\n  }\r\n}\r\nDatasetController.defaults = {};\r\nDatasetController.prototype.datasetElementType = null;\r\nDatasetController.prototype.dataElementType = null;\r\n\r\nfunction getAllScaleValues(scale) {\r\n  if (!scale._cache.$bar) {\r\n    const metas = scale.getMatchingVisibleMetas('bar');\r\n    let values = [];\r\n    for (let i = 0, ilen = metas.length; i < ilen; i++) {\r\n      values = values.concat(metas[i].controller.getAllParsedValues(scale));\r\n    }\r\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\r\n  }\r\n  return scale._cache.$bar;\r\n}\r\nfunction computeMinSampleSize(scale) {\r\n  const values = getAllScaleValues(scale);\r\n  let min = scale._length;\r\n  let i, ilen, curr, prev;\r\n  const updateMinAndPrev = () => {\r\n    min = Math.min(min, i && Math.abs(curr - prev) || min);\r\n    prev = curr;\r\n  };\r\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\r\n    curr = scale.getPixelForValue(values[i]);\r\n    updateMinAndPrev();\r\n  }\r\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\r\n    curr = scale.getPixelForTick(i);\r\n    updateMinAndPrev();\r\n  }\r\n  return min;\r\n}\r\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\r\n  const thickness = options.barThickness;\r\n  let size, ratio;\r\n  if (isNullOrUndef(thickness)) {\r\n    size = ruler.min * options.categoryPercentage;\r\n    ratio = options.barPercentage;\r\n  } else {\r\n    size = thickness * stackCount;\r\n    ratio = 1;\r\n  }\r\n  return {\r\n    chunk: size / stackCount,\r\n    ratio,\r\n    start: ruler.pixels[index] - (size / 2)\r\n  };\r\n}\r\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\r\n  const pixels = ruler.pixels;\r\n  const curr = pixels[index];\r\n  let prev = index > 0 ? pixels[index - 1] : null;\r\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\r\n  const percent = options.categoryPercentage;\r\n  if (prev === null) {\r\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\r\n  }\r\n  if (next === null) {\r\n    next = curr + curr - prev;\r\n  }\r\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\r\n  const size = Math.abs(next - prev) / 2 * percent;\r\n  return {\r\n    chunk: size / stackCount,\r\n    ratio: options.barPercentage,\r\n    start\r\n  };\r\n}\r\nfunction parseFloatBar(entry, item, vScale, i) {\r\n  const startValue = vScale.parse(entry[0], i);\r\n  const endValue = vScale.parse(entry[1], i);\r\n  const min = Math.min(startValue, endValue);\r\n  const max = Math.max(startValue, endValue);\r\n  let barStart = min;\r\n  let barEnd = max;\r\n  if (Math.abs(min) > Math.abs(max)) {\r\n    barStart = max;\r\n    barEnd = min;\r\n  }\r\n  item[vScale.axis] = barEnd;\r\n  item._custom = {\r\n    barStart,\r\n    barEnd,\r\n    start: startValue,\r\n    end: endValue,\r\n    min,\r\n    max\r\n  };\r\n}\r\nfunction parseValue(entry, item, vScale, i) {\r\n  if (isArray(entry)) {\r\n    parseFloatBar(entry, item, vScale, i);\r\n  } else {\r\n    item[vScale.axis] = vScale.parse(entry, i);\r\n  }\r\n  return item;\r\n}\r\nfunction parseArrayOrPrimitive(meta, data, start, count) {\r\n  const iScale = meta.iScale;\r\n  const vScale = meta.vScale;\r\n  const labels = iScale.getLabels();\r\n  const singleScale = iScale === vScale;\r\n  const parsed = [];\r\n  let i, ilen, item, entry;\r\n  for (i = start, ilen = start + count; i < ilen; ++i) {\r\n    entry = data[i];\r\n    item = {};\r\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\r\n    parsed.push(parseValue(entry, item, vScale, i));\r\n  }\r\n  return parsed;\r\n}\r\nfunction isFloatBar(custom) {\r\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\r\n}\r\nclass BarController extends DatasetController {\r\n  parsePrimitiveData(meta, data, start, count) {\r\n    return parseArrayOrPrimitive(meta, data, start, count);\r\n  }\r\n  parseArrayData(meta, data, start, count) {\r\n    return parseArrayOrPrimitive(meta, data, start, count);\r\n  }\r\n  parseObjectData(meta, data, start, count) {\r\n    const {iScale, vScale} = meta;\r\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\r\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\r\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\r\n    const parsed = [];\r\n    let i, ilen, item, obj;\r\n    for (i = start, ilen = start + count; i < ilen; ++i) {\r\n      obj = data[i];\r\n      item = {};\r\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\r\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\r\n    }\r\n    return parsed;\r\n  }\r\n  updateRangeFromParsed(range, scale, parsed, stack) {\r\n    super.updateRangeFromParsed(range, scale, parsed, stack);\r\n    const custom = parsed._custom;\r\n    if (custom && scale === this._cachedMeta.vScale) {\r\n      range.min = Math.min(range.min, custom.min);\r\n      range.max = Math.max(range.max, custom.max);\r\n    }\r\n  }\r\n  getLabelAndValue(index) {\r\n    const me = this;\r\n    const meta = me._cachedMeta;\r\n    const {iScale, vScale} = meta;\r\n    const parsed = me.getParsed(index);\r\n    const custom = parsed._custom;\r\n    const value = isFloatBar(custom)\r\n      ? '[' + custom.start + ', ' + custom.end + ']'\r\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\r\n    return {\r\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\r\n      value\r\n    };\r\n  }\r\n  initialize() {\r\n    const me = this;\r\n    me.enableOptionSharing = true;\r\n    super.initialize();\r\n    const meta = me._cachedMeta;\r\n    meta.stack = me.getDataset().stack;\r\n  }\r\n  update(mode) {\r\n    const me = this;\r\n    const meta = me._cachedMeta;\r\n    me.updateElements(meta.data, 0, meta.data.length, mode);\r\n  }\r\n  updateElements(bars, start, count, mode) {\r\n    const me = this;\r\n    const reset = mode === 'reset';\r\n    const vScale = me._cachedMeta.vScale;\r\n    const base = vScale.getBasePixel();\r\n    const horizontal = vScale.isHorizontal();\r\n    const ruler = me._getRuler();\r\n    const firstOpts = me.resolveDataElementOptions(start, mode);\r\n    const sharedOptions = me.getSharedOptions(firstOpts);\r\n    const includeOptions = me.includeOptions(mode, sharedOptions);\r\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\r\n    for (let i = start; i < start + count; i++) {\r\n      const vpixels = reset ? {base, head: base} : me._calculateBarValuePixels(i);\r\n      const ipixels = me._calculateBarIndexPixels(i, ruler);\r\n      const properties = {\r\n        horizontal,\r\n        base: vpixels.base,\r\n        x: horizontal ? vpixels.head : ipixels.center,\r\n        y: horizontal ? ipixels.center : vpixels.head,\r\n        height: horizontal ? ipixels.size : undefined,\r\n        width: horizontal ? undefined : ipixels.size\r\n      };\r\n      if (includeOptions) {\r\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, mode);\r\n      }\r\n      me.updateElement(bars[i], i, properties, mode);\r\n    }\r\n  }\r\n  _getStacks(last, dataIndex) {\r\n    const me = this;\r\n    const meta = me._cachedMeta;\r\n    const iScale = meta.iScale;\r\n    const metasets = iScale.getMatchingVisibleMetas(me._type);\r\n    const stacked = iScale.options.stacked;\r\n    const ilen = metasets.length;\r\n    const stacks = [];\r\n    let i, item;\r\n    for (i = 0; i < ilen; ++i) {\r\n      item = metasets[i];\r\n      if (typeof dataIndex !== 'undefined') {\r\n        const val = item.controller.getParsed(dataIndex)[\r\n          item.controller._cachedMeta.vScale.axis\r\n        ];\r\n        if (isNullOrUndef(val) || isNaN(val)) {\r\n          continue;\r\n        }\r\n      }\r\n      if (stacked === false || stacks.indexOf(item.stack) === -1 ||\r\n\t\t\t\t(stacked === undefined && item.stack === undefined)) {\r\n        stacks.push(item.stack);\r\n      }\r\n      if (item.index === last) {\r\n        break;\r\n      }\r\n    }\r\n    if (!stacks.length) {\r\n      stacks.push(undefined);\r\n    }\r\n    return stacks;\r\n  }\r\n  _getStackCount(index) {\r\n    return this._getStacks(undefined, index).length;\r\n  }\r\n  _getStackIndex(datasetIndex, name) {\r\n    const stacks = this._getStacks(datasetIndex);\r\n    const index = (name !== undefined)\r\n      ? stacks.indexOf(name)\r\n      : -1;\r\n    return (index === -1)\r\n      ? stacks.length - 1\r\n      : index;\r\n  }\r\n  _getRuler() {\r\n    const me = this;\r\n    const opts = me.options;\r\n    const meta = me._cachedMeta;\r\n    const iScale = meta.iScale;\r\n    const pixels = [];\r\n    let i, ilen;\r\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\r\n      pixels.push(iScale.getPixelForValue(me.getParsed(i)[iScale.axis], i));\r\n    }\r\n    const barThickness = opts.barThickness;\r\n    const min = barThickness || computeMinSampleSize(iScale);\r\n    return {\r\n      min,\r\n      pixels,\r\n      start: iScale._startPixel,\r\n      end: iScale._endPixel,\r\n      stackCount: me._getStackCount(),\r\n      scale: iScale,\r\n      grouped: opts.grouped,\r\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\r\n    };\r\n  }\r\n  _calculateBarValuePixels(index) {\r\n    const me = this;\r\n    const {vScale, _stacked} = me._cachedMeta;\r\n    const {base: baseValue, minBarLength} = me.options;\r\n    const parsed = me.getParsed(index);\r\n    const custom = parsed._custom;\r\n    const floating = isFloatBar(custom);\r\n    let value = parsed[vScale.axis];\r\n    let start = 0;\r\n    let length = _stacked ? me.applyStack(vScale, parsed, _stacked) : value;\r\n    let head, size;\r\n    if (length !== value) {\r\n      start = length - value;\r\n      length = value;\r\n    }\r\n    if (floating) {\r\n      value = custom.barStart;\r\n      length = custom.barEnd - custom.barStart;\r\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\r\n        start = 0;\r\n      }\r\n      start += value;\r\n    }\r\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\r\n    let base = vScale.getPixelForValue(startValue);\r\n    if (this.chart.getDataVisibility(index)) {\r\n      head = vScale.getPixelForValue(start + length);\r\n    } else {\r\n      head = base;\r\n    }\r\n    size = head - base;\r\n    if (minBarLength !== undefined && Math.abs(size) < minBarLength) {\r\n      size = size < 0 ? -minBarLength : minBarLength;\r\n      if (value === 0) {\r\n        base -= size / 2;\r\n      }\r\n      head = base + size;\r\n    }\r\n    const actualBase = baseValue || 0;\r\n    if (base === vScale.getPixelForValue(actualBase)) {\r\n      const halfGrid = vScale.getLineWidthForValue(actualBase) / 2;\r\n      if (size > 0) {\r\n        base += halfGrid;\r\n        size -= halfGrid;\r\n      } else if (size < 0) {\r\n        base -= halfGrid;\r\n        size += halfGrid;\r\n      }\r\n    }\r\n    return {\r\n      size,\r\n      base,\r\n      head,\r\n      center: head + size / 2\r\n    };\r\n  }\r\n  _calculateBarIndexPixels(index, ruler) {\r\n    const me = this;\r\n    const scale = ruler.scale;\r\n    const options = me.options;\r\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\r\n    let center, size;\r\n    if (ruler.grouped) {\r\n      const stackCount = options.skipNull ? me._getStackCount(index) : ruler.stackCount;\r\n      const range = options.barThickness === 'flex'\r\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\r\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\r\n      const stackIndex = me._getStackIndex(me.index, me._cachedMeta.stack);\r\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\r\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\r\n    } else {\r\n      center = scale.getPixelForValue(me.getParsed(index)[scale.axis], index);\r\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\r\n    }\r\n    return {\r\n      base: center - size / 2,\r\n      head: center + size / 2,\r\n      center,\r\n      size\r\n    };\r\n  }\r\n  draw() {\r\n    const me = this;\r\n    const chart = me.chart;\r\n    const meta = me._cachedMeta;\r\n    const vScale = meta.vScale;\r\n    const rects = meta.data;\r\n    const ilen = rects.length;\r\n    let i = 0;\r\n    clipArea(chart.ctx, chart.chartArea);\r\n    for (; i < ilen; ++i) {\r\n      if (me.getParsed(i)[vScale.axis] !== null) {\r\n        rects[i].draw(me._ctx);\r\n      }\r\n    }\r\n    unclipArea(chart.ctx);\r\n  }\r\n}\r\nBarController.id = 'bar';\r\nBarController.defaults = {\r\n  datasetElementType: false,\r\n  dataElementType: 'bar',\r\n  categoryPercentage: 0.8,\r\n  barPercentage: 0.9,\r\n  grouped: true,\r\n  animations: {\r\n    numbers: {\r\n      type: 'number',\r\n      properties: ['x', 'y', 'base', 'width', 'height']\r\n    }\r\n  }\r\n};\r\nBarController.overrides = {\r\n  interaction: {\r\n    mode: 'index'\r\n  },\r\n  scales: {\r\n    _index_: {\r\n      type: 'category',\r\n      offset: true,\r\n      grid: {\r\n        offset: true\r\n      }\r\n    },\r\n    _value_: {\r\n      type: 'linear',\r\n      beginAtZero: true,\r\n    }\r\n  }\r\n};\r\n\r\nclass BubbleController extends DatasetController {\r\n  initialize() {\r\n    this.enableOptionSharing = true;\r\n    super.initialize();\r\n  }\r\n  parseObjectData(meta, data, start, count) {\r\n    const {xScale, yScale} = meta;\r\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\r\n    const parsed = [];\r\n    let i, ilen, item;\r\n    for (i = start, ilen = start + count; i < ilen; ++i) {\r\n      item = data[i];\r\n      parsed.push({\r\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), i),\r\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), i),\r\n        _custom: item && item.r && +item.r\r\n      });\r\n    }\r\n    return parsed;\r\n  }\r\n  getMaxOverflow() {\r\n    const {data, _parsed} = this._cachedMeta;\r\n    let max = 0;\r\n    for (let i = data.length - 1; i >= 0; --i) {\r\n      max = Math.max(max, data[i].size() / 2, _parsed[i]._custom);\r\n    }\r\n    return max > 0 && max;\r\n  }\r\n  getLabelAndValue(index) {\r\n    const me = this;\r\n    const meta = me._cachedMeta;\r\n    const {xScale, yScale} = meta;\r\n    const parsed = me.getParsed(index);\r\n    const x = xScale.getLabelForValue(parsed.x);\r\n    const y = yScale.getLabelForValue(parsed.y);\r\n    const r = parsed._custom;\r\n    return {\r\n      label: meta.label,\r\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\r\n    };\r\n  }\r\n  update(mode) {\r\n    const me = this;\r\n    const points = me._cachedMeta.data;\r\n    me.updateElements(points, 0, points.length, mode);\r\n  }\r\n  updateElements(points, start, count, mode) {\r\n    const me = this;\r\n    const reset = mode === 'reset';\r\n    const {xScale, yScale} = me._cachedMeta;\r\n    const firstOpts = me.resolveDataElementOptions(start, mode);\r\n    const sharedOptions = me.getSharedOptions(firstOpts);\r\n    const includeOptions = me.includeOptions(mode, sharedOptions);\r\n    for (let i = start; i < start + count; i++) {\r\n      const point = points[i];\r\n      const parsed = !reset && me.getParsed(i);\r\n      const x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(parsed.x);\r\n      const y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(parsed.y);\r\n      const properties = {\r\n        x,\r\n        y,\r\n        skip: isNaN(x) || isNaN(y)\r\n      };\r\n      if (includeOptions) {\r\n        properties.options = me.resolveDataElementOptions(i, mode);\r\n        if (reset) {\r\n          properties.options.radius = 0;\r\n        }\r\n      }\r\n      me.updateElement(point, i, properties, mode);\r\n    }\r\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\r\n  }\r\n  resolveDataElementOptions(index, mode) {\r\n    const parsed = this.getParsed(index);\r\n    let values = super.resolveDataElementOptions(index, mode);\r\n    if (values.$shared) {\r\n      values = Object.assign({}, values, {$shared: false});\r\n    }\r\n    const radius = values.radius;\r\n    if (mode !== 'active') {\r\n      values.radius = 0;\r\n    }\r\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\r\n    return values;\r\n  }\r\n}\r\nBubbleController.id = 'bubble';\r\nBubbleController.defaults = {\r\n  datasetElementType: false,\r\n  dataElementType: 'point',\r\n  animations: {\r\n    numbers: {\r\n      type: 'number',\r\n      properties: ['x', 'y', 'borderWidth', 'radius']\r\n    }\r\n  }\r\n};\r\nBubbleController.overrides = {\r\n  scales: {\r\n    x: {\r\n      type: 'linear'\r\n    },\r\n    y: {\r\n      type: 'linear'\r\n    }\r\n  },\r\n  plugins: {\r\n    tooltip: {\r\n      callbacks: {\r\n        title() {\r\n          return '';\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nfunction getRatioAndOffset(rotation, circumference, cutout) {\r\n  let ratioX = 1;\r\n  let ratioY = 1;\r\n  let offsetX = 0;\r\n  let offsetY = 0;\r\n  if (circumference < TAU) {\r\n    const startAngle = rotation;\r\n    const endAngle = startAngle + circumference;\r\n    const startX = Math.cos(startAngle);\r\n    const startY = Math.sin(startAngle);\r\n    const endX = Math.cos(endAngle);\r\n    const endY = Math.sin(endAngle);\r\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle) ? 1 : Math.max(a, a * cutout, b, b * cutout);\r\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle) ? -1 : Math.min(a, a * cutout, b, b * cutout);\r\n    const maxX = calcMax(0, startX, endX);\r\n    const maxY = calcMax(HALF_PI, startY, endY);\r\n    const minX = calcMin(PI, startX, endX);\r\n    const minY = calcMin(PI + HALF_PI, startY, endY);\r\n    ratioX = (maxX - minX) / 2;\r\n    ratioY = (maxY - minY) / 2;\r\n    offsetX = -(maxX + minX) / 2;\r\n    offsetY = -(maxY + minY) / 2;\r\n  }\r\n  return {ratioX, ratioY, offsetX, offsetY};\r\n}\r\nclass DoughnutController extends DatasetController {\r\n  constructor(chart, datasetIndex) {\r\n    super(chart, datasetIndex);\r\n    this.enableOptionSharing = true;\r\n    this.innerRadius = undefined;\r\n    this.outerRadius = undefined;\r\n    this.offsetX = undefined;\r\n    this.offsetY = undefined;\r\n  }\r\n  linkScales() {}\r\n  parse(start, count) {\r\n    const data = this.getDataset().data;\r\n    const meta = this._cachedMeta;\r\n    let i, ilen;\r\n    for (i = start, ilen = start + count; i < ilen; ++i) {\r\n      meta._parsed[i] = +data[i];\r\n    }\r\n  }\r\n  _getRotation() {\r\n    return toRadians(this.options.rotation - 90);\r\n  }\r\n  _getCircumference() {\r\n    return toRadians(this.options.circumference);\r\n  }\r\n  _getRotationExtents() {\r\n    let min = TAU;\r\n    let max = -TAU;\r\n    const me = this;\r\n    for (let i = 0; i < me.chart.data.datasets.length; ++i) {\r\n      if (me.chart.isDatasetVisible(i)) {\r\n        const controller = me.chart.getDatasetMeta(i).controller;\r\n        const rotation = controller._getRotation();\r\n        const circumference = controller._getCircumference();\r\n        min = Math.min(min, rotation);\r\n        max = Math.max(max, rotation + circumference);\r\n      }\r\n    }\r\n    return {\r\n      rotation: min,\r\n      circumference: max - min,\r\n    };\r\n  }\r\n  update(mode) {\r\n    const me = this;\r\n    const chart = me.chart;\r\n    const {chartArea} = chart;\r\n    const meta = me._cachedMeta;\r\n    const arcs = meta.data;\r\n    const spacing = me.getMaxBorderWidth() + me.getMaxOffset(arcs);\r\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\r\n    const cutout = Math.min(toPercentage(me.options.cutout, maxSize), 1);\r\n    const chartWeight = me._getRingWeight(me.index);\r\n    const {circumference, rotation} = me._getRotationExtents();\r\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\r\n    const maxWidth = (chartArea.width - spacing) / ratioX;\r\n    const maxHeight = (chartArea.height - spacing) / ratioY;\r\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\r\n    const outerRadius = toDimension(me.options.radius, maxRadius);\r\n    const innerRadius = Math.max(outerRadius * cutout, 0);\r\n    const radiusLength = (outerRadius - innerRadius) / me._getVisibleDatasetWeightTotal();\r\n    me.offsetX = offsetX * outerRadius;\r\n    me.offsetY = offsetY * outerRadius;\r\n    meta.total = me.calculateTotal();\r\n    me.outerRadius = outerRadius - radiusLength * me._getRingWeightOffset(me.index);\r\n    me.innerRadius = Math.max(me.outerRadius - radiusLength * chartWeight, 0);\r\n    me.updateElements(arcs, 0, arcs.length, mode);\r\n  }\r\n  _circumference(i, reset) {\r\n    const me = this;\r\n    const opts = me.options;\r\n    const meta = me._cachedMeta;\r\n    const circumference = me._getCircumference();\r\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null) {\r\n      return 0;\r\n    }\r\n    return me.calculateCircumference(meta._parsed[i] * circumference / TAU);\r\n  }\r\n  updateElements(arcs, start, count, mode) {\r\n    const me = this;\r\n    const reset = mode === 'reset';\r\n    const chart = me.chart;\r\n    const chartArea = chart.chartArea;\r\n    const opts = chart.options;\r\n    const animationOpts = opts.animation;\r\n    const centerX = (chartArea.left + chartArea.right) / 2;\r\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\r\n    const animateScale = reset && animationOpts.animateScale;\r\n    const innerRadius = animateScale ? 0 : me.innerRadius;\r\n    const outerRadius = animateScale ? 0 : me.outerRadius;\r\n    const firstOpts = me.resolveDataElementOptions(start, mode);\r\n    const sharedOptions = me.getSharedOptions(firstOpts);\r\n    const includeOptions = me.includeOptions(mode, sharedOptions);\r\n    let startAngle = me._getRotation();\r\n    let i;\r\n    for (i = 0; i < start; ++i) {\r\n      startAngle += me._circumference(i, reset);\r\n    }\r\n    for (i = start; i < start + count; ++i) {\r\n      const circumference = me._circumference(i, reset);\r\n      const arc = arcs[i];\r\n      const properties = {\r\n        x: centerX + me.offsetX,\r\n        y: centerY + me.offsetY,\r\n        startAngle,\r\n        endAngle: startAngle + circumference,\r\n        circumference,\r\n        outerRadius,\r\n        innerRadius\r\n      };\r\n      if (includeOptions) {\r\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, mode);\r\n      }\r\n      startAngle += circumference;\r\n      me.updateElement(arc, i, properties, mode);\r\n    }\r\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\r\n  }\r\n  calculateTotal() {\r\n    const meta = this._cachedMeta;\r\n    const metaData = meta.data;\r\n    let total = 0;\r\n    let i;\r\n    for (i = 0; i < metaData.length; i++) {\r\n      const value = meta._parsed[i];\r\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i)) {\r\n        total += Math.abs(value);\r\n      }\r\n    }\r\n    return total;\r\n  }\r\n  calculateCircumference(value) {\r\n    const total = this._cachedMeta.total;\r\n    if (total > 0 && !isNaN(value)) {\r\n      return TAU * (Math.abs(value) / total);\r\n    }\r\n    return 0;\r\n  }\r\n  getLabelAndValue(index) {\r\n    const me = this;\r\n    const meta = me._cachedMeta;\r\n    const chart = me.chart;\r\n    const labels = chart.data.labels || [];\r\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\r\n    return {\r\n      label: labels[index] || '',\r\n      value,\r\n    };\r\n  }\r\n  getMaxBorderWidth(arcs) {\r\n    const me = this;\r\n    let max = 0;\r\n    const chart = me.chart;\r\n    let i, ilen, meta, controller, options;\r\n    if (!arcs) {\r\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\r\n        if (chart.isDatasetVisible(i)) {\r\n          meta = chart.getDatasetMeta(i);\r\n          arcs = meta.data;\r\n          controller = meta.controller;\r\n          if (controller !== me) {\r\n            controller.configure();\r\n          }\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    if (!arcs) {\r\n      return 0;\r\n    }\r\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\r\n      options = controller.resolveDataElementOptions(i);\r\n      if (options.borderAlign !== 'inner') {\r\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\r\n      }\r\n    }\r\n    return max;\r\n  }\r\n  getMaxOffset(arcs) {\r\n    let max = 0;\r\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\r\n      const options = this.resolveDataElementOptions(i);\r\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\r\n    }\r\n    return max;\r\n  }\r\n  _getRingWeightOffset(datasetIndex) {\r\n    let ringWeightOffset = 0;\r\n    for (let i = 0; i < datasetIndex; ++i) {\r\n      if (this.chart.isDatasetVisible(i)) {\r\n        ringWeightOffset += this._getRingWeight(i);\r\n      }\r\n    }\r\n    return ringWeightOffset;\r\n  }\r\n  _getRingWeight(datasetIndex) {\r\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\r\n  }\r\n  _getVisibleDatasetWeightTotal() {\r\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\r\n  }\r\n}\r\nDoughnutController.id = 'doughnut';\r\nDoughnutController.defaults = {\r\n  datasetElementType: false,\r\n  dataElementType: 'arc',\r\n  animation: {\r\n    animateRotate: true,\r\n    animateScale: false\r\n  },\r\n  animations: {\r\n    numbers: {\r\n      type: 'number',\r\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth']\r\n    },\r\n  },\r\n  cutout: '50%',\r\n  rotation: 0,\r\n  circumference: 360,\r\n  radius: '100%',\r\n  indexAxis: 'r',\r\n};\r\nDoughnutController.overrides = {\r\n  aspectRatio: 1,\r\n  plugins: {\r\n    legend: {\r\n      labels: {\r\n        generateLabels(chart) {\r\n          const data = chart.data;\r\n          if (data.labels.length && data.datasets.length) {\r\n            return data.labels.map((label, i) => {\r\n              const meta = chart.getDatasetMeta(0);\r\n              const style = meta.controller.getStyle(i);\r\n              return {\r\n                text: label,\r\n                fillStyle: style.backgroundColor,\r\n                strokeStyle: style.borderColor,\r\n                lineWidth: style.borderWidth,\r\n                hidden: !chart.getDataVisibility(i),\r\n                index: i\r\n              };\r\n            });\r\n          }\r\n          return [];\r\n        }\r\n      },\r\n      onClick(e, legendItem, legend) {\r\n        legend.chart.toggleDataVisibility(legendItem.index);\r\n        legend.chart.update();\r\n      }\r\n    },\r\n    tooltip: {\r\n      callbacks: {\r\n        title() {\r\n          return '';\r\n        },\r\n        label(tooltipItem) {\r\n          let dataLabel = tooltipItem.label;\r\n          const value = ': ' + tooltipItem.formattedValue;\r\n          if (isArray(dataLabel)) {\r\n            dataLabel = dataLabel.slice();\r\n            dataLabel[0] += value;\r\n          } else {\r\n            dataLabel += value;\r\n          }\r\n          return dataLabel;\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nclass LineController extends DatasetController {\r\n  initialize() {\r\n    this.enableOptionSharing = true;\r\n    super.initialize();\r\n  }\r\n  update(mode) {\r\n    const me = this;\r\n    const meta = me._cachedMeta;\r\n    const {dataset: line, data: points = [], _dataset} = meta;\r\n    const animationsDisabled = me.chart._animationsDisabled;\r\n    let {start, count} = getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\r\n    me._drawStart = start;\r\n    me._drawCount = count;\r\n    if (scaleRangesChanged(meta)) {\r\n      start = 0;\r\n      count = points.length;\r\n    }\r\n    line._decimated = !!_dataset._decimated;\r\n    line.points = points;\r\n    if (mode !== 'resize') {\r\n      const options = me.resolveDatasetElementOptions(mode);\r\n      if (!me.options.showLine) {\r\n        options.borderWidth = 0;\r\n      }\r\n      me.updateElement(line, undefined, {\r\n        animated: !animationsDisabled,\r\n        options\r\n      }, mode);\r\n    }\r\n    me.updateElements(points, start, count, mode);\r\n  }\r\n  updateElements(points, start, count, mode) {\r\n    const me = this;\r\n    const reset = mode === 'reset';\r\n    const {xScale, yScale, _stacked} = me._cachedMeta;\r\n    const firstOpts = me.resolveDataElementOptions(start, mode);\r\n    const sharedOptions = me.getSharedOptions(firstOpts);\r\n    const includeOptions = me.includeOptions(mode, sharedOptions);\r\n    const spanGaps = me.options.spanGaps;\r\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\r\n    const directUpdate = me.chart._animationsDisabled || reset || mode === 'none';\r\n    let prevParsed = start > 0 && me.getParsed(start - 1);\r\n    for (let i = start; i < start + count; ++i) {\r\n      const point = points[i];\r\n      const parsed = me.getParsed(i);\r\n      const properties = directUpdate ? point : {};\r\n      const x = properties.x = xScale.getPixelForValue(parsed.x, i);\r\n      const y = properties.y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(_stacked ? me.applyStack(yScale, parsed, _stacked) : parsed.y, i);\r\n      properties.skip = isNaN(x) || isNaN(y);\r\n      properties.stop = i > 0 && (parsed.x - prevParsed.x) > maxGapLength;\r\n      if (includeOptions) {\r\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, mode);\r\n      }\r\n      if (!directUpdate) {\r\n        me.updateElement(point, i, properties, mode);\r\n      }\r\n      prevParsed = parsed;\r\n    }\r\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\r\n  }\r\n  getMaxOverflow() {\r\n    const me = this;\r\n    const meta = me._cachedMeta;\r\n    const dataset = meta.dataset;\r\n    const border = dataset.options && dataset.options.borderWidth || 0;\r\n    const data = meta.data || [];\r\n    if (!data.length) {\r\n      return border;\r\n    }\r\n    const firstPoint = data[0].size(me.resolveDataElementOptions(0));\r\n    const lastPoint = data[data.length - 1].size(me.resolveDataElementOptions(data.length - 1));\r\n    return Math.max(border, firstPoint, lastPoint) / 2;\r\n  }\r\n  draw() {\r\n    this._cachedMeta.dataset.updateControlPoints(this.chart.chartArea);\r\n    super.draw();\r\n  }\r\n}\r\nLineController.id = 'line';\r\nLineController.defaults = {\r\n  datasetElementType: 'line',\r\n  dataElementType: 'point',\r\n  showLine: true,\r\n  spanGaps: false,\r\n};\r\nLineController.overrides = {\r\n  scales: {\r\n    _index_: {\r\n      type: 'category',\r\n    },\r\n    _value_: {\r\n      type: 'linear',\r\n    },\r\n  }\r\n};\r\nfunction getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\r\n  const pointCount = points.length;\r\n  let start = 0;\r\n  let count = pointCount;\r\n  if (meta._sorted) {\r\n    const {iScale, _parsed} = meta;\r\n    const axis = iScale.axis;\r\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\r\n    if (minDefined) {\r\n      start = _limitValue(Math.min(\r\n        _lookupByKey(_parsed, iScale.axis, min).lo,\r\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\r\n      0, pointCount - 1);\r\n    }\r\n    if (maxDefined) {\r\n      count = _limitValue(Math.max(\r\n        _lookupByKey(_parsed, iScale.axis, max).hi + 1,\r\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max)).hi + 1),\r\n      start, pointCount) - start;\r\n    } else {\r\n      count = pointCount - start;\r\n    }\r\n  }\r\n  return {start, count};\r\n}\r\nfunction scaleRangesChanged(meta) {\r\n  const {xScale, yScale, _scaleRanges} = meta;\r\n  const newRanges = {\r\n    xmin: xScale.min,\r\n    xmax: xScale.max,\r\n    ymin: yScale.min,\r\n    ymax: yScale.max\r\n  };\r\n  if (!_scaleRanges) {\r\n    meta._scaleRanges = newRanges;\r\n    return true;\r\n  }\r\n  const changed = _scaleRanges.xmin !== xScale.min\r\n\t\t|| _scaleRanges.xmax !== xScale.max\r\n\t\t|| _scaleRanges.ymin !== yScale.min\r\n\t\t|| _scaleRanges.ymax !== yScale.max;\r\n  Object.assign(_scaleRanges, newRanges);\r\n  return changed;\r\n}\r\n\r\nclass PolarAreaController extends DatasetController {\r\n  constructor(chart, datasetIndex) {\r\n    super(chart, datasetIndex);\r\n    this.innerRadius = undefined;\r\n    this.outerRadius = undefined;\r\n  }\r\n  update(mode) {\r\n    const arcs = this._cachedMeta.data;\r\n    this._updateRadius();\r\n    this.updateElements(arcs, 0, arcs.length, mode);\r\n  }\r\n  _updateRadius() {\r\n    const me = this;\r\n    const chart = me.chart;\r\n    const chartArea = chart.chartArea;\r\n    const opts = chart.options;\r\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\r\n    const outerRadius = Math.max(minSize / 2, 0);\r\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\r\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\r\n    me.outerRadius = outerRadius - (radiusLength * me.index);\r\n    me.innerRadius = me.outerRadius - radiusLength;\r\n  }\r\n  updateElements(arcs, start, count, mode) {\r\n    const me = this;\r\n    const reset = mode === 'reset';\r\n    const chart = me.chart;\r\n    const dataset = me.getDataset();\r\n    const opts = chart.options;\r\n    const animationOpts = opts.animation;\r\n    const scale = me._cachedMeta.rScale;\r\n    const centerX = scale.xCenter;\r\n    const centerY = scale.yCenter;\r\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\r\n    let angle = datasetStartAngle;\r\n    let i;\r\n    const defaultAngle = 360 / me.countVisibleElements();\r\n    for (i = 0; i < start; ++i) {\r\n      angle += me._computeAngle(i, mode, defaultAngle);\r\n    }\r\n    for (i = start; i < start + count; i++) {\r\n      const arc = arcs[i];\r\n      let startAngle = angle;\r\n      let endAngle = angle + me._computeAngle(i, mode, defaultAngle);\r\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(dataset.data[i]) : 0;\r\n      angle = endAngle;\r\n      if (reset) {\r\n        if (animationOpts.animateScale) {\r\n          outerRadius = 0;\r\n        }\r\n        if (animationOpts.animateRotate) {\r\n          startAngle = endAngle = datasetStartAngle;\r\n        }\r\n      }\r\n      const properties = {\r\n        x: centerX,\r\n        y: centerY,\r\n        innerRadius: 0,\r\n        outerRadius,\r\n        startAngle,\r\n        endAngle,\r\n        options: me.resolveDataElementOptions(i, mode)\r\n      };\r\n      me.updateElement(arc, i, properties, mode);\r\n    }\r\n  }\r\n  countVisibleElements() {\r\n    const dataset = this.getDataset();\r\n    const meta = this._cachedMeta;\r\n    let count = 0;\r\n    meta.data.forEach((element, index) => {\r\n      if (!isNaN(dataset.data[index]) && this.chart.getDataVisibility(index)) {\r\n        count++;\r\n      }\r\n    });\r\n    return count;\r\n  }\r\n  _computeAngle(index, mode, defaultAngle) {\r\n    return this.chart.getDataVisibility(index)\r\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\r\n      : 0;\r\n  }\r\n}\r\nPolarAreaController.id = 'polarArea';\r\nPolarAreaController.defaults = {\r\n  dataElementType: 'arc',\r\n  animation: {\r\n    animateRotate: true,\r\n    animateScale: true\r\n  },\r\n  animations: {\r\n    numbers: {\r\n      type: 'number',\r\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\r\n    },\r\n  },\r\n  indexAxis: 'r',\r\n  startAngle: 0,\r\n};\r\nPolarAreaController.overrides = {\r\n  aspectRatio: 1,\r\n  plugins: {\r\n    legend: {\r\n      labels: {\r\n        generateLabels(chart) {\r\n          const data = chart.data;\r\n          if (data.labels.length && data.datasets.length) {\r\n            return data.labels.map((label, i) => {\r\n              const meta = chart.getDatasetMeta(0);\r\n              const style = meta.controller.getStyle(i);\r\n              return {\r\n                text: label,\r\n                fillStyle: style.backgroundColor,\r\n                strokeStyle: style.borderColor,\r\n                lineWidth: style.borderWidth,\r\n                hidden: !chart.getDataVisibility(i),\r\n                index: i\r\n              };\r\n            });\r\n          }\r\n          return [];\r\n        }\r\n      },\r\n      onClick(e, legendItem, legend) {\r\n        legend.chart.toggleDataVisibility(legendItem.index);\r\n        legend.chart.update();\r\n      }\r\n    },\r\n    tooltip: {\r\n      callbacks: {\r\n        title() {\r\n          return '';\r\n        },\r\n        label(context) {\r\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\r\n        }\r\n      }\r\n    }\r\n  },\r\n  scales: {\r\n    r: {\r\n      type: 'radialLinear',\r\n      angleLines: {\r\n        display: false\r\n      },\r\n      beginAtZero: true,\r\n      grid: {\r\n        circular: true\r\n      },\r\n      pointLabels: {\r\n        display: false\r\n      },\r\n      startAngle: 0\r\n    }\r\n  }\r\n};\r\n\r\nclass PieController extends DoughnutController {\r\n}\r\nPieController.id = 'pie';\r\nPieController.defaults = {\r\n  cutout: 0,\r\n  rotation: 0,\r\n  circumference: 360,\r\n  radius: '100%'\r\n};\r\n\r\nclass RadarController extends DatasetController {\r\n  getLabelAndValue(index) {\r\n    const me = this;\r\n    const vScale = me._cachedMeta.vScale;\r\n    const parsed = me.getParsed(index);\r\n    return {\r\n      label: vScale.getLabels()[index],\r\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\r\n    };\r\n  }\r\n  update(mode) {\r\n    const me = this;\r\n    const meta = me._cachedMeta;\r\n    const line = meta.dataset;\r\n    const points = meta.data || [];\r\n    const labels = meta.iScale.getLabels();\r\n    line.points = points;\r\n    if (mode !== 'resize') {\r\n      const options = me.resolveDatasetElementOptions(mode);\r\n      if (!me.options.showLine) {\r\n        options.borderWidth = 0;\r\n      }\r\n      const properties = {\r\n        _loop: true,\r\n        _fullLoop: labels.length === points.length,\r\n        options\r\n      };\r\n      me.updateElement(line, undefined, properties, mode);\r\n    }\r\n    me.updateElements(points, 0, points.length, mode);\r\n  }\r\n  updateElements(points, start, count, mode) {\r\n    const me = this;\r\n    const dataset = me.getDataset();\r\n    const scale = me._cachedMeta.rScale;\r\n    const reset = mode === 'reset';\r\n    for (let i = start; i < start + count; i++) {\r\n      const point = points[i];\r\n      const options = me.resolveDataElementOptions(i, mode);\r\n      const pointPosition = scale.getPointPositionForValue(i, dataset.data[i]);\r\n      const x = reset ? scale.xCenter : pointPosition.x;\r\n      const y = reset ? scale.yCenter : pointPosition.y;\r\n      const properties = {\r\n        x,\r\n        y,\r\n        angle: pointPosition.angle,\r\n        skip: isNaN(x) || isNaN(y),\r\n        options\r\n      };\r\n      me.updateElement(point, i, properties, mode);\r\n    }\r\n  }\r\n}\r\nRadarController.id = 'radar';\r\nRadarController.defaults = {\r\n  datasetElementType: 'line',\r\n  dataElementType: 'point',\r\n  indexAxis: 'r',\r\n  showLine: true,\r\n  elements: {\r\n    line: {\r\n      fill: 'start'\r\n    }\r\n  },\r\n};\r\nRadarController.overrides = {\r\n  aspectRatio: 1,\r\n  scales: {\r\n    r: {\r\n      type: 'radialLinear',\r\n    }\r\n  }\r\n};\r\n\r\nclass ScatterController extends LineController {\r\n}\r\nScatterController.id = 'scatter';\r\nScatterController.defaults = {\r\n  showLine: false,\r\n  fill: false\r\n};\r\nScatterController.overrides = {\r\n  interaction: {\r\n    mode: 'point'\r\n  },\r\n  plugins: {\r\n    tooltip: {\r\n      callbacks: {\r\n        title() {\r\n          return '';\r\n        },\r\n        label(item) {\r\n          return '(' + item.label + ', ' + item.formattedValue + ')';\r\n        }\r\n      }\r\n    }\r\n  },\r\n  scales: {\r\n    x: {\r\n      type: 'linear'\r\n    },\r\n    y: {\r\n      type: 'linear'\r\n    }\r\n  }\r\n};\r\n\r\nvar controllers = /*#__PURE__*/Object.freeze({\r\n__proto__: null,\r\nBarController: BarController,\r\nBubbleController: BubbleController,\r\nDoughnutController: DoughnutController,\r\nLineController: LineController,\r\nPolarAreaController: PolarAreaController,\r\nPieController: PieController,\r\nRadarController: RadarController,\r\nScatterController: ScatterController\r\n});\r\n\r\nfunction abstract() {\r\n  throw new Error('This method is not implemented: either no adapter can be found or an incomplete integration was provided.');\r\n}\r\nclass DateAdapter {\r\n  constructor(options) {\r\n    this.options = options || {};\r\n  }\r\n  formats() {\r\n    return abstract();\r\n  }\r\n  parse(value, format) {\r\n    return abstract();\r\n  }\r\n  format(timestamp, format) {\r\n    return abstract();\r\n  }\r\n  add(timestamp, amount, unit) {\r\n    return abstract();\r\n  }\r\n  diff(a, b, unit) {\r\n    return abstract();\r\n  }\r\n  startOf(timestamp, unit, weekday) {\r\n    return abstract();\r\n  }\r\n  endOf(timestamp, unit) {\r\n    return abstract();\r\n  }\r\n}\r\nDateAdapter.override = function(members) {\r\n  Object.assign(DateAdapter.prototype, members);\r\n};\r\nvar adapters = {\r\n  _date: DateAdapter\r\n};\r\n\r\nfunction getRelativePosition(e, chart) {\r\n  if ('native' in e) {\r\n    return {\r\n      x: e.x,\r\n      y: e.y\r\n    };\r\n  }\r\n  return getRelativePosition$1(e, chart);\r\n}\r\nfunction evaluateAllVisibleItems(chart, handler) {\r\n  const metasets = chart.getSortedVisibleDatasetMetas();\r\n  let index, data, element;\r\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\r\n    ({index, data} = metasets[i]);\r\n    for (let j = 0, jlen = data.length; j < jlen; ++j) {\r\n      element = data[j];\r\n      if (!element.skip) {\r\n        handler(element, index, j);\r\n      }\r\n    }\r\n  }\r\n}\r\nfunction binarySearch(metaset, axis, value, intersect) {\r\n  const {controller, data, _sorted} = metaset;\r\n  const iScale = controller._cachedMeta.iScale;\r\n  if (iScale && axis === iScale.axis && _sorted && data.length) {\r\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\r\n    if (!intersect) {\r\n      return lookupMethod(data, axis, value);\r\n    } else if (controller._sharedOptions) {\r\n      const el = data[0];\r\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\r\n      if (range) {\r\n        const start = lookupMethod(data, axis, value - range);\r\n        const end = lookupMethod(data, axis, value + range);\r\n        return {lo: start.lo, hi: end.hi};\r\n      }\r\n    }\r\n  }\r\n  return {lo: 0, hi: data.length - 1};\r\n}\r\nfunction optimizedEvaluateItems(chart, axis, position, handler, intersect) {\r\n  const metasets = chart.getSortedVisibleDatasetMetas();\r\n  const value = position[axis];\r\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\r\n    const {index, data} = metasets[i];\r\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\r\n    for (let j = lo; j <= hi; ++j) {\r\n      const element = data[j];\r\n      if (!element.skip) {\r\n        handler(element, index, j);\r\n      }\r\n    }\r\n  }\r\n}\r\nfunction getDistanceMetricForAxis(axis) {\r\n  const useX = axis.indexOf('x') !== -1;\r\n  const useY = axis.indexOf('y') !== -1;\r\n  return function(pt1, pt2) {\r\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\r\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\r\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\r\n  };\r\n}\r\nfunction getIntersectItems(chart, position, axis, useFinalPosition) {\r\n  const items = [];\r\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\r\n    return items;\r\n  }\r\n  const evaluationFunc = function(element, datasetIndex, index) {\r\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\r\n      items.push({element, datasetIndex, index});\r\n    }\r\n  };\r\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc, true);\r\n  return items;\r\n}\r\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition) {\r\n  const distanceMetric = getDistanceMetricForAxis(axis);\r\n  let minDistance = Number.POSITIVE_INFINITY;\r\n  let items = [];\r\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\r\n    return items;\r\n  }\r\n  const evaluationFunc = function(element, datasetIndex, index) {\r\n    if (intersect && !element.inRange(position.x, position.y, useFinalPosition)) {\r\n      return;\r\n    }\r\n    const center = element.getCenterPoint(useFinalPosition);\r\n    const distance = distanceMetric(position, center);\r\n    if (distance < minDistance) {\r\n      items = [{element, datasetIndex, index}];\r\n      minDistance = distance;\r\n    } else if (distance === minDistance) {\r\n      items.push({element, datasetIndex, index});\r\n    }\r\n  };\r\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc);\r\n  return items;\r\n}\r\nfunction getAxisItems(chart, e, options, useFinalPosition) {\r\n  const position = getRelativePosition(e, chart);\r\n  const items = [];\r\n  const axis = options.axis;\r\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\r\n  let intersectsItem = false;\r\n  evaluateAllVisibleItems(chart, (element, datasetIndex, index) => {\r\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\r\n      items.push({element, datasetIndex, index});\r\n    }\r\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\r\n      intersectsItem = true;\r\n    }\r\n  });\r\n  if (options.intersect && !intersectsItem) {\r\n    return [];\r\n  }\r\n  return items;\r\n}\r\nvar Interaction = {\r\n  modes: {\r\n    index(chart, e, options, useFinalPosition) {\r\n      const position = getRelativePosition(e, chart);\r\n      const axis = options.axis || 'x';\r\n      const items = options.intersect\r\n        ? getIntersectItems(chart, position, axis, useFinalPosition)\r\n        : getNearestItems(chart, position, axis, false, useFinalPosition);\r\n      const elements = [];\r\n      if (!items.length) {\r\n        return [];\r\n      }\r\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\r\n        const index = items[0].index;\r\n        const element = meta.data[index];\r\n        if (element && !element.skip) {\r\n          elements.push({element, datasetIndex: meta.index, index});\r\n        }\r\n      });\r\n      return elements;\r\n    },\r\n    dataset(chart, e, options, useFinalPosition) {\r\n      const position = getRelativePosition(e, chart);\r\n      const axis = options.axis || 'xy';\r\n      let items = options.intersect\r\n        ? getIntersectItems(chart, position, axis, useFinalPosition) :\r\n        getNearestItems(chart, position, axis, false, useFinalPosition);\r\n      if (items.length > 0) {\r\n        const datasetIndex = items[0].datasetIndex;\r\n        const data = chart.getDatasetMeta(datasetIndex).data;\r\n        items = [];\r\n        for (let i = 0; i < data.length; ++i) {\r\n          items.push({element: data[i], datasetIndex, index: i});\r\n        }\r\n      }\r\n      return items;\r\n    },\r\n    point(chart, e, options, useFinalPosition) {\r\n      const position = getRelativePosition(e, chart);\r\n      const axis = options.axis || 'xy';\r\n      return getIntersectItems(chart, position, axis, useFinalPosition);\r\n    },\r\n    nearest(chart, e, options, useFinalPosition) {\r\n      const position = getRelativePosition(e, chart);\r\n      const axis = options.axis || 'xy';\r\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition);\r\n    },\r\n    x(chart, e, options, useFinalPosition) {\r\n      options.axis = 'x';\r\n      return getAxisItems(chart, e, options, useFinalPosition);\r\n    },\r\n    y(chart, e, options, useFinalPosition) {\r\n      options.axis = 'y';\r\n      return getAxisItems(chart, e, options, useFinalPosition);\r\n    }\r\n  }\r\n};\r\n\r\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\r\nfunction filterByPosition(array, position) {\r\n  return array.filter(v => v.pos === position);\r\n}\r\nfunction filterDynamicPositionByAxis(array, axis) {\r\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\r\n}\r\nfunction sortByWeight(array, reverse) {\r\n  return array.sort((a, b) => {\r\n    const v0 = reverse ? b : a;\r\n    const v1 = reverse ? a : b;\r\n    return v0.weight === v1.weight ?\r\n      v0.index - v1.index :\r\n      v0.weight - v1.weight;\r\n  });\r\n}\r\nfunction wrapBoxes(boxes) {\r\n  const layoutBoxes = [];\r\n  let i, ilen, box;\r\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\r\n    box = boxes[i];\r\n    layoutBoxes.push({\r\n      index: i,\r\n      box,\r\n      pos: box.position,\r\n      horizontal: box.isHorizontal(),\r\n      weight: box.weight\r\n    });\r\n  }\r\n  return layoutBoxes;\r\n}\r\nfunction setLayoutDims(layouts, params) {\r\n  let i, ilen, layout;\r\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\r\n    layout = layouts[i];\r\n    if (layout.horizontal) {\r\n      layout.width = layout.box.fullSize && params.availableWidth;\r\n      layout.height = params.hBoxMaxHeight;\r\n    } else {\r\n      layout.width = params.vBoxMaxWidth;\r\n      layout.height = layout.box.fullSize && params.availableHeight;\r\n    }\r\n  }\r\n}\r\nfunction buildLayoutBoxes(boxes) {\r\n  const layoutBoxes = wrapBoxes(boxes);\r\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\r\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\r\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\r\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\r\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\r\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\r\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\r\n  return {\r\n    fullSize,\r\n    leftAndTop: left.concat(top),\r\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\r\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\r\n    vertical: left.concat(right).concat(centerVertical),\r\n    horizontal: top.concat(bottom).concat(centerHorizontal)\r\n  };\r\n}\r\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\r\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\r\n}\r\nfunction updateMaxPadding(maxPadding, boxPadding) {\r\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\r\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\r\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\r\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\r\n}\r\nfunction updateDims(chartArea, params, layout) {\r\n  const box = layout.box;\r\n  const maxPadding = chartArea.maxPadding;\r\n  if (isObject(layout.pos)) {\r\n    return {same: false, other: false};\r\n  }\r\n  if (layout.size) {\r\n    chartArea[layout.pos] -= layout.size;\r\n  }\r\n  layout.size = layout.horizontal ? box.height : box.width;\r\n  chartArea[layout.pos] += layout.size;\r\n  if (box.getPadding) {\r\n    updateMaxPadding(maxPadding, box.getPadding());\r\n  }\r\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\r\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\r\n  const widthChanged = newWidth !== chartArea.w;\r\n  const heightChanged = newHeight !== chartArea.h;\r\n  chartArea.w = newWidth;\r\n  chartArea.h = newHeight;\r\n  return layout.horizontal\r\n    ? {same: widthChanged, other: heightChanged}\r\n    : {same: heightChanged, other: widthChanged};\r\n}\r\nfunction handleMaxPadding(chartArea) {\r\n  const maxPadding = chartArea.maxPadding;\r\n  function updatePos(pos) {\r\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\r\n    chartArea[pos] += change;\r\n    return change;\r\n  }\r\n  chartArea.y += updatePos('top');\r\n  chartArea.x += updatePos('left');\r\n  updatePos('right');\r\n  updatePos('bottom');\r\n}\r\nfunction getMargins(horizontal, chartArea) {\r\n  const maxPadding = chartArea.maxPadding;\r\n  function marginForPositions(positions) {\r\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\r\n    positions.forEach((pos) => {\r\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\r\n    });\r\n    return margin;\r\n  }\r\n  return horizontal\r\n    ? marginForPositions(['left', 'right'])\r\n    : marginForPositions(['top', 'bottom']);\r\n}\r\nfunction fitBoxes(boxes, chartArea, params) {\r\n  const refitBoxes = [];\r\n  let i, ilen, layout, box, refit, changed;\r\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\r\n    layout = boxes[i];\r\n    box = layout.box;\r\n    box.update(\r\n      layout.width || chartArea.w,\r\n      layout.height || chartArea.h,\r\n      getMargins(layout.horizontal, chartArea)\r\n    );\r\n    const {same, other} = updateDims(chartArea, params, layout);\r\n    refit |= same && refitBoxes.length;\r\n    changed = changed || other;\r\n    if (!box.fullSize) {\r\n      refitBoxes.push(layout);\r\n    }\r\n  }\r\n  return refit && fitBoxes(refitBoxes, chartArea, params) || changed;\r\n}\r\nfunction placeBoxes(boxes, chartArea, params) {\r\n  const userPadding = params.padding;\r\n  let x = chartArea.x;\r\n  let y = chartArea.y;\r\n  let i, ilen, layout, box;\r\n  for (i = 0, ilen = boxes.length; i < ilen; ++i) {\r\n    layout = boxes[i];\r\n    box = layout.box;\r\n    if (layout.horizontal) {\r\n      box.left = box.fullSize ? userPadding.left : chartArea.left;\r\n      box.right = box.fullSize ? params.outerWidth - userPadding.right : chartArea.left + chartArea.w;\r\n      box.top = y;\r\n      box.bottom = y + box.height;\r\n      box.width = box.right - box.left;\r\n      y = box.bottom;\r\n    } else {\r\n      box.left = x;\r\n      box.right = x + box.width;\r\n      box.top = box.fullSize ? userPadding.top : chartArea.top;\r\n      box.bottom = box.fullSize ? params.outerHeight - userPadding.right : chartArea.top + chartArea.h;\r\n      box.height = box.bottom - box.top;\r\n      x = box.right;\r\n    }\r\n  }\r\n  chartArea.x = x;\r\n  chartArea.y = y;\r\n}\r\ndefaults.set('layout', {\r\n  padding: {\r\n    top: 0,\r\n    right: 0,\r\n    bottom: 0,\r\n    left: 0\r\n  }\r\n});\r\nvar layouts = {\r\n  addBox(chart, item) {\r\n    if (!chart.boxes) {\r\n      chart.boxes = [];\r\n    }\r\n    item.fullSize = item.fullSize || false;\r\n    item.position = item.position || 'top';\r\n    item.weight = item.weight || 0;\r\n    item._layers = item._layers || function() {\r\n      return [{\r\n        z: 0,\r\n        draw(chartArea) {\r\n          item.draw(chartArea);\r\n        }\r\n      }];\r\n    };\r\n    chart.boxes.push(item);\r\n  },\r\n  removeBox(chart, layoutItem) {\r\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\r\n    if (index !== -1) {\r\n      chart.boxes.splice(index, 1);\r\n    }\r\n  },\r\n  configure(chart, item, options) {\r\n    item.fullSize = options.fullSize;\r\n    item.position = options.position;\r\n    item.weight = options.weight;\r\n  },\r\n  update(chart, width, height, minPadding) {\r\n    if (!chart) {\r\n      return;\r\n    }\r\n    const padding = toPadding(chart.options.layout.padding);\r\n    const availableWidth = width - padding.width;\r\n    const availableHeight = height - padding.height;\r\n    const boxes = buildLayoutBoxes(chart.boxes);\r\n    const verticalBoxes = boxes.vertical;\r\n    const horizontalBoxes = boxes.horizontal;\r\n    each(chart.boxes, box => {\r\n      if (typeof box.beforeLayout === 'function') {\r\n        box.beforeLayout();\r\n      }\r\n    });\r\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\r\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\r\n    const params = Object.freeze({\r\n      outerWidth: width,\r\n      outerHeight: height,\r\n      padding,\r\n      availableWidth,\r\n      availableHeight,\r\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\r\n      hBoxMaxHeight: availableHeight / 2\r\n    });\r\n    const maxPadding = Object.assign({}, padding);\r\n    updateMaxPadding(maxPadding, toPadding(minPadding));\r\n    const chartArea = Object.assign({\r\n      maxPadding,\r\n      w: availableWidth,\r\n      h: availableHeight,\r\n      x: padding.left,\r\n      y: padding.top\r\n    }, padding);\r\n    setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\r\n    fitBoxes(boxes.fullSize, chartArea, params);\r\n    fitBoxes(verticalBoxes, chartArea, params);\r\n    if (fitBoxes(horizontalBoxes, chartArea, params)) {\r\n      fitBoxes(verticalBoxes, chartArea, params);\r\n    }\r\n    handleMaxPadding(chartArea);\r\n    placeBoxes(boxes.leftAndTop, chartArea, params);\r\n    chartArea.x += chartArea.w;\r\n    chartArea.y += chartArea.h;\r\n    placeBoxes(boxes.rightAndBottom, chartArea, params);\r\n    chart.chartArea = {\r\n      left: chartArea.left,\r\n      top: chartArea.top,\r\n      right: chartArea.left + chartArea.w,\r\n      bottom: chartArea.top + chartArea.h,\r\n      height: chartArea.h,\r\n      width: chartArea.w,\r\n    };\r\n    each(boxes.chartArea, (layout) => {\r\n      const box = layout.box;\r\n      Object.assign(box, chart.chartArea);\r\n      box.update(chartArea.w, chartArea.h);\r\n    });\r\n  }\r\n};\r\n\r\nclass BasePlatform {\r\n  acquireContext(canvas, aspectRatio) {}\r\n  releaseContext(context) {\r\n    return false;\r\n  }\r\n  addEventListener(chart, type, listener) {}\r\n  removeEventListener(chart, type, listener) {}\r\n  getDevicePixelRatio() {\r\n    return 1;\r\n  }\r\n  getMaximumSize(element, width, height, aspectRatio) {\r\n    width = Math.max(0, width || element.width);\r\n    height = height || element.height;\r\n    return {\r\n      width,\r\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\r\n    };\r\n  }\r\n  isAttached(canvas) {\r\n    return true;\r\n  }\r\n}\r\n\r\nclass BasicPlatform extends BasePlatform {\r\n  acquireContext(item) {\r\n    return item && item.getContext && item.getContext('2d') || null;\r\n  }\r\n}\r\n\r\nconst EXPANDO_KEY = '$chartjs';\r\nconst EVENT_TYPES = {\r\n  touchstart: 'mousedown',\r\n  touchmove: 'mousemove',\r\n  touchend: 'mouseup',\r\n  pointerenter: 'mouseenter',\r\n  pointerdown: 'mousedown',\r\n  pointermove: 'mousemove',\r\n  pointerup: 'mouseup',\r\n  pointerleave: 'mouseout',\r\n  pointerout: 'mouseout'\r\n};\r\nconst isNullOrEmpty = value => value === null || value === '';\r\nfunction initCanvas(canvas, aspectRatio) {\r\n  const style = canvas.style;\r\n  const renderHeight = canvas.getAttribute('height');\r\n  const renderWidth = canvas.getAttribute('width');\r\n  canvas[EXPANDO_KEY] = {\r\n    initial: {\r\n      height: renderHeight,\r\n      width: renderWidth,\r\n      style: {\r\n        display: style.display,\r\n        height: style.height,\r\n        width: style.width\r\n      }\r\n    }\r\n  };\r\n  style.display = style.display || 'block';\r\n  style.boxSizing = style.boxSizing || 'border-box';\r\n  if (isNullOrEmpty(renderWidth)) {\r\n    const displayWidth = readUsedSize(canvas, 'width');\r\n    if (displayWidth !== undefined) {\r\n      canvas.width = displayWidth;\r\n    }\r\n  }\r\n  if (isNullOrEmpty(renderHeight)) {\r\n    if (canvas.style.height === '') {\r\n      canvas.height = canvas.width / (aspectRatio || 2);\r\n    } else {\r\n      const displayHeight = readUsedSize(canvas, 'height');\r\n      if (displayHeight !== undefined) {\r\n        canvas.height = displayHeight;\r\n      }\r\n    }\r\n  }\r\n  return canvas;\r\n}\r\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\r\nfunction addListener(node, type, listener) {\r\n  node.addEventListener(type, listener, eventListenerOptions);\r\n}\r\nfunction removeListener(chart, type, listener) {\r\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\r\n}\r\nfunction fromNativeEvent(event, chart) {\r\n  const type = EVENT_TYPES[event.type] || event.type;\r\n  const {x, y} = getRelativePosition$1(event, chart);\r\n  return {\r\n    type,\r\n    chart,\r\n    native: event,\r\n    x: x !== undefined ? x : null,\r\n    y: y !== undefined ? y : null,\r\n  };\r\n}\r\nfunction createAttachObserver(chart, type, listener) {\r\n  const canvas = chart.canvas;\r\n  const container = canvas && _getParentNode(canvas);\r\n  const element = container || canvas;\r\n  const observer = new MutationObserver(entries => {\r\n    const parent = _getParentNode(element);\r\n    entries.forEach(entry => {\r\n      for (let i = 0; i < entry.addedNodes.length; i++) {\r\n        const added = entry.addedNodes[i];\r\n        if (added === element || added === parent) {\r\n          listener(entry.target);\r\n        }\r\n      }\r\n    });\r\n  });\r\n  observer.observe(document, {childList: true, subtree: true});\r\n  return observer;\r\n}\r\nfunction createDetachObserver(chart, type, listener) {\r\n  const canvas = chart.canvas;\r\n  const container = canvas && _getParentNode(canvas);\r\n  if (!container) {\r\n    return;\r\n  }\r\n  const observer = new MutationObserver(entries => {\r\n    entries.forEach(entry => {\r\n      for (let i = 0; i < entry.removedNodes.length; i++) {\r\n        if (entry.removedNodes[i] === canvas) {\r\n          listener();\r\n          break;\r\n        }\r\n      }\r\n    });\r\n  });\r\n  observer.observe(container, {childList: true});\r\n  return observer;\r\n}\r\nconst drpListeningCharts = new Map();\r\nlet oldDevicePixelRatio = 0;\r\nfunction onWindowResize() {\r\n  const dpr = window.devicePixelRatio;\r\n  if (dpr === oldDevicePixelRatio) {\r\n    return;\r\n  }\r\n  oldDevicePixelRatio = dpr;\r\n  drpListeningCharts.forEach((resize, chart) => {\r\n    if (chart.currentDevicePixelRatio !== dpr) {\r\n      resize();\r\n    }\r\n  });\r\n}\r\nfunction listenDevicePixelRatioChanges(chart, resize) {\r\n  if (!drpListeningCharts.size) {\r\n    window.addEventListener('resize', onWindowResize);\r\n  }\r\n  drpListeningCharts.set(chart, resize);\r\n}\r\nfunction unlistenDevicePixelRatioChanges(chart) {\r\n  drpListeningCharts.delete(chart);\r\n  if (!drpListeningCharts.size) {\r\n    window.removeEventListener('resize', onWindowResize);\r\n  }\r\n}\r\nfunction createResizeObserver(chart, type, listener) {\r\n  const canvas = chart.canvas;\r\n  const container = canvas && _getParentNode(canvas);\r\n  if (!container) {\r\n    return;\r\n  }\r\n  const resize = throttled((width, height) => {\r\n    const w = container.clientWidth;\r\n    listener(width, height);\r\n    if (w < container.clientWidth) {\r\n      listener();\r\n    }\r\n  }, window);\r\n  const observer = new ResizeObserver(entries => {\r\n    const entry = entries[0];\r\n    const width = entry.contentRect.width;\r\n    const height = entry.contentRect.height;\r\n    if (width === 0 && height === 0) {\r\n      return;\r\n    }\r\n    resize(width, height);\r\n  });\r\n  observer.observe(container);\r\n  listenDevicePixelRatioChanges(chart, resize);\r\n  return observer;\r\n}\r\nfunction releaseObserver(chart, type, observer) {\r\n  if (observer) {\r\n    observer.disconnect();\r\n  }\r\n  if (type === 'resize') {\r\n    unlistenDevicePixelRatioChanges(chart);\r\n  }\r\n}\r\nfunction createProxyAndListen(chart, type, listener) {\r\n  const canvas = chart.canvas;\r\n  const proxy = throttled((event) => {\r\n    if (chart.ctx !== null) {\r\n      listener(fromNativeEvent(event, chart));\r\n    }\r\n  }, chart, (args) => {\r\n    const event = args[0];\r\n    return [event, event.offsetX, event.offsetY];\r\n  });\r\n  addListener(canvas, type, proxy);\r\n  return proxy;\r\n}\r\nclass DomPlatform extends BasePlatform {\r\n  acquireContext(canvas, aspectRatio) {\r\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\r\n    if (context && context.canvas === canvas) {\r\n      initCanvas(canvas, aspectRatio);\r\n      return context;\r\n    }\r\n    return null;\r\n  }\r\n  releaseContext(context) {\r\n    const canvas = context.canvas;\r\n    if (!canvas[EXPANDO_KEY]) {\r\n      return false;\r\n    }\r\n    const initial = canvas[EXPANDO_KEY].initial;\r\n    ['height', 'width'].forEach((prop) => {\r\n      const value = initial[prop];\r\n      if (isNullOrUndef(value)) {\r\n        canvas.removeAttribute(prop);\r\n      } else {\r\n        canvas.setAttribute(prop, value);\r\n      }\r\n    });\r\n    const style = initial.style || {};\r\n    Object.keys(style).forEach((key) => {\r\n      canvas.style[key] = style[key];\r\n    });\r\n    canvas.width = canvas.width;\r\n    delete canvas[EXPANDO_KEY];\r\n    return true;\r\n  }\r\n  addEventListener(chart, type, listener) {\r\n    this.removeEventListener(chart, type);\r\n    const proxies = chart.$proxies || (chart.$proxies = {});\r\n    const handlers = {\r\n      attach: createAttachObserver,\r\n      detach: createDetachObserver,\r\n      resize: createResizeObserver\r\n    };\r\n    const handler = handlers[type] || createProxyAndListen;\r\n    proxies[type] = handler(chart, type, listener);\r\n  }\r\n  removeEventListener(chart, type) {\r\n    const proxies = chart.$proxies || (chart.$proxies = {});\r\n    const proxy = proxies[type];\r\n    if (!proxy) {\r\n      return;\r\n    }\r\n    const handlers = {\r\n      attach: releaseObserver,\r\n      detach: releaseObserver,\r\n      resize: releaseObserver\r\n    };\r\n    const handler = handlers[type] || removeListener;\r\n    handler(chart, type, proxy);\r\n    proxies[type] = undefined;\r\n  }\r\n  getDevicePixelRatio() {\r\n    return window.devicePixelRatio;\r\n  }\r\n  getMaximumSize(canvas, width, height, aspectRatio) {\r\n    return getMaximumSize(canvas, width, height, aspectRatio);\r\n  }\r\n  isAttached(canvas) {\r\n    const container = _getParentNode(canvas);\r\n    return !!(container && _getParentNode(container));\r\n  }\r\n}\r\n\r\nclass Element {\r\n  constructor() {\r\n    this.x = undefined;\r\n    this.y = undefined;\r\n    this.active = false;\r\n    this.options = undefined;\r\n    this.$animations = undefined;\r\n  }\r\n  tooltipPosition(useFinalPosition) {\r\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\r\n    return {x, y};\r\n  }\r\n  hasValue() {\r\n    return isNumber(this.x) && isNumber(this.y);\r\n  }\r\n  getProps(props, final) {\r\n    const me = this;\r\n    const anims = this.$animations;\r\n    if (!final || !anims) {\r\n      return me;\r\n    }\r\n    const ret = {};\r\n    props.forEach(prop => {\r\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : me[prop];\r\n    });\r\n    return ret;\r\n  }\r\n}\r\nElement.defaults = {};\r\nElement.defaultRoutes = undefined;\r\n\r\nconst formatters = {\r\n  values(value) {\r\n    return isArray(value) ? value : '' + value;\r\n  },\r\n  numeric(tickValue, index, ticks) {\r\n    if (tickValue === 0) {\r\n      return '0';\r\n    }\r\n    const locale = this.chart.options.locale;\r\n    let notation;\r\n    let delta = tickValue;\r\n    if (ticks.length > 1) {\r\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\r\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\r\n        notation = 'scientific';\r\n      }\r\n      delta = calculateDelta(tickValue, ticks);\r\n    }\r\n    const logDelta = log10(Math.abs(delta));\r\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\r\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\r\n    Object.assign(options, this.options.ticks.format);\r\n    return formatNumber(tickValue, locale, options);\r\n  },\r\n  logarithmic(tickValue, index, ticks) {\r\n    if (tickValue === 0) {\r\n      return '0';\r\n    }\r\n    const remain = tickValue / (Math.pow(10, Math.floor(log10(tickValue))));\r\n    if (remain === 1 || remain === 2 || remain === 5) {\r\n      return formatters.numeric.call(this, tickValue, index, ticks);\r\n    }\r\n    return '';\r\n  }\r\n};\r\nfunction calculateDelta(tickValue, ticks) {\r\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\r\n  if (Math.abs(delta) > 1 && tickValue !== Math.floor(tickValue)) {\r\n    delta = tickValue - Math.floor(tickValue);\r\n  }\r\n  return delta;\r\n}\r\nvar Ticks = {formatters};\r\n\r\ndefaults.set('scale', {\r\n  display: true,\r\n  offset: false,\r\n  reverse: false,\r\n  beginAtZero: false,\r\n  bounds: 'ticks',\r\n  grace: 0,\r\n  grid: {\r\n    display: true,\r\n    lineWidth: 1,\r\n    drawBorder: true,\r\n    drawOnChartArea: true,\r\n    drawTicks: true,\r\n    tickLength: 8,\r\n    tickWidth: (_ctx, options) => options.lineWidth,\r\n    tickColor: (_ctx, options) => options.color,\r\n    offset: false,\r\n    borderDash: [],\r\n    borderDashOffset: 0.0,\r\n    borderColor: (_ctx, options) => options.color,\r\n    borderWidth: (_ctx, options) => options.lineWidth\r\n  },\r\n  title: {\r\n    display: false,\r\n    text: '',\r\n    padding: {\r\n      top: 4,\r\n      bottom: 4\r\n    }\r\n  },\r\n  ticks: {\r\n    minRotation: 0,\r\n    maxRotation: 50,\r\n    mirror: false,\r\n    textStrokeWidth: 0,\r\n    textStrokeColor: '',\r\n    padding: 3,\r\n    display: true,\r\n    autoSkip: true,\r\n    autoSkipPadding: 3,\r\n    labelOffset: 0,\r\n    callback: Ticks.formatters.values,\r\n    minor: {},\r\n    major: {},\r\n    align: 'center',\r\n    crossAlign: 'near',\r\n  }\r\n});\r\ndefaults.route('scale.ticks', 'color', '', 'color');\r\ndefaults.route('scale.grid', 'color', '', 'borderColor');\r\ndefaults.route('scale.title', 'color', '', 'color');\r\ndefaults.describe('scale', {\r\n  _fallback: false,\r\n  _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\r\n  _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash',\r\n});\r\ndefaults.describe('scales', {\r\n  _fallback: 'scale',\r\n});\r\n\r\nfunction autoSkip(scale, ticks) {\r\n  const tickOpts = scale.options.ticks;\r\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\r\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\r\n  const numMajorIndices = majorIndices.length;\r\n  const first = majorIndices[0];\r\n  const last = majorIndices[numMajorIndices - 1];\r\n  const newTicks = [];\r\n  if (numMajorIndices > ticksLimit) {\r\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\r\n    return newTicks;\r\n  }\r\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\r\n  if (numMajorIndices > 0) {\r\n    let i, ilen;\r\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\r\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\r\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\r\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\r\n    }\r\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\r\n    return newTicks;\r\n  }\r\n  skip(ticks, newTicks, spacing);\r\n  return newTicks;\r\n}\r\nfunction determineMaxTicks(scale) {\r\n  const offset = scale.options.offset;\r\n  const tickLength = scale._tickSize();\r\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\r\n  const maxChart = scale._maxLength / tickLength;\r\n  return Math.floor(Math.min(maxScale, maxChart));\r\n}\r\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\r\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\r\n  const spacing = ticks.length / ticksLimit;\r\n  if (!evenMajorSpacing) {\r\n    return Math.max(spacing, 1);\r\n  }\r\n  const factors = _factorize(evenMajorSpacing);\r\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\r\n    const factor = factors[i];\r\n    if (factor > spacing) {\r\n      return factor;\r\n    }\r\n  }\r\n  return Math.max(spacing, 1);\r\n}\r\nfunction getMajorIndices(ticks) {\r\n  const result = [];\r\n  let i, ilen;\r\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\r\n    if (ticks[i].major) {\r\n      result.push(i);\r\n    }\r\n  }\r\n  return result;\r\n}\r\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\r\n  let count = 0;\r\n  let next = majorIndices[0];\r\n  let i;\r\n  spacing = Math.ceil(spacing);\r\n  for (i = 0; i < ticks.length; i++) {\r\n    if (i === next) {\r\n      newTicks.push(ticks[i]);\r\n      count++;\r\n      next = majorIndices[count * spacing];\r\n    }\r\n  }\r\n}\r\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\r\n  const start = valueOrDefault(majorStart, 0);\r\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\r\n  let count = 0;\r\n  let length, i, next;\r\n  spacing = Math.ceil(spacing);\r\n  if (majorEnd) {\r\n    length = majorEnd - majorStart;\r\n    spacing = length / Math.floor(length / spacing);\r\n  }\r\n  next = start;\r\n  while (next < 0) {\r\n    count++;\r\n    next = Math.round(start + count * spacing);\r\n  }\r\n  for (i = Math.max(start, 0); i < end; i++) {\r\n    if (i === next) {\r\n      newTicks.push(ticks[i]);\r\n      count++;\r\n      next = Math.round(start + count * spacing);\r\n    }\r\n  }\r\n}\r\nfunction getEvenSpacing(arr) {\r\n  const len = arr.length;\r\n  let i, diff;\r\n  if (len < 2) {\r\n    return false;\r\n  }\r\n  for (diff = arr[0], i = 1; i < len; ++i) {\r\n    if (arr[i] - arr[i - 1] !== diff) {\r\n      return false;\r\n    }\r\n  }\r\n  return diff;\r\n}\r\n\r\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\r\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\r\nfunction sample(arr, numItems) {\r\n  const result = [];\r\n  const increment = arr.length / numItems;\r\n  const len = arr.length;\r\n  let i = 0;\r\n  for (; i < len; i += increment) {\r\n    result.push(arr[Math.floor(i)]);\r\n  }\r\n  return result;\r\n}\r\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\r\n  const length = scale.ticks.length;\r\n  const validIndex = Math.min(index, length - 1);\r\n  const start = scale._startPixel;\r\n  const end = scale._endPixel;\r\n  const epsilon = 1e-6;\r\n  let lineValue = scale.getPixelForTick(validIndex);\r\n  let offset;\r\n  if (offsetGridLines) {\r\n    if (length === 1) {\r\n      offset = Math.max(lineValue - start, end - lineValue);\r\n    } else if (index === 0) {\r\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\r\n    } else {\r\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\r\n    }\r\n    lineValue += validIndex < index ? offset : -offset;\r\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\r\n      return;\r\n    }\r\n  }\r\n  return lineValue;\r\n}\r\nfunction garbageCollect(caches, length) {\r\n  each(caches, (cache) => {\r\n    const gc = cache.gc;\r\n    const gcLen = gc.length / 2;\r\n    let i;\r\n    if (gcLen > length) {\r\n      for (i = 0; i < gcLen; ++i) {\r\n        delete cache.data[gc[i]];\r\n      }\r\n      gc.splice(0, gcLen);\r\n    }\r\n  });\r\n}\r\nfunction getTickMarkLength(options) {\r\n  return options.drawTicks ? options.tickLength : 0;\r\n}\r\nfunction getTitleHeight(options, fallback) {\r\n  if (!options.display) {\r\n    return 0;\r\n  }\r\n  const font = toFont(options.font, fallback);\r\n  const padding = toPadding(options.padding);\r\n  const lines = isArray(options.text) ? options.text.length : 1;\r\n  return (lines * font.lineHeight) + padding.height;\r\n}\r\nfunction createScaleContext(parent, scale) {\r\n  return Object.assign(Object.create(parent), {\r\n    scale,\r\n    type: 'scale'\r\n  });\r\n}\r\nfunction createTickContext(parent, index, tick) {\r\n  return Object.assign(Object.create(parent), {\r\n    tick,\r\n    index,\r\n    type: 'tick'\r\n  });\r\n}\r\nfunction titleAlign(align, position, reverse) {\r\n  let ret = _toLeftRightCenter(align);\r\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\r\n    ret = reverseAlign(ret);\r\n  }\r\n  return ret;\r\n}\r\nfunction titleArgs(scale, offset, position, align) {\r\n  const {top, left, bottom, right} = scale;\r\n  let rotation = 0;\r\n  let maxWidth, titleX, titleY;\r\n  if (scale.isHorizontal()) {\r\n    titleX = _alignStartEnd(align, left, right);\r\n    titleY = offsetFromEdge(scale, position, offset);\r\n    maxWidth = right - left;\r\n  } else {\r\n    titleX = offsetFromEdge(scale, position, offset);\r\n    titleY = _alignStartEnd(align, bottom, top);\r\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\r\n  }\r\n  return {titleX, titleY, maxWidth, rotation};\r\n}\r\nclass Scale extends Element {\r\n  constructor(cfg) {\r\n    super();\r\n    this.id = cfg.id;\r\n    this.type = cfg.type;\r\n    this.options = undefined;\r\n    this.ctx = cfg.ctx;\r\n    this.chart = cfg.chart;\r\n    this.top = undefined;\r\n    this.bottom = undefined;\r\n    this.left = undefined;\r\n    this.right = undefined;\r\n    this.width = undefined;\r\n    this.height = undefined;\r\n    this._margins = {\r\n      left: 0,\r\n      right: 0,\r\n      top: 0,\r\n      bottom: 0\r\n    };\r\n    this.maxWidth = undefined;\r\n    this.maxHeight = undefined;\r\n    this.paddingTop = undefined;\r\n    this.paddingBottom = undefined;\r\n    this.paddingLeft = undefined;\r\n    this.paddingRight = undefined;\r\n    this.axis = undefined;\r\n    this.labelRotation = undefined;\r\n    this.min = undefined;\r\n    this.max = undefined;\r\n    this.ticks = [];\r\n    this._gridLineItems = null;\r\n    this._labelItems = null;\r\n    this._labelSizes = null;\r\n    this._length = 0;\r\n    this._maxLength = 0;\r\n    this._longestTextCache = {};\r\n    this._startPixel = undefined;\r\n    this._endPixel = undefined;\r\n    this._reversePixels = false;\r\n    this._userMax = undefined;\r\n    this._userMin = undefined;\r\n    this._suggestedMax = undefined;\r\n    this._suggestedMin = undefined;\r\n    this._ticksLength = 0;\r\n    this._borderValue = 0;\r\n    this._cache = {};\r\n    this._dataLimitsCached = false;\r\n    this.$context = undefined;\r\n  }\r\n  init(options) {\r\n    const me = this;\r\n    me.options = options;\r\n    me.axis = options.axis;\r\n    me._userMin = me.parse(options.min);\r\n    me._userMax = me.parse(options.max);\r\n    me._suggestedMin = me.parse(options.suggestedMin);\r\n    me._suggestedMax = me.parse(options.suggestedMax);\r\n  }\r\n  parse(raw, index) {\r\n    return raw;\r\n  }\r\n  getUserBounds() {\r\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\r\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\r\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\r\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\r\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\r\n    return {\r\n      min: finiteOrDefault(_userMin, _suggestedMin),\r\n      max: finiteOrDefault(_userMax, _suggestedMax),\r\n      minDefined: isNumberFinite(_userMin),\r\n      maxDefined: isNumberFinite(_userMax)\r\n    };\r\n  }\r\n  getMinMax(canStack) {\r\n    const me = this;\r\n    let {min, max, minDefined, maxDefined} = me.getUserBounds();\r\n    let range;\r\n    if (minDefined && maxDefined) {\r\n      return {min, max};\r\n    }\r\n    const metas = me.getMatchingVisibleMetas();\r\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\r\n      range = metas[i].controller.getMinMax(me, canStack);\r\n      if (!minDefined) {\r\n        min = Math.min(min, range.min);\r\n      }\r\n      if (!maxDefined) {\r\n        max = Math.max(max, range.max);\r\n      }\r\n    }\r\n    return {\r\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\r\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\r\n    };\r\n  }\r\n  getPadding() {\r\n    const me = this;\r\n    return {\r\n      left: me.paddingLeft || 0,\r\n      top: me.paddingTop || 0,\r\n      right: me.paddingRight || 0,\r\n      bottom: me.paddingBottom || 0\r\n    };\r\n  }\r\n  getTicks() {\r\n    return this.ticks;\r\n  }\r\n  getLabels() {\r\n    const data = this.chart.data;\r\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\r\n  }\r\n  beforeLayout() {\r\n    this._cache = {};\r\n    this._dataLimitsCached = false;\r\n  }\r\n  beforeUpdate() {\r\n    callback(this.options.beforeUpdate, [this]);\r\n  }\r\n  update(maxWidth, maxHeight, margins) {\r\n    const me = this;\r\n    const tickOpts = me.options.ticks;\r\n    const sampleSize = tickOpts.sampleSize;\r\n    me.beforeUpdate();\r\n    me.maxWidth = maxWidth;\r\n    me.maxHeight = maxHeight;\r\n    me._margins = margins = Object.assign({\r\n      left: 0,\r\n      right: 0,\r\n      top: 0,\r\n      bottom: 0\r\n    }, margins);\r\n    me.ticks = null;\r\n    me._labelSizes = null;\r\n    me._gridLineItems = null;\r\n    me._labelItems = null;\r\n    me.beforeSetDimensions();\r\n    me.setDimensions();\r\n    me.afterSetDimensions();\r\n    me._maxLength = me.isHorizontal()\r\n      ? me.width + margins.left + margins.right\r\n      : me.height + margins.top + margins.bottom;\r\n    if (!me._dataLimitsCached) {\r\n      me.beforeDataLimits();\r\n      me.determineDataLimits();\r\n      me.afterDataLimits();\r\n      me._dataLimitsCached = true;\r\n    }\r\n    me.beforeBuildTicks();\r\n    me.ticks = me.buildTicks() || [];\r\n    me.afterBuildTicks();\r\n    const samplingEnabled = sampleSize < me.ticks.length;\r\n    me._convertTicksToLabels(samplingEnabled ? sample(me.ticks, sampleSize) : me.ticks);\r\n    me.configure();\r\n    me.beforeCalculateLabelRotation();\r\n    me.calculateLabelRotation();\r\n    me.afterCalculateLabelRotation();\r\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\r\n      me.ticks = autoSkip(me, me.ticks);\r\n      me._labelSizes = null;\r\n    }\r\n    if (samplingEnabled) {\r\n      me._convertTicksToLabels(me.ticks);\r\n    }\r\n    me.beforeFit();\r\n    me.fit();\r\n    me.afterFit();\r\n    me.afterUpdate();\r\n  }\r\n  configure() {\r\n    const me = this;\r\n    let reversePixels = me.options.reverse;\r\n    let startPixel, endPixel;\r\n    if (me.isHorizontal()) {\r\n      startPixel = me.left;\r\n      endPixel = me.right;\r\n    } else {\r\n      startPixel = me.top;\r\n      endPixel = me.bottom;\r\n      reversePixels = !reversePixels;\r\n    }\r\n    me._startPixel = startPixel;\r\n    me._endPixel = endPixel;\r\n    me._reversePixels = reversePixels;\r\n    me._length = endPixel - startPixel;\r\n    me._alignToPixels = me.options.alignToPixels;\r\n  }\r\n  afterUpdate() {\r\n    callback(this.options.afterUpdate, [this]);\r\n  }\r\n  beforeSetDimensions() {\r\n    callback(this.options.beforeSetDimensions, [this]);\r\n  }\r\n  setDimensions() {\r\n    const me = this;\r\n    if (me.isHorizontal()) {\r\n      me.width = me.maxWidth;\r\n      me.left = 0;\r\n      me.right = me.width;\r\n    } else {\r\n      me.height = me.maxHeight;\r\n      me.top = 0;\r\n      me.bottom = me.height;\r\n    }\r\n    me.paddingLeft = 0;\r\n    me.paddingTop = 0;\r\n    me.paddingRight = 0;\r\n    me.paddingBottom = 0;\r\n  }\r\n  afterSetDimensions() {\r\n    callback(this.options.afterSetDimensions, [this]);\r\n  }\r\n  _callHooks(name) {\r\n    const me = this;\r\n    me.chart.notifyPlugins(name, me.getContext());\r\n    callback(me.options[name], [me]);\r\n  }\r\n  beforeDataLimits() {\r\n    this._callHooks('beforeDataLimits');\r\n  }\r\n  determineDataLimits() {}\r\n  afterDataLimits() {\r\n    this._callHooks('afterDataLimits');\r\n  }\r\n  beforeBuildTicks() {\r\n    this._callHooks('beforeBuildTicks');\r\n  }\r\n  buildTicks() {\r\n    return [];\r\n  }\r\n  afterBuildTicks() {\r\n    this._callHooks('afterBuildTicks');\r\n  }\r\n  beforeTickToLabelConversion() {\r\n    callback(this.options.beforeTickToLabelConversion, [this]);\r\n  }\r\n  generateTickLabels(ticks) {\r\n    const me = this;\r\n    const tickOpts = me.options.ticks;\r\n    let i, ilen, tick;\r\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\r\n      tick = ticks[i];\r\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], me);\r\n    }\r\n  }\r\n  afterTickToLabelConversion() {\r\n    callback(this.options.afterTickToLabelConversion, [this]);\r\n  }\r\n  beforeCalculateLabelRotation() {\r\n    callback(this.options.beforeCalculateLabelRotation, [this]);\r\n  }\r\n  calculateLabelRotation() {\r\n    const me = this;\r\n    const options = me.options;\r\n    const tickOpts = options.ticks;\r\n    const numTicks = me.ticks.length;\r\n    const minRotation = tickOpts.minRotation || 0;\r\n    const maxRotation = tickOpts.maxRotation;\r\n    let labelRotation = minRotation;\r\n    let tickWidth, maxHeight, maxLabelDiagonal;\r\n    if (!me._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !me.isHorizontal()) {\r\n      me.labelRotation = minRotation;\r\n      return;\r\n    }\r\n    const labelSizes = me._getLabelSizes();\r\n    const maxLabelWidth = labelSizes.widest.width;\r\n    const maxLabelHeight = labelSizes.highest.height;\r\n    const maxWidth = _limitValue(me.chart.width - maxLabelWidth, 0, me.maxWidth);\r\n    tickWidth = options.offset ? me.maxWidth / numTicks : maxWidth / (numTicks - 1);\r\n    if (maxLabelWidth + 6 > tickWidth) {\r\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\r\n      maxHeight = me.maxHeight - getTickMarkLength(options.grid)\r\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, me.chart.options.font);\r\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\r\n      labelRotation = toDegrees(Math.min(\r\n        Math.asin(Math.min((labelSizes.highest.height + 6) / tickWidth, 1)),\r\n        Math.asin(Math.min(maxHeight / maxLabelDiagonal, 1)) - Math.asin(maxLabelHeight / maxLabelDiagonal)\r\n      ));\r\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\r\n    }\r\n    me.labelRotation = labelRotation;\r\n  }\r\n  afterCalculateLabelRotation() {\r\n    callback(this.options.afterCalculateLabelRotation, [this]);\r\n  }\r\n  beforeFit() {\r\n    callback(this.options.beforeFit, [this]);\r\n  }\r\n  fit() {\r\n    const me = this;\r\n    const minSize = {\r\n      width: 0,\r\n      height: 0\r\n    };\r\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = me;\r\n    const display = me._isVisible();\r\n    const isHorizontal = me.isHorizontal();\r\n    if (display) {\r\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\r\n      if (isHorizontal) {\r\n        minSize.width = me.maxWidth;\r\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\r\n      } else {\r\n        minSize.height = me.maxHeight;\r\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\r\n      }\r\n      if (tickOpts.display && me.ticks.length) {\r\n        const {first, last, widest, highest} = me._getLabelSizes();\r\n        const tickPadding = tickOpts.padding * 2;\r\n        const angleRadians = toRadians(me.labelRotation);\r\n        const cos = Math.cos(angleRadians);\r\n        const sin = Math.sin(angleRadians);\r\n        if (isHorizontal) {\r\n          const labelHeight = sin * widest.width + cos * highest.height;\r\n          minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\r\n        } else {\r\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\r\n          minSize.width = Math.min(me.maxWidth, minSize.width + labelWidth + tickPadding);\r\n        }\r\n        me._calculatePadding(first, last, sin, cos);\r\n      }\r\n    }\r\n    me._handleMargins();\r\n    if (isHorizontal) {\r\n      me.width = me._length = chart.width - me._margins.left - me._margins.right;\r\n      me.height = minSize.height;\r\n    } else {\r\n      me.width = minSize.width;\r\n      me.height = me._length = chart.height - me._margins.top - me._margins.bottom;\r\n    }\r\n  }\r\n  _calculatePadding(first, last, sin, cos) {\r\n    const me = this;\r\n    const {ticks: {align, padding}, position} = me.options;\r\n    const isRotated = me.labelRotation !== 0;\r\n    const labelsBelowTicks = position !== 'top' && me.axis === 'x';\r\n    if (me.isHorizontal()) {\r\n      const offsetLeft = me.getPixelForTick(0) - me.left;\r\n      const offsetRight = me.right - me.getPixelForTick(me.ticks.length - 1);\r\n      let paddingLeft = 0;\r\n      let paddingRight = 0;\r\n      if (isRotated) {\r\n        if (labelsBelowTicks) {\r\n          paddingLeft = cos * first.width;\r\n          paddingRight = sin * last.height;\r\n        } else {\r\n          paddingLeft = sin * first.height;\r\n          paddingRight = cos * last.width;\r\n        }\r\n      } else if (align === 'start') {\r\n        paddingRight = last.width;\r\n      } else if (align === 'end') {\r\n        paddingLeft = first.width;\r\n      } else {\r\n        paddingLeft = first.width / 2;\r\n        paddingRight = last.width / 2;\r\n      }\r\n      me.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * me.width / (me.width - offsetLeft), 0);\r\n      me.paddingRight = Math.max((paddingRight - offsetRight + padding) * me.width / (me.width - offsetRight), 0);\r\n    } else {\r\n      let paddingTop = last.height / 2;\r\n      let paddingBottom = first.height / 2;\r\n      if (align === 'start') {\r\n        paddingTop = 0;\r\n        paddingBottom = first.height;\r\n      } else if (align === 'end') {\r\n        paddingTop = last.height;\r\n        paddingBottom = 0;\r\n      }\r\n      me.paddingTop = paddingTop + padding;\r\n      me.paddingBottom = paddingBottom + padding;\r\n    }\r\n  }\r\n  _handleMargins() {\r\n    const me = this;\r\n    if (me._margins) {\r\n      me._margins.left = Math.max(me.paddingLeft, me._margins.left);\r\n      me._margins.top = Math.max(me.paddingTop, me._margins.top);\r\n      me._margins.right = Math.max(me.paddingRight, me._margins.right);\r\n      me._margins.bottom = Math.max(me.paddingBottom, me._margins.bottom);\r\n    }\r\n  }\r\n  afterFit() {\r\n    callback(this.options.afterFit, [this]);\r\n  }\r\n  isHorizontal() {\r\n    const {axis, position} = this.options;\r\n    return position === 'top' || position === 'bottom' || axis === 'x';\r\n  }\r\n  isFullSize() {\r\n    return this.options.fullSize;\r\n  }\r\n  _convertTicksToLabels(ticks) {\r\n    const me = this;\r\n    me.beforeTickToLabelConversion();\r\n    me.generateTickLabels(ticks);\r\n    me.afterTickToLabelConversion();\r\n  }\r\n  _getLabelSizes() {\r\n    const me = this;\r\n    let labelSizes = me._labelSizes;\r\n    if (!labelSizes) {\r\n      const sampleSize = me.options.ticks.sampleSize;\r\n      let ticks = me.ticks;\r\n      if (sampleSize < ticks.length) {\r\n        ticks = sample(ticks, sampleSize);\r\n      }\r\n      me._labelSizes = labelSizes = me._computeLabelSizes(ticks, ticks.length);\r\n    }\r\n    return labelSizes;\r\n  }\r\n  _computeLabelSizes(ticks, length) {\r\n    const {ctx, _longestTextCache: caches} = this;\r\n    const widths = [];\r\n    const heights = [];\r\n    let widestLabelSize = 0;\r\n    let highestLabelSize = 0;\r\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\r\n    for (i = 0; i < length; ++i) {\r\n      label = ticks[i].label;\r\n      tickFont = this._resolveTickFontOptions(i);\r\n      ctx.font = fontString = tickFont.string;\r\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\r\n      lineHeight = tickFont.lineHeight;\r\n      width = height = 0;\r\n      if (!isNullOrUndef(label) && !isArray(label)) {\r\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\r\n        height = lineHeight;\r\n      } else if (isArray(label)) {\r\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\r\n          nestedLabel = label[j];\r\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\r\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\r\n            height += lineHeight;\r\n          }\r\n        }\r\n      }\r\n      widths.push(width);\r\n      heights.push(height);\r\n      widestLabelSize = Math.max(width, widestLabelSize);\r\n      highestLabelSize = Math.max(height, highestLabelSize);\r\n    }\r\n    garbageCollect(caches, length);\r\n    const widest = widths.indexOf(widestLabelSize);\r\n    const highest = heights.indexOf(highestLabelSize);\r\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\r\n    return {\r\n      first: valueAt(0),\r\n      last: valueAt(length - 1),\r\n      widest: valueAt(widest),\r\n      highest: valueAt(highest)\r\n    };\r\n  }\r\n  getLabelForValue(value) {\r\n    return value;\r\n  }\r\n  getPixelForValue(value, index) {\r\n    return NaN;\r\n  }\r\n  getValueForPixel(pixel) {}\r\n  getPixelForTick(index) {\r\n    const ticks = this.ticks;\r\n    if (index < 0 || index > ticks.length - 1) {\r\n      return null;\r\n    }\r\n    return this.getPixelForValue(ticks[index].value);\r\n  }\r\n  getPixelForDecimal(decimal) {\r\n    const me = this;\r\n    if (me._reversePixels) {\r\n      decimal = 1 - decimal;\r\n    }\r\n    const pixel = me._startPixel + decimal * me._length;\r\n    return _int16Range(me._alignToPixels ? _alignPixel(me.chart, pixel, 0) : pixel);\r\n  }\r\n  getDecimalForPixel(pixel) {\r\n    const decimal = (pixel - this._startPixel) / this._length;\r\n    return this._reversePixels ? 1 - decimal : decimal;\r\n  }\r\n  getBasePixel() {\r\n    return this.getPixelForValue(this.getBaseValue());\r\n  }\r\n  getBaseValue() {\r\n    const {min, max} = this;\r\n    return min < 0 && max < 0 ? max :\r\n      min > 0 && max > 0 ? min :\r\n      0;\r\n  }\r\n  getContext(index) {\r\n    const me = this;\r\n    const ticks = me.ticks || [];\r\n    if (index >= 0 && index < ticks.length) {\r\n      const tick = ticks[index];\r\n      return tick.$context ||\r\n\t\t\t\t(tick.$context = createTickContext(me.getContext(), index, tick));\r\n    }\r\n    return me.$context ||\r\n\t\t\t(me.$context = createScaleContext(me.chart.getContext(), me));\r\n  }\r\n  _tickSize() {\r\n    const me = this;\r\n    const optionTicks = me.options.ticks;\r\n    const rot = toRadians(me.labelRotation);\r\n    const cos = Math.abs(Math.cos(rot));\r\n    const sin = Math.abs(Math.sin(rot));\r\n    const labelSizes = me._getLabelSizes();\r\n    const padding = optionTicks.autoSkipPadding || 0;\r\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\r\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\r\n    return me.isHorizontal()\r\n      ? h * cos > w * sin ? w / cos : h / sin\r\n      : h * sin < w * cos ? h / cos : w / sin;\r\n  }\r\n  _isVisible() {\r\n    const display = this.options.display;\r\n    if (display !== 'auto') {\r\n      return !!display;\r\n    }\r\n    return this.getMatchingVisibleMetas().length > 0;\r\n  }\r\n  _computeGridLineItems(chartArea) {\r\n    const me = this;\r\n    const axis = me.axis;\r\n    const chart = me.chart;\r\n    const options = me.options;\r\n    const {grid, position} = options;\r\n    const offset = grid.offset;\r\n    const isHorizontal = me.isHorizontal();\r\n    const ticks = me.ticks;\r\n    const ticksLength = ticks.length + (offset ? 1 : 0);\r\n    const tl = getTickMarkLength(grid);\r\n    const items = [];\r\n    const borderOpts = grid.setContext(me.getContext(0));\r\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\r\n    const axisHalfWidth = axisWidth / 2;\r\n    const alignBorderValue = function(pixel) {\r\n      return _alignPixel(chart, pixel, axisWidth);\r\n    };\r\n    let borderValue, i, lineValue, alignedLineValue;\r\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\r\n    if (position === 'top') {\r\n      borderValue = alignBorderValue(me.bottom);\r\n      ty1 = me.bottom - tl;\r\n      ty2 = borderValue - axisHalfWidth;\r\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\r\n      y2 = chartArea.bottom;\r\n    } else if (position === 'bottom') {\r\n      borderValue = alignBorderValue(me.top);\r\n      y1 = chartArea.top;\r\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\r\n      ty1 = borderValue + axisHalfWidth;\r\n      ty2 = me.top + tl;\r\n    } else if (position === 'left') {\r\n      borderValue = alignBorderValue(me.right);\r\n      tx1 = me.right - tl;\r\n      tx2 = borderValue - axisHalfWidth;\r\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\r\n      x2 = chartArea.right;\r\n    } else if (position === 'right') {\r\n      borderValue = alignBorderValue(me.left);\r\n      x1 = chartArea.left;\r\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\r\n      tx1 = borderValue + axisHalfWidth;\r\n      tx2 = me.left + tl;\r\n    } else if (axis === 'x') {\r\n      if (position === 'center') {\r\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\r\n      } else if (isObject(position)) {\r\n        const positionAxisID = Object.keys(position)[0];\r\n        const value = position[positionAxisID];\r\n        borderValue = alignBorderValue(me.chart.scales[positionAxisID].getPixelForValue(value));\r\n      }\r\n      y1 = chartArea.top;\r\n      y2 = chartArea.bottom;\r\n      ty1 = borderValue + axisHalfWidth;\r\n      ty2 = ty1 + tl;\r\n    } else if (axis === 'y') {\r\n      if (position === 'center') {\r\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\r\n      } else if (isObject(position)) {\r\n        const positionAxisID = Object.keys(position)[0];\r\n        const value = position[positionAxisID];\r\n        borderValue = alignBorderValue(me.chart.scales[positionAxisID].getPixelForValue(value));\r\n      }\r\n      tx1 = borderValue - axisHalfWidth;\r\n      tx2 = tx1 - tl;\r\n      x1 = chartArea.left;\r\n      x2 = chartArea.right;\r\n    }\r\n    for (i = 0; i < ticksLength; ++i) {\r\n      const optsAtIndex = grid.setContext(me.getContext(i));\r\n      const lineWidth = optsAtIndex.lineWidth;\r\n      const lineColor = optsAtIndex.color;\r\n      const borderDash = grid.borderDash || [];\r\n      const borderDashOffset = optsAtIndex.borderDashOffset;\r\n      const tickWidth = optsAtIndex.tickWidth;\r\n      const tickColor = optsAtIndex.tickColor;\r\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\r\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\r\n      lineValue = getPixelForGridLine(me, i, offset);\r\n      if (lineValue === undefined) {\r\n        continue;\r\n      }\r\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\r\n      if (isHorizontal) {\r\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\r\n      } else {\r\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\r\n      }\r\n      items.push({\r\n        tx1,\r\n        ty1,\r\n        tx2,\r\n        ty2,\r\n        x1,\r\n        y1,\r\n        x2,\r\n        y2,\r\n        width: lineWidth,\r\n        color: lineColor,\r\n        borderDash,\r\n        borderDashOffset,\r\n        tickWidth,\r\n        tickColor,\r\n        tickBorderDash,\r\n        tickBorderDashOffset,\r\n      });\r\n    }\r\n    me._ticksLength = ticksLength;\r\n    me._borderValue = borderValue;\r\n    return items;\r\n  }\r\n  _computeLabelItems(chartArea) {\r\n    const me = this;\r\n    const axis = me.axis;\r\n    const options = me.options;\r\n    const {position, ticks: optionTicks} = options;\r\n    const isHorizontal = me.isHorizontal();\r\n    const ticks = me.ticks;\r\n    const {align, crossAlign, padding} = optionTicks;\r\n    const tl = getTickMarkLength(options.grid);\r\n    const tickAndPadding = tl + padding;\r\n    const rotation = -toRadians(me.labelRotation);\r\n    const items = [];\r\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\r\n    let textBaseline = 'middle';\r\n    if (position === 'top') {\r\n      y = me.bottom - tickAndPadding;\r\n      textAlign = me._getXAxisLabelAlignment();\r\n    } else if (position === 'bottom') {\r\n      y = me.top + tickAndPadding;\r\n      textAlign = me._getXAxisLabelAlignment();\r\n    } else if (position === 'left') {\r\n      const ret = this._getYAxisLabelAlignment(tl);\r\n      textAlign = ret.textAlign;\r\n      x = ret.x;\r\n    } else if (position === 'right') {\r\n      const ret = this._getYAxisLabelAlignment(tl);\r\n      textAlign = ret.textAlign;\r\n      x = ret.x;\r\n    } else if (axis === 'x') {\r\n      if (position === 'center') {\r\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\r\n      } else if (isObject(position)) {\r\n        const positionAxisID = Object.keys(position)[0];\r\n        const value = position[positionAxisID];\r\n        y = me.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\r\n      }\r\n      textAlign = me._getXAxisLabelAlignment();\r\n    } else if (axis === 'y') {\r\n      if (position === 'center') {\r\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\r\n      } else if (isObject(position)) {\r\n        const positionAxisID = Object.keys(position)[0];\r\n        const value = position[positionAxisID];\r\n        x = me.chart.scales[positionAxisID].getPixelForValue(value);\r\n      }\r\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\r\n    }\r\n    if (axis === 'y') {\r\n      if (align === 'start') {\r\n        textBaseline = 'top';\r\n      } else if (align === 'end') {\r\n        textBaseline = 'bottom';\r\n      }\r\n    }\r\n    const labelSizes = me._getLabelSizes();\r\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\r\n      tick = ticks[i];\r\n      label = tick.label;\r\n      const optsAtIndex = optionTicks.setContext(me.getContext(i));\r\n      pixel = me.getPixelForTick(i) + optionTicks.labelOffset;\r\n      font = me._resolveTickFontOptions(i);\r\n      lineHeight = font.lineHeight;\r\n      lineCount = isArray(label) ? label.length : 1;\r\n      const halfCount = lineCount / 2;\r\n      const color = optsAtIndex.color;\r\n      const strokeColor = optsAtIndex.textStrokeColor;\r\n      const strokeWidth = optsAtIndex.textStrokeWidth;\r\n      if (isHorizontal) {\r\n        x = pixel;\r\n        if (position === 'top') {\r\n          if (crossAlign === 'near' || rotation !== 0) {\r\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\r\n          } else if (crossAlign === 'center') {\r\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\r\n          } else {\r\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\r\n          }\r\n        } else {\r\n          if (crossAlign === 'near' || rotation !== 0) {\r\n            textOffset = lineHeight / 2;\r\n          } else if (crossAlign === 'center') {\r\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\r\n          } else {\r\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\r\n          }\r\n        }\r\n      } else {\r\n        y = pixel;\r\n        textOffset = (1 - lineCount) * lineHeight / 2;\r\n      }\r\n      items.push({\r\n        rotation,\r\n        label,\r\n        font,\r\n        color,\r\n        strokeColor,\r\n        strokeWidth,\r\n        textOffset,\r\n        textAlign,\r\n        textBaseline,\r\n        translation: [x, y]\r\n      });\r\n    }\r\n    return items;\r\n  }\r\n  _getXAxisLabelAlignment() {\r\n    const me = this;\r\n    const {position, ticks} = me.options;\r\n    const rotation = -toRadians(me.labelRotation);\r\n    if (rotation) {\r\n      return position === 'top' ? 'left' : 'right';\r\n    }\r\n    let align = 'center';\r\n    if (ticks.align === 'start') {\r\n      align = 'left';\r\n    } else if (ticks.align === 'end') {\r\n      align = 'right';\r\n    }\r\n    return align;\r\n  }\r\n  _getYAxisLabelAlignment(tl) {\r\n    const me = this;\r\n    const {position, ticks: {crossAlign, mirror, padding}} = me.options;\r\n    const labelSizes = me._getLabelSizes();\r\n    const tickAndPadding = tl + padding;\r\n    const widest = labelSizes.widest.width;\r\n    let textAlign;\r\n    let x;\r\n    if (position === 'left') {\r\n      if (mirror) {\r\n        textAlign = 'left';\r\n        x = me.right - padding;\r\n      } else {\r\n        x = me.right - tickAndPadding;\r\n        if (crossAlign === 'near') {\r\n          textAlign = 'right';\r\n        } else if (crossAlign === 'center') {\r\n          textAlign = 'center';\r\n          x -= (widest / 2);\r\n        } else {\r\n          textAlign = 'left';\r\n          x = me.left;\r\n        }\r\n      }\r\n    } else if (position === 'right') {\r\n      if (mirror) {\r\n        textAlign = 'right';\r\n        x = me.left + padding;\r\n      } else {\r\n        x = me.left + tickAndPadding;\r\n        if (crossAlign === 'near') {\r\n          textAlign = 'left';\r\n        } else if (crossAlign === 'center') {\r\n          textAlign = 'center';\r\n          x += widest / 2;\r\n        } else {\r\n          textAlign = 'right';\r\n          x = me.right;\r\n        }\r\n      }\r\n    } else {\r\n      textAlign = 'right';\r\n    }\r\n    return {textAlign, x};\r\n  }\r\n  _computeLabelArea() {\r\n    const me = this;\r\n    if (me.options.ticks.mirror) {\r\n      return;\r\n    }\r\n    const chart = me.chart;\r\n    const position = me.options.position;\r\n    if (position === 'left' || position === 'right') {\r\n      return {top: 0, left: me.left, bottom: chart.height, right: me.right};\r\n    } if (position === 'top' || position === 'bottom') {\r\n      return {top: me.top, left: 0, bottom: me.bottom, right: chart.width};\r\n    }\r\n  }\r\n  drawBackground() {\r\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\r\n    if (backgroundColor) {\r\n      ctx.save();\r\n      ctx.fillStyle = backgroundColor;\r\n      ctx.fillRect(left, top, width, height);\r\n      ctx.restore();\r\n    }\r\n  }\r\n  getLineWidthForValue(value) {\r\n    const me = this;\r\n    const grid = me.options.grid;\r\n    if (!me._isVisible() || !grid.display) {\r\n      return 0;\r\n    }\r\n    const ticks = me.ticks;\r\n    const index = ticks.findIndex(t => t.value === value);\r\n    if (index >= 0) {\r\n      const opts = grid.setContext(me.getContext(index));\r\n      return opts.lineWidth;\r\n    }\r\n    return 0;\r\n  }\r\n  drawGrid(chartArea) {\r\n    const me = this;\r\n    const grid = me.options.grid;\r\n    const ctx = me.ctx;\r\n    const chart = me.chart;\r\n    const borderOpts = grid.setContext(me.getContext(0));\r\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\r\n    const items = me._gridLineItems || (me._gridLineItems = me._computeGridLineItems(chartArea));\r\n    let i, ilen;\r\n    const drawLine = (p1, p2, style) => {\r\n      if (!style.width || !style.color) {\r\n        return;\r\n      }\r\n      ctx.save();\r\n      ctx.lineWidth = style.width;\r\n      ctx.strokeStyle = style.color;\r\n      ctx.setLineDash(style.borderDash || []);\r\n      ctx.lineDashOffset = style.borderDashOffset;\r\n      ctx.beginPath();\r\n      ctx.moveTo(p1.x, p1.y);\r\n      ctx.lineTo(p2.x, p2.y);\r\n      ctx.stroke();\r\n      ctx.restore();\r\n    };\r\n    if (grid.display) {\r\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\r\n        const item = items[i];\r\n        if (grid.drawOnChartArea) {\r\n          drawLine(\r\n            {x: item.x1, y: item.y1},\r\n            {x: item.x2, y: item.y2},\r\n            item\r\n          );\r\n        }\r\n        if (grid.drawTicks) {\r\n          drawLine(\r\n            {x: item.tx1, y: item.ty1},\r\n            {x: item.tx2, y: item.ty2},\r\n            {\r\n              color: item.tickColor,\r\n              width: item.tickWidth,\r\n              borderDash: item.tickBorderDash,\r\n              borderDashOffset: item.tickBorderDashOffset\r\n            }\r\n          );\r\n        }\r\n      }\r\n    }\r\n    if (axisWidth) {\r\n      const edgeOpts = grid.setContext(me.getContext(me._ticksLength - 1));\r\n      const lastLineWidth = edgeOpts.lineWidth;\r\n      const borderValue = me._borderValue;\r\n      let x1, x2, y1, y2;\r\n      if (me.isHorizontal()) {\r\n        x1 = _alignPixel(chart, me.left, axisWidth) - axisWidth / 2;\r\n        x2 = _alignPixel(chart, me.right, lastLineWidth) + lastLineWidth / 2;\r\n        y1 = y2 = borderValue;\r\n      } else {\r\n        y1 = _alignPixel(chart, me.top, axisWidth) - axisWidth / 2;\r\n        y2 = _alignPixel(chart, me.bottom, lastLineWidth) + lastLineWidth / 2;\r\n        x1 = x2 = borderValue;\r\n      }\r\n      drawLine(\r\n        {x: x1, y: y1},\r\n        {x: x2, y: y2},\r\n        {width: axisWidth, color: edgeOpts.borderColor});\r\n    }\r\n  }\r\n  drawLabels(chartArea) {\r\n    const me = this;\r\n    const optionTicks = me.options.ticks;\r\n    if (!optionTicks.display) {\r\n      return;\r\n    }\r\n    const ctx = me.ctx;\r\n    const area = me._computeLabelArea();\r\n    if (area) {\r\n      clipArea(ctx, area);\r\n    }\r\n    const items = me._labelItems || (me._labelItems = me._computeLabelItems(chartArea));\r\n    let i, ilen;\r\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\r\n      const item = items[i];\r\n      const tickFont = item.font;\r\n      const label = item.label;\r\n      let y = item.textOffset;\r\n      renderText(ctx, label, 0, y, tickFont, item);\r\n    }\r\n    if (area) {\r\n      unclipArea(ctx);\r\n    }\r\n  }\r\n  drawTitle() {\r\n    const {ctx, options: {position, title, reverse}} = this;\r\n    if (!title.display) {\r\n      return;\r\n    }\r\n    const font = toFont(title.font);\r\n    const padding = toPadding(title.padding);\r\n    const align = title.align;\r\n    let offset = font.lineHeight / 2;\r\n    if (position === 'bottom') {\r\n      offset += padding.bottom;\r\n      if (isArray(title.text)) {\r\n        offset += font.lineHeight * (title.text.length - 1);\r\n      }\r\n    } else {\r\n      offset += padding.top;\r\n    }\r\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\r\n    renderText(ctx, title.text, 0, 0, font, {\r\n      color: title.color,\r\n      maxWidth,\r\n      rotation,\r\n      textAlign: titleAlign(align, position, reverse),\r\n      textBaseline: 'middle',\r\n      translation: [titleX, titleY],\r\n    });\r\n  }\r\n  draw(chartArea) {\r\n    const me = this;\r\n    if (!me._isVisible()) {\r\n      return;\r\n    }\r\n    me.drawBackground();\r\n    me.drawGrid(chartArea);\r\n    me.drawTitle();\r\n    me.drawLabels(chartArea);\r\n  }\r\n  _layers() {\r\n    const me = this;\r\n    const opts = me.options;\r\n    const tz = opts.ticks && opts.ticks.z || 0;\r\n    const gz = opts.grid && opts.grid.z || 0;\r\n    if (!me._isVisible() || tz === gz || me.draw !== Scale.prototype.draw) {\r\n      return [{\r\n        z: tz,\r\n        draw(chartArea) {\r\n          me.draw(chartArea);\r\n        }\r\n      }];\r\n    }\r\n    return [{\r\n      z: gz,\r\n      draw(chartArea) {\r\n        me.drawBackground();\r\n        me.drawGrid(chartArea);\r\n        me.drawTitle();\r\n      }\r\n    }, {\r\n      z: tz,\r\n      draw(chartArea) {\r\n        me.drawLabels(chartArea);\r\n      }\r\n    }];\r\n  }\r\n  getMatchingVisibleMetas(type) {\r\n    const me = this;\r\n    const metas = me.chart.getSortedVisibleDatasetMetas();\r\n    const axisID = me.axis + 'AxisID';\r\n    const result = [];\r\n    let i, ilen;\r\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\r\n      const meta = metas[i];\r\n      if (meta[axisID] === me.id && (!type || meta.type === type)) {\r\n        result.push(meta);\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n  _resolveTickFontOptions(index) {\r\n    const opts = this.options.ticks.setContext(this.getContext(index));\r\n    return toFont(opts.font);\r\n  }\r\n}\r\n\r\nclass TypedRegistry {\r\n  constructor(type, scope, override) {\r\n    this.type = type;\r\n    this.scope = scope;\r\n    this.override = override;\r\n    this.items = Object.create(null);\r\n  }\r\n  isForType(type) {\r\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\r\n  }\r\n  register(item) {\r\n    const me = this;\r\n    const proto = Object.getPrototypeOf(item);\r\n    let parentScope;\r\n    if (isIChartComponent(proto)) {\r\n      parentScope = me.register(proto);\r\n    }\r\n    const items = me.items;\r\n    const id = item.id;\r\n    const scope = me.scope + '.' + id;\r\n    if (!id) {\r\n      throw new Error('class does not have id: ' + item);\r\n    }\r\n    if (id in items) {\r\n      return scope;\r\n    }\r\n    items[id] = item;\r\n    registerDefaults(item, scope, parentScope);\r\n    if (me.override) {\r\n      defaults.override(item.id, item.overrides);\r\n    }\r\n    return scope;\r\n  }\r\n  get(id) {\r\n    return this.items[id];\r\n  }\r\n  unregister(item) {\r\n    const items = this.items;\r\n    const id = item.id;\r\n    const scope = this.scope;\r\n    if (id in items) {\r\n      delete items[id];\r\n    }\r\n    if (scope && id in defaults[scope]) {\r\n      delete defaults[scope][id];\r\n      if (this.override) {\r\n        delete overrides[id];\r\n      }\r\n    }\r\n  }\r\n}\r\nfunction registerDefaults(item, scope, parentScope) {\r\n  const itemDefaults = merge(Object.create(null), [\r\n    parentScope ? defaults.get(parentScope) : {},\r\n    defaults.get(scope),\r\n    item.defaults\r\n  ]);\r\n  defaults.set(scope, itemDefaults);\r\n  if (item.defaultRoutes) {\r\n    routeDefaults(scope, item.defaultRoutes);\r\n  }\r\n  if (item.descriptors) {\r\n    defaults.describe(scope, item.descriptors);\r\n  }\r\n}\r\nfunction routeDefaults(scope, routes) {\r\n  Object.keys(routes).forEach(property => {\r\n    const propertyParts = property.split('.');\r\n    const sourceName = propertyParts.pop();\r\n    const sourceScope = [scope].concat(propertyParts).join('.');\r\n    const parts = routes[property].split('.');\r\n    const targetName = parts.pop();\r\n    const targetScope = parts.join('.');\r\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\r\n  });\r\n}\r\nfunction isIChartComponent(proto) {\r\n  return 'id' in proto && 'defaults' in proto;\r\n}\r\n\r\nclass Registry {\r\n  constructor() {\r\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\r\n    this.elements = new TypedRegistry(Element, 'elements');\r\n    this.plugins = new TypedRegistry(Object, 'plugins');\r\n    this.scales = new TypedRegistry(Scale, 'scales');\r\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\r\n  }\r\n  add(...args) {\r\n    this._each('register', args);\r\n  }\r\n  remove(...args) {\r\n    this._each('unregister', args);\r\n  }\r\n  addControllers(...args) {\r\n    this._each('register', args, this.controllers);\r\n  }\r\n  addElements(...args) {\r\n    this._each('register', args, this.elements);\r\n  }\r\n  addPlugins(...args) {\r\n    this._each('register', args, this.plugins);\r\n  }\r\n  addScales(...args) {\r\n    this._each('register', args, this.scales);\r\n  }\r\n  getController(id) {\r\n    return this._get(id, this.controllers, 'controller');\r\n  }\r\n  getElement(id) {\r\n    return this._get(id, this.elements, 'element');\r\n  }\r\n  getPlugin(id) {\r\n    return this._get(id, this.plugins, 'plugin');\r\n  }\r\n  getScale(id) {\r\n    return this._get(id, this.scales, 'scale');\r\n  }\r\n  removeControllers(...args) {\r\n    this._each('unregister', args, this.controllers);\r\n  }\r\n  removeElements(...args) {\r\n    this._each('unregister', args, this.elements);\r\n  }\r\n  removePlugins(...args) {\r\n    this._each('unregister', args, this.plugins);\r\n  }\r\n  removeScales(...args) {\r\n    this._each('unregister', args, this.scales);\r\n  }\r\n  _each(method, args, typedRegistry) {\r\n    const me = this;\r\n    [...args].forEach(arg => {\r\n      const reg = typedRegistry || me._getRegistryForType(arg);\r\n      if (typedRegistry || reg.isForType(arg) || (reg === me.plugins && arg.id)) {\r\n        me._exec(method, reg, arg);\r\n      } else {\r\n        each(arg, item => {\r\n          const itemReg = typedRegistry || me._getRegistryForType(item);\r\n          me._exec(method, itemReg, item);\r\n        });\r\n      }\r\n    });\r\n  }\r\n  _exec(method, registry, component) {\r\n    const camelMethod = _capitalize(method);\r\n    callback(component['before' + camelMethod], [], component);\r\n    registry[method](component);\r\n    callback(component['after' + camelMethod], [], component);\r\n  }\r\n  _getRegistryForType(type) {\r\n    for (let i = 0; i < this._typedRegistries.length; i++) {\r\n      const reg = this._typedRegistries[i];\r\n      if (reg.isForType(type)) {\r\n        return reg;\r\n      }\r\n    }\r\n    return this.plugins;\r\n  }\r\n  _get(id, typedRegistry, type) {\r\n    const item = typedRegistry.get(id);\r\n    if (item === undefined) {\r\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\r\n    }\r\n    return item;\r\n  }\r\n}\r\nvar registry = new Registry();\r\n\r\nclass PluginService {\r\n  constructor() {\r\n    this._init = [];\r\n  }\r\n  notify(chart, hook, args) {\r\n    const me = this;\r\n    if (hook === 'beforeInit') {\r\n      me._init = me._createDescriptors(chart, true);\r\n      me._notify(me._init, chart, 'install');\r\n    }\r\n    const descriptors = me._descriptors(chart);\r\n    const result = me._notify(descriptors, chart, hook, args);\r\n    if (hook === 'destroy') {\r\n      me._notify(descriptors, chart, 'stop');\r\n      me._notify(me._init, chart, 'uninstall');\r\n    }\r\n    return result;\r\n  }\r\n  _notify(descriptors, chart, hook, args) {\r\n    args = args || {};\r\n    for (const descriptor of descriptors) {\r\n      const plugin = descriptor.plugin;\r\n      const method = plugin[hook];\r\n      const params = [chart, args, descriptor.options];\r\n      if (callback(method, params, plugin) === false && args.cancelable) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n  invalidate() {\r\n    if (!isNullOrUndef(this._cache)) {\r\n      this._oldCache = this._cache;\r\n      this._cache = undefined;\r\n    }\r\n  }\r\n  _descriptors(chart) {\r\n    if (this._cache) {\r\n      return this._cache;\r\n    }\r\n    const descriptors = this._cache = this._createDescriptors(chart);\r\n    this._notifyStateChanges(chart);\r\n    return descriptors;\r\n  }\r\n  _createDescriptors(chart, all) {\r\n    const config = chart && chart.config;\r\n    const options = valueOrDefault(config.options && config.options.plugins, {});\r\n    const plugins = allPlugins(config);\r\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\r\n  }\r\n  _notifyStateChanges(chart) {\r\n    const previousDescriptors = this._oldCache || [];\r\n    const descriptors = this._cache;\r\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\r\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\r\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\r\n  }\r\n}\r\nfunction allPlugins(config) {\r\n  const plugins = [];\r\n  const keys = Object.keys(registry.plugins.items);\r\n  for (let i = 0; i < keys.length; i++) {\r\n    plugins.push(registry.getPlugin(keys[i]));\r\n  }\r\n  const local = config.plugins || [];\r\n  for (let i = 0; i < local.length; i++) {\r\n    const plugin = local[i];\r\n    if (plugins.indexOf(plugin) === -1) {\r\n      plugins.push(plugin);\r\n    }\r\n  }\r\n  return plugins;\r\n}\r\nfunction getOpts(options, all) {\r\n  if (!all && options === false) {\r\n    return null;\r\n  }\r\n  if (options === true) {\r\n    return {};\r\n  }\r\n  return options;\r\n}\r\nfunction createDescriptors(chart, plugins, options, all) {\r\n  const result = [];\r\n  const context = chart.getContext();\r\n  for (let i = 0; i < plugins.length; i++) {\r\n    const plugin = plugins[i];\r\n    const id = plugin.id;\r\n    const opts = getOpts(options[id], all);\r\n    if (opts === null) {\r\n      continue;\r\n    }\r\n    result.push({\r\n      plugin,\r\n      options: pluginOpts(chart.config, plugin, opts, context)\r\n    });\r\n  }\r\n  return result;\r\n}\r\nfunction pluginOpts(config, plugin, opts, context) {\r\n  const keys = config.pluginScopeKeys(plugin);\r\n  const scopes = config.getOptionScopes(opts, keys);\r\n  return config.createResolver(scopes, context, [''], {scriptable: false, indexable: false, allKeys: true});\r\n}\r\n\r\nfunction getIndexAxis(type, options) {\r\n  const datasetDefaults = defaults.datasets[type] || {};\r\n  const datasetOptions = (options.datasets || {})[type] || {};\r\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\r\n}\r\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\r\n  let axis = id;\r\n  if (id === '_index_') {\r\n    axis = indexAxis;\r\n  } else if (id === '_value_') {\r\n    axis = indexAxis === 'x' ? 'y' : 'x';\r\n  }\r\n  return axis;\r\n}\r\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\r\n  return axis === indexAxis ? '_index_' : '_value_';\r\n}\r\nfunction axisFromPosition(position) {\r\n  if (position === 'top' || position === 'bottom') {\r\n    return 'x';\r\n  }\r\n  if (position === 'left' || position === 'right') {\r\n    return 'y';\r\n  }\r\n}\r\nfunction determineAxis(id, scaleOptions) {\r\n  if (id === 'x' || id === 'y') {\r\n    return id;\r\n  }\r\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\r\n}\r\nfunction mergeScaleConfig(config, options) {\r\n  const chartDefaults = overrides[config.type] || {scales: {}};\r\n  const configScales = options.scales || {};\r\n  const chartIndexAxis = getIndexAxis(config.type, options);\r\n  const firstIDs = Object.create(null);\r\n  const scales = Object.create(null);\r\n  Object.keys(configScales).forEach(id => {\r\n    const scaleConf = configScales[id];\r\n    const axis = determineAxis(id, scaleConf);\r\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\r\n    const defaultScaleOptions = chartDefaults.scales || {};\r\n    firstIDs[axis] = firstIDs[axis] || id;\r\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\r\n  });\r\n  config.data.datasets.forEach(dataset => {\r\n    const type = dataset.type || config.type;\r\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\r\n    const datasetDefaults = overrides[type] || {};\r\n    const defaultScaleOptions = datasetDefaults.scales || {};\r\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\r\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\r\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\r\n      scales[id] = scales[id] || Object.create(null);\r\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\r\n    });\r\n  });\r\n  Object.keys(scales).forEach(key => {\r\n    const scale = scales[key];\r\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\r\n  });\r\n  return scales;\r\n}\r\nfunction initOptions(config) {\r\n  const options = config.options || (config.options = {});\r\n  options.plugins = valueOrDefault(options.plugins, {});\r\n  options.scales = mergeScaleConfig(config, options);\r\n}\r\nfunction initConfig(config) {\r\n  config = config || {};\r\n  const data = config.data = config.data || {datasets: [], labels: []};\r\n  data.datasets = data.datasets || [];\r\n  data.labels = data.labels || [];\r\n  initOptions(config);\r\n  return config;\r\n}\r\nconst keyCache = new Map();\r\nconst keysCached = new Set();\r\nfunction cachedKeys(cacheKey, generate) {\r\n  let keys = keyCache.get(cacheKey);\r\n  if (!keys) {\r\n    keys = generate();\r\n    keyCache.set(cacheKey, keys);\r\n    keysCached.add(keys);\r\n  }\r\n  return keys;\r\n}\r\nconst addIfFound = (set, obj, key) => {\r\n  const opts = resolveObjectKey(obj, key);\r\n  if (opts !== undefined) {\r\n    set.add(opts);\r\n  }\r\n};\r\nclass Config {\r\n  constructor(config) {\r\n    this._config = initConfig(config);\r\n    this._scopeCache = new Map();\r\n    this._resolverCache = new Map();\r\n  }\r\n  get type() {\r\n    return this._config.type;\r\n  }\r\n  set type(type) {\r\n    this._config.type = type;\r\n  }\r\n  get data() {\r\n    return this._config.data;\r\n  }\r\n  set data(data) {\r\n    this._config.data = data;\r\n  }\r\n  get options() {\r\n    return this._config.options;\r\n  }\r\n  set options(options) {\r\n    this._config.options = options;\r\n  }\r\n  get plugins() {\r\n    return this._config.plugins;\r\n  }\r\n  update() {\r\n    const config = this._config;\r\n    this.clearCache();\r\n    initOptions(config);\r\n  }\r\n  clearCache() {\r\n    this._scopeCache.clear();\r\n    this._resolverCache.clear();\r\n  }\r\n  datasetScopeKeys(datasetType) {\r\n    return cachedKeys(datasetType,\r\n      () => [[\r\n        `datasets.${datasetType}`,\r\n        ''\r\n      ]]);\r\n  }\r\n  datasetAnimationScopeKeys(datasetType, transition) {\r\n    return cachedKeys(`${datasetType}.transition.${transition}`,\r\n      () => [\r\n        [\r\n          `datasets.${datasetType}.transitions.${transition}`,\r\n          `transitions.${transition}`,\r\n        ],\r\n        [\r\n          `datasets.${datasetType}`,\r\n          ''\r\n        ]\r\n      ]);\r\n  }\r\n  datasetElementScopeKeys(datasetType, elementType) {\r\n    return cachedKeys(`${datasetType}-${elementType}`,\r\n      () => [[\r\n        `datasets.${datasetType}.elements.${elementType}`,\r\n        `datasets.${datasetType}`,\r\n        `elements.${elementType}`,\r\n        ''\r\n      ]]);\r\n  }\r\n  pluginScopeKeys(plugin) {\r\n    const id = plugin.id;\r\n    const type = this.type;\r\n    return cachedKeys(`${type}-plugin-${id}`,\r\n      () => [[\r\n        `plugins.${id}`,\r\n        ...plugin.additionalOptionScopes || [],\r\n      ]]);\r\n  }\r\n  _cachedScopes(mainScope, resetCache) {\r\n    const _scopeCache = this._scopeCache;\r\n    let cache = _scopeCache.get(mainScope);\r\n    if (!cache || resetCache) {\r\n      cache = new Map();\r\n      _scopeCache.set(mainScope, cache);\r\n    }\r\n    return cache;\r\n  }\r\n  getOptionScopes(mainScope, keyLists, resetCache) {\r\n    const {options, type} = this;\r\n    const cache = this._cachedScopes(mainScope, resetCache);\r\n    const cached = cache.get(keyLists);\r\n    if (cached) {\r\n      return cached;\r\n    }\r\n    const scopes = new Set();\r\n    keyLists.forEach(keys => {\r\n      if (mainScope) {\r\n        scopes.add(mainScope);\r\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\r\n      }\r\n      keys.forEach(key => addIfFound(scopes, options, key));\r\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\r\n      keys.forEach(key => addIfFound(scopes, defaults, key));\r\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\r\n    });\r\n    const array = [...scopes];\r\n    if (keysCached.has(keyLists)) {\r\n      cache.set(keyLists, array);\r\n    }\r\n    return array;\r\n  }\r\n  chartOptionScopes() {\r\n    const {options, type} = this;\r\n    return [\r\n      options,\r\n      overrides[type] || {},\r\n      defaults.datasets[type] || {},\r\n      {type},\r\n      defaults,\r\n      descriptors\r\n    ];\r\n  }\r\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\r\n    const result = {$shared: true};\r\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\r\n    let options = resolver;\r\n    if (needContext(resolver, names)) {\r\n      result.$shared = false;\r\n      context = isFunction(context) ? context() : context;\r\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\r\n      options = _attachContext(resolver, context, subResolver);\r\n    }\r\n    for (const prop of names) {\r\n      result[prop] = options[prop];\r\n    }\r\n    return result;\r\n  }\r\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\r\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\r\n    return isObject(context)\r\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\r\n      : resolver;\r\n  }\r\n}\r\nfunction getResolver(resolverCache, scopes, prefixes) {\r\n  let cache = resolverCache.get(scopes);\r\n  if (!cache) {\r\n    cache = new Map();\r\n    resolverCache.set(scopes, cache);\r\n  }\r\n  const cacheKey = prefixes.join();\r\n  let cached = cache.get(cacheKey);\r\n  if (!cached) {\r\n    const resolver = _createResolver(scopes, prefixes);\r\n    cached = {\r\n      resolver,\r\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\r\n    };\r\n    cache.set(cacheKey, cached);\r\n  }\r\n  return cached;\r\n}\r\nfunction needContext(proxy, names) {\r\n  const {isScriptable, isIndexable} = _descriptors(proxy);\r\n  for (const prop of names) {\r\n    if ((isScriptable(prop) && isFunction(proxy[prop]))\r\n      || (isIndexable(prop) && isArray(proxy[prop]))) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\nvar version = \"3.0.0\";\r\n\r\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\r\nfunction positionIsHorizontal(position, axis) {\r\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\r\n}\r\nfunction compare2Level(l1, l2) {\r\n  return function(a, b) {\r\n    return a[l1] === b[l1]\r\n      ? a[l2] - b[l2]\r\n      : a[l1] - b[l1];\r\n  };\r\n}\r\nfunction onAnimationsComplete(context) {\r\n  const chart = context.chart;\r\n  const animationOptions = chart.options.animation;\r\n  chart.notifyPlugins('afterRender');\r\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\r\n}\r\nfunction onAnimationProgress(context) {\r\n  const chart = context.chart;\r\n  const animationOptions = chart.options.animation;\r\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\r\n}\r\nfunction isDomSupported() {\r\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\r\n}\r\nfunction getCanvas(item) {\r\n  if (isDomSupported() && typeof item === 'string') {\r\n    item = document.getElementById(item);\r\n  } else if (item && item.length) {\r\n    item = item[0];\r\n  }\r\n  if (item && item.canvas) {\r\n    item = item.canvas;\r\n  }\r\n  return item;\r\n}\r\nconst instances = {};\r\nconst getChart = (key) => {\r\n  const canvas = getCanvas(key);\r\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\r\n};\r\nclass Chart {\r\n  constructor(item, config) {\r\n    const me = this;\r\n    this.config = config = new Config(config);\r\n    const initialCanvas = getCanvas(item);\r\n    const existingChart = getChart(initialCanvas);\r\n    if (existingChart) {\r\n      throw new Error(\r\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\r\n\t\t\t\t' must be destroyed before the canvas can be reused.'\r\n      );\r\n    }\r\n    const options = config.createResolver(config.chartOptionScopes(), me.getContext());\r\n    this.platform = me._initializePlatform(initialCanvas, config);\r\n    const context = me.platform.acquireContext(initialCanvas, options.aspectRatio);\r\n    const canvas = context && context.canvas;\r\n    const height = canvas && canvas.height;\r\n    const width = canvas && canvas.width;\r\n    this.id = uid();\r\n    this.ctx = context;\r\n    this.canvas = canvas;\r\n    this.width = width;\r\n    this.height = height;\r\n    this._options = options;\r\n    this._aspectRatio = this.aspectRatio;\r\n    this._layers = [];\r\n    this._metasets = [];\r\n    this._stacks = undefined;\r\n    this.boxes = [];\r\n    this.currentDevicePixelRatio = undefined;\r\n    this.chartArea = undefined;\r\n    this._active = [];\r\n    this._lastEvent = undefined;\r\n    this._listeners = {};\r\n    this._sortedMetasets = [];\r\n    this.scales = {};\r\n    this.scale = undefined;\r\n    this._plugins = new PluginService();\r\n    this.$proxies = {};\r\n    this._hiddenIndices = {};\r\n    this.attached = false;\r\n    this._animationsDisabled = undefined;\r\n    this.$context = undefined;\r\n    this._doResize = debounce(() => this.update('resize'), options.resizeDelay || 0);\r\n    instances[me.id] = me;\r\n    if (!context || !canvas) {\r\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\r\n      return;\r\n    }\r\n    animator.listen(me, 'complete', onAnimationsComplete);\r\n    animator.listen(me, 'progress', onAnimationProgress);\r\n    me._initialize();\r\n    if (me.attached) {\r\n      me.update();\r\n    }\r\n  }\r\n  get aspectRatio() {\r\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\r\n    if (!isNullOrUndef(aspectRatio)) {\r\n      return aspectRatio;\r\n    }\r\n    if (maintainAspectRatio && _aspectRatio) {\r\n      return _aspectRatio;\r\n    }\r\n    return height ? width / height : null;\r\n  }\r\n  get data() {\r\n    return this.config.data;\r\n  }\r\n  set data(data) {\r\n    this.config.data = data;\r\n  }\r\n  get options() {\r\n    return this._options;\r\n  }\r\n  set options(options) {\r\n    this.config.options = options;\r\n  }\r\n  _initialize() {\r\n    const me = this;\r\n    me.notifyPlugins('beforeInit');\r\n    if (me.options.responsive) {\r\n      me.resize();\r\n    } else {\r\n      retinaScale(me, me.options.devicePixelRatio);\r\n    }\r\n    me.bindEvents();\r\n    me.notifyPlugins('afterInit');\r\n    return me;\r\n  }\r\n  _initializePlatform(canvas, config) {\r\n    if (config.platform) {\r\n      return new config.platform();\r\n    } else if (!isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\r\n      return new BasicPlatform();\r\n    }\r\n    return new DomPlatform();\r\n  }\r\n  clear() {\r\n    clearCanvas(this.canvas, this.ctx);\r\n    return this;\r\n  }\r\n  stop() {\r\n    animator.stop(this);\r\n    return this;\r\n  }\r\n  resize(width, height) {\r\n    if (!animator.running(this)) {\r\n      this._resize(width, height);\r\n    } else {\r\n      this._resizeBeforeDraw = {width, height};\r\n    }\r\n  }\r\n  _resize(width, height) {\r\n    const me = this;\r\n    const options = me.options;\r\n    const canvas = me.canvas;\r\n    const aspectRatio = options.maintainAspectRatio && me.aspectRatio;\r\n    const newSize = me.platform.getMaximumSize(canvas, width, height, aspectRatio);\r\n    const oldRatio = me.currentDevicePixelRatio;\r\n    const newRatio = options.devicePixelRatio || me.platform.getDevicePixelRatio();\r\n    if (me.width === newSize.width && me.height === newSize.height && oldRatio === newRatio) {\r\n      return;\r\n    }\r\n    me.width = newSize.width;\r\n    me.height = newSize.height;\r\n    me._aspectRatio = me.aspectRatio;\r\n    retinaScale(me, newRatio, true);\r\n    me.notifyPlugins('resize', {size: newSize});\r\n    callback(options.onResize, [me, newSize], me);\r\n    if (me.attached) {\r\n      if (me._doResize()) {\r\n        me.render();\r\n      }\r\n    }\r\n  }\r\n  ensureScalesHaveIDs() {\r\n    const options = this.options;\r\n    const scalesOptions = options.scales || {};\r\n    each(scalesOptions, (axisOptions, axisID) => {\r\n      axisOptions.id = axisID;\r\n    });\r\n  }\r\n  buildOrUpdateScales() {\r\n    const me = this;\r\n    const options = me.options;\r\n    const scaleOpts = options.scales;\r\n    const scales = me.scales;\r\n    const updated = Object.keys(scales).reduce((obj, id) => {\r\n      obj[id] = false;\r\n      return obj;\r\n    }, {});\r\n    let items = [];\r\n    if (scaleOpts) {\r\n      items = items.concat(\r\n        Object.keys(scaleOpts).map((id) => {\r\n          const scaleOptions = scaleOpts[id];\r\n          const axis = determineAxis(id, scaleOptions);\r\n          const isRadial = axis === 'r';\r\n          const isHorizontal = axis === 'x';\r\n          return {\r\n            options: scaleOptions,\r\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\r\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\r\n          };\r\n        })\r\n      );\r\n    }\r\n    each(items, (item) => {\r\n      const scaleOptions = item.options;\r\n      const id = scaleOptions.id;\r\n      const axis = determineAxis(id, scaleOptions);\r\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\r\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\r\n        scaleOptions.position = item.dposition;\r\n      }\r\n      updated[id] = true;\r\n      let scale = null;\r\n      if (id in scales && scales[id].type === scaleType) {\r\n        scale = scales[id];\r\n      } else {\r\n        const scaleClass = registry.getScale(scaleType);\r\n        scale = new scaleClass({\r\n          id,\r\n          type: scaleType,\r\n          ctx: me.ctx,\r\n          chart: me\r\n        });\r\n        scales[scale.id] = scale;\r\n      }\r\n      scale.init(scaleOptions, options);\r\n    });\r\n    each(updated, (hasUpdated, id) => {\r\n      if (!hasUpdated) {\r\n        delete scales[id];\r\n      }\r\n    });\r\n    each(scales, (scale) => {\r\n      layouts.configure(me, scale, scale.options);\r\n      layouts.addBox(me, scale);\r\n    });\r\n  }\r\n  _updateMetasetIndex(meta, index) {\r\n    const metasets = this._metasets;\r\n    const oldIndex = meta.index;\r\n    if (oldIndex !== index) {\r\n      metasets[oldIndex] = metasets[index];\r\n      metasets[index] = meta;\r\n      meta.index = index;\r\n    }\r\n  }\r\n  _updateMetasets() {\r\n    const me = this;\r\n    const metasets = me._metasets;\r\n    const numData = me.data.datasets.length;\r\n    const numMeta = metasets.length;\r\n    if (numMeta > numData) {\r\n      for (let i = numData; i < numMeta; ++i) {\r\n        me._destroyDatasetMeta(i);\r\n      }\r\n      metasets.splice(numData, numMeta - numData);\r\n    }\r\n    me._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\r\n  }\r\n  _removeUnreferencedMetasets() {\r\n    const me = this;\r\n    const {_metasets: metasets, data: {datasets}} = me;\r\n    if (metasets.length > datasets.length) {\r\n      delete me._stacks;\r\n    }\r\n    metasets.forEach((meta, index) => {\r\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\r\n        me._destroyDatasetMeta(index);\r\n      }\r\n    });\r\n  }\r\n  buildOrUpdateControllers() {\r\n    const me = this;\r\n    const newControllers = [];\r\n    const datasets = me.data.datasets;\r\n    let i, ilen;\r\n    me._removeUnreferencedMetasets();\r\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\r\n      const dataset = datasets[i];\r\n      let meta = me.getDatasetMeta(i);\r\n      const type = dataset.type || me.config.type;\r\n      if (meta.type && meta.type !== type) {\r\n        me._destroyDatasetMeta(i);\r\n        meta = me.getDatasetMeta(i);\r\n      }\r\n      meta.type = type;\r\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, me.options);\r\n      meta.order = dataset.order || 0;\r\n      me._updateMetasetIndex(meta, i);\r\n      meta.label = '' + dataset.label;\r\n      meta.visible = me.isDatasetVisible(i);\r\n      if (meta.controller) {\r\n        meta.controller.updateIndex(i);\r\n        meta.controller.linkScales();\r\n      } else {\r\n        const ControllerClass = registry.getController(type);\r\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\r\n        Object.assign(ControllerClass.prototype, {\r\n          dataElementType: registry.getElement(dataElementType),\r\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\r\n        });\r\n        meta.controller = new ControllerClass(me, i);\r\n        newControllers.push(meta.controller);\r\n      }\r\n    }\r\n    me._updateMetasets();\r\n    return newControllers;\r\n  }\r\n  _resetElements() {\r\n    const me = this;\r\n    each(me.data.datasets, (dataset, datasetIndex) => {\r\n      me.getDatasetMeta(datasetIndex).controller.reset();\r\n    }, me);\r\n  }\r\n  reset() {\r\n    this._resetElements();\r\n    this.notifyPlugins('reset');\r\n  }\r\n  update(mode) {\r\n    const me = this;\r\n    const config = me.config;\r\n    config.update();\r\n    me._options = config.createResolver(config.chartOptionScopes(), me.getContext());\r\n    each(me.scales, (scale) => {\r\n      layouts.removeBox(me, scale);\r\n    });\r\n    const animsDisabled = me._animationsDisabled = !me.options.animation;\r\n    me.ensureScalesHaveIDs();\r\n    me.buildOrUpdateScales();\r\n    me._plugins.invalidate();\r\n    if (me.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\r\n      return;\r\n    }\r\n    const newControllers = me.buildOrUpdateControllers();\r\n    me.notifyPlugins('beforeElementsUpdate');\r\n    let minPadding = 0;\r\n    for (let i = 0, ilen = me.data.datasets.length; i < ilen; i++) {\r\n      const {controller} = me.getDatasetMeta(i);\r\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\r\n      controller.buildOrUpdateElements(reset);\r\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\r\n    }\r\n    me._minPadding = minPadding;\r\n    me._updateLayout(minPadding);\r\n    if (!animsDisabled) {\r\n      each(newControllers, (controller) => {\r\n        controller.reset();\r\n      });\r\n    }\r\n    me._updateDatasets(mode);\r\n    me.notifyPlugins('afterUpdate', {mode});\r\n    me._layers.sort(compare2Level('z', '_idx'));\r\n    if (me._lastEvent) {\r\n      me._eventHandler(me._lastEvent, true);\r\n    }\r\n    me.render();\r\n  }\r\n  _updateLayout(minPadding) {\r\n    const me = this;\r\n    if (me.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\r\n      return;\r\n    }\r\n    layouts.update(me, me.width, me.height, minPadding);\r\n    const area = me.chartArea;\r\n    const noArea = area.width <= 0 || area.height <= 0;\r\n    me._layers = [];\r\n    each(me.boxes, (box) => {\r\n      if (noArea && box.position === 'chartArea') {\r\n        return;\r\n      }\r\n      if (box.configure) {\r\n        box.configure();\r\n      }\r\n      me._layers.push(...box._layers());\r\n    }, me);\r\n    me._layers.forEach((item, index) => {\r\n      item._idx = index;\r\n    });\r\n    me.notifyPlugins('afterLayout');\r\n  }\r\n  _updateDatasets(mode) {\r\n    const me = this;\r\n    const isFunction = typeof mode === 'function';\r\n    if (me.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\r\n      return;\r\n    }\r\n    for (let i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\r\n      me._updateDataset(i, isFunction ? mode({datasetIndex: i}) : mode);\r\n    }\r\n    me.notifyPlugins('afterDatasetsUpdate', {mode});\r\n  }\r\n  _updateDataset(index, mode) {\r\n    const me = this;\r\n    const meta = me.getDatasetMeta(index);\r\n    const args = {meta, index, mode, cancelable: true};\r\n    if (me.notifyPlugins('beforeDatasetUpdate', args) === false) {\r\n      return;\r\n    }\r\n    meta.controller._update(mode);\r\n    args.cancelable = false;\r\n    me.notifyPlugins('afterDatasetUpdate', args);\r\n  }\r\n  render() {\r\n    const me = this;\r\n    if (me.notifyPlugins('beforeRender', {cancelable: true}) === false) {\r\n      return;\r\n    }\r\n    if (animator.has(me)) {\r\n      if (me.attached && !animator.running(me)) {\r\n        animator.start(me);\r\n      }\r\n    } else {\r\n      me.draw();\r\n      onAnimationsComplete({chart: me});\r\n    }\r\n  }\r\n  draw() {\r\n    const me = this;\r\n    let i;\r\n    if (me._resizeBeforeDraw) {\r\n      const {width, height} = me._resizeBeforeDraw;\r\n      me._resize(width, height);\r\n      me._resizeBeforeDraw = null;\r\n    }\r\n    me.clear();\r\n    if (me.width <= 0 || me.height <= 0) {\r\n      return;\r\n    }\r\n    if (me.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\r\n      return;\r\n    }\r\n    const layers = me._layers;\r\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\r\n      layers[i].draw(me.chartArea);\r\n    }\r\n    me._drawDatasets();\r\n    for (; i < layers.length; ++i) {\r\n      layers[i].draw(me.chartArea);\r\n    }\r\n    me.notifyPlugins('afterDraw');\r\n  }\r\n  _getSortedDatasetMetas(filterVisible) {\r\n    const me = this;\r\n    const metasets = me._sortedMetasets;\r\n    const result = [];\r\n    let i, ilen;\r\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\r\n      const meta = metasets[i];\r\n      if (!filterVisible || meta.visible) {\r\n        result.push(meta);\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n  getSortedVisibleDatasetMetas() {\r\n    return this._getSortedDatasetMetas(true);\r\n  }\r\n  _drawDatasets() {\r\n    const me = this;\r\n    if (me.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\r\n      return;\r\n    }\r\n    const metasets = me.getSortedVisibleDatasetMetas();\r\n    for (let i = metasets.length - 1; i >= 0; --i) {\r\n      me._drawDataset(metasets[i]);\r\n    }\r\n    me.notifyPlugins('afterDatasetsDraw');\r\n  }\r\n  _drawDataset(meta) {\r\n    const me = this;\r\n    const ctx = me.ctx;\r\n    const clip = meta._clip;\r\n    const area = me.chartArea;\r\n    const args = {\r\n      meta,\r\n      index: meta.index,\r\n      cancelable: true\r\n    };\r\n    if (me.notifyPlugins('beforeDatasetDraw', args) === false) {\r\n      return;\r\n    }\r\n    clipArea(ctx, {\r\n      left: clip.left === false ? 0 : area.left - clip.left,\r\n      right: clip.right === false ? me.width : area.right + clip.right,\r\n      top: clip.top === false ? 0 : area.top - clip.top,\r\n      bottom: clip.bottom === false ? me.height : area.bottom + clip.bottom\r\n    });\r\n    meta.controller.draw();\r\n    unclipArea(ctx);\r\n    args.cancelable = false;\r\n    me.notifyPlugins('afterDatasetDraw', args);\r\n  }\r\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\r\n    const method = Interaction.modes[mode];\r\n    if (typeof method === 'function') {\r\n      return method(this, e, options, useFinalPosition);\r\n    }\r\n    return [];\r\n  }\r\n  getDatasetMeta(datasetIndex) {\r\n    const me = this;\r\n    const dataset = me.data.datasets[datasetIndex];\r\n    const metasets = me._metasets;\r\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\r\n    if (!meta) {\r\n      meta = metasets[datasetIndex] = {\r\n        type: null,\r\n        data: [],\r\n        dataset: null,\r\n        controller: null,\r\n        hidden: null,\r\n        xAxisID: null,\r\n        yAxisID: null,\r\n        order: dataset && dataset.order || 0,\r\n        index: datasetIndex,\r\n        _dataset: dataset,\r\n        _parsed: [],\r\n        _sorted: false\r\n      };\r\n    }\r\n    return meta;\r\n  }\r\n  getContext() {\r\n    return this.$context || (this.$context = {chart: this, type: 'chart'});\r\n  }\r\n  getVisibleDatasetCount() {\r\n    return this.getSortedVisibleDatasetMetas().length;\r\n  }\r\n  isDatasetVisible(datasetIndex) {\r\n    const dataset = this.data.datasets[datasetIndex];\r\n    if (!dataset) {\r\n      return false;\r\n    }\r\n    const meta = this.getDatasetMeta(datasetIndex);\r\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\r\n  }\r\n  setDatasetVisibility(datasetIndex, visible) {\r\n    const meta = this.getDatasetMeta(datasetIndex);\r\n    meta.hidden = !visible;\r\n  }\r\n  toggleDataVisibility(index) {\r\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\r\n  }\r\n  getDataVisibility(index) {\r\n    return !this._hiddenIndices[index];\r\n  }\r\n  _updateDatasetVisibility(datasetIndex, visible) {\r\n    const me = this;\r\n    const mode = visible ? 'show' : 'hide';\r\n    const meta = me.getDatasetMeta(datasetIndex);\r\n    const anims = meta.controller._resolveAnimations(undefined, mode);\r\n    me.setDatasetVisibility(datasetIndex, visible);\r\n    anims.update(meta, {visible});\r\n    me.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\r\n  }\r\n  hide(datasetIndex) {\r\n    this._updateDatasetVisibility(datasetIndex, false);\r\n  }\r\n  show(datasetIndex) {\r\n    this._updateDatasetVisibility(datasetIndex, true);\r\n  }\r\n  _destroyDatasetMeta(datasetIndex) {\r\n    const me = this;\r\n    const meta = me._metasets && me._metasets[datasetIndex];\r\n    if (meta && meta.controller) {\r\n      meta.controller._destroy();\r\n      delete me._metasets[datasetIndex];\r\n    }\r\n  }\r\n  destroy() {\r\n    const me = this;\r\n    const {canvas, ctx} = me;\r\n    let i, ilen;\r\n    me.stop();\r\n    animator.remove(me);\r\n    for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\r\n      me._destroyDatasetMeta(i);\r\n    }\r\n    me.config.clearCache();\r\n    if (canvas) {\r\n      me.unbindEvents();\r\n      clearCanvas(canvas, ctx);\r\n      me.platform.releaseContext(ctx);\r\n      me.canvas = null;\r\n      me.ctx = null;\r\n    }\r\n    me.notifyPlugins('destroy');\r\n    delete instances[me.id];\r\n  }\r\n  toBase64Image(...args) {\r\n    return this.canvas.toDataURL(...args);\r\n  }\r\n  bindEvents() {\r\n    const me = this;\r\n    const listeners = me._listeners;\r\n    const platform = me.platform;\r\n    const _add = (type, listener) => {\r\n      platform.addEventListener(me, type, listener);\r\n      listeners[type] = listener;\r\n    };\r\n    const _remove = (type, listener) => {\r\n      if (listeners[type]) {\r\n        platform.removeEventListener(me, type, listener);\r\n        delete listeners[type];\r\n      }\r\n    };\r\n    let listener = function(e, x, y) {\r\n      e.offsetX = x;\r\n      e.offsetY = y;\r\n      me._eventHandler(e);\r\n    };\r\n    each(me.options.events, (type) => _add(type, listener));\r\n    if (me.options.responsive) {\r\n      listener = (width, height) => {\r\n        if (me.canvas) {\r\n          me.resize(width, height);\r\n        }\r\n      };\r\n      let detached;\r\n      const attached = () => {\r\n        _remove('attach', attached);\r\n        me.attached = true;\r\n        me.resize();\r\n        _add('resize', listener);\r\n        _add('detach', detached);\r\n      };\r\n      detached = () => {\r\n        me.attached = false;\r\n        _remove('resize', listener);\r\n        _add('attach', attached);\r\n      };\r\n      if (platform.isAttached(me.canvas)) {\r\n        attached();\r\n      } else {\r\n        detached();\r\n      }\r\n    } else {\r\n      me.attached = true;\r\n    }\r\n  }\r\n  unbindEvents() {\r\n    const me = this;\r\n    const listeners = me._listeners;\r\n    if (!listeners) {\r\n      return;\r\n    }\r\n    delete me._listeners;\r\n    each(listeners, (listener, type) => {\r\n      me.platform.removeEventListener(me, type, listener);\r\n    });\r\n  }\r\n  updateHoverStyle(items, mode, enabled) {\r\n    const prefix = enabled ? 'set' : 'remove';\r\n    let meta, item, i, ilen;\r\n    if (mode === 'dataset') {\r\n      meta = this.getDatasetMeta(items[0].datasetIndex);\r\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\r\n    }\r\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\r\n      item = items[i];\r\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\r\n      if (controller) {\r\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\r\n      }\r\n    }\r\n  }\r\n  getActiveElements() {\r\n    return this._active || [];\r\n  }\r\n  setActiveElements(activeElements) {\r\n    const me = this;\r\n    const lastActive = me._active || [];\r\n    const active = activeElements.map(({datasetIndex, index}) => {\r\n      const meta = me.getDatasetMeta(datasetIndex);\r\n      if (!meta) {\r\n        throw new Error('No dataset found at index ' + datasetIndex);\r\n      }\r\n      return {\r\n        datasetIndex,\r\n        element: meta.data[index],\r\n        index,\r\n      };\r\n    });\r\n    const changed = !_elementsEqual(active, lastActive);\r\n    if (changed) {\r\n      me._active = active;\r\n      me._updateHoverStyles(active, lastActive);\r\n    }\r\n  }\r\n  notifyPlugins(hook, args) {\r\n    return this._plugins.notify(this, hook, args);\r\n  }\r\n  _updateHoverStyles(active, lastActive, replay) {\r\n    const me = this;\r\n    const hoverOptions = me.options.hover;\r\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\r\n    const deactivated = diff(lastActive, active);\r\n    const activated = replay ? active : diff(active, lastActive);\r\n    if (deactivated.length) {\r\n      me.updateHoverStyle(deactivated, hoverOptions.mode, false);\r\n    }\r\n    if (activated.length && hoverOptions.mode) {\r\n      me.updateHoverStyle(activated, hoverOptions.mode, true);\r\n    }\r\n  }\r\n  _eventHandler(e, replay) {\r\n    const me = this;\r\n    const args = {event: e, replay, cancelable: true};\r\n    if (me.notifyPlugins('beforeEvent', args) === false) {\r\n      return;\r\n    }\r\n    const changed = me._handleEvent(e, replay);\r\n    args.cancelable = false;\r\n    me.notifyPlugins('afterEvent', args);\r\n    if (changed || args.changed) {\r\n      me.render();\r\n    }\r\n    return me;\r\n  }\r\n  _handleEvent(e, replay) {\r\n    const me = this;\r\n    const {_active: lastActive = [], options} = me;\r\n    const hoverOptions = options.hover;\r\n    const useFinalPosition = replay;\r\n    let active = [];\r\n    let changed = false;\r\n    let lastEvent = null;\r\n    if (e.type !== 'mouseout') {\r\n      active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\r\n      lastEvent = e.type === 'click' ? me._lastEvent : e;\r\n    }\r\n    me._lastEvent = null;\r\n    callback(options.onHover, [e, active, me], me);\r\n    if (e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu') {\r\n      if (_isPointInArea(e, me.chartArea, me._minPadding)) {\r\n        callback(options.onClick, [e, active, me], me);\r\n      }\r\n    }\r\n    changed = !_elementsEqual(active, lastActive);\r\n    if (changed || replay) {\r\n      me._active = active;\r\n      me._updateHoverStyles(active, lastActive, replay);\r\n    }\r\n    me._lastEvent = lastEvent;\r\n    return changed;\r\n  }\r\n}\r\nconst invalidatePlugins = () => each(Chart.instances, (chart) => chart._plugins.invalidate());\r\nconst enumerable = true;\r\nObject.defineProperties(Chart, {\r\n  defaults: {\r\n    enumerable,\r\n    value: defaults\r\n  },\r\n  instances: {\r\n    enumerable,\r\n    value: instances\r\n  },\r\n  overrides: {\r\n    enumerable,\r\n    value: overrides\r\n  },\r\n  registry: {\r\n    enumerable,\r\n    value: registry\r\n  },\r\n  version: {\r\n    enumerable,\r\n    value: version\r\n  },\r\n  getChart: {\r\n    enumerable,\r\n    value: getChart\r\n  },\r\n  register: {\r\n    enumerable,\r\n    value: (...items) => {\r\n      registry.add(...items);\r\n      invalidatePlugins();\r\n    }\r\n  },\r\n  unregister: {\r\n    enumerable,\r\n    value: (...items) => {\r\n      registry.remove(...items);\r\n      invalidatePlugins();\r\n    }\r\n  }\r\n});\r\n\r\nfunction clipArc(ctx, element) {\r\n  const {startAngle, endAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\r\n  let angleMargin = pixelMargin / outerRadius;\r\n  ctx.beginPath();\r\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\r\n  if (innerRadius > pixelMargin) {\r\n    angleMargin = pixelMargin / innerRadius;\r\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\r\n  } else {\r\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\r\n  }\r\n  ctx.closePath();\r\n  ctx.clip();\r\n}\r\nfunction pathArc(ctx, element) {\r\n  const {x, y, startAngle, endAngle, pixelMargin} = element;\r\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\r\n  const innerRadius = element.innerRadius + pixelMargin;\r\n  ctx.beginPath();\r\n  ctx.arc(x, y, outerRadius, startAngle, endAngle);\r\n  ctx.arc(x, y, innerRadius, endAngle, startAngle, true);\r\n  ctx.closePath();\r\n}\r\nfunction drawArc(ctx, element) {\r\n  if (element.fullCircles) {\r\n    element.endAngle = element.startAngle + TAU;\r\n    pathArc(ctx, element);\r\n    for (let i = 0; i < element.fullCircles; ++i) {\r\n      ctx.fill();\r\n    }\r\n  }\r\n  if (!isNaN(element.circumference)) {\r\n    element.endAngle = element.startAngle + element.circumference % TAU;\r\n  }\r\n  pathArc(ctx, element);\r\n  ctx.fill();\r\n}\r\nfunction drawFullCircleBorders(ctx, element, inner) {\r\n  const {x, y, startAngle, endAngle, pixelMargin} = element;\r\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\r\n  const innerRadius = element.innerRadius + pixelMargin;\r\n  let i;\r\n  if (inner) {\r\n    element.endAngle = element.startAngle + TAU;\r\n    clipArc(ctx, element);\r\n    element.endAngle = endAngle;\r\n    if (element.endAngle === element.startAngle) {\r\n      element.endAngle += TAU;\r\n      element.fullCircles--;\r\n    }\r\n  }\r\n  ctx.beginPath();\r\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\r\n  for (i = 0; i < element.fullCircles; ++i) {\r\n    ctx.stroke();\r\n  }\r\n  ctx.beginPath();\r\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\r\n  for (i = 0; i < element.fullCircles; ++i) {\r\n    ctx.stroke();\r\n  }\r\n}\r\nfunction drawBorder(ctx, element) {\r\n  const {x, y, startAngle, endAngle, pixelMargin, options} = element;\r\n  const outerRadius = element.outerRadius;\r\n  const innerRadius = element.innerRadius + pixelMargin;\r\n  const inner = options.borderAlign === 'inner';\r\n  if (!options.borderWidth) {\r\n    return;\r\n  }\r\n  if (inner) {\r\n    ctx.lineWidth = options.borderWidth * 2;\r\n    ctx.lineJoin = 'round';\r\n  } else {\r\n    ctx.lineWidth = options.borderWidth;\r\n    ctx.lineJoin = 'bevel';\r\n  }\r\n  if (element.fullCircles) {\r\n    drawFullCircleBorders(ctx, element, inner);\r\n  }\r\n  if (inner) {\r\n    clipArc(ctx, element);\r\n  }\r\n  ctx.beginPath();\r\n  ctx.arc(x, y, outerRadius, startAngle, endAngle);\r\n  ctx.arc(x, y, innerRadius, endAngle, startAngle, true);\r\n  ctx.closePath();\r\n  ctx.stroke();\r\n}\r\nclass ArcElement extends Element {\r\n  constructor(cfg) {\r\n    super();\r\n    this.options = undefined;\r\n    this.circumference = undefined;\r\n    this.startAngle = undefined;\r\n    this.endAngle = undefined;\r\n    this.innerRadius = undefined;\r\n    this.outerRadius = undefined;\r\n    this.pixelMargin = 0;\r\n    this.fullCircles = 0;\r\n    if (cfg) {\r\n      Object.assign(this, cfg);\r\n    }\r\n  }\r\n  inRange(chartX, chartY, useFinalPosition) {\r\n    const point = this.getProps(['x', 'y'], useFinalPosition);\r\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\r\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\r\n      'startAngle',\r\n      'endAngle',\r\n      'innerRadius',\r\n      'outerRadius',\r\n      'circumference'\r\n    ], useFinalPosition);\r\n    const betweenAngles = circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\r\n    const withinRadius = (distance >= innerRadius && distance <= outerRadius);\r\n    return (betweenAngles && withinRadius);\r\n  }\r\n  getCenterPoint(useFinalPosition) {\r\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\r\n      'x',\r\n      'y',\r\n      'startAngle',\r\n      'endAngle',\r\n      'innerRadius',\r\n      'outerRadius'\r\n    ], useFinalPosition);\r\n    const halfAngle = (startAngle + endAngle) / 2;\r\n    const halfRadius = (innerRadius + outerRadius) / 2;\r\n    return {\r\n      x: x + Math.cos(halfAngle) * halfRadius,\r\n      y: y + Math.sin(halfAngle) * halfRadius\r\n    };\r\n  }\r\n  tooltipPosition(useFinalPosition) {\r\n    return this.getCenterPoint(useFinalPosition);\r\n  }\r\n  draw(ctx) {\r\n    const me = this;\r\n    const options = me.options;\r\n    const offset = options.offset || 0;\r\n    me.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\r\n    me.fullCircles = Math.floor(me.circumference / TAU);\r\n    if (me.circumference === 0 || me.innerRadius < 0 || me.outerRadius < 0) {\r\n      return;\r\n    }\r\n    ctx.save();\r\n    if (offset && me.circumference < TAU) {\r\n      const halfAngle = (me.startAngle + me.endAngle) / 2;\r\n      ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\r\n    }\r\n    ctx.fillStyle = options.backgroundColor;\r\n    ctx.strokeStyle = options.borderColor;\r\n    drawArc(ctx, me);\r\n    drawBorder(ctx, me);\r\n    ctx.restore();\r\n  }\r\n}\r\nArcElement.id = 'arc';\r\nArcElement.defaults = {\r\n  borderAlign: 'center',\r\n  borderColor: '#fff',\r\n  borderWidth: 2,\r\n  offset: 0,\r\n  angle: undefined\r\n};\r\nArcElement.defaultRoutes = {\r\n  backgroundColor: 'backgroundColor'\r\n};\r\n\r\nfunction setStyle(ctx, vm) {\r\n  ctx.lineCap = vm.borderCapStyle;\r\n  ctx.setLineDash(vm.borderDash);\r\n  ctx.lineDashOffset = vm.borderDashOffset;\r\n  ctx.lineJoin = vm.borderJoinStyle;\r\n  ctx.lineWidth = vm.borderWidth;\r\n  ctx.strokeStyle = vm.borderColor;\r\n}\r\nfunction lineTo(ctx, previous, target) {\r\n  ctx.lineTo(target.x, target.y);\r\n}\r\nfunction getLineMethod(options) {\r\n  if (options.stepped) {\r\n    return _steppedLineTo;\r\n  }\r\n  if (options.tension) {\r\n    return _bezierCurveTo;\r\n  }\r\n  return lineTo;\r\n}\r\nfunction pathVars(points, segment, params) {\r\n  params = params || {};\r\n  const count = points.length;\r\n  const start = Math.max(params.start || 0, segment.start);\r\n  const end = Math.min(params.end || count - 1, segment.end);\r\n  return {\r\n    count,\r\n    start,\r\n    loop: segment.loop,\r\n    ilen: end < start ? count + end - start : end - start\r\n  };\r\n}\r\nfunction pathSegment(ctx, line, segment, params) {\r\n  const {points, options} = line;\r\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\r\n  const lineMethod = getLineMethod(options);\r\n  let {move = true, reverse} = params || {};\r\n  let i, point, prev;\r\n  for (i = 0; i <= ilen; ++i) {\r\n    point = points[(start + (reverse ? ilen - i : i)) % count];\r\n    if (point.skip) {\r\n      continue;\r\n    } else if (move) {\r\n      ctx.moveTo(point.x, point.y);\r\n      move = false;\r\n    } else {\r\n      lineMethod(ctx, prev, point, reverse, options.stepped);\r\n    }\r\n    prev = point;\r\n  }\r\n  if (loop) {\r\n    point = points[(start + (reverse ? ilen : 0)) % count];\r\n    lineMethod(ctx, prev, point, reverse, options.stepped);\r\n  }\r\n  return !!loop;\r\n}\r\nfunction fastPathSegment(ctx, line, segment, params) {\r\n  const points = line.points;\r\n  const {count, start, ilen} = pathVars(points, segment, params);\r\n  const {move = true, reverse} = params || {};\r\n  let avgX = 0;\r\n  let countX = 0;\r\n  let i, point, prevX, minY, maxY, lastY;\r\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\r\n  const drawX = () => {\r\n    if (minY !== maxY) {\r\n      ctx.lineTo(avgX, maxY);\r\n      ctx.lineTo(avgX, minY);\r\n      ctx.lineTo(avgX, lastY);\r\n    }\r\n  };\r\n  if (move) {\r\n    point = points[pointIndex(0)];\r\n    ctx.moveTo(point.x, point.y);\r\n  }\r\n  for (i = 0; i <= ilen; ++i) {\r\n    point = points[pointIndex(i)];\r\n    if (point.skip) {\r\n      continue;\r\n    }\r\n    const x = point.x;\r\n    const y = point.y;\r\n    const truncX = x | 0;\r\n    if (truncX === prevX) {\r\n      if (y < minY) {\r\n        minY = y;\r\n      } else if (y > maxY) {\r\n        maxY = y;\r\n      }\r\n      avgX = (countX * avgX + x) / ++countX;\r\n    } else {\r\n      drawX();\r\n      ctx.lineTo(x, y);\r\n      prevX = truncX;\r\n      countX = 0;\r\n      minY = maxY = y;\r\n    }\r\n    lastY = y;\r\n  }\r\n  drawX();\r\n}\r\nfunction _getSegmentMethod(line) {\r\n  const opts = line.options;\r\n  const borderDash = opts.borderDash && opts.borderDash.length;\r\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && !opts.stepped && !borderDash;\r\n  return useFastPath ? fastPathSegment : pathSegment;\r\n}\r\nfunction _getInterpolationMethod(options) {\r\n  if (options.stepped) {\r\n    return _steppedInterpolation;\r\n  }\r\n  if (options.tension) {\r\n    return _bezierInterpolation;\r\n  }\r\n  return _pointInLine;\r\n}\r\nfunction strokePathWithCache(ctx, line, start, count) {\r\n  let path = line._path;\r\n  if (!path) {\r\n    path = line._path = new Path2D();\r\n    if (line.path(path, start, count)) {\r\n      path.closePath();\r\n    }\r\n  }\r\n  ctx.stroke(path);\r\n}\r\nfunction strokePathDirect(ctx, line, start, count) {\r\n  ctx.beginPath();\r\n  if (line.path(ctx, start, count)) {\r\n    ctx.closePath();\r\n  }\r\n  ctx.stroke();\r\n}\r\nconst usePath2D = typeof Path2D === 'function';\r\nconst strokePath = usePath2D ? strokePathWithCache : strokePathDirect;\r\nclass LineElement extends Element {\r\n  constructor(cfg) {\r\n    super();\r\n    this.animated = true;\r\n    this.options = undefined;\r\n    this._loop = undefined;\r\n    this._fullLoop = undefined;\r\n    this._path = undefined;\r\n    this._points = undefined;\r\n    this._segments = undefined;\r\n    this._decimated = false;\r\n    this._pointsUpdated = false;\r\n    if (cfg) {\r\n      Object.assign(this, cfg);\r\n    }\r\n  }\r\n  updateControlPoints(chartArea) {\r\n    const me = this;\r\n    const options = me.options;\r\n    if (options.tension && !options.stepped && !me._pointsUpdated) {\r\n      const loop = options.spanGaps ? me._loop : me._fullLoop;\r\n      _updateBezierControlPoints(me._points, options, chartArea, loop);\r\n      me._pointsUpdated = true;\r\n    }\r\n  }\r\n  set points(points) {\r\n    const me = this;\r\n    me._points = points;\r\n    delete me._segments;\r\n    delete me._path;\r\n    me._pointsUpdated = false;\r\n  }\r\n  get points() {\r\n    return this._points;\r\n  }\r\n  get segments() {\r\n    return this._segments || (this._segments = _computeSegments(this));\r\n  }\r\n  first() {\r\n    const segments = this.segments;\r\n    const points = this.points;\r\n    return segments.length && points[segments[0].start];\r\n  }\r\n  last() {\r\n    const segments = this.segments;\r\n    const points = this.points;\r\n    const count = segments.length;\r\n    return count && points[segments[count - 1].end];\r\n  }\r\n  interpolate(point, property) {\r\n    const me = this;\r\n    const options = me.options;\r\n    const value = point[property];\r\n    const points = me.points;\r\n    const segments = _boundSegments(me, {property, start: value, end: value});\r\n    if (!segments.length) {\r\n      return;\r\n    }\r\n    const result = [];\r\n    const _interpolate = _getInterpolationMethod(options);\r\n    let i, ilen;\r\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\r\n      const {start, end} = segments[i];\r\n      const p1 = points[start];\r\n      const p2 = points[end];\r\n      if (p1 === p2) {\r\n        result.push(p1);\r\n        continue;\r\n      }\r\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\r\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\r\n      interpolated[property] = point[property];\r\n      result.push(interpolated);\r\n    }\r\n    return result.length === 1 ? result[0] : result;\r\n  }\r\n  pathSegment(ctx, segment, params) {\r\n    const segmentMethod = _getSegmentMethod(this);\r\n    return segmentMethod(ctx, this, segment, params);\r\n  }\r\n  path(ctx, start, count) {\r\n    const me = this;\r\n    const segments = me.segments;\r\n    const ilen = segments.length;\r\n    const segmentMethod = _getSegmentMethod(me);\r\n    let loop = me._loop;\r\n    start = start || 0;\r\n    count = count || (me.points.length - start);\r\n    for (let i = 0; i < ilen; ++i) {\r\n      loop &= segmentMethod(ctx, me, segments[i], {start, end: start + count - 1});\r\n    }\r\n    return !!loop;\r\n  }\r\n  draw(ctx, chartArea, start, count) {\r\n    const me = this;\r\n    const options = me.options || {};\r\n    const points = me.points || [];\r\n    if (!points.length || !options.borderWidth) {\r\n      return;\r\n    }\r\n    ctx.save();\r\n    setStyle(ctx, options);\r\n    strokePath(ctx, me, start, count);\r\n    ctx.restore();\r\n    if (me.animated) {\r\n      me._pointsUpdated = false;\r\n      me._path = undefined;\r\n    }\r\n  }\r\n}\r\nLineElement.id = 'line';\r\nLineElement.defaults = {\r\n  borderCapStyle: 'butt',\r\n  borderDash: [],\r\n  borderDashOffset: 0,\r\n  borderJoinStyle: 'miter',\r\n  borderWidth: 3,\r\n  capBezierPoints: true,\r\n  cubicInterpolationMode: 'default',\r\n  fill: false,\r\n  spanGaps: false,\r\n  stepped: false,\r\n  tension: 0,\r\n};\r\nLineElement.defaultRoutes = {\r\n  backgroundColor: 'backgroundColor',\r\n  borderColor: 'borderColor'\r\n};\r\nLineElement.descriptors = {\r\n  _scriptable: true,\r\n  _indexable: (name) => name !== 'borderDash' && name !== 'fill',\r\n};\r\n\r\nfunction inRange$1(el, pos, axis, useFinalPosition) {\r\n  const options = el.options;\r\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\r\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\r\n}\r\nclass PointElement extends Element {\r\n  constructor(cfg) {\r\n    super();\r\n    this.options = undefined;\r\n    this.skip = undefined;\r\n    this.stop = undefined;\r\n    if (cfg) {\r\n      Object.assign(this, cfg);\r\n    }\r\n  }\r\n  inRange(mouseX, mouseY, useFinalPosition) {\r\n    const options = this.options;\r\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\r\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\r\n  }\r\n  inXRange(mouseX, useFinalPosition) {\r\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\r\n  }\r\n  inYRange(mouseY, useFinalPosition) {\r\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\r\n  }\r\n  getCenterPoint(useFinalPosition) {\r\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\r\n    return {x, y};\r\n  }\r\n  size(options) {\r\n    options = options || this.options || {};\r\n    let radius = options.radius || 0;\r\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\r\n    const borderWidth = radius && options.borderWidth || 0;\r\n    return (radius + borderWidth) * 2;\r\n  }\r\n  draw(ctx) {\r\n    const me = this;\r\n    const options = me.options;\r\n    if (me.skip || options.radius < 0.1) {\r\n      return;\r\n    }\r\n    ctx.strokeStyle = options.borderColor;\r\n    ctx.lineWidth = options.borderWidth;\r\n    ctx.fillStyle = options.backgroundColor;\r\n    drawPoint(ctx, options, me.x, me.y);\r\n  }\r\n  getRange() {\r\n    const options = this.options || {};\r\n    return options.radius + options.hitRadius;\r\n  }\r\n}\r\nPointElement.id = 'point';\r\nPointElement.defaults = {\r\n  borderWidth: 1,\r\n  hitRadius: 1,\r\n  hoverBorderWidth: 1,\r\n  hoverRadius: 4,\r\n  pointStyle: 'circle',\r\n  radius: 3,\r\n  rotation: 0\r\n};\r\nPointElement.defaultRoutes = {\r\n  backgroundColor: 'backgroundColor',\r\n  borderColor: 'borderColor'\r\n};\r\n\r\nfunction getBarBounds(bar, useFinalPosition) {\r\n  const {x, y, base, width, height} = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\r\n  let left, right, top, bottom, half;\r\n  if (bar.horizontal) {\r\n    half = height / 2;\r\n    left = Math.min(x, base);\r\n    right = Math.max(x, base);\r\n    top = y - half;\r\n    bottom = y + half;\r\n  } else {\r\n    half = width / 2;\r\n    left = x - half;\r\n    right = x + half;\r\n    top = Math.min(y, base);\r\n    bottom = Math.max(y, base);\r\n  }\r\n  return {left, top, right, bottom};\r\n}\r\nfunction parseBorderSkipped(bar) {\r\n  let edge = bar.options.borderSkipped;\r\n  const res = {};\r\n  if (!edge) {\r\n    return res;\r\n  }\r\n  edge = bar.horizontal\r\n    ? parseEdge(edge, 'left', 'right', bar.base > bar.x)\r\n    : parseEdge(edge, 'bottom', 'top', bar.base < bar.y);\r\n  res[edge] = true;\r\n  return res;\r\n}\r\nfunction parseEdge(edge, a, b, reverse) {\r\n  if (reverse) {\r\n    edge = swap(edge, a, b);\r\n    edge = startEnd(edge, b, a);\r\n  } else {\r\n    edge = startEnd(edge, a, b);\r\n  }\r\n  return edge;\r\n}\r\nfunction swap(orig, v1, v2) {\r\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\r\n}\r\nfunction startEnd(v, start, end) {\r\n  return v === 'start' ? start : v === 'end' ? end : v;\r\n}\r\nfunction skipOrLimit(skip, value, min, max) {\r\n  return skip ? 0 : Math.max(Math.min(value, max), min);\r\n}\r\nfunction parseBorderWidth(bar, maxW, maxH) {\r\n  const value = bar.options.borderWidth;\r\n  const skip = parseBorderSkipped(bar);\r\n  const o = toTRBL(value);\r\n  return {\r\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\r\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\r\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\r\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\r\n  };\r\n}\r\nfunction parseBorderRadius(bar, maxW, maxH) {\r\n  const value = bar.options.borderRadius;\r\n  const o = toTRBLCorners(value);\r\n  const maxR = Math.min(maxW, maxH);\r\n  const skip = parseBorderSkipped(bar);\r\n  return {\r\n    topLeft: skipOrLimit(skip.top || skip.left, o.topLeft, 0, maxR),\r\n    topRight: skipOrLimit(skip.top || skip.right, o.topRight, 0, maxR),\r\n    bottomLeft: skipOrLimit(skip.bottom || skip.left, o.bottomLeft, 0, maxR),\r\n    bottomRight: skipOrLimit(skip.bottom || skip.right, o.bottomRight, 0, maxR)\r\n  };\r\n}\r\nfunction boundingRects(bar) {\r\n  const bounds = getBarBounds(bar);\r\n  const width = bounds.right - bounds.left;\r\n  const height = bounds.bottom - bounds.top;\r\n  const border = parseBorderWidth(bar, width / 2, height / 2);\r\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\r\n  return {\r\n    outer: {\r\n      x: bounds.left,\r\n      y: bounds.top,\r\n      w: width,\r\n      h: height,\r\n      radius\r\n    },\r\n    inner: {\r\n      x: bounds.left + border.l,\r\n      y: bounds.top + border.t,\r\n      w: width - border.l - border.r,\r\n      h: height - border.t - border.b,\r\n      radius: {\r\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\r\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\r\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\r\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\r\n      }\r\n    }\r\n  };\r\n}\r\nfunction inRange(bar, x, y, useFinalPosition) {\r\n  const skipX = x === null;\r\n  const skipY = y === null;\r\n  const skipBoth = skipX && skipY;\r\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\r\n  return bounds\r\n\t\t&& (skipX || x >= bounds.left && x <= bounds.right)\r\n\t\t&& (skipY || y >= bounds.top && y <= bounds.bottom);\r\n}\r\nfunction hasRadius(radius) {\r\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\r\n}\r\nfunction addRoundedRectPath(ctx, rect) {\r\n  const {x, y, w, h, radius} = rect;\r\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\r\n  ctx.lineTo(x, y + h - radius.bottomLeft);\r\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\r\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\r\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\r\n  ctx.lineTo(x + w, y + radius.topRight);\r\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\r\n  ctx.lineTo(x + radius.topLeft, y);\r\n}\r\nfunction addNormalRectPath(ctx, rect) {\r\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\r\n}\r\nclass BarElement extends Element {\r\n  constructor(cfg) {\r\n    super();\r\n    this.options = undefined;\r\n    this.horizontal = undefined;\r\n    this.base = undefined;\r\n    this.width = undefined;\r\n    this.height = undefined;\r\n    if (cfg) {\r\n      Object.assign(this, cfg);\r\n    }\r\n  }\r\n  draw(ctx) {\r\n    const options = this.options;\r\n    const {inner, outer} = boundingRects(this);\r\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\r\n    ctx.save();\r\n    if (outer.w !== inner.w || outer.h !== inner.h) {\r\n      ctx.beginPath();\r\n      addRectPath(ctx, outer);\r\n      ctx.clip();\r\n      addRectPath(ctx, inner);\r\n      ctx.fillStyle = options.borderColor;\r\n      ctx.fill('evenodd');\r\n    }\r\n    ctx.beginPath();\r\n    addRectPath(ctx, inner);\r\n    ctx.fillStyle = options.backgroundColor;\r\n    ctx.fill();\r\n    ctx.restore();\r\n  }\r\n  inRange(mouseX, mouseY, useFinalPosition) {\r\n    return inRange(this, mouseX, mouseY, useFinalPosition);\r\n  }\r\n  inXRange(mouseX, useFinalPosition) {\r\n    return inRange(this, mouseX, null, useFinalPosition);\r\n  }\r\n  inYRange(mouseY, useFinalPosition) {\r\n    return inRange(this, null, mouseY, useFinalPosition);\r\n  }\r\n  getCenterPoint(useFinalPosition) {\r\n    const {x, y, base, horizontal} = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\r\n    return {\r\n      x: horizontal ? (x + base) / 2 : x,\r\n      y: horizontal ? y : (y + base) / 2\r\n    };\r\n  }\r\n  getRange(axis) {\r\n    return axis === 'x' ? this.width / 2 : this.height / 2;\r\n  }\r\n}\r\nBarElement.id = 'bar';\r\nBarElement.defaults = {\r\n  borderSkipped: 'start',\r\n  borderWidth: 0,\r\n  borderRadius: 0,\r\n  pointStyle: undefined\r\n};\r\nBarElement.defaultRoutes = {\r\n  backgroundColor: 'backgroundColor',\r\n  borderColor: 'borderColor'\r\n};\r\n\r\nvar elements = /*#__PURE__*/Object.freeze({\r\n__proto__: null,\r\nArcElement: ArcElement,\r\nLineElement: LineElement,\r\nPointElement: PointElement,\r\nBarElement: BarElement\r\n});\r\n\r\nfunction lttbDecimation(data, availableWidth, options) {\r\n  const samples = options.samples || availableWidth;\r\n  const decimated = [];\r\n  const bucketWidth = (data.length - 2) / (samples - 2);\r\n  let sampledIndex = 0;\r\n  let a = 0;\r\n  let i, maxAreaPoint, maxArea, area, nextA;\r\n  decimated[sampledIndex++] = data[a];\r\n  for (i = 0; i < samples - 2; i++) {\r\n    let avgX = 0;\r\n    let avgY = 0;\r\n    let j;\r\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1;\r\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, data.length);\r\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\r\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\r\n      avgX = data[j].x;\r\n      avgY = data[j].y;\r\n    }\r\n    avgX /= avgRangeLength;\r\n    avgY /= avgRangeLength;\r\n    const rangeOffs = Math.floor(i * bucketWidth) + 1;\r\n    const rangeTo = Math.floor((i + 1) * bucketWidth) + 1;\r\n    const {x: pointAx, y: pointAy} = data[a];\r\n    maxArea = area = -1;\r\n    for (j = rangeOffs; j < rangeTo; j++) {\r\n      area = 0.5 * Math.abs(\r\n        (pointAx - avgX) * (data[j].y - pointAy) -\r\n        (pointAx - data[j].x) * (avgY - pointAy)\r\n      );\r\n      if (area > maxArea) {\r\n        maxArea = area;\r\n        maxAreaPoint = data[j];\r\n        nextA = j;\r\n      }\r\n    }\r\n    decimated[sampledIndex++] = maxAreaPoint;\r\n    a = nextA;\r\n  }\r\n  decimated[sampledIndex++] = data[data.length - 1];\r\n  return decimated;\r\n}\r\nfunction minMaxDecimation(data, availableWidth) {\r\n  let avgX = 0;\r\n  let countX = 0;\r\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\r\n  const decimated = [];\r\n  const xMin = data[0].x;\r\n  const xMax = data[data.length - 1].x;\r\n  const dx = xMax - xMin;\r\n  for (i = 0; i < data.length; ++i) {\r\n    point = data[i];\r\n    x = (point.x - xMin) / dx * availableWidth;\r\n    y = point.y;\r\n    const truncX = x | 0;\r\n    if (truncX === prevX) {\r\n      if (y < minY) {\r\n        minY = y;\r\n        minIndex = i;\r\n      } else if (y > maxY) {\r\n        maxY = y;\r\n        maxIndex = i;\r\n      }\r\n      avgX = (countX * avgX + point.x) / ++countX;\r\n    } else {\r\n      const lastIndex = i - 1;\r\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\r\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\r\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\r\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\r\n          decimated.push({\r\n            ...data[intermediateIndex1],\r\n            x: avgX,\r\n          });\r\n        }\r\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\r\n          decimated.push({\r\n            ...data[intermediateIndex2],\r\n            x: avgX\r\n          });\r\n        }\r\n      }\r\n      if (i > 0 && lastIndex !== startIndex) {\r\n        decimated.push(data[lastIndex]);\r\n      }\r\n      decimated.push(point);\r\n      prevX = truncX;\r\n      countX = 0;\r\n      minY = maxY = y;\r\n      minIndex = maxIndex = startIndex = i;\r\n    }\r\n  }\r\n  return decimated;\r\n}\r\nvar plugin_decimation = {\r\n  id: 'decimation',\r\n  defaults: {\r\n    algorithm: 'min-max',\r\n    enabled: false,\r\n  },\r\n  beforeElementsUpdate: (chart, args, options) => {\r\n    if (!options.enabled) {\r\n      return;\r\n    }\r\n    const availableWidth = chart.width;\r\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\r\n      const {_data, indexAxis} = dataset;\r\n      const meta = chart.getDatasetMeta(datasetIndex);\r\n      const data = _data || dataset.data;\r\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\r\n        return;\r\n      }\r\n      if (meta.type !== 'line') {\r\n        return;\r\n      }\r\n      const xAxis = chart.scales[meta.xAxisID];\r\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\r\n        return;\r\n      }\r\n      if (chart.options.parsing) {\r\n        return;\r\n      }\r\n      if (data.length <= 4 * availableWidth) {\r\n        return;\r\n      }\r\n      if (isNullOrUndef(_data)) {\r\n        dataset._data = data;\r\n        delete dataset.data;\r\n        Object.defineProperty(dataset, 'data', {\r\n          configurable: true,\r\n          enumerable: true,\r\n          get: function() {\r\n            return this._decimated;\r\n          },\r\n          set: function(d) {\r\n            this._data = d;\r\n          }\r\n        });\r\n      }\r\n      let decimated;\r\n      switch (options.algorithm) {\r\n      case 'lttb':\r\n        decimated = lttbDecimation(data, availableWidth, options);\r\n        break;\r\n      case 'min-max':\r\n        decimated = minMaxDecimation(data, availableWidth);\r\n        break;\r\n      default:\r\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\r\n      }\r\n      dataset._decimated = decimated;\r\n    });\r\n  },\r\n  destroy(chart) {\r\n    chart.data.datasets.forEach((dataset) => {\r\n      if (dataset._decimated) {\r\n        const data = dataset._data;\r\n        delete dataset._decimated;\r\n        delete dataset._data;\r\n        Object.defineProperty(dataset, 'data', {value: data});\r\n      }\r\n    });\r\n  }\r\n};\r\n\r\nfunction getLineByIndex(chart, index) {\r\n  const meta = chart.getDatasetMeta(index);\r\n  const visible = meta && chart.isDatasetVisible(index);\r\n  return visible ? meta.dataset : null;\r\n}\r\nfunction parseFillOption(line) {\r\n  const options = line.options;\r\n  const fillOption = options.fill;\r\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\r\n  if (fill === undefined) {\r\n    fill = !!options.backgroundColor;\r\n  }\r\n  if (fill === false || fill === null) {\r\n    return false;\r\n  }\r\n  if (fill === true) {\r\n    return 'origin';\r\n  }\r\n  return fill;\r\n}\r\nfunction decodeFill(line, index, count) {\r\n  const fill = parseFillOption(line);\r\n  if (isObject(fill)) {\r\n    return isNaN(fill.value) ? false : fill;\r\n  }\r\n  let target = parseFloat(fill);\r\n  if (isNumberFinite(target) && Math.floor(target) === target) {\r\n    if (fill[0] === '-' || fill[0] === '+') {\r\n      target = index + target;\r\n    }\r\n    if (target === index || target < 0 || target >= count) {\r\n      return false;\r\n    }\r\n    return target;\r\n  }\r\n  return ['origin', 'start', 'end', 'stack'].indexOf(fill) >= 0 && fill;\r\n}\r\nfunction computeLinearBoundary(source) {\r\n  const {scale = {}, fill} = source;\r\n  let target = null;\r\n  let horizontal;\r\n  if (fill === 'start') {\r\n    target = scale.bottom;\r\n  } else if (fill === 'end') {\r\n    target = scale.top;\r\n  } else if (isObject(fill)) {\r\n    target = scale.getPixelForValue(fill.value);\r\n  } else if (scale.getBasePixel) {\r\n    target = scale.getBasePixel();\r\n  }\r\n  if (isNumberFinite(target)) {\r\n    horizontal = scale.isHorizontal();\r\n    return {\r\n      x: horizontal ? target : null,\r\n      y: horizontal ? null : target\r\n    };\r\n  }\r\n  return null;\r\n}\r\nclass simpleArc {\r\n  constructor(opts) {\r\n    this.x = opts.x;\r\n    this.y = opts.y;\r\n    this.radius = opts.radius;\r\n  }\r\n  pathSegment(ctx, bounds, opts) {\r\n    const {x, y, radius} = this;\r\n    bounds = bounds || {start: 0, end: TAU};\r\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\r\n    return !opts.bounds;\r\n  }\r\n  interpolate(point) {\r\n    const {x, y, radius} = this;\r\n    const angle = point.angle;\r\n    return {\r\n      x: x + Math.cos(angle) * radius,\r\n      y: y + Math.sin(angle) * radius,\r\n      angle\r\n    };\r\n  }\r\n}\r\nfunction computeCircularBoundary(source) {\r\n  const {scale, fill} = source;\r\n  const options = scale.options;\r\n  const length = scale.getLabels().length;\r\n  const target = [];\r\n  const start = options.reverse ? scale.max : scale.min;\r\n  const end = options.reverse ? scale.min : scale.max;\r\n  let i, center, value;\r\n  if (fill === 'start') {\r\n    value = start;\r\n  } else if (fill === 'end') {\r\n    value = end;\r\n  } else if (isObject(fill)) {\r\n    value = fill.value;\r\n  } else {\r\n    value = scale.getBaseValue();\r\n  }\r\n  if (options.grid.circular) {\r\n    center = scale.getPointPositionForValue(0, start);\r\n    return new simpleArc({\r\n      x: center.x,\r\n      y: center.y,\r\n      radius: scale.getDistanceFromCenterForValue(value)\r\n    });\r\n  }\r\n  for (i = 0; i < length; ++i) {\r\n    target.push(scale.getPointPositionForValue(i, value));\r\n  }\r\n  return target;\r\n}\r\nfunction computeBoundary(source) {\r\n  const scale = source.scale || {};\r\n  if (scale.getPointPositionForValue) {\r\n    return computeCircularBoundary(source);\r\n  }\r\n  return computeLinearBoundary(source);\r\n}\r\nfunction pointsFromSegments(boundary, line) {\r\n  const {x = null, y = null} = boundary || {};\r\n  const linePoints = line.points;\r\n  const points = [];\r\n  line.segments.forEach((segment) => {\r\n    const first = linePoints[segment.start];\r\n    const last = linePoints[segment.end];\r\n    if (y !== null) {\r\n      points.push({x: first.x, y});\r\n      points.push({x: last.x, y});\r\n    } else if (x !== null) {\r\n      points.push({x, y: first.y});\r\n      points.push({x, y: last.y});\r\n    }\r\n  });\r\n  return points;\r\n}\r\nfunction buildStackLine(source) {\r\n  const {chart, scale, index, line} = source;\r\n  const points = [];\r\n  const segments = line.segments;\r\n  const sourcePoints = line.points;\r\n  const linesBelow = getLinesBelow(chart, index);\r\n  linesBelow.push(createBoundaryLine({x: null, y: scale.bottom}, line));\r\n  for (let i = 0; i < segments.length; i++) {\r\n    const segment = segments[i];\r\n    for (let j = segment.start; j <= segment.end; j++) {\r\n      addPointsBelow(points, sourcePoints[j], linesBelow);\r\n    }\r\n  }\r\n  return new LineElement({points, options: {}});\r\n}\r\nconst isLineAndNotInHideAnimation = (meta) => meta.type === 'line' && !meta.hidden;\r\nfunction getLinesBelow(chart, index) {\r\n  const below = [];\r\n  const metas = chart.getSortedVisibleDatasetMetas();\r\n  for (let i = 0; i < metas.length; i++) {\r\n    const meta = metas[i];\r\n    if (meta.index === index) {\r\n      break;\r\n    }\r\n    if (isLineAndNotInHideAnimation(meta)) {\r\n      below.unshift(meta.dataset);\r\n    }\r\n  }\r\n  return below;\r\n}\r\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\r\n  const postponed = [];\r\n  for (let j = 0; j < linesBelow.length; j++) {\r\n    const line = linesBelow[j];\r\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\r\n    if (!point || (first && last)) {\r\n      continue;\r\n    }\r\n    if (first) {\r\n      postponed.unshift(point);\r\n    } else {\r\n      points.push(point);\r\n      if (!last) {\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  points.push(...postponed);\r\n}\r\nfunction findPoint(line, sourcePoint, property) {\r\n  const point = line.interpolate(sourcePoint, property);\r\n  if (!point) {\r\n    return {};\r\n  }\r\n  const pointValue = point[property];\r\n  const segments = line.segments;\r\n  const linePoints = line.points;\r\n  let first = false;\r\n  let last = false;\r\n  for (let i = 0; i < segments.length; i++) {\r\n    const segment = segments[i];\r\n    const firstValue = linePoints[segment.start][property];\r\n    const lastValue = linePoints[segment.end][property];\r\n    if (pointValue >= firstValue && pointValue <= lastValue) {\r\n      first = pointValue === firstValue;\r\n      last = pointValue === lastValue;\r\n      break;\r\n    }\r\n  }\r\n  return {first, last, point};\r\n}\r\nfunction getTarget(source) {\r\n  const {chart, fill, line} = source;\r\n  if (isNumberFinite(fill)) {\r\n    return getLineByIndex(chart, fill);\r\n  }\r\n  if (fill === 'stack') {\r\n    return buildStackLine(source);\r\n  }\r\n  const boundary = computeBoundary(source);\r\n  if (boundary instanceof simpleArc) {\r\n    return boundary;\r\n  }\r\n  return createBoundaryLine(boundary, line);\r\n}\r\nfunction createBoundaryLine(boundary, line) {\r\n  let points = [];\r\n  let _loop = false;\r\n  if (isArray(boundary)) {\r\n    _loop = true;\r\n    points = boundary;\r\n  } else {\r\n    points = pointsFromSegments(boundary, line);\r\n  }\r\n  return points.length ? new LineElement({\r\n    points,\r\n    options: {tension: 0},\r\n    _loop,\r\n    _fullLoop: _loop\r\n  }) : null;\r\n}\r\nfunction resolveTarget(sources, index, propagate) {\r\n  const source = sources[index];\r\n  let fill = source.fill;\r\n  const visited = [index];\r\n  let target;\r\n  if (!propagate) {\r\n    return fill;\r\n  }\r\n  while (fill !== false && visited.indexOf(fill) === -1) {\r\n    if (!isNumberFinite(fill)) {\r\n      return fill;\r\n    }\r\n    target = sources[fill];\r\n    if (!target) {\r\n      return false;\r\n    }\r\n    if (target.visible) {\r\n      return fill;\r\n    }\r\n    visited.push(fill);\r\n    fill = target.fill;\r\n  }\r\n  return false;\r\n}\r\nfunction _clip(ctx, target, clipY) {\r\n  ctx.beginPath();\r\n  target.path(ctx);\r\n  ctx.lineTo(target.last().x, clipY);\r\n  ctx.lineTo(target.first().x, clipY);\r\n  ctx.closePath();\r\n  ctx.clip();\r\n}\r\nfunction getBounds(property, first, last, loop) {\r\n  if (loop) {\r\n    return;\r\n  }\r\n  let start = first[property];\r\n  let end = last[property];\r\n  if (property === 'angle') {\r\n    start = _normalizeAngle(start);\r\n    end = _normalizeAngle(end);\r\n  }\r\n  return {property, start, end};\r\n}\r\nfunction _getEdge(a, b, prop, fn) {\r\n  if (a && b) {\r\n    return fn(a[prop], b[prop]);\r\n  }\r\n  return a ? a[prop] : b ? b[prop] : 0;\r\n}\r\nfunction _segments(line, target, property) {\r\n  const segments = line.segments;\r\n  const points = line.points;\r\n  const tpoints = target.points;\r\n  const parts = [];\r\n  for (let i = 0; i < segments.length; i++) {\r\n    const segment = segments[i];\r\n    const bounds = getBounds(property, points[segment.start], points[segment.end], segment.loop);\r\n    if (!target.segments) {\r\n      parts.push({\r\n        source: segment,\r\n        target: bounds,\r\n        start: points[segment.start],\r\n        end: points[segment.end]\r\n      });\r\n      continue;\r\n    }\r\n    const subs = _boundSegments(target, bounds);\r\n    for (let j = 0; j < subs.length; ++j) {\r\n      const sub = subs[j];\r\n      const subBounds = getBounds(property, tpoints[sub.start], tpoints[sub.end], sub.loop);\r\n      const fillSources = _boundSegment(segment, points, subBounds);\r\n      for (let k = 0; k < fillSources.length; k++) {\r\n        parts.push({\r\n          source: fillSources[k],\r\n          target: sub,\r\n          start: {\r\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\r\n          },\r\n          end: {\r\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }\r\n  return parts;\r\n}\r\nfunction clipBounds(ctx, scale, bounds) {\r\n  const {top, bottom} = scale.chart.chartArea;\r\n  const {property, start, end} = bounds || {};\r\n  if (property === 'x') {\r\n    ctx.beginPath();\r\n    ctx.rect(start, top, end - start, bottom - top);\r\n    ctx.clip();\r\n  }\r\n}\r\nfunction interpolatedLineTo(ctx, target, point, property) {\r\n  const interpolatedPoint = target.interpolate(point, property);\r\n  if (interpolatedPoint) {\r\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\r\n  }\r\n}\r\nfunction _fill(ctx, cfg) {\r\n  const {line, target, property, color, scale} = cfg;\r\n  const segments = _segments(line, target, property);\r\n  ctx.fillStyle = color;\r\n  for (let i = 0, ilen = segments.length; i < ilen; ++i) {\r\n    const {source: src, target: tgt, start, end} = segments[i];\r\n    ctx.save();\r\n    clipBounds(ctx, scale, getBounds(property, start, end));\r\n    ctx.beginPath();\r\n    const lineLoop = !!line.pathSegment(ctx, src);\r\n    if (lineLoop) {\r\n      ctx.closePath();\r\n    } else {\r\n      interpolatedLineTo(ctx, target, end, property);\r\n    }\r\n    const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\r\n    const loop = lineLoop && targetLoop;\r\n    if (!loop) {\r\n      interpolatedLineTo(ctx, target, start, property);\r\n    }\r\n    ctx.closePath();\r\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\r\n    ctx.restore();\r\n  }\r\n}\r\nfunction doFill(ctx, cfg) {\r\n  const {line, target, above, below, area, scale} = cfg;\r\n  const property = line._loop ? 'angle' : 'x';\r\n  ctx.save();\r\n  if (property === 'x' && below !== above) {\r\n    _clip(ctx, target, area.top);\r\n    _fill(ctx, {line, target, color: above, scale, property});\r\n    ctx.restore();\r\n    ctx.save();\r\n    _clip(ctx, target, area.bottom);\r\n  }\r\n  _fill(ctx, {line, target, color: below, scale, property});\r\n  ctx.restore();\r\n}\r\nvar plugin_filler = {\r\n  id: 'filler',\r\n  afterDatasetsUpdate(chart, _args, options) {\r\n    const count = (chart.data.datasets || []).length;\r\n    const propagate = options.propagate;\r\n    const sources = [];\r\n    let meta, i, line, source;\r\n    for (i = 0; i < count; ++i) {\r\n      meta = chart.getDatasetMeta(i);\r\n      line = meta.dataset;\r\n      source = null;\r\n      if (line && line.options && line instanceof LineElement) {\r\n        source = {\r\n          visible: chart.isDatasetVisible(i),\r\n          index: i,\r\n          fill: decodeFill(line, i, count),\r\n          chart,\r\n          scale: meta.vScale,\r\n          line\r\n        };\r\n      }\r\n      meta.$filler = source;\r\n      sources.push(source);\r\n    }\r\n    for (i = 0; i < count; ++i) {\r\n      source = sources[i];\r\n      if (!source || source.fill === false) {\r\n        continue;\r\n      }\r\n      source.fill = resolveTarget(sources, i, propagate);\r\n    }\r\n  },\r\n  beforeDatasetsDraw(chart) {\r\n    const metasets = chart.getSortedVisibleDatasetMetas();\r\n    const area = chart.chartArea;\r\n    let i, meta;\r\n    for (i = metasets.length - 1; i >= 0; --i) {\r\n      meta = metasets[i].$filler;\r\n      if (meta) {\r\n        meta.line.updateControlPoints(area);\r\n      }\r\n    }\r\n  },\r\n  beforeDatasetDraw(chart, args) {\r\n    const area = chart.chartArea;\r\n    const ctx = chart.ctx;\r\n    const source = args.meta.$filler;\r\n    if (!source || source.fill === false) {\r\n      return;\r\n    }\r\n    const target = getTarget(source);\r\n    const {line, scale} = source;\r\n    const lineOpts = line.options;\r\n    const fillOption = lineOpts.fill;\r\n    const color = lineOpts.backgroundColor;\r\n    const {above = color, below = color} = fillOption || {};\r\n    if (target && line.points.length) {\r\n      clipArea(ctx, area);\r\n      doFill(ctx, {line, target, above, below, area, scale});\r\n      unclipArea(ctx);\r\n    }\r\n  },\r\n  defaults: {\r\n    propagate: true\r\n  }\r\n};\r\n\r\nconst getBoxSize = (labelOpts, fontSize) => {\r\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\r\n  if (labelOpts.usePointStyle) {\r\n    boxHeight = Math.min(boxHeight, fontSize);\r\n    boxWidth = Math.min(boxWidth, fontSize);\r\n  }\r\n  return {\r\n    boxWidth,\r\n    boxHeight,\r\n    itemHeight: Math.max(fontSize, boxHeight)\r\n  };\r\n};\r\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\r\nclass Legend extends Element {\r\n  constructor(config) {\r\n    super();\r\n    this._added = false;\r\n    this.legendHitBoxes = [];\r\n    this._hoveredItem = null;\r\n    this.doughnutMode = false;\r\n    this.chart = config.chart;\r\n    this.options = config.options;\r\n    this.ctx = config.ctx;\r\n    this.legendItems = undefined;\r\n    this.columnSizes = undefined;\r\n    this.lineWidths = undefined;\r\n    this.maxHeight = undefined;\r\n    this.maxWidth = undefined;\r\n    this.top = undefined;\r\n    this.bottom = undefined;\r\n    this.left = undefined;\r\n    this.right = undefined;\r\n    this.height = undefined;\r\n    this.width = undefined;\r\n    this._margins = undefined;\r\n    this.position = undefined;\r\n    this.weight = undefined;\r\n    this.fullSize = undefined;\r\n  }\r\n  update(maxWidth, maxHeight, margins) {\r\n    const me = this;\r\n    me.maxWidth = maxWidth;\r\n    me.maxHeight = maxHeight;\r\n    me._margins = margins;\r\n    me.setDimensions();\r\n    me.buildLabels();\r\n    me.fit();\r\n  }\r\n  setDimensions() {\r\n    const me = this;\r\n    if (me.isHorizontal()) {\r\n      me.width = me.maxWidth;\r\n      me.left = 0;\r\n      me.right = me.width;\r\n    } else {\r\n      me.height = me.maxHeight;\r\n      me.top = 0;\r\n      me.bottom = me.height;\r\n    }\r\n  }\r\n  buildLabels() {\r\n    const me = this;\r\n    const labelOpts = me.options.labels || {};\r\n    let legendItems = callback(labelOpts.generateLabels, [me.chart], me) || [];\r\n    if (labelOpts.filter) {\r\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, me.chart.data));\r\n    }\r\n    if (labelOpts.sort) {\r\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, me.chart.data));\r\n    }\r\n    if (me.options.reverse) {\r\n      legendItems.reverse();\r\n    }\r\n    me.legendItems = legendItems;\r\n  }\r\n  fit() {\r\n    const me = this;\r\n    const {options, ctx} = me;\r\n    if (!options.display) {\r\n      me.width = me.height = 0;\r\n      return;\r\n    }\r\n    const labelOpts = options.labels;\r\n    const labelFont = toFont(labelOpts.font);\r\n    const fontSize = labelFont.size;\r\n    const titleHeight = me._computeTitleHeight();\r\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\r\n    let width, height;\r\n    ctx.font = labelFont.string;\r\n    if (me.isHorizontal()) {\r\n      width = me.maxWidth;\r\n      height = me._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\r\n    } else {\r\n      height = me.maxHeight;\r\n      width = me._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\r\n    }\r\n    me.width = Math.min(width, options.maxWidth || me.maxWidth);\r\n    me.height = Math.min(height, options.maxHeight || me.maxHeight);\r\n  }\r\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\r\n    const me = this;\r\n    const {ctx, maxWidth, options: {labels: {padding}}} = me;\r\n    const hitboxes = me.legendHitBoxes = [];\r\n    const lineWidths = me.lineWidths = [0];\r\n    const lineHeight = itemHeight + padding;\r\n    let totalHeight = titleHeight;\r\n    ctx.textAlign = 'left';\r\n    ctx.textBaseline = 'middle';\r\n    let row = -1;\r\n    let top = -lineHeight;\r\n    me.legendItems.forEach((legendItem, i) => {\r\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\r\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\r\n        totalHeight += lineHeight;\r\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\r\n        top += lineHeight;\r\n        row++;\r\n      }\r\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\r\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\r\n    });\r\n    return totalHeight;\r\n  }\r\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\r\n    const me = this;\r\n    const {ctx, maxHeight, options: {labels: {padding}}} = me;\r\n    const hitboxes = me.legendHitBoxes = [];\r\n    const columnSizes = me.columnSizes = [];\r\n    const heightLimit = maxHeight - titleHeight;\r\n    let totalWidth = padding;\r\n    let currentColWidth = 0;\r\n    let currentColHeight = 0;\r\n    let left = 0;\r\n    let top = 0;\r\n    let col = 0;\r\n    me.legendItems.forEach((legendItem, i) => {\r\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\r\n      if (i > 0 && currentColHeight + fontSize + 2 * padding > heightLimit) {\r\n        totalWidth += currentColWidth + padding;\r\n        columnSizes.push({width: currentColWidth, height: currentColHeight});\r\n        left += currentColWidth + padding;\r\n        col++;\r\n        top = 0;\r\n        currentColWidth = currentColHeight = 0;\r\n      }\r\n      currentColWidth = Math.max(currentColWidth, itemWidth);\r\n      currentColHeight += fontSize + padding;\r\n      hitboxes[i] = {left, top, col, width: itemWidth, height: itemHeight};\r\n      top += itemHeight + padding;\r\n    });\r\n    totalWidth += currentColWidth;\r\n    columnSizes.push({width: currentColWidth, height: currentColHeight});\r\n    return totalWidth;\r\n  }\r\n  adjustHitBoxes() {\r\n    const me = this;\r\n    if (!me.options.display) {\r\n      return;\r\n    }\r\n    const titleHeight = me._computeTitleHeight();\r\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}}} = me;\r\n    if (this.isHorizontal()) {\r\n      let row = 0;\r\n      let left = _alignStartEnd(align, me.left + padding, me.right - me.lineWidths[row]);\r\n      for (const hitbox of hitboxes) {\r\n        if (row !== hitbox.row) {\r\n          row = hitbox.row;\r\n          left = _alignStartEnd(align, me.left + padding, me.right - me.lineWidths[row]);\r\n        }\r\n        hitbox.top += me.top + titleHeight + padding;\r\n        hitbox.left = left;\r\n        left += hitbox.width + padding;\r\n      }\r\n    } else {\r\n      let col = 0;\r\n      let top = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\r\n      for (const hitbox of hitboxes) {\r\n        if (hitbox.col !== col) {\r\n          col = hitbox.col;\r\n          top = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\r\n        }\r\n        hitbox.top = top;\r\n        hitbox.left += me.left + padding;\r\n        top += hitbox.height + padding;\r\n      }\r\n    }\r\n  }\r\n  isHorizontal() {\r\n    return this.options.position === 'top' || this.options.position === 'bottom';\r\n  }\r\n  draw() {\r\n    const me = this;\r\n    if (me.options.display) {\r\n      const ctx = me.ctx;\r\n      clipArea(ctx, me);\r\n      me._draw();\r\n      unclipArea(ctx);\r\n    }\r\n  }\r\n  _draw() {\r\n    const me = this;\r\n    const {options: opts, columnSizes, lineWidths, ctx} = me;\r\n    const {align, labels: labelOpts} = opts;\r\n    const defaultColor = defaults.color;\r\n    const rtlHelper = getRtlAdapter(opts.rtl, me.left, me.width);\r\n    const labelFont = toFont(labelOpts.font);\r\n    const {color: fontColor, padding} = labelOpts;\r\n    const fontSize = labelFont.size;\r\n    const halfFontSize = fontSize / 2;\r\n    let cursor;\r\n    me.drawTitle();\r\n    ctx.textAlign = rtlHelper.textAlign('left');\r\n    ctx.textBaseline = 'middle';\r\n    ctx.lineWidth = 0.5;\r\n    ctx.strokeStyle = fontColor;\r\n    ctx.fillStyle = fontColor;\r\n    ctx.font = labelFont.string;\r\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\r\n    const drawLegendBox = function(x, y, legendItem) {\r\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\r\n        return;\r\n      }\r\n      ctx.save();\r\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\r\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\r\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\r\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\r\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\r\n      ctx.lineWidth = lineWidth;\r\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\r\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\r\n      if (labelOpts.usePointStyle) {\r\n        const drawOptions = {\r\n          radius: boxWidth * Math.SQRT2 / 2,\r\n          pointStyle: legendItem.pointStyle,\r\n          rotation: legendItem.rotation,\r\n          borderWidth: lineWidth\r\n        };\r\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\r\n        const centerY = y + halfFontSize;\r\n        drawPoint(ctx, drawOptions, centerX, centerY);\r\n      } else {\r\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\r\n        ctx.fillRect(rtlHelper.leftForLtr(x, boxWidth), yBoxTop, boxWidth, boxHeight);\r\n        if (lineWidth !== 0) {\r\n          ctx.strokeRect(rtlHelper.leftForLtr(x, boxWidth), yBoxTop, boxWidth, boxHeight);\r\n        }\r\n      }\r\n      ctx.restore();\r\n    };\r\n    const fillText = function(x, y, legendItem) {\r\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\r\n        strikethrough: legendItem.hidden,\r\n        textAlign: legendItem.textAlign\r\n      });\r\n    };\r\n    const isHorizontal = me.isHorizontal();\r\n    const titleHeight = this._computeTitleHeight();\r\n    if (isHorizontal) {\r\n      cursor = {\r\n        x: _alignStartEnd(align, me.left + padding, me.right - lineWidths[0]),\r\n        y: me.top + padding + titleHeight,\r\n        line: 0\r\n      };\r\n    } else {\r\n      cursor = {\r\n        x: me.left + padding,\r\n        y: _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - columnSizes[0].height),\r\n        line: 0\r\n      };\r\n    }\r\n    overrideTextDirection(me.ctx, opts.textDirection);\r\n    const lineHeight = itemHeight + padding;\r\n    me.legendItems.forEach((legendItem, i) => {\r\n      const textWidth = ctx.measureText(legendItem.text).width;\r\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\r\n      const width = boxWidth + (fontSize / 2) + textWidth;\r\n      let x = cursor.x;\r\n      let y = cursor.y;\r\n      rtlHelper.setWidth(me.width);\r\n      if (isHorizontal) {\r\n        if (i > 0 && x + width + padding > me.right) {\r\n          y = cursor.y += lineHeight;\r\n          cursor.line++;\r\n          x = cursor.x = _alignStartEnd(align, me.left + padding, me.right - lineWidths[cursor.line]);\r\n        }\r\n      } else if (i > 0 && y + lineHeight > me.bottom) {\r\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\r\n        cursor.line++;\r\n        y = cursor.y = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - columnSizes[cursor.line].height);\r\n      }\r\n      const realX = rtlHelper.x(x);\r\n      drawLegendBox(realX, y, legendItem);\r\n      x = _textX(textAlign, x + boxWidth + halfFontSize, me.right);\r\n      fillText(rtlHelper.x(x), y, legendItem);\r\n      if (isHorizontal) {\r\n        cursor.x += width + padding;\r\n      } else {\r\n        cursor.y += lineHeight;\r\n      }\r\n    });\r\n    restoreTextDirection(me.ctx, opts.textDirection);\r\n  }\r\n  drawTitle() {\r\n    const me = this;\r\n    const opts = me.options;\r\n    const titleOpts = opts.title;\r\n    const titleFont = toFont(titleOpts.font);\r\n    const titlePadding = toPadding(titleOpts.padding);\r\n    if (!titleOpts.display) {\r\n      return;\r\n    }\r\n    const rtlHelper = getRtlAdapter(opts.rtl, me.left, me.width);\r\n    const ctx = me.ctx;\r\n    const position = titleOpts.position;\r\n    const halfFontSize = titleFont.size / 2;\r\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\r\n    let y;\r\n    let left = me.left;\r\n    let maxWidth = me.width;\r\n    if (this.isHorizontal()) {\r\n      maxWidth = Math.max(...me.lineWidths);\r\n      y = me.top + topPaddingPlusHalfFontSize;\r\n      left = _alignStartEnd(opts.align, left, me.right - maxWidth);\r\n    } else {\r\n      const maxHeight = me.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\r\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, me.top, me.bottom - maxHeight - opts.labels.padding - me._computeTitleHeight());\r\n    }\r\n    const x = _alignStartEnd(position, left, left + maxWidth);\r\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\r\n    ctx.textBaseline = 'middle';\r\n    ctx.strokeStyle = titleOpts.color;\r\n    ctx.fillStyle = titleOpts.color;\r\n    ctx.font = titleFont.string;\r\n    renderText(ctx, titleOpts.text, x, y, titleFont);\r\n  }\r\n  _computeTitleHeight() {\r\n    const titleOpts = this.options.title;\r\n    const titleFont = toFont(titleOpts.font);\r\n    const titlePadding = toPadding(titleOpts.padding);\r\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\r\n  }\r\n  _getLegendItemAt(x, y) {\r\n    const me = this;\r\n    let i, hitBox, lh;\r\n    if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\r\n      lh = me.legendHitBoxes;\r\n      for (i = 0; i < lh.length; ++i) {\r\n        hitBox = lh[i];\r\n        if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\r\n          return me.legendItems[i];\r\n        }\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n  handleEvent(e) {\r\n    const me = this;\r\n    const opts = me.options;\r\n    if (!isListened(e.type, opts)) {\r\n      return;\r\n    }\r\n    const hoveredItem = me._getLegendItemAt(e.x, e.y);\r\n    if (e.type === 'mousemove') {\r\n      const previous = me._hoveredItem;\r\n      const sameItem = itemsEqual(previous, hoveredItem);\r\n      if (previous && !sameItem) {\r\n        callback(opts.onLeave, [e, previous, me], me);\r\n      }\r\n      me._hoveredItem = hoveredItem;\r\n      if (hoveredItem && !sameItem) {\r\n        callback(opts.onHover, [e, hoveredItem, me], me);\r\n      }\r\n    } else if (hoveredItem) {\r\n      callback(opts.onClick, [e, hoveredItem, me], me);\r\n    }\r\n  }\r\n}\r\nfunction isListened(type, opts) {\r\n  if (type === 'mousemove' && (opts.onHover || opts.onLeave)) {\r\n    return true;\r\n  }\r\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\nvar plugin_legend = {\r\n  id: 'legend',\r\n  _element: Legend,\r\n  start(chart, _args, options) {\r\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\r\n    layouts.configure(chart, legend, options);\r\n    layouts.addBox(chart, legend);\r\n  },\r\n  stop(chart) {\r\n    layouts.removeBox(chart, chart.legend);\r\n    delete chart.legend;\r\n  },\r\n  beforeUpdate(chart, _args, options) {\r\n    const legend = chart.legend;\r\n    layouts.configure(chart, legend, options);\r\n    legend.options = options;\r\n  },\r\n  afterUpdate(chart) {\r\n    const legend = chart.legend;\r\n    legend.buildLabels();\r\n    legend.adjustHitBoxes();\r\n  },\r\n  afterEvent(chart, args) {\r\n    if (!args.replay) {\r\n      chart.legend.handleEvent(args.event);\r\n    }\r\n  },\r\n  defaults: {\r\n    display: true,\r\n    position: 'top',\r\n    align: 'center',\r\n    fullSize: true,\r\n    reverse: false,\r\n    weight: 1000,\r\n    onClick(e, legendItem, legend) {\r\n      const index = legendItem.datasetIndex;\r\n      const ci = legend.chart;\r\n      if (ci.isDatasetVisible(index)) {\r\n        ci.hide(index);\r\n        legendItem.hidden = true;\r\n      } else {\r\n        ci.show(index);\r\n        legendItem.hidden = false;\r\n      }\r\n    },\r\n    onHover: null,\r\n    onLeave: null,\r\n    labels: {\r\n      color: (ctx) => ctx.chart.options.color,\r\n      boxWidth: 40,\r\n      padding: 10,\r\n      generateLabels(chart) {\r\n        const datasets = chart.data.datasets;\r\n        const {labels: {usePointStyle, pointStyle, textAlign}} = chart.legend.options;\r\n        return chart._getSortedDatasetMetas().map((meta) => {\r\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\r\n          const borderWidth = toPadding(style.borderWidth);\r\n          return {\r\n            text: datasets[meta.index].label,\r\n            fillStyle: style.backgroundColor,\r\n            hidden: !meta.visible,\r\n            lineCap: style.borderCapStyle,\r\n            lineDash: style.borderDash,\r\n            lineDashOffset: style.borderDashOffset,\r\n            lineJoin: style.borderJoinStyle,\r\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\r\n            strokeStyle: style.borderColor,\r\n            pointStyle: pointStyle || style.pointStyle,\r\n            rotation: style.rotation,\r\n            textAlign: textAlign || style.textAlign,\r\n            datasetIndex: meta.index\r\n          };\r\n        }, this);\r\n      }\r\n    },\r\n    title: {\r\n      color: (ctx) => ctx.chart.options.color,\r\n      display: false,\r\n      position: 'center',\r\n      text: '',\r\n    }\r\n  },\r\n  descriptors: {\r\n    _scriptable: (name) => !name.startsWith('on'),\r\n    labels: {\r\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\r\n    }\r\n  },\r\n};\r\n\r\nclass Title extends Element {\r\n  constructor(config) {\r\n    super();\r\n    this.chart = config.chart;\r\n    this.options = config.options;\r\n    this.ctx = config.ctx;\r\n    this._padding = undefined;\r\n    this.top = undefined;\r\n    this.bottom = undefined;\r\n    this.left = undefined;\r\n    this.right = undefined;\r\n    this.width = undefined;\r\n    this.height = undefined;\r\n    this.position = undefined;\r\n    this.weight = undefined;\r\n    this.fullSize = undefined;\r\n  }\r\n  update(maxWidth, maxHeight) {\r\n    const me = this;\r\n    const opts = me.options;\r\n    me.left = 0;\r\n    me.top = 0;\r\n    if (!opts.display) {\r\n      me.width = me.height = me.right = me.bottom = 0;\r\n      return;\r\n    }\r\n    me.width = me.right = maxWidth;\r\n    me.height = me.bottom = maxHeight;\r\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\r\n    me._padding = toPadding(opts.padding);\r\n    const textSize = lineCount * toFont(opts.font).lineHeight + me._padding.height;\r\n    if (me.isHorizontal()) {\r\n      me.height = textSize;\r\n    } else {\r\n      me.width = textSize;\r\n    }\r\n  }\r\n  isHorizontal() {\r\n    const pos = this.options.position;\r\n    return pos === 'top' || pos === 'bottom';\r\n  }\r\n  _drawArgs(offset) {\r\n    const {top, left, bottom, right, options} = this;\r\n    const align = options.align;\r\n    let rotation = 0;\r\n    let maxWidth, titleX, titleY;\r\n    if (this.isHorizontal()) {\r\n      titleX = _alignStartEnd(align, left, right);\r\n      titleY = top + offset;\r\n      maxWidth = right - left;\r\n    } else {\r\n      if (options.position === 'left') {\r\n        titleX = left + offset;\r\n        titleY = _alignStartEnd(align, bottom, top);\r\n        rotation = PI * -0.5;\r\n      } else {\r\n        titleX = right - offset;\r\n        titleY = _alignStartEnd(align, top, bottom);\r\n        rotation = PI * 0.5;\r\n      }\r\n      maxWidth = bottom - top;\r\n    }\r\n    return {titleX, titleY, maxWidth, rotation};\r\n  }\r\n  draw() {\r\n    const me = this;\r\n    const ctx = me.ctx;\r\n    const opts = me.options;\r\n    if (!opts.display) {\r\n      return;\r\n    }\r\n    const fontOpts = toFont(opts.font);\r\n    const lineHeight = fontOpts.lineHeight;\r\n    const offset = lineHeight / 2 + me._padding.top;\r\n    const {titleX, titleY, maxWidth, rotation} = me._drawArgs(offset);\r\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\r\n      color: opts.color,\r\n      maxWidth,\r\n      rotation,\r\n      textAlign: _toLeftRightCenter(opts.align),\r\n      textBaseline: 'middle',\r\n      translation: [titleX, titleY],\r\n    });\r\n  }\r\n}\r\nfunction createTitle(chart, titleOpts) {\r\n  const title = new Title({\r\n    ctx: chart.ctx,\r\n    options: titleOpts,\r\n    chart\r\n  });\r\n  layouts.configure(chart, title, titleOpts);\r\n  layouts.addBox(chart, title);\r\n  chart.titleBlock = title;\r\n}\r\nvar plugin_title = {\r\n  id: 'title',\r\n  _element: Title,\r\n  start(chart, _args, options) {\r\n    createTitle(chart, options);\r\n  },\r\n  stop(chart) {\r\n    const titleBlock = chart.titleBlock;\r\n    layouts.removeBox(chart, titleBlock);\r\n    delete chart.titleBlock;\r\n  },\r\n  beforeUpdate(chart, _args, options) {\r\n    const title = chart.titleBlock;\r\n    layouts.configure(chart, title, options);\r\n    title.options = options;\r\n  },\r\n  defaults: {\r\n    align: 'center',\r\n    display: false,\r\n    font: {\r\n      style: 'bold',\r\n    },\r\n    fullSize: true,\r\n    padding: 10,\r\n    position: 'top',\r\n    text: '',\r\n    weight: 2000\r\n  },\r\n  defaultRoutes: {\r\n    color: 'color'\r\n  },\r\n  descriptors: {\r\n    _scriptable: true,\r\n    _indexable: false,\r\n  },\r\n};\r\n\r\nconst positioners = {\r\n  average(items) {\r\n    if (!items.length) {\r\n      return false;\r\n    }\r\n    let i, len;\r\n    let x = 0;\r\n    let y = 0;\r\n    let count = 0;\r\n    for (i = 0, len = items.length; i < len; ++i) {\r\n      const el = items[i].element;\r\n      if (el && el.hasValue()) {\r\n        const pos = el.tooltipPosition();\r\n        x += pos.x;\r\n        y += pos.y;\r\n        ++count;\r\n      }\r\n    }\r\n    return {\r\n      x: x / count,\r\n      y: y / count\r\n    };\r\n  },\r\n  nearest(items, eventPosition) {\r\n    let x = eventPosition.x;\r\n    let y = eventPosition.y;\r\n    let minDistance = Number.POSITIVE_INFINITY;\r\n    let i, len, nearestElement;\r\n    for (i = 0, len = items.length; i < len; ++i) {\r\n      const el = items[i].element;\r\n      if (el && el.hasValue()) {\r\n        const center = el.getCenterPoint();\r\n        const d = distanceBetweenPoints(eventPosition, center);\r\n        if (d < minDistance) {\r\n          minDistance = d;\r\n          nearestElement = el;\r\n        }\r\n      }\r\n    }\r\n    if (nearestElement) {\r\n      const tp = nearestElement.tooltipPosition();\r\n      x = tp.x;\r\n      y = tp.y;\r\n    }\r\n    return {\r\n      x,\r\n      y\r\n    };\r\n  }\r\n};\r\nfunction pushOrConcat(base, toPush) {\r\n  if (toPush) {\r\n    if (isArray(toPush)) {\r\n      Array.prototype.push.apply(base, toPush);\r\n    } else {\r\n      base.push(toPush);\r\n    }\r\n  }\r\n  return base;\r\n}\r\nfunction splitNewlines(str) {\r\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\r\n    return str.split('\\n');\r\n  }\r\n  return str;\r\n}\r\nfunction createTooltipItem(chart, item) {\r\n  const {element, datasetIndex, index} = item;\r\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\r\n  const {label, value} = controller.getLabelAndValue(index);\r\n  return {\r\n    chart,\r\n    label,\r\n    parsed: controller.getParsed(index),\r\n    raw: chart.data.datasets[datasetIndex].data[index],\r\n    formattedValue: value,\r\n    dataset: controller.getDataset(),\r\n    dataIndex: index,\r\n    datasetIndex,\r\n    element\r\n  };\r\n}\r\nfunction getTooltipSize(tooltip, options) {\r\n  const ctx = tooltip._chart.ctx;\r\n  const {body, footer, title} = tooltip;\r\n  const {boxWidth, boxHeight} = options;\r\n  const bodyFont = toFont(options.bodyFont);\r\n  const titleFont = toFont(options.titleFont);\r\n  const footerFont = toFont(options.footerFont);\r\n  const titleLineCount = title.length;\r\n  const footerLineCount = footer.length;\r\n  const bodyLineItemCount = body.length;\r\n  const padding = toPadding(options.padding);\r\n  let height = padding.height;\r\n  let width = 0;\r\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\r\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\r\n  if (titleLineCount) {\r\n    height += titleLineCount * titleFont.lineHeight\r\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\r\n\t\t\t+ options.titleMarginBottom;\r\n  }\r\n  if (combinedBodyLength) {\r\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\r\n    height += bodyLineItemCount * bodyLineHeight\r\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\r\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\r\n  }\r\n  if (footerLineCount) {\r\n    height += options.footerMarginTop\r\n\t\t\t+ footerLineCount * footerFont.lineHeight\r\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\r\n  }\r\n  let widthPadding = 0;\r\n  const maxLineWidth = function(line) {\r\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\r\n  };\r\n  ctx.save();\r\n  ctx.font = titleFont.string;\r\n  each(tooltip.title, maxLineWidth);\r\n  ctx.font = bodyFont.string;\r\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\r\n  widthPadding = options.displayColors ? (boxWidth + 2) : 0;\r\n  each(body, (bodyItem) => {\r\n    each(bodyItem.before, maxLineWidth);\r\n    each(bodyItem.lines, maxLineWidth);\r\n    each(bodyItem.after, maxLineWidth);\r\n  });\r\n  widthPadding = 0;\r\n  ctx.font = footerFont.string;\r\n  each(tooltip.footer, maxLineWidth);\r\n  ctx.restore();\r\n  width += padding.width;\r\n  return {width, height};\r\n}\r\nfunction determineYAlign(chart, size) {\r\n  const {y, height} = size;\r\n  if (y < height / 2) {\r\n    return 'top';\r\n  } else if (y > (chart.height - height / 2)) {\r\n    return 'bottom';\r\n  }\r\n  return 'center';\r\n}\r\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\r\n  const {x, width} = size;\r\n  const caret = options.caretSize + options.caretPadding;\r\n  if (xAlign === 'left' && x + width + caret > chart.width) {\r\n    return true;\r\n  }\r\n  if (xAlign === 'right' && x - width - caret < 0) {\r\n    return true;\r\n  }\r\n}\r\nfunction determineXAlign(chart, options, size, yAlign) {\r\n  const {x, width} = size;\r\n  const {width: chartWidth, chartArea: {left, right}} = chart;\r\n  let xAlign = 'center';\r\n  if (yAlign === 'center') {\r\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\r\n  } else if (x <= width / 2) {\r\n    xAlign = 'left';\r\n  } else if (x >= chartWidth - width / 2) {\r\n    xAlign = 'right';\r\n  }\r\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\r\n    xAlign = 'center';\r\n  }\r\n  return xAlign;\r\n}\r\nfunction determineAlignment(chart, options, size) {\r\n  const yAlign = options.yAlign || determineYAlign(chart, size);\r\n  return {\r\n    xAlign: options.xAlign || determineXAlign(chart, options, size, yAlign),\r\n    yAlign\r\n  };\r\n}\r\nfunction alignX(size, xAlign) {\r\n  let {x, width} = size;\r\n  if (xAlign === 'right') {\r\n    x -= width;\r\n  } else if (xAlign === 'center') {\r\n    x -= (width / 2);\r\n  }\r\n  return x;\r\n}\r\nfunction alignY(size, yAlign, paddingAndSize) {\r\n  let {y, height} = size;\r\n  if (yAlign === 'top') {\r\n    y += paddingAndSize;\r\n  } else if (yAlign === 'bottom') {\r\n    y -= height + paddingAndSize;\r\n  } else {\r\n    y -= (height / 2);\r\n  }\r\n  return y;\r\n}\r\nfunction getBackgroundPoint(options, size, alignment, chart) {\r\n  const {caretSize, caretPadding, cornerRadius} = options;\r\n  const {xAlign, yAlign} = alignment;\r\n  const paddingAndSize = caretSize + caretPadding;\r\n  const radiusAndPadding = cornerRadius + caretPadding;\r\n  let x = alignX(size, xAlign);\r\n  const y = alignY(size, yAlign, paddingAndSize);\r\n  if (yAlign === 'center') {\r\n    if (xAlign === 'left') {\r\n      x += paddingAndSize;\r\n    } else if (xAlign === 'right') {\r\n      x -= paddingAndSize;\r\n    }\r\n  } else if (xAlign === 'left') {\r\n    x -= radiusAndPadding;\r\n  } else if (xAlign === 'right') {\r\n    x += radiusAndPadding;\r\n  }\r\n  return {\r\n    x: _limitValue(x, 0, chart.width - size.width),\r\n    y: _limitValue(y, 0, chart.height - size.height)\r\n  };\r\n}\r\nfunction getAlignedX(tooltip, align, options) {\r\n  const padding = toPadding(options.padding);\r\n  return align === 'center'\r\n    ? tooltip.x + tooltip.width / 2\r\n    : align === 'right'\r\n      ? tooltip.x + tooltip.width - padding.right\r\n      : tooltip.x + padding.left;\r\n}\r\nfunction getBeforeAfterBodyLines(callback) {\r\n  return pushOrConcat([], splitNewlines(callback));\r\n}\r\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\r\n  return Object.assign(Object.create(parent), {\r\n    tooltip,\r\n    tooltipItems,\r\n    type: 'tooltip'\r\n  });\r\n}\r\nfunction overrideCallbacks(callbacks, context) {\r\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\r\n  return override ? callbacks.override(override) : callbacks;\r\n}\r\nclass Tooltip extends Element {\r\n  constructor(config) {\r\n    super();\r\n    this.opacity = 0;\r\n    this._active = [];\r\n    this._chart = config._chart;\r\n    this._eventPosition = undefined;\r\n    this._size = undefined;\r\n    this._cachedAnimations = undefined;\r\n    this._tooltipItems = [];\r\n    this.$animations = undefined;\r\n    this.$context = undefined;\r\n    this.options = config.options;\r\n    this.dataPoints = undefined;\r\n    this.title = undefined;\r\n    this.beforeBody = undefined;\r\n    this.body = undefined;\r\n    this.afterBody = undefined;\r\n    this.footer = undefined;\r\n    this.xAlign = undefined;\r\n    this.yAlign = undefined;\r\n    this.x = undefined;\r\n    this.y = undefined;\r\n    this.height = undefined;\r\n    this.width = undefined;\r\n    this.caretX = undefined;\r\n    this.caretY = undefined;\r\n    this.labelColors = undefined;\r\n    this.labelPointStyles = undefined;\r\n    this.labelTextColors = undefined;\r\n  }\r\n  initialize(options) {\r\n    this.options = options;\r\n    this._cachedAnimations = undefined;\r\n    this.$context = undefined;\r\n  }\r\n  _resolveAnimations() {\r\n    const me = this;\r\n    const cached = me._cachedAnimations;\r\n    if (cached) {\r\n      return cached;\r\n    }\r\n    const chart = me._chart;\r\n    const options = me.options.setContext(me.getContext());\r\n    const opts = options.enabled && chart.options.animation && options.animations;\r\n    const animations = new Animations(me._chart, opts);\r\n    if (opts._cacheable) {\r\n      me._cachedAnimations = Object.freeze(animations);\r\n    }\r\n    return animations;\r\n  }\r\n  getContext() {\r\n    const me = this;\r\n    return me.$context ||\r\n\t\t\t(me.$context = createTooltipContext(me._chart.getContext(), me, me._tooltipItems));\r\n  }\r\n  getTitle(context, options) {\r\n    const me = this;\r\n    const {callbacks} = options;\r\n    const beforeTitle = callbacks.beforeTitle.apply(me, [context]);\r\n    const title = callbacks.title.apply(me, [context]);\r\n    const afterTitle = callbacks.afterTitle.apply(me, [context]);\r\n    let lines = [];\r\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\r\n    lines = pushOrConcat(lines, splitNewlines(title));\r\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\r\n    return lines;\r\n  }\r\n  getBeforeBody(tooltipItems, options) {\r\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\r\n  }\r\n  getBody(tooltipItems, options) {\r\n    const me = this;\r\n    const {callbacks} = options;\r\n    const bodyItems = [];\r\n    each(tooltipItems, (context) => {\r\n      const bodyItem = {\r\n        before: [],\r\n        lines: [],\r\n        after: []\r\n      };\r\n      const scoped = overrideCallbacks(callbacks, context);\r\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(me, context)));\r\n      pushOrConcat(bodyItem.lines, scoped.label.call(me, context));\r\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(me, context)));\r\n      bodyItems.push(bodyItem);\r\n    });\r\n    return bodyItems;\r\n  }\r\n  getAfterBody(tooltipItems, options) {\r\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\r\n  }\r\n  getFooter(tooltipItems, options) {\r\n    const me = this;\r\n    const {callbacks} = options;\r\n    const beforeFooter = callbacks.beforeFooter.apply(me, [tooltipItems]);\r\n    const footer = callbacks.footer.apply(me, [tooltipItems]);\r\n    const afterFooter = callbacks.afterFooter.apply(me, [tooltipItems]);\r\n    let lines = [];\r\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\r\n    lines = pushOrConcat(lines, splitNewlines(footer));\r\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\r\n    return lines;\r\n  }\r\n  _createItems(options) {\r\n    const me = this;\r\n    const active = me._active;\r\n    const data = me._chart.data;\r\n    const labelColors = [];\r\n    const labelPointStyles = [];\r\n    const labelTextColors = [];\r\n    let tooltipItems = [];\r\n    let i, len;\r\n    for (i = 0, len = active.length; i < len; ++i) {\r\n      tooltipItems.push(createTooltipItem(me._chart, active[i]));\r\n    }\r\n    if (options.filter) {\r\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\r\n    }\r\n    if (options.itemSort) {\r\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\r\n    }\r\n    each(tooltipItems, (context) => {\r\n      const scoped = overrideCallbacks(options.callbacks, context);\r\n      labelColors.push(scoped.labelColor.call(me, context));\r\n      labelPointStyles.push(scoped.labelPointStyle.call(me, context));\r\n      labelTextColors.push(scoped.labelTextColor.call(me, context));\r\n    });\r\n    me.labelColors = labelColors;\r\n    me.labelPointStyles = labelPointStyles;\r\n    me.labelTextColors = labelTextColors;\r\n    me.dataPoints = tooltipItems;\r\n    return tooltipItems;\r\n  }\r\n  update(changed, replay) {\r\n    const me = this;\r\n    const options = me.options.setContext(me.getContext());\r\n    const active = me._active;\r\n    let properties;\r\n    let tooltipItems = [];\r\n    if (!active.length) {\r\n      if (me.opacity !== 0) {\r\n        properties = {\r\n          opacity: 0\r\n        };\r\n      }\r\n    } else {\r\n      const position = positioners[options.position].call(me, active, me._eventPosition);\r\n      tooltipItems = me._createItems(options);\r\n      me.title = me.getTitle(tooltipItems, options);\r\n      me.beforeBody = me.getBeforeBody(tooltipItems, options);\r\n      me.body = me.getBody(tooltipItems, options);\r\n      me.afterBody = me.getAfterBody(tooltipItems, options);\r\n      me.footer = me.getFooter(tooltipItems, options);\r\n      const size = me._size = getTooltipSize(me, options);\r\n      const positionAndSize = Object.assign({}, position, size);\r\n      const alignment = determineAlignment(me._chart, options, positionAndSize);\r\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, me._chart);\r\n      me.xAlign = alignment.xAlign;\r\n      me.yAlign = alignment.yAlign;\r\n      properties = {\r\n        opacity: 1,\r\n        x: backgroundPoint.x,\r\n        y: backgroundPoint.y,\r\n        width: size.width,\r\n        height: size.height,\r\n        caretX: position.x,\r\n        caretY: position.y\r\n      };\r\n    }\r\n    me._tooltipItems = tooltipItems;\r\n    me.$context = undefined;\r\n    if (properties) {\r\n      me._resolveAnimations().update(me, properties);\r\n    }\r\n    if (changed && options.external) {\r\n      options.external.call(me, {chart: me._chart, tooltip: me, replay});\r\n    }\r\n  }\r\n  drawCaret(tooltipPoint, ctx, size, options) {\r\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\r\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\r\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\r\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\r\n  }\r\n  getCaretPosition(tooltipPoint, size, options) {\r\n    const {xAlign, yAlign} = this;\r\n    const {cornerRadius, caretSize} = options;\r\n    const {x: ptX, y: ptY} = tooltipPoint;\r\n    const {width, height} = size;\r\n    let x1, x2, x3, y1, y2, y3;\r\n    if (yAlign === 'center') {\r\n      y2 = ptY + (height / 2);\r\n      if (xAlign === 'left') {\r\n        x1 = ptX;\r\n        x2 = x1 - caretSize;\r\n        y1 = y2 + caretSize;\r\n        y3 = y2 - caretSize;\r\n      } else {\r\n        x1 = ptX + width;\r\n        x2 = x1 + caretSize;\r\n        y1 = y2 - caretSize;\r\n        y3 = y2 + caretSize;\r\n      }\r\n      x3 = x1;\r\n    } else {\r\n      if (xAlign === 'left') {\r\n        x2 = ptX + cornerRadius + (caretSize);\r\n      } else if (xAlign === 'right') {\r\n        x2 = ptX + width - cornerRadius - caretSize;\r\n      } else {\r\n        x2 = this.caretX;\r\n      }\r\n      if (yAlign === 'top') {\r\n        y1 = ptY;\r\n        y2 = y1 - caretSize;\r\n        x1 = x2 - caretSize;\r\n        x3 = x2 + caretSize;\r\n      } else {\r\n        y1 = ptY + height;\r\n        y2 = y1 + caretSize;\r\n        x1 = x2 + caretSize;\r\n        x3 = x2 - caretSize;\r\n      }\r\n      y3 = y1;\r\n    }\r\n    return {x1, x2, x3, y1, y2, y3};\r\n  }\r\n  drawTitle(pt, ctx, options) {\r\n    const me = this;\r\n    const title = me.title;\r\n    const length = title.length;\r\n    let titleFont, titleSpacing, i;\r\n    if (length) {\r\n      const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\r\n      pt.x = getAlignedX(me, options.titleAlign, options);\r\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\r\n      ctx.textBaseline = 'middle';\r\n      titleFont = toFont(options.titleFont);\r\n      titleSpacing = options.titleSpacing;\r\n      ctx.fillStyle = options.titleColor;\r\n      ctx.font = titleFont.string;\r\n      for (i = 0; i < length; ++i) {\r\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\r\n        pt.y += titleFont.lineHeight + titleSpacing;\r\n        if (i + 1 === length) {\r\n          pt.y += options.titleMarginBottom - titleSpacing;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\r\n    const me = this;\r\n    const labelColors = me.labelColors[i];\r\n    const labelPointStyle = me.labelPointStyles[i];\r\n    const {boxHeight, boxWidth} = options;\r\n    const bodyFont = toFont(options.bodyFont);\r\n    const colorX = getAlignedX(me, 'left', options);\r\n    const rtlColorX = rtlHelper.x(colorX);\r\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\r\n    const colorY = pt.y + yOffSet;\r\n    if (options.usePointStyle) {\r\n      const drawOptions = {\r\n        radius: Math.min(boxWidth, boxHeight) / 2,\r\n        pointStyle: labelPointStyle.pointStyle,\r\n        rotation: labelPointStyle.rotation,\r\n        borderWidth: 1\r\n      };\r\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\r\n      const centerY = colorY + boxHeight / 2;\r\n      ctx.strokeStyle = options.multiKeyBackground;\r\n      ctx.fillStyle = options.multiKeyBackground;\r\n      drawPoint(ctx, drawOptions, centerX, centerY);\r\n      ctx.strokeStyle = labelColors.borderColor;\r\n      ctx.fillStyle = labelColors.backgroundColor;\r\n      drawPoint(ctx, drawOptions, centerX, centerY);\r\n    } else {\r\n      ctx.fillStyle = options.multiKeyBackground;\r\n      ctx.fillRect(rtlHelper.leftForLtr(rtlColorX, boxWidth), colorY, boxWidth, boxHeight);\r\n      ctx.lineWidth = 1;\r\n      ctx.strokeStyle = labelColors.borderColor;\r\n      ctx.strokeRect(rtlHelper.leftForLtr(rtlColorX, boxWidth), colorY, boxWidth, boxHeight);\r\n      ctx.fillStyle = labelColors.backgroundColor;\r\n      ctx.fillRect(rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2), colorY + 1, boxWidth - 2, boxHeight - 2);\r\n    }\r\n    ctx.fillStyle = me.labelTextColors[i];\r\n  }\r\n  drawBody(pt, ctx, options) {\r\n    const me = this;\r\n    const {body} = me;\r\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth} = options;\r\n    const bodyFont = toFont(options.bodyFont);\r\n    let bodyLineHeight = bodyFont.lineHeight;\r\n    let xLinePadding = 0;\r\n    const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\r\n    const fillLineOfText = function(line) {\r\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\r\n      pt.y += bodyLineHeight + bodySpacing;\r\n    };\r\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\r\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\r\n    ctx.textAlign = bodyAlign;\r\n    ctx.textBaseline = 'middle';\r\n    ctx.font = bodyFont.string;\r\n    pt.x = getAlignedX(me, bodyAlignForCalculation, options);\r\n    ctx.fillStyle = options.bodyColor;\r\n    each(me.beforeBody, fillLineOfText);\r\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\r\n      ? bodyAlign === 'center' ? (boxWidth / 2 + 1) : (boxWidth + 2)\r\n      : 0;\r\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\r\n      bodyItem = body[i];\r\n      textColor = me.labelTextColors[i];\r\n      ctx.fillStyle = textColor;\r\n      each(bodyItem.before, fillLineOfText);\r\n      lines = bodyItem.lines;\r\n      if (displayColors && lines.length) {\r\n        me._drawColorBox(ctx, pt, i, rtlHelper, options);\r\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\r\n      }\r\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\r\n        fillLineOfText(lines[j]);\r\n        bodyLineHeight = bodyFont.lineHeight;\r\n      }\r\n      each(bodyItem.after, fillLineOfText);\r\n    }\r\n    xLinePadding = 0;\r\n    bodyLineHeight = bodyFont.lineHeight;\r\n    each(me.afterBody, fillLineOfText);\r\n    pt.y -= bodySpacing;\r\n  }\r\n  drawFooter(pt, ctx, options) {\r\n    const me = this;\r\n    const footer = me.footer;\r\n    const length = footer.length;\r\n    let footerFont, i;\r\n    if (length) {\r\n      const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\r\n      pt.x = getAlignedX(me, options.footerAlign, options);\r\n      pt.y += options.footerMarginTop;\r\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\r\n      ctx.textBaseline = 'middle';\r\n      footerFont = toFont(options.footerFont);\r\n      ctx.fillStyle = options.footerColor;\r\n      ctx.font = footerFont.string;\r\n      for (i = 0; i < length; ++i) {\r\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\r\n        pt.y += footerFont.lineHeight + options.footerSpacing;\r\n      }\r\n    }\r\n  }\r\n  drawBackground(pt, ctx, tooltipSize, options) {\r\n    const {xAlign, yAlign} = this;\r\n    const {x, y} = pt;\r\n    const {width, height} = tooltipSize;\r\n    const radius = options.cornerRadius;\r\n    ctx.fillStyle = options.backgroundColor;\r\n    ctx.strokeStyle = options.borderColor;\r\n    ctx.lineWidth = options.borderWidth;\r\n    ctx.beginPath();\r\n    ctx.moveTo(x + radius, y);\r\n    if (yAlign === 'top') {\r\n      this.drawCaret(pt, ctx, tooltipSize, options);\r\n    }\r\n    ctx.lineTo(x + width - radius, y);\r\n    ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\r\n    if (yAlign === 'center' && xAlign === 'right') {\r\n      this.drawCaret(pt, ctx, tooltipSize, options);\r\n    }\r\n    ctx.lineTo(x + width, y + height - radius);\r\n    ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\r\n    if (yAlign === 'bottom') {\r\n      this.drawCaret(pt, ctx, tooltipSize, options);\r\n    }\r\n    ctx.lineTo(x + radius, y + height);\r\n    ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\r\n    if (yAlign === 'center' && xAlign === 'left') {\r\n      this.drawCaret(pt, ctx, tooltipSize, options);\r\n    }\r\n    ctx.lineTo(x, y + radius);\r\n    ctx.quadraticCurveTo(x, y, x + radius, y);\r\n    ctx.closePath();\r\n    ctx.fill();\r\n    if (options.borderWidth > 0) {\r\n      ctx.stroke();\r\n    }\r\n  }\r\n  _updateAnimationTarget(options) {\r\n    const me = this;\r\n    const chart = me._chart;\r\n    const anims = me.$animations;\r\n    const animX = anims && anims.x;\r\n    const animY = anims && anims.y;\r\n    if (animX || animY) {\r\n      const position = positioners[options.position].call(me, me._active, me._eventPosition);\r\n      if (!position) {\r\n        return;\r\n      }\r\n      const size = me._size = getTooltipSize(me, options);\r\n      const positionAndSize = Object.assign({}, position, me._size);\r\n      const alignment = determineAlignment(chart, options, positionAndSize);\r\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\r\n      if (animX._to !== point.x || animY._to !== point.y) {\r\n        me.xAlign = alignment.xAlign;\r\n        me.yAlign = alignment.yAlign;\r\n        me.width = size.width;\r\n        me.height = size.height;\r\n        me.caretX = position.x;\r\n        me.caretY = position.y;\r\n        me._resolveAnimations().update(me, point);\r\n      }\r\n    }\r\n  }\r\n  draw(ctx) {\r\n    const me = this;\r\n    const options = me.options.setContext(me.getContext());\r\n    let opacity = me.opacity;\r\n    if (!opacity) {\r\n      return;\r\n    }\r\n    me._updateAnimationTarget(options);\r\n    const tooltipSize = {\r\n      width: me.width,\r\n      height: me.height\r\n    };\r\n    const pt = {\r\n      x: me.x,\r\n      y: me.y\r\n    };\r\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\r\n    const padding = toPadding(options.padding);\r\n    const hasTooltipContent = me.title.length || me.beforeBody.length || me.body.length || me.afterBody.length || me.footer.length;\r\n    if (options.enabled && hasTooltipContent) {\r\n      ctx.save();\r\n      ctx.globalAlpha = opacity;\r\n      me.drawBackground(pt, ctx, tooltipSize, options);\r\n      overrideTextDirection(ctx, options.textDirection);\r\n      pt.y += padding.top;\r\n      me.drawTitle(pt, ctx, options);\r\n      me.drawBody(pt, ctx, options);\r\n      me.drawFooter(pt, ctx, options);\r\n      restoreTextDirection(ctx, options.textDirection);\r\n      ctx.restore();\r\n    }\r\n  }\r\n  getActiveElements() {\r\n    return this._active || [];\r\n  }\r\n  setActiveElements(activeElements, eventPosition) {\r\n    const me = this;\r\n    const lastActive = me._active;\r\n    const active = activeElements.map(({datasetIndex, index}) => {\r\n      const meta = me._chart.getDatasetMeta(datasetIndex);\r\n      if (!meta) {\r\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\r\n      }\r\n      return {\r\n        datasetIndex,\r\n        element: meta.data[index],\r\n        index,\r\n      };\r\n    });\r\n    const changed = !_elementsEqual(lastActive, active);\r\n    const positionChanged = me._positionChanged(active, eventPosition);\r\n    if (changed || positionChanged) {\r\n      me._active = active;\r\n      me._eventPosition = eventPosition;\r\n      me.update(true);\r\n    }\r\n  }\r\n  handleEvent(e, replay) {\r\n    const me = this;\r\n    const options = me.options;\r\n    const lastActive = me._active || [];\r\n    let changed = false;\r\n    let active = [];\r\n    if (e.type !== 'mouseout') {\r\n      active = me._chart.getElementsAtEventForMode(e, options.mode, options, replay);\r\n      if (options.reverse) {\r\n        active.reverse();\r\n      }\r\n    }\r\n    const positionChanged = me._positionChanged(active, e);\r\n    changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\r\n    if (changed) {\r\n      me._active = active;\r\n      if (options.enabled || options.external) {\r\n        me._eventPosition = {\r\n          x: e.x,\r\n          y: e.y\r\n        };\r\n        me.update(true, replay);\r\n      }\r\n    }\r\n    return changed;\r\n  }\r\n  _positionChanged(active, e) {\r\n    const me = this;\r\n    const position = positioners[me.options.position].call(me, active, e);\r\n    return me.caretX !== position.x || me.caretY !== position.y;\r\n  }\r\n}\r\nTooltip.positioners = positioners;\r\nvar plugin_tooltip = {\r\n  id: 'tooltip',\r\n  _element: Tooltip,\r\n  positioners,\r\n  afterInit(chart, _args, options) {\r\n    if (options) {\r\n      chart.tooltip = new Tooltip({_chart: chart, options});\r\n    }\r\n  },\r\n  beforeUpdate(chart, _args, options) {\r\n    if (chart.tooltip) {\r\n      chart.tooltip.initialize(options);\r\n    }\r\n  },\r\n  reset(chart, _args, options) {\r\n    if (chart.tooltip) {\r\n      chart.tooltip.initialize(options);\r\n    }\r\n  },\r\n  afterDraw(chart) {\r\n    const tooltip = chart.tooltip;\r\n    const args = {\r\n      tooltip\r\n    };\r\n    if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\r\n      return;\r\n    }\r\n    if (tooltip) {\r\n      tooltip.draw(chart.ctx);\r\n    }\r\n    chart.notifyPlugins('afterTooltipDraw', args);\r\n  },\r\n  afterEvent(chart, args) {\r\n    if (chart.tooltip) {\r\n      const useFinalPosition = args.replay;\r\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition)) {\r\n        args.changed = true;\r\n      }\r\n    }\r\n  },\r\n  defaults: {\r\n    enabled: true,\r\n    external: null,\r\n    position: 'average',\r\n    backgroundColor: 'rgba(0,0,0,0.8)',\r\n    titleColor: '#fff',\r\n    titleFont: {\r\n      style: 'bold',\r\n    },\r\n    titleSpacing: 2,\r\n    titleMarginBottom: 6,\r\n    titleAlign: 'left',\r\n    bodyColor: '#fff',\r\n    bodySpacing: 2,\r\n    bodyFont: {\r\n    },\r\n    bodyAlign: 'left',\r\n    footerColor: '#fff',\r\n    footerSpacing: 2,\r\n    footerMarginTop: 6,\r\n    footerFont: {\r\n      style: 'bold',\r\n    },\r\n    footerAlign: 'left',\r\n    padding: 6,\r\n    caretPadding: 2,\r\n    caretSize: 5,\r\n    cornerRadius: 6,\r\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\r\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\r\n    multiKeyBackground: '#fff',\r\n    displayColors: true,\r\n    borderColor: 'rgba(0,0,0,0)',\r\n    borderWidth: 0,\r\n    animation: {\r\n      duration: 400,\r\n      easing: 'easeOutQuart',\r\n    },\r\n    animations: {\r\n      numbers: {\r\n        type: 'number',\r\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\r\n      },\r\n      opacity: {\r\n        easing: 'linear',\r\n        duration: 200\r\n      }\r\n    },\r\n    callbacks: {\r\n      beforeTitle: noop,\r\n      title(tooltipItems) {\r\n        if (tooltipItems.length > 0) {\r\n          const item = tooltipItems[0];\r\n          const labels = item.chart.data.labels;\r\n          const labelCount = labels ? labels.length : 0;\r\n          if (this && this.options && this.options.mode === 'dataset') {\r\n            return item.dataset.label || '';\r\n          } else if (item.label) {\r\n            return item.label;\r\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\r\n            return labels[item.dataIndex];\r\n          }\r\n        }\r\n        return '';\r\n      },\r\n      afterTitle: noop,\r\n      beforeBody: noop,\r\n      beforeLabel: noop,\r\n      label(tooltipItem) {\r\n        if (this && this.options && this.options.mode === 'dataset') {\r\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\r\n        }\r\n        let label = tooltipItem.dataset.label || '';\r\n        if (label) {\r\n          label += ': ';\r\n        }\r\n        const value = tooltipItem.formattedValue;\r\n        if (!isNullOrUndef(value)) {\r\n          label += value;\r\n        }\r\n        return label;\r\n      },\r\n      labelColor(tooltipItem) {\r\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\r\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\r\n        return {\r\n          borderColor: options.borderColor,\r\n          backgroundColor: options.backgroundColor\r\n        };\r\n      },\r\n      labelTextColor() {\r\n        return this.options.bodyColor;\r\n      },\r\n      labelPointStyle(tooltipItem) {\r\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\r\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\r\n        return {\r\n          pointStyle: options.pointStyle,\r\n          rotation: options.rotation,\r\n        };\r\n      },\r\n      afterLabel: noop,\r\n      afterBody: noop,\r\n      beforeFooter: noop,\r\n      footer: noop,\r\n      afterFooter: noop\r\n    }\r\n  },\r\n  defaultRoutes: {\r\n    bodyFont: 'font',\r\n    footerFont: 'font',\r\n    titleFont: 'font'\r\n  },\r\n  descriptors: {\r\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\r\n    _indexable: false,\r\n    callbacks: {\r\n      _scriptable: false,\r\n      _indexable: false,\r\n    },\r\n    animation: {\r\n      _fallback: false\r\n    },\r\n    animations: {\r\n      _fallback: 'animation'\r\n    }\r\n  },\r\n  additionalOptionScopes: ['interaction']\r\n};\r\n\r\nvar plugins = /*#__PURE__*/Object.freeze({\r\n__proto__: null,\r\nDecimation: plugin_decimation,\r\nFiller: plugin_filler,\r\nLegend: plugin_legend,\r\nTitle: plugin_title,\r\nTooltip: plugin_tooltip\r\n});\r\n\r\nconst addIfString = (labels, raw, index) => typeof raw === 'string'\r\n  ? labels.push(raw) - 1\r\n  : isNaN(raw) ? null : index;\r\nfunction findOrAddLabel(labels, raw, index) {\r\n  const first = labels.indexOf(raw);\r\n  if (first === -1) {\r\n    return addIfString(labels, raw, index);\r\n  }\r\n  const last = labels.lastIndexOf(raw);\r\n  return first !== last ? index : first;\r\n}\r\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\r\nclass CategoryScale extends Scale {\r\n  constructor(cfg) {\r\n    super(cfg);\r\n    this._startValue = undefined;\r\n    this._valueRange = 0;\r\n  }\r\n  parse(raw, index) {\r\n    if (isNullOrUndef(raw)) {\r\n      return null;\r\n    }\r\n    const labels = this.getLabels();\r\n    index = isFinite(index) && labels[index] === raw ? index\r\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw));\r\n    return validIndex(index, labels.length - 1);\r\n  }\r\n  determineDataLimits() {\r\n    const me = this;\r\n    const {minDefined, maxDefined} = me.getUserBounds();\r\n    let {min, max} = me.getMinMax(true);\r\n    if (me.options.bounds === 'ticks') {\r\n      if (!minDefined) {\r\n        min = 0;\r\n      }\r\n      if (!maxDefined) {\r\n        max = me.getLabels().length - 1;\r\n      }\r\n    }\r\n    me.min = min;\r\n    me.max = max;\r\n  }\r\n  buildTicks() {\r\n    const me = this;\r\n    const min = me.min;\r\n    const max = me.max;\r\n    const offset = me.options.offset;\r\n    const ticks = [];\r\n    let labels = me.getLabels();\r\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\r\n    me._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\r\n    me._startValue = me.min - (offset ? 0.5 : 0);\r\n    for (let value = min; value <= max; value++) {\r\n      ticks.push({value});\r\n    }\r\n    return ticks;\r\n  }\r\n  getLabelForValue(value) {\r\n    const me = this;\r\n    const labels = me.getLabels();\r\n    if (value >= 0 && value < labels.length) {\r\n      return labels[value];\r\n    }\r\n    return value;\r\n  }\r\n  configure() {\r\n    const me = this;\r\n    super.configure();\r\n    if (!me.isHorizontal()) {\r\n      me._reversePixels = !me._reversePixels;\r\n    }\r\n  }\r\n  getPixelForValue(value) {\r\n    const me = this;\r\n    if (typeof value !== 'number') {\r\n      value = me.parse(value);\r\n    }\r\n    return value === null ? NaN : me.getPixelForDecimal((value - me._startValue) / me._valueRange);\r\n  }\r\n  getPixelForTick(index) {\r\n    const me = this;\r\n    const ticks = me.ticks;\r\n    if (index < 0 || index > ticks.length - 1) {\r\n      return null;\r\n    }\r\n    return me.getPixelForValue(ticks[index].value);\r\n  }\r\n  getValueForPixel(pixel) {\r\n    const me = this;\r\n    return Math.round(me._startValue + me.getDecimalForPixel(pixel) * me._valueRange);\r\n  }\r\n  getBasePixel() {\r\n    return this.bottom;\r\n  }\r\n}\r\nCategoryScale.id = 'category';\r\nCategoryScale.defaults = {\r\n  ticks: {\r\n    callback: CategoryScale.prototype.getLabelForValue\r\n  }\r\n};\r\n\r\nfunction generateTicks$1(generationOptions, dataRange) {\r\n  const ticks = [];\r\n  const MIN_SPACING = 1e-14;\r\n  const {step, min, max, precision, count, maxTicks} = generationOptions;\r\n  const unit = step || 1;\r\n  const maxSpaces = maxTicks - 1;\r\n  const {min: rmin, max: rmax} = dataRange;\r\n  const minDefined = !isNullOrUndef(min);\r\n  const maxDefined = !isNullOrUndef(max);\r\n  const countDefined = !isNullOrUndef(count);\r\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\r\n  let factor, niceMin, niceMax, numSpaces;\r\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\r\n    return [{value: rmin}, {value: rmax}];\r\n  }\r\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\r\n  if (numSpaces > maxSpaces) {\r\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\r\n  }\r\n  if (!isNullOrUndef(precision)) {\r\n    factor = Math.pow(10, precision);\r\n    spacing = Math.ceil(spacing * factor) / factor;\r\n  }\r\n  niceMin = Math.floor(rmin / spacing) * spacing;\r\n  niceMax = Math.ceil(rmax / spacing) * spacing;\r\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\r\n    numSpaces = Math.min((max - min) / spacing, maxTicks);\r\n    spacing = (max - min) / numSpaces;\r\n    niceMin = min;\r\n    niceMax = max;\r\n  } else if (countDefined) {\r\n    niceMin = minDefined ? min : niceMin;\r\n    niceMax = maxDefined ? max : niceMax;\r\n    numSpaces = count - 1;\r\n    spacing = (niceMax - niceMin) / numSpaces;\r\n  } else {\r\n    numSpaces = (niceMax - niceMin) / spacing;\r\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\r\n      numSpaces = Math.round(numSpaces);\r\n    } else {\r\n      numSpaces = Math.ceil(numSpaces);\r\n    }\r\n  }\r\n  factor = Math.pow(10, isNullOrUndef(precision) ? _decimalPlaces(spacing) : precision);\r\n  niceMin = Math.round(niceMin * factor) / factor;\r\n  niceMax = Math.round(niceMax * factor) / factor;\r\n  let j = 0;\r\n  if (minDefined) {\r\n    ticks.push({value: min});\r\n    if (niceMin < min) {\r\n      j++;\r\n    }\r\n    if (almostWhole(Math.round((niceMin + j * spacing) * factor) / factor / min, spacing / 1000)) {\r\n      j++;\r\n    }\r\n  }\r\n  for (; j < numSpaces; ++j) {\r\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\r\n  }\r\n  if (maxDefined) {\r\n    if (almostWhole(ticks[ticks.length - 1].value / max, spacing / 1000)) {\r\n      ticks[ticks.length - 1].value = max;\r\n    } else {\r\n      ticks.push({value: max});\r\n    }\r\n  } else {\r\n    ticks.push({value: niceMax});\r\n  }\r\n  return ticks;\r\n}\r\nclass LinearScaleBase extends Scale {\r\n  constructor(cfg) {\r\n    super(cfg);\r\n    this.start = undefined;\r\n    this.end = undefined;\r\n    this._startValue = undefined;\r\n    this._endValue = undefined;\r\n    this._valueRange = 0;\r\n  }\r\n  parse(raw, index) {\r\n    if (isNullOrUndef(raw)) {\r\n      return null;\r\n    }\r\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\r\n      return null;\r\n    }\r\n    return +raw;\r\n  }\r\n  handleTickRangeOptions() {\r\n    const me = this;\r\n    const {beginAtZero, stacked} = me.options;\r\n    const {minDefined, maxDefined} = me.getUserBounds();\r\n    let {min, max} = me;\r\n    const setMin = v => (min = minDefined ? min : v);\r\n    const setMax = v => (max = maxDefined ? max : v);\r\n    if (beginAtZero || stacked) {\r\n      const minSign = sign(min);\r\n      const maxSign = sign(max);\r\n      if (minSign < 0 && maxSign < 0) {\r\n        setMax(0);\r\n      } else if (minSign > 0 && maxSign > 0) {\r\n        setMin(0);\r\n      }\r\n    }\r\n    if (min === max) {\r\n      setMax(max + 1);\r\n      if (!beginAtZero) {\r\n        setMin(min - 1);\r\n      }\r\n    }\r\n    me.min = min;\r\n    me.max = max;\r\n  }\r\n  getTickLimit() {\r\n    const me = this;\r\n    const tickOpts = me.options.ticks;\r\n    let {maxTicksLimit, stepSize} = tickOpts;\r\n    let maxTicks;\r\n    if (stepSize) {\r\n      maxTicks = Math.ceil(me.max / stepSize) - Math.floor(me.min / stepSize) + 1;\r\n    } else {\r\n      maxTicks = me.computeTickLimit();\r\n      maxTicksLimit = maxTicksLimit || 11;\r\n    }\r\n    if (maxTicksLimit) {\r\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\r\n    }\r\n    return maxTicks;\r\n  }\r\n  computeTickLimit() {\r\n    return Number.POSITIVE_INFINITY;\r\n  }\r\n  buildTicks() {\r\n    const me = this;\r\n    const opts = me.options;\r\n    const tickOpts = opts.ticks;\r\n    let maxTicks = me.getTickLimit();\r\n    maxTicks = Math.max(2, maxTicks);\r\n    const numericGeneratorOptions = {\r\n      maxTicks,\r\n      min: opts.min,\r\n      max: opts.max,\r\n      precision: tickOpts.precision,\r\n      step: tickOpts.stepSize,\r\n      count: tickOpts.count,\r\n    };\r\n    const ticks = generateTicks$1(numericGeneratorOptions, _addGrace(me, opts.grace));\r\n    if (opts.bounds === 'ticks') {\r\n      _setMinAndMaxByKey(ticks, me, 'value');\r\n    }\r\n    if (opts.reverse) {\r\n      ticks.reverse();\r\n      me.start = me.max;\r\n      me.end = me.min;\r\n    } else {\r\n      me.start = me.min;\r\n      me.end = me.max;\r\n    }\r\n    return ticks;\r\n  }\r\n  configure() {\r\n    const me = this;\r\n    const ticks = me.ticks;\r\n    let start = me.min;\r\n    let end = me.max;\r\n    super.configure();\r\n    if (me.options.offset && ticks.length) {\r\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\r\n      start -= offset;\r\n      end += offset;\r\n    }\r\n    me._startValue = start;\r\n    me._endValue = end;\r\n    me._valueRange = end - start;\r\n  }\r\n  getLabelForValue(value) {\r\n    return formatNumber(value, this.chart.options.locale);\r\n  }\r\n}\r\n\r\nclass LinearScale extends LinearScaleBase {\r\n  determineDataLimits() {\r\n    const me = this;\r\n    const {min, max} = me.getMinMax(true);\r\n    me.min = isNumberFinite(min) ? min : 0;\r\n    me.max = isNumberFinite(max) ? max : 1;\r\n    me.handleTickRangeOptions();\r\n  }\r\n  computeTickLimit() {\r\n    const me = this;\r\n    if (me.isHorizontal()) {\r\n      return Math.ceil(me.width / 40);\r\n    }\r\n    const tickFont = me._resolveTickFontOptions(0);\r\n    return Math.ceil(me.height / tickFont.lineHeight);\r\n  }\r\n  getPixelForValue(value) {\r\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\r\n  }\r\n  getValueForPixel(pixel) {\r\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\r\n  }\r\n}\r\nLinearScale.id = 'linear';\r\nLinearScale.defaults = {\r\n  ticks: {\r\n    callback: Ticks.formatters.numeric\r\n  }\r\n};\r\n\r\nfunction isMajor(tickVal) {\r\n  const remain = tickVal / (Math.pow(10, Math.floor(log10(tickVal))));\r\n  return remain === 1;\r\n}\r\nfunction generateTicks(generationOptions, dataRange) {\r\n  const endExp = Math.floor(log10(dataRange.max));\r\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\r\n  const ticks = [];\r\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\r\n  let exp = Math.floor(log10(tickVal));\r\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\r\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\r\n  do {\r\n    ticks.push({value: tickVal, major: isMajor(tickVal)});\r\n    ++significand;\r\n    if (significand === 10) {\r\n      significand = 1;\r\n      ++exp;\r\n      precision = exp >= 0 ? 1 : precision;\r\n    }\r\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\r\n  } while (exp < endExp || (exp === endExp && significand < endSignificand));\r\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\r\n  ticks.push({value: lastTick, major: isMajor(tickVal)});\r\n  return ticks;\r\n}\r\nclass LogarithmicScale extends Scale {\r\n  constructor(cfg) {\r\n    super(cfg);\r\n    this.start = undefined;\r\n    this.end = undefined;\r\n    this._startValue = undefined;\r\n    this._valueRange = 0;\r\n  }\r\n  parse(raw, index) {\r\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\r\n    if (value === 0) {\r\n      this._zero = true;\r\n      return undefined;\r\n    }\r\n    return isNumberFinite(value) && value > 0 ? value : null;\r\n  }\r\n  determineDataLimits() {\r\n    const me = this;\r\n    const {min, max} = me.getMinMax(true);\r\n    me.min = isNumberFinite(min) ? Math.max(0, min) : null;\r\n    me.max = isNumberFinite(max) ? Math.max(0, max) : null;\r\n    if (me.options.beginAtZero) {\r\n      me._zero = true;\r\n    }\r\n    me.handleTickRangeOptions();\r\n  }\r\n  handleTickRangeOptions() {\r\n    const me = this;\r\n    const {minDefined, maxDefined} = me.getUserBounds();\r\n    let min = me.min;\r\n    let max = me.max;\r\n    const setMin = v => (min = minDefined ? min : v);\r\n    const setMax = v => (max = maxDefined ? max : v);\r\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\r\n    if (min === max) {\r\n      if (min <= 0) {\r\n        setMin(1);\r\n        setMax(10);\r\n      } else {\r\n        setMin(exp(min, -1));\r\n        setMax(exp(max, +1));\r\n      }\r\n    }\r\n    if (min <= 0) {\r\n      setMin(exp(max, -1));\r\n    }\r\n    if (max <= 0) {\r\n      setMax(exp(min, +1));\r\n    }\r\n    if (me._zero && me.min !== me._suggestedMin && min === exp(me.min, 0)) {\r\n      setMin(exp(min, -1));\r\n    }\r\n    me.min = min;\r\n    me.max = max;\r\n  }\r\n  buildTicks() {\r\n    const me = this;\r\n    const opts = me.options;\r\n    const generationOptions = {\r\n      min: me._userMin,\r\n      max: me._userMax\r\n    };\r\n    const ticks = generateTicks(generationOptions, me);\r\n    if (opts.bounds === 'ticks') {\r\n      _setMinAndMaxByKey(ticks, me, 'value');\r\n    }\r\n    if (opts.reverse) {\r\n      ticks.reverse();\r\n      me.start = me.max;\r\n      me.end = me.min;\r\n    } else {\r\n      me.start = me.min;\r\n      me.end = me.max;\r\n    }\r\n    return ticks;\r\n  }\r\n  getLabelForValue(value) {\r\n    return value === undefined ? '0' : formatNumber(value, this.chart.options.locale);\r\n  }\r\n  configure() {\r\n    const me = this;\r\n    const start = me.min;\r\n    super.configure();\r\n    me._startValue = log10(start);\r\n    me._valueRange = log10(me.max) - log10(start);\r\n  }\r\n  getPixelForValue(value) {\r\n    const me = this;\r\n    if (value === undefined || value === 0) {\r\n      value = me.min;\r\n    }\r\n    return me.getPixelForDecimal(value === me.min\r\n      ? 0\r\n      : (log10(value) - me._startValue) / me._valueRange);\r\n  }\r\n  getValueForPixel(pixel) {\r\n    const me = this;\r\n    const decimal = me.getDecimalForPixel(pixel);\r\n    return Math.pow(10, me._startValue + decimal * me._valueRange);\r\n  }\r\n}\r\nLogarithmicScale.id = 'logarithmic';\r\nLogarithmicScale.defaults = {\r\n  ticks: {\r\n    callback: Ticks.formatters.logarithmic,\r\n    major: {\r\n      enabled: true\r\n    }\r\n  }\r\n};\r\n\r\nfunction getTickBackdropHeight(opts) {\r\n  const tickOpts = opts.ticks;\r\n  if (tickOpts.display && opts.display) {\r\n    const padding = toPadding(tickOpts.backdropPadding);\r\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\r\n  }\r\n  return 0;\r\n}\r\nfunction measureLabelSize(ctx, lineHeight, label) {\r\n  if (isArray(label)) {\r\n    return {\r\n      w: _longestText(ctx, ctx.font, label),\r\n      h: label.length * lineHeight\r\n    };\r\n  }\r\n  return {\r\n    w: ctx.measureText(label).width,\r\n    h: lineHeight\r\n  };\r\n}\r\nfunction determineLimits(angle, pos, size, min, max) {\r\n  if (angle === min || angle === max) {\r\n    return {\r\n      start: pos - (size / 2),\r\n      end: pos + (size / 2)\r\n    };\r\n  } else if (angle < min || angle > max) {\r\n    return {\r\n      start: pos - size,\r\n      end: pos\r\n    };\r\n  }\r\n  return {\r\n    start: pos,\r\n    end: pos + size\r\n  };\r\n}\r\nfunction fitWithPointLabels(scale) {\r\n  const furthestLimits = {\r\n    l: 0,\r\n    r: scale.width,\r\n    t: 0,\r\n    b: scale.height - scale.paddingTop\r\n  };\r\n  const furthestAngles = {};\r\n  let i, textSize, pointPosition;\r\n  const labelSizes = [];\r\n  const padding = [];\r\n  const valueCount = scale.getLabels().length;\r\n  for (i = 0; i < valueCount; i++) {\r\n    const opts = scale.options.pointLabels.setContext(scale.getContext(i));\r\n    padding[i] = opts.padding;\r\n    pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i]);\r\n    const plFont = toFont(opts.font);\r\n    scale.ctx.font = plFont.string;\r\n    textSize = measureLabelSize(scale.ctx, plFont.lineHeight, scale._pointLabels[i]);\r\n    labelSizes[i] = textSize;\r\n    const angleRadians = scale.getIndexAngle(i);\r\n    const angle = toDegrees(angleRadians);\r\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\r\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\r\n    if (hLimits.start < furthestLimits.l) {\r\n      furthestLimits.l = hLimits.start;\r\n      furthestAngles.l = angleRadians;\r\n    }\r\n    if (hLimits.end > furthestLimits.r) {\r\n      furthestLimits.r = hLimits.end;\r\n      furthestAngles.r = angleRadians;\r\n    }\r\n    if (vLimits.start < furthestLimits.t) {\r\n      furthestLimits.t = vLimits.start;\r\n      furthestAngles.t = angleRadians;\r\n    }\r\n    if (vLimits.end > furthestLimits.b) {\r\n      furthestLimits.b = vLimits.end;\r\n      furthestAngles.b = angleRadians;\r\n    }\r\n  }\r\n  scale._setReductions(scale.drawingArea, furthestLimits, furthestAngles);\r\n  scale._pointLabelItems = [];\r\n  const opts = scale.options;\r\n  const tickBackdropHeight = getTickBackdropHeight(opts);\r\n  const outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max);\r\n  for (i = 0; i < valueCount; i++) {\r\n    const extra = (i === 0 ? tickBackdropHeight / 2 : 0);\r\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i]);\r\n    const angle = toDegrees(scale.getIndexAngle(i));\r\n    const size = labelSizes[i];\r\n    adjustPointPositionForLabelHeight(angle, size, pointLabelPosition);\r\n    const textAlign = getTextAlignForAngle(angle);\r\n    let left;\r\n    if (textAlign === 'left') {\r\n      left = pointLabelPosition.x;\r\n    } else if (textAlign === 'center') {\r\n      left = pointLabelPosition.x - (size.w / 2);\r\n    } else {\r\n      left = pointLabelPosition.x - size.w;\r\n    }\r\n    const right = left + size.w;\r\n    scale._pointLabelItems[i] = {\r\n      x: pointLabelPosition.x,\r\n      y: pointLabelPosition.y,\r\n      textAlign,\r\n      left,\r\n      top: pointLabelPosition.y,\r\n      right,\r\n      bottom: pointLabelPosition.y + size.h,\r\n    };\r\n  }\r\n}\r\nfunction getTextAlignForAngle(angle) {\r\n  if (angle === 0 || angle === 180) {\r\n    return 'center';\r\n  } else if (angle < 180) {\r\n    return 'left';\r\n  }\r\n  return 'right';\r\n}\r\nfunction adjustPointPositionForLabelHeight(angle, textSize, position) {\r\n  if (angle === 90 || angle === 270) {\r\n    position.y -= (textSize.h / 2);\r\n  } else if (angle > 270 || angle < 90) {\r\n    position.y -= textSize.h;\r\n  }\r\n}\r\nfunction drawPointLabels(scale, labelCount) {\r\n  const {ctx, options: {pointLabels}} = scale;\r\n  for (let i = labelCount - 1; i >= 0; i--) {\r\n    const optsAtIndex = pointLabels.setContext(scale.getContext(i));\r\n    const plFont = toFont(optsAtIndex.font);\r\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\r\n    const {backdropColor} = optsAtIndex;\r\n    if (!isNullOrUndef(backdropColor)) {\r\n      const padding = toPadding(optsAtIndex.backdropPadding);\r\n      ctx.fillStyle = backdropColor;\r\n      ctx.fillRect(left - padding.left, top - padding.top, right - left + padding.width, bottom - top + padding.height);\r\n    }\r\n    renderText(\r\n      ctx,\r\n      scale._pointLabels[i],\r\n      x,\r\n      y + (plFont.lineHeight / 2),\r\n      plFont,\r\n      {\r\n        color: optsAtIndex.color,\r\n        textAlign: textAlign,\r\n        textBaseline: 'middle'\r\n      }\r\n    );\r\n  }\r\n}\r\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\r\n  const {ctx} = scale;\r\n  if (circular) {\r\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\r\n  } else {\r\n    let pointPosition = scale.getPointPosition(0, radius);\r\n    ctx.moveTo(pointPosition.x, pointPosition.y);\r\n    for (let i = 1; i < labelCount; i++) {\r\n      pointPosition = scale.getPointPosition(i, radius);\r\n      ctx.lineTo(pointPosition.x, pointPosition.y);\r\n    }\r\n  }\r\n}\r\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\r\n  const ctx = scale.ctx;\r\n  const circular = gridLineOpts.circular;\r\n  const {color, lineWidth} = gridLineOpts;\r\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\r\n    return;\r\n  }\r\n  ctx.save();\r\n  ctx.strokeStyle = color;\r\n  ctx.lineWidth = lineWidth;\r\n  ctx.setLineDash(gridLineOpts.borderDash);\r\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\r\n  ctx.beginPath();\r\n  pathRadiusLine(scale, radius, circular, labelCount);\r\n  ctx.closePath();\r\n  ctx.stroke();\r\n  ctx.restore();\r\n}\r\nfunction numberOrZero(param) {\r\n  return isNumber(param) ? param : 0;\r\n}\r\nclass RadialLinearScale extends LinearScaleBase {\r\n  constructor(cfg) {\r\n    super(cfg);\r\n    this.xCenter = undefined;\r\n    this.yCenter = undefined;\r\n    this.drawingArea = undefined;\r\n    this._pointLabels = [];\r\n    this._pointLabelItems = [];\r\n  }\r\n  setDimensions() {\r\n    const me = this;\r\n    me.width = me.maxWidth;\r\n    me.height = me.maxHeight;\r\n    me.paddingTop = getTickBackdropHeight(me.options) / 2;\r\n    me.xCenter = Math.floor(me.width / 2);\r\n    me.yCenter = Math.floor((me.height - me.paddingTop) / 2);\r\n    me.drawingArea = Math.min(me.height - me.paddingTop, me.width) / 2;\r\n  }\r\n  determineDataLimits() {\r\n    const me = this;\r\n    const {min, max} = me.getMinMax(false);\r\n    me.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\r\n    me.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\r\n    me.handleTickRangeOptions();\r\n  }\r\n  computeTickLimit() {\r\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\r\n  }\r\n  generateTickLabels(ticks) {\r\n    const me = this;\r\n    LinearScaleBase.prototype.generateTickLabels.call(me, ticks);\r\n    me._pointLabels = me.getLabels().map((value, index) => {\r\n      const label = callback(me.options.pointLabels.callback, [value, index], me);\r\n      return label || label === 0 ? label : '';\r\n    });\r\n  }\r\n  fit() {\r\n    const me = this;\r\n    const opts = me.options;\r\n    if (opts.display && opts.pointLabels.display) {\r\n      fitWithPointLabels(me);\r\n    } else {\r\n      me.setCenterPoint(0, 0, 0, 0);\r\n    }\r\n  }\r\n  _setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\r\n    const me = this;\r\n    let radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\r\n    let radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\r\n    let radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\r\n    let radiusReductionBottom = -Math.max(furthestLimits.b - (me.height - me.paddingTop), 0) / Math.cos(furthestAngles.b);\r\n    radiusReductionLeft = numberOrZero(radiusReductionLeft);\r\n    radiusReductionRight = numberOrZero(radiusReductionRight);\r\n    radiusReductionTop = numberOrZero(radiusReductionTop);\r\n    radiusReductionBottom = numberOrZero(radiusReductionBottom);\r\n    me.drawingArea = Math.max(largestPossibleRadius / 2, Math.min(\r\n      Math.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2),\r\n      Math.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2)));\r\n    me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\r\n  }\r\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\r\n    const me = this;\r\n    const maxRight = me.width - rightMovement - me.drawingArea;\r\n    const maxLeft = leftMovement + me.drawingArea;\r\n    const maxTop = topMovement + me.drawingArea;\r\n    const maxBottom = (me.height - me.paddingTop) - bottomMovement - me.drawingArea;\r\n    me.xCenter = Math.floor(((maxLeft + maxRight) / 2) + me.left);\r\n    me.yCenter = Math.floor(((maxTop + maxBottom) / 2) + me.top + me.paddingTop);\r\n  }\r\n  getIndexAngle(index) {\r\n    const angleMultiplier = TAU / this.getLabels().length;\r\n    const startAngle = this.options.startAngle || 0;\r\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\r\n  }\r\n  getDistanceFromCenterForValue(value) {\r\n    const me = this;\r\n    if (isNullOrUndef(value)) {\r\n      return NaN;\r\n    }\r\n    const scalingFactor = me.drawingArea / (me.max - me.min);\r\n    if (me.options.reverse) {\r\n      return (me.max - value) * scalingFactor;\r\n    }\r\n    return (value - me.min) * scalingFactor;\r\n  }\r\n  getValueForDistanceFromCenter(distance) {\r\n    if (isNullOrUndef(distance)) {\r\n      return NaN;\r\n    }\r\n    const me = this;\r\n    const scaledDistance = distance / (me.drawingArea / (me.max - me.min));\r\n    return me.options.reverse ? me.max - scaledDistance : me.min + scaledDistance;\r\n  }\r\n  getPointPosition(index, distanceFromCenter) {\r\n    const me = this;\r\n    const angle = me.getIndexAngle(index) - HALF_PI;\r\n    return {\r\n      x: Math.cos(angle) * distanceFromCenter + me.xCenter,\r\n      y: Math.sin(angle) * distanceFromCenter + me.yCenter,\r\n      angle\r\n    };\r\n  }\r\n  getPointPositionForValue(index, value) {\r\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\r\n  }\r\n  getBasePosition(index) {\r\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\r\n  }\r\n  getPointLabelPosition(index) {\r\n    const {left, top, right, bottom} = this._pointLabelItems[index];\r\n    return {\r\n      left,\r\n      top,\r\n      right,\r\n      bottom,\r\n    };\r\n  }\r\n  drawBackground() {\r\n    const me = this;\r\n    const {backgroundColor, grid: {circular}} = me.options;\r\n    if (backgroundColor) {\r\n      const ctx = me.ctx;\r\n      ctx.save();\r\n      ctx.beginPath();\r\n      pathRadiusLine(me, me.getDistanceFromCenterForValue(me._endValue), circular, me.getLabels().length);\r\n      ctx.closePath();\r\n      ctx.fillStyle = backgroundColor;\r\n      ctx.fill();\r\n      ctx.restore();\r\n    }\r\n  }\r\n  drawGrid() {\r\n    const me = this;\r\n    const ctx = me.ctx;\r\n    const opts = me.options;\r\n    const {angleLines, grid} = opts;\r\n    const labelCount = me.getLabels().length;\r\n    let i, offset, position;\r\n    if (opts.pointLabels.display) {\r\n      drawPointLabels(me, labelCount);\r\n    }\r\n    if (grid.display) {\r\n      me.ticks.forEach((tick, index) => {\r\n        if (index !== 0) {\r\n          offset = me.getDistanceFromCenterForValue(tick.value);\r\n          const optsAtIndex = grid.setContext(me.getContext(index - 1));\r\n          drawRadiusLine(me, optsAtIndex, offset, labelCount);\r\n        }\r\n      });\r\n    }\r\n    if (angleLines.display) {\r\n      ctx.save();\r\n      for (i = me.getLabels().length - 1; i >= 0; i--) {\r\n        const optsAtIndex = angleLines.setContext(me.getContext(i));\r\n        const {color, lineWidth} = optsAtIndex;\r\n        if (!lineWidth || !color) {\r\n          continue;\r\n        }\r\n        ctx.lineWidth = lineWidth;\r\n        ctx.strokeStyle = color;\r\n        ctx.setLineDash(optsAtIndex.borderDash);\r\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\r\n        offset = me.getDistanceFromCenterForValue(opts.ticks.reverse ? me.min : me.max);\r\n        position = me.getPointPosition(i, offset);\r\n        ctx.beginPath();\r\n        ctx.moveTo(me.xCenter, me.yCenter);\r\n        ctx.lineTo(position.x, position.y);\r\n        ctx.stroke();\r\n      }\r\n      ctx.restore();\r\n    }\r\n  }\r\n  drawLabels() {\r\n    const me = this;\r\n    const ctx = me.ctx;\r\n    const opts = me.options;\r\n    const tickOpts = opts.ticks;\r\n    if (!tickOpts.display) {\r\n      return;\r\n    }\r\n    const startAngle = me.getIndexAngle(0);\r\n    let offset, width;\r\n    ctx.save();\r\n    ctx.translate(me.xCenter, me.yCenter);\r\n    ctx.rotate(startAngle);\r\n    ctx.textAlign = 'center';\r\n    ctx.textBaseline = 'middle';\r\n    me.ticks.forEach((tick, index) => {\r\n      if (index === 0 && !opts.reverse) {\r\n        return;\r\n      }\r\n      const optsAtIndex = tickOpts.setContext(me.getContext(index));\r\n      const tickFont = toFont(optsAtIndex.font);\r\n      offset = me.getDistanceFromCenterForValue(me.ticks[index].value);\r\n      if (optsAtIndex.showLabelBackdrop) {\r\n        width = ctx.measureText(tick.label).width;\r\n        ctx.fillStyle = optsAtIndex.backdropColor;\r\n        const padding = toPadding(optsAtIndex.backdropPadding);\r\n        ctx.fillRect(\r\n          -width / 2 - padding.left,\r\n          -offset - tickFont.size / 2 - padding.top,\r\n          width + padding.width,\r\n          tickFont.size + padding.height\r\n        );\r\n      }\r\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\r\n        color: optsAtIndex.color,\r\n      });\r\n    });\r\n    ctx.restore();\r\n  }\r\n  drawTitle() {}\r\n}\r\nRadialLinearScale.id = 'radialLinear';\r\nRadialLinearScale.defaults = {\r\n  display: true,\r\n  animate: true,\r\n  position: 'chartArea',\r\n  angleLines: {\r\n    display: true,\r\n    lineWidth: 1,\r\n    borderDash: [],\r\n    borderDashOffset: 0.0\r\n  },\r\n  grid: {\r\n    circular: false\r\n  },\r\n  startAngle: 0,\r\n  ticks: {\r\n    showLabelBackdrop: true,\r\n    backdropColor: 'rgba(255,255,255,0.75)',\r\n    backdropPadding: 2,\r\n    callback: Ticks.formatters.numeric\r\n  },\r\n  pointLabels: {\r\n    backdropColor: undefined,\r\n    backdropPadding: 2,\r\n    display: true,\r\n    font: {\r\n      size: 10\r\n    },\r\n    callback(label) {\r\n      return label;\r\n    },\r\n    padding: 5\r\n  }\r\n};\r\nRadialLinearScale.defaultRoutes = {\r\n  'angleLines.color': 'borderColor',\r\n  'pointLabels.color': 'color',\r\n  'ticks.color': 'color'\r\n};\r\nRadialLinearScale.descriptors = {\r\n  angleLines: {\r\n    _fallback: 'grid'\r\n  }\r\n};\r\n\r\nconst INTERVALS = {\r\n  millisecond: {common: true, size: 1, steps: 1000},\r\n  second: {common: true, size: 1000, steps: 60},\r\n  minute: {common: true, size: 60000, steps: 60},\r\n  hour: {common: true, size: 3600000, steps: 24},\r\n  day: {common: true, size: 86400000, steps: 30},\r\n  week: {common: false, size: 604800000, steps: 4},\r\n  month: {common: true, size: 2.628e9, steps: 12},\r\n  quarter: {common: false, size: 7.884e9, steps: 4},\r\n  year: {common: true, size: 3.154e10}\r\n};\r\nconst UNITS = (Object.keys(INTERVALS));\r\nfunction sorter(a, b) {\r\n  return a - b;\r\n}\r\nfunction parse(scale, input) {\r\n  if (isNullOrUndef(input)) {\r\n    return null;\r\n  }\r\n  const adapter = scale._adapter;\r\n  const options = scale.options.time;\r\n  const {parser, round, isoWeekday} = options;\r\n  let value = input;\r\n  if (typeof parser === 'function') {\r\n    value = parser(value);\r\n  }\r\n  if (!isNumberFinite(value)) {\r\n    value = typeof parser === 'string'\r\n      ? adapter.parse(value, parser)\r\n      : adapter.parse(value);\r\n  }\r\n  if (value === null) {\r\n    return null;\r\n  }\r\n  if (round) {\r\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\r\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\r\n      : adapter.startOf(value, round);\r\n  }\r\n  return +value;\r\n}\r\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\r\n  const ilen = UNITS.length;\r\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\r\n    const interval = INTERVALS[UNITS[i]];\r\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\r\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\r\n      return UNITS[i];\r\n    }\r\n  }\r\n  return UNITS[ilen - 1];\r\n}\r\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\r\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\r\n    const unit = UNITS[i];\r\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\r\n      return unit;\r\n    }\r\n  }\r\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\r\n}\r\nfunction determineMajorUnit(unit) {\r\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\r\n    if (INTERVALS[UNITS[i]].common) {\r\n      return UNITS[i];\r\n    }\r\n  }\r\n}\r\nfunction addTick(ticks, time, timestamps) {\r\n  if (!timestamps) {\r\n    ticks[time] = true;\r\n  } else if (timestamps.length) {\r\n    const {lo, hi} = _lookup(timestamps, time);\r\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\r\n    ticks[timestamp] = true;\r\n  }\r\n}\r\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\r\n  const adapter = scale._adapter;\r\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\r\n  const last = ticks[ticks.length - 1].value;\r\n  let major, index;\r\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\r\n    index = map[major];\r\n    if (index >= 0) {\r\n      ticks[index].major = true;\r\n    }\r\n  }\r\n  return ticks;\r\n}\r\nfunction ticksFromTimestamps(scale, values, majorUnit) {\r\n  const ticks = [];\r\n  const map = {};\r\n  const ilen = values.length;\r\n  let i, value;\r\n  for (i = 0; i < ilen; ++i) {\r\n    value = values[i];\r\n    map[value] = i;\r\n    ticks.push({\r\n      value,\r\n      major: false\r\n    });\r\n  }\r\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\r\n}\r\nclass TimeScale extends Scale {\r\n  constructor(props) {\r\n    super(props);\r\n    this._cache = {\r\n      data: [],\r\n      labels: [],\r\n      all: []\r\n    };\r\n    this._unit = 'day';\r\n    this._majorUnit = undefined;\r\n    this._offsets = {};\r\n    this._normalized = false;\r\n  }\r\n  init(scaleOpts, opts) {\r\n    const time = scaleOpts.time || (scaleOpts.time = {});\r\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\r\n    mergeIf(time.displayFormats, adapter.formats());\r\n    super.init(scaleOpts);\r\n    this._normalized = opts.normalized;\r\n  }\r\n  parse(raw, index) {\r\n    if (raw === undefined) {\r\n      return null;\r\n    }\r\n    return parse(this, raw);\r\n  }\r\n  beforeLayout() {\r\n    super.beforeLayout();\r\n    this._cache = {\r\n      data: [],\r\n      labels: [],\r\n      all: []\r\n    };\r\n  }\r\n  determineDataLimits() {\r\n    const me = this;\r\n    const options = me.options;\r\n    const adapter = me._adapter;\r\n    const unit = options.time.unit || 'day';\r\n    let {min, max, minDefined, maxDefined} = me.getUserBounds();\r\n    function _applyBounds(bounds) {\r\n      if (!minDefined && !isNaN(bounds.min)) {\r\n        min = Math.min(min, bounds.min);\r\n      }\r\n      if (!maxDefined && !isNaN(bounds.max)) {\r\n        max = Math.max(max, bounds.max);\r\n      }\r\n    }\r\n    if (!minDefined || !maxDefined) {\r\n      _applyBounds(me._getLabelBounds());\r\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\r\n        _applyBounds(me.getMinMax(false));\r\n      }\r\n    }\r\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\r\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\r\n    me.min = Math.min(min, max - 1);\r\n    me.max = Math.max(min + 1, max);\r\n  }\r\n  _getLabelBounds() {\r\n    const arr = this.getLabelTimestamps();\r\n    let min = Number.POSITIVE_INFINITY;\r\n    let max = Number.NEGATIVE_INFINITY;\r\n    if (arr.length) {\r\n      min = arr[0];\r\n      max = arr[arr.length - 1];\r\n    }\r\n    return {min, max};\r\n  }\r\n  buildTicks() {\r\n    const me = this;\r\n    const options = me.options;\r\n    const timeOpts = options.time;\r\n    const tickOpts = options.ticks;\r\n    const timestamps = tickOpts.source === 'labels' ? me.getLabelTimestamps() : me._generate();\r\n    if (options.bounds === 'ticks' && timestamps.length) {\r\n      me.min = me._userMin || timestamps[0];\r\n      me.max = me._userMax || timestamps[timestamps.length - 1];\r\n    }\r\n    const min = me.min;\r\n    const max = me.max;\r\n    const ticks = _filterBetween(timestamps, min, max);\r\n    me._unit = timeOpts.unit || (tickOpts.autoSkip\r\n      ? determineUnitForAutoTicks(timeOpts.minUnit, me.min, me.max, me._getLabelCapacity(min))\r\n      : determineUnitForFormatting(me, ticks.length, timeOpts.minUnit, me.min, me.max));\r\n    me._majorUnit = !tickOpts.major.enabled || me._unit === 'year' ? undefined\r\n      : determineMajorUnit(me._unit);\r\n    me.initOffsets(timestamps);\r\n    if (options.reverse) {\r\n      ticks.reverse();\r\n    }\r\n    return ticksFromTimestamps(me, ticks, me._majorUnit);\r\n  }\r\n  initOffsets(timestamps) {\r\n    const me = this;\r\n    let start = 0;\r\n    let end = 0;\r\n    let first, last;\r\n    if (me.options.offset && timestamps.length) {\r\n      first = me.getDecimalForValue(timestamps[0]);\r\n      if (timestamps.length === 1) {\r\n        start = 1 - first;\r\n      } else {\r\n        start = (me.getDecimalForValue(timestamps[1]) - first) / 2;\r\n      }\r\n      last = me.getDecimalForValue(timestamps[timestamps.length - 1]);\r\n      if (timestamps.length === 1) {\r\n        end = last;\r\n      } else {\r\n        end = (last - me.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\r\n      }\r\n    }\r\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\r\n    start = _limitValue(start, 0, limit);\r\n    end = _limitValue(end, 0, limit);\r\n    me._offsets = {start, end, factor: 1 / (start + 1 + end)};\r\n  }\r\n  _generate() {\r\n    const me = this;\r\n    const adapter = me._adapter;\r\n    const min = me.min;\r\n    const max = me.max;\r\n    const options = me.options;\r\n    const timeOpts = options.time;\r\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, me._getLabelCapacity(min));\r\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\r\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\r\n    const hasWeekday = isNumber(weekday) || weekday === true;\r\n    const ticks = {};\r\n    let first = min;\r\n    let time, count;\r\n    if (hasWeekday) {\r\n      first = +adapter.startOf(first, 'isoWeek', weekday);\r\n    }\r\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\r\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\r\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\r\n    }\r\n    const timestamps = options.ticks.source === 'data' && me.getDataTimestamps();\r\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\r\n      addTick(ticks, time, timestamps);\r\n    }\r\n    if (time === max || options.bounds === 'ticks' || count === 1) {\r\n      addTick(ticks, time, timestamps);\r\n    }\r\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\r\n  }\r\n  getLabelForValue(value) {\r\n    const me = this;\r\n    const adapter = me._adapter;\r\n    const timeOpts = me.options.time;\r\n    if (timeOpts.tooltipFormat) {\r\n      return adapter.format(value, timeOpts.tooltipFormat);\r\n    }\r\n    return adapter.format(value, timeOpts.displayFormats.datetime);\r\n  }\r\n  _tickFormatFunction(time, index, ticks, format) {\r\n    const me = this;\r\n    const options = me.options;\r\n    const formats = options.time.displayFormats;\r\n    const unit = me._unit;\r\n    const majorUnit = me._majorUnit;\r\n    const minorFormat = unit && formats[unit];\r\n    const majorFormat = majorUnit && formats[majorUnit];\r\n    const tick = ticks[index];\r\n    const major = majorUnit && majorFormat && tick && tick.major;\r\n    const label = me._adapter.format(time, format || (major ? majorFormat : minorFormat));\r\n    const formatter = options.ticks.callback;\r\n    return formatter ? formatter(label, index, ticks) : label;\r\n  }\r\n  generateTickLabels(ticks) {\r\n    let i, ilen, tick;\r\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\r\n      tick = ticks[i];\r\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\r\n    }\r\n  }\r\n  getDecimalForValue(value) {\r\n    const me = this;\r\n    return value === null ? NaN : (value - me.min) / (me.max - me.min);\r\n  }\r\n  getPixelForValue(value) {\r\n    const me = this;\r\n    const offsets = me._offsets;\r\n    const pos = me.getDecimalForValue(value);\r\n    return me.getPixelForDecimal((offsets.start + pos) * offsets.factor);\r\n  }\r\n  getValueForPixel(pixel) {\r\n    const me = this;\r\n    const offsets = me._offsets;\r\n    const pos = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\r\n    return me.min + pos * (me.max - me.min);\r\n  }\r\n  _getLabelSize(label) {\r\n    const me = this;\r\n    const ticksOpts = me.options.ticks;\r\n    const tickLabelWidth = me.ctx.measureText(label).width;\r\n    const angle = toRadians(me.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\r\n    const cosRotation = Math.cos(angle);\r\n    const sinRotation = Math.sin(angle);\r\n    const tickFontSize = me._resolveTickFontOptions(0).size;\r\n    return {\r\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\r\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\r\n    };\r\n  }\r\n  _getLabelCapacity(exampleTime) {\r\n    const me = this;\r\n    const timeOpts = me.options.time;\r\n    const displayFormats = timeOpts.displayFormats;\r\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\r\n    const exampleLabel = me._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(me, [exampleTime], me._majorUnit), format);\r\n    const size = me._getLabelSize(exampleLabel);\r\n    const capacity = Math.floor(me.isHorizontal() ? me.width / size.w : me.height / size.h) - 1;\r\n    return capacity > 0 ? capacity : 1;\r\n  }\r\n  getDataTimestamps() {\r\n    const me = this;\r\n    let timestamps = me._cache.data || [];\r\n    let i, ilen;\r\n    if (timestamps.length) {\r\n      return timestamps;\r\n    }\r\n    const metas = me.getMatchingVisibleMetas();\r\n    if (me._normalized && metas.length) {\r\n      return (me._cache.data = metas[0].controller.getAllParsedValues(me));\r\n    }\r\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\r\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(me));\r\n    }\r\n    return (me._cache.data = me.normalize(timestamps));\r\n  }\r\n  getLabelTimestamps() {\r\n    const me = this;\r\n    const timestamps = me._cache.labels || [];\r\n    let i, ilen;\r\n    if (timestamps.length) {\r\n      return timestamps;\r\n    }\r\n    const labels = me.getLabels();\r\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\r\n      timestamps.push(parse(me, labels[i]));\r\n    }\r\n    return (me._cache.labels = me._normalized ? timestamps : me.normalize(timestamps));\r\n  }\r\n  normalize(values) {\r\n    return _arrayUnique(values.sort(sorter));\r\n  }\r\n}\r\nTimeScale.id = 'time';\r\nTimeScale.defaults = {\r\n  bounds: 'data',\r\n  adapters: {},\r\n  time: {\r\n    parser: false,\r\n    unit: false,\r\n    round: false,\r\n    isoWeekday: false,\r\n    minUnit: 'millisecond',\r\n    displayFormats: {}\r\n  },\r\n  ticks: {\r\n    source: 'auto',\r\n    major: {\r\n      enabled: false\r\n    }\r\n  }\r\n};\r\n\r\nfunction interpolate(table, val, reverse) {\r\n  let prevSource, nextSource, prevTarget, nextTarget;\r\n  if (reverse) {\r\n    prevSource = Math.floor(val);\r\n    nextSource = Math.ceil(val);\r\n    prevTarget = table[prevSource];\r\n    nextTarget = table[nextSource];\r\n  } else {\r\n    const result = _lookup(table, val);\r\n    prevTarget = result.lo;\r\n    nextTarget = result.hi;\r\n    prevSource = table[prevTarget];\r\n    nextSource = table[nextTarget];\r\n  }\r\n  const span = nextSource - prevSource;\r\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\r\n}\r\nclass TimeSeriesScale extends TimeScale {\r\n  constructor(props) {\r\n    super(props);\r\n    this._table = [];\r\n    this._maxIndex = undefined;\r\n  }\r\n  initOffsets() {\r\n    const me = this;\r\n    const timestamps = me._getTimestampsForTable();\r\n    me._table = me.buildLookupTable(timestamps);\r\n    me._maxIndex = me._table.length - 1;\r\n    super.initOffsets(timestamps);\r\n  }\r\n  buildLookupTable(timestamps) {\r\n    const me = this;\r\n    const {min, max} = me;\r\n    if (!timestamps.length) {\r\n      return [\r\n        {time: min, pos: 0},\r\n        {time: max, pos: 1}\r\n      ];\r\n    }\r\n    const items = [min];\r\n    let i, ilen, curr;\r\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\r\n      curr = timestamps[i];\r\n      if (curr > min && curr < max) {\r\n        items.push(curr);\r\n      }\r\n    }\r\n    items.push(max);\r\n    return items;\r\n  }\r\n  _getTimestampsForTable() {\r\n    const me = this;\r\n    let timestamps = me._cache.all || [];\r\n    if (timestamps.length) {\r\n      return timestamps;\r\n    }\r\n    const data = me.getDataTimestamps();\r\n    const label = me.getLabelTimestamps();\r\n    if (data.length && label.length) {\r\n      timestamps = me.normalize(data.concat(label));\r\n    } else {\r\n      timestamps = data.length ? data : label;\r\n    }\r\n    timestamps = me._cache.all = timestamps;\r\n    return timestamps;\r\n  }\r\n  getPixelForValue(value, index) {\r\n    const me = this;\r\n    const offsets = me._offsets;\r\n    const pos = me._normalized && me._maxIndex > 0 && !isNullOrUndef(index)\r\n      ? index / me._maxIndex : me.getDecimalForValue(value);\r\n    return me.getPixelForDecimal((offsets.start + pos) * offsets.factor);\r\n  }\r\n  getDecimalForValue(value) {\r\n    return interpolate(this._table, value) / this._maxIndex;\r\n  }\r\n  getValueForPixel(pixel) {\r\n    const me = this;\r\n    const offsets = me._offsets;\r\n    const decimal = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\r\n    return interpolate(me._table, decimal * this._maxIndex, true);\r\n  }\r\n}\r\nTimeSeriesScale.id = 'timeseries';\r\nTimeSeriesScale.defaults = TimeScale.defaults;\r\n\r\nvar scales = /*#__PURE__*/Object.freeze({\r\n__proto__: null,\r\nCategoryScale: CategoryScale,\r\nLinearScale: LinearScale,\r\nLogarithmicScale: LogarithmicScale,\r\nRadialLinearScale: RadialLinearScale,\r\nTimeScale: TimeScale,\r\nTimeSeriesScale: TimeSeriesScale\r\n});\r\n\r\nconst registerables = [\r\n  controllers,\r\n  elements,\r\n  plugins,\r\n  scales,\r\n];\r\n\r\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, plugin_filler as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, animator, controllers, elements, layouts, plugins, registerables, registry, scales };\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,CAAC,IAAIC,gBAAgB,EAAEC,CAAC,IAAIC,OAAO,EAAEC,CAAC,IAAIC,OAAO,EAAEC,CAAC,IAAIC,KAAK,EAAEC,CAAC,IAAIC,QAAQ,EAAEC,CAAC,IAAIC,OAAO,EAAEC,CAAC,IAAIC,QAAQ,EAAEC,CAAC,IAAIC,cAAc,EAAEC,CAAC,IAAIC,mBAAmB,EAAEC,CAAC,IAAIC,iBAAiB,EAAEC,CAAC,IAAIC,gBAAgB,EAAEC,CAAC,IAAIC,cAAc,EAAEC,CAAC,IAAIC,OAAO,EAAEC,CAAC,IAAIC,IAAI,EAAEC,CAAC,IAAIC,aAAa,EAAEC,CAAC,IAAIC,QAAQ,EAAEC,CAAC,IAAIC,UAAU,EAAEC,CAAC,IAAIC,YAAY,EAAEC,CAAC,IAAIC,SAAS,EAAEC,CAAC,IAAIC,YAAY,EAAEC,CAAC,IAAIC,WAAW,EAAEC,CAAC,IAAIC,GAAG,EAAEC,CAAC,IAAIC,YAAY,EAAEC,CAAC,IAAIC,aAAa,EAAEC,CAAC,IAAIC,OAAO,EAAEC,CAAC,IAAIC,EAAE,EAAEC,CAAC,IAAIC,QAAQ,EAAEC,CAAC,IAAIC,WAAW,EAAEC,CAAC,IAAIC,YAAY,EAAEC,CAAC,IAAIC,qBAAqB,EAAEC,CAAC,IAAIC,cAAc,EAAEC,CAAC,IAAIC,aAAa,EAAEC,CAAC,IAAIC,SAAS,EAAEC,CAAC,IAAIC,IAAI,EAAEC,CAAC,IAAIC,cAAc,EAAEC,CAAC,IAAIC,cAAc,EAAEC,CAAC,IAAIC,YAAY,EAAEC,CAAC,IAAIC,SAAS,EAAEC,CAAC,IAAIC,4BAA4B,EAAEC,CAAC,IAAIC,KAAK,EAAEC,CAAC,IAAIC,UAAU,EAAEC,CAAC,IAAIC,eAAe,EAAEC,CAAC,IAAIC,QAAQ,EAAEC,CAAC,IAAIC,SAAS,EAAEC,CAAC,IAAIC,YAAY,EAAEC,CAAC,IAAIC,WAAW,EAAEC,CAAC,IAAIC,WAAW,EAAEC,CAAC,IAAIC,UAAU,EAAEC,CAAC,IAAIC,MAAM,EAAEC,CAAC,IAAIC,kBAAkB,EAAEC,CAAC,IAAIC,cAAc,EAAEC,CAAC,IAAIC,SAAS,EAAEC,CAAC,IAAIC,KAAK,EAAEC,CAAC,IAAIC,WAAW,EAAEC,EAAE,IAAIC,WAAW,EAAEC,EAAE,IAAIC,UAAU,EAAEC,EAAE,IAAIC,cAAc,EAAEC,EAAE,IAAIC,eAAe,EAAEC,EAAE,IAAIC,YAAY,EAAEC,EAAE,IAAIC,OAAO,EAAEC,EAAE,IAAIC,GAAG,EAAEC,EAAE,IAAIC,QAAQ,EAAEC,EAAE,IAAIC,WAAW,EAAEC,EAAE,IAAIC,WAAW,EAAEC,EAAE,IAAIC,cAAc,EAAEC,EAAE,IAAIC,iBAAiB,EAAEC,EAAE,IAAIC,0BAA0B,EAAEC,EAAE,IAAIC,gBAAgB,EAAEC,EAAE,IAAIC,cAAc,EAAEC,EAAE,IAAIC,qBAAqB,EAAEC,EAAE,IAAIC,oBAAoB,EAAEC,EAAE,IAAIC,YAAY,EAAEC,EAAE,IAAIC,cAAc,EAAEC,EAAE,IAAIC,cAAc,EAAEC,EAAE,IAAIC,SAAS,EAAEC,EAAE,IAAIC,MAAM,EAAEC,EAAE,IAAIC,aAAa,EAAEC,EAAE,IAAIC,aAAa,EAAEC,EAAE,IAAIC,eAAe,EAAEC,EAAE,IAAIC,aAAa,EAAEC,EAAE,IAAIC,qBAAqB,EAAEC,EAAE,IAAIC,MAAM,EAAEC,EAAE,IAAIC,oBAAoB,EAAEC,EAAE,IAAIC,IAAI,EAAEC,EAAE,IAAIC,qBAAqB,EAAEC,EAAE,IAAIC,SAAS,EAAEC,EAAE,IAAIC,kBAAkB,EAAEC,EAAE,IAAIC,OAAO,EAAEC,EAAE,IAAIC,WAAW,EAAEC,EAAE,IAAIC,YAAY,EAAEC,EAAE,IAAIC,cAAc,EAAEC,EAAE,IAAIC,YAAY,EAAEC,EAAE,IAAIC,cAAc,EAAEC,EAAE,IAAIC,OAAO,QAAQ,6BAA6B;AACjzD,SAAS/K,CAAC,IAAIC,QAAQ,QAAQ,6BAA6B;AAE3D,MAAM+K,QAAQ,CAAC;EACbC,WAAWA,CAAA,EAAG;IACZ,IAAI,CAACC,QAAQ,GAAG,IAAI;IACpB,IAAI,CAACC,OAAO,GAAG,IAAIC,GAAG,CAAC,CAAC;IACxB,IAAI,CAACC,QAAQ,GAAG,KAAK;IACrB,IAAI,CAACC,SAAS,GAAGC,SAAS;EAC5B;EACAC,OAAOA,CAACC,KAAK,EAAEC,KAAK,EAAEC,IAAI,EAAEC,IAAI,EAAE;IAChC,MAAMC,SAAS,GAAGH,KAAK,CAACI,SAAS,CAACF,IAAI,CAAC;IACvC,MAAMG,QAAQ,GAAGL,KAAK,CAACM,QAAQ;IAC/BH,SAAS,CAACI,OAAO,CAACC,EAAE,IAAIA,EAAE,CAAC;MACzBT,KAAK;MACLM,QAAQ;MACRI,WAAW,EAAEC,IAAI,CAACC,GAAG,CAACV,IAAI,GAAGD,KAAK,CAACY,KAAK,EAAEP,QAAQ;IACpD,CAAC,CAAC,CAAC;EACL;EACAQ,QAAQA,CAAA,EAAG;IACT,MAAMC,EAAE,GAAG,IAAI;IACf,IAAIA,EAAE,CAACtB,QAAQ,EAAE;MACf;IACF;IACAsB,EAAE,CAACnB,QAAQ,GAAG,IAAI;IAClBmB,EAAE,CAACtB,QAAQ,GAAG7L,gBAAgB,CAACoN,IAAI,CAACC,MAAM,EAAE,MAAM;MAChDF,EAAE,CAACG,OAAO,CAAC,CAAC;MACZH,EAAE,CAACtB,QAAQ,GAAG,IAAI;MAClB,IAAIsB,EAAE,CAACnB,QAAQ,EAAE;QACfmB,EAAE,CAACD,QAAQ,CAAC,CAAC;MACf;IACF,CAAC,CAAC;EACJ;EACAI,OAAOA,CAAA,EAAoB;IAAA,IAAnBhB,IAAI,GAAAiB,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAArB,SAAA,GAAAqB,SAAA,MAAGE,IAAI,CAACC,GAAG,CAAC,CAAC;IACvB,MAAMP,EAAE,GAAG,IAAI;IACf,IAAIQ,SAAS,GAAG,CAAC;IACjBR,EAAE,CAACrB,OAAO,CAACc,OAAO,CAAC,CAACP,KAAK,EAAED,KAAK,KAAK;MACnC,IAAI,CAACC,KAAK,CAACuB,OAAO,IAAI,CAACvB,KAAK,CAACwB,KAAK,CAACL,MAAM,EAAE;QACzC;MACF;MACA,MAAMK,KAAK,GAAGxB,KAAK,CAACwB,KAAK;MACzB,IAAItN,CAAC,GAAGsN,KAAK,CAACL,MAAM,GAAG,CAAC;MACxB,IAAIM,IAAI,GAAG,KAAK;MAChB,IAAIC,IAAI;MACR,OAAOxN,CAAC,IAAI,CAAC,EAAE,EAAEA,CAAC,EAAE;QAClBwN,IAAI,GAAGF,KAAK,CAACtN,CAAC,CAAC;QACf,IAAIwN,IAAI,CAACC,OAAO,EAAE;UAChB,IAAID,IAAI,CAACE,MAAM,GAAG5B,KAAK,CAACM,QAAQ,EAAE;YAChCN,KAAK,CAACM,QAAQ,GAAGoB,IAAI,CAACE,MAAM;UAC9B;UACAF,IAAI,CAACG,IAAI,CAAC5B,IAAI,CAAC;UACfwB,IAAI,GAAG,IAAI;QACb,CAAC,MAAM;UACLD,KAAK,CAACtN,CAAC,CAAC,GAAGsN,KAAK,CAACA,KAAK,CAACL,MAAM,GAAG,CAAC,CAAC;UAClCK,KAAK,CAACM,GAAG,CAAC,CAAC;QACb;MACF;MACA,IAAIL,IAAI,EAAE;QACR1B,KAAK,CAAC0B,IAAI,CAAC,CAAC;QACZX,EAAE,CAAChB,OAAO,CAACC,KAAK,EAAEC,KAAK,EAAEC,IAAI,EAAE,UAAU,CAAC;MAC5C;MACA,IAAI,CAACuB,KAAK,CAACL,MAAM,EAAE;QACjBnB,KAAK,CAACuB,OAAO,GAAG,KAAK;QACrBT,EAAE,CAAChB,OAAO,CAACC,KAAK,EAAEC,KAAK,EAAEC,IAAI,EAAE,UAAU,CAAC;MAC5C;MACAqB,SAAS,IAAIE,KAAK,CAACL,MAAM;IAC3B,CAAC,CAAC;IACFL,EAAE,CAAClB,SAAS,GAAGK,IAAI;IACnB,IAAIqB,SAAS,KAAK,CAAC,EAAE;MACnBR,EAAE,CAACnB,QAAQ,GAAG,KAAK;IACrB;EACF;EACAoC,SAASA,CAAChC,KAAK,EAAE;IACf,MAAMiC,MAAM,GAAG,IAAI,CAACvC,OAAO;IAC3B,IAAIO,KAAK,GAAGgC,MAAM,CAACC,GAAG,CAAClC,KAAK,CAAC;IAC7B,IAAI,CAACC,KAAK,EAAE;MACVA,KAAK,GAAG;QACNuB,OAAO,EAAE,KAAK;QACdC,KAAK,EAAE,EAAE;QACTpB,SAAS,EAAE;UACT8B,QAAQ,EAAE,EAAE;UACZC,QAAQ,EAAE;QACZ;MACF,CAAC;MACDH,MAAM,CAACI,GAAG,CAACrC,KAAK,EAAEC,KAAK,CAAC;IAC1B;IACA,OAAOA,KAAK;EACd;EACAqC,MAAMA,CAACtC,KAAK,EAAEuC,KAAK,EAAEC,EAAE,EAAE;IACvB,IAAI,CAACR,SAAS,CAAChC,KAAK,CAAC,CAACK,SAAS,CAACkC,KAAK,CAAC,CAACE,IAAI,CAACD,EAAE,CAAC;EACjD;EACAE,GAAGA,CAAC1C,KAAK,EAAEyB,KAAK,EAAE;IAChB,IAAI,CAACA,KAAK,IAAI,CAACA,KAAK,CAACL,MAAM,EAAE;MAC3B;IACF;IACA,IAAI,CAACY,SAAS,CAAChC,KAAK,CAAC,CAACyB,KAAK,CAACgB,IAAI,CAAC,GAAGhB,KAAK,CAAC;EAC5C;EACAkB,GAAGA,CAAC3C,KAAK,EAAE;IACT,OAAO,IAAI,CAACgC,SAAS,CAAChC,KAAK,CAAC,CAACyB,KAAK,CAACL,MAAM,GAAG,CAAC;EAC/C;EACAP,KAAKA,CAACb,KAAK,EAAE;IACX,MAAMC,KAAK,GAAG,IAAI,CAACP,OAAO,CAACwC,GAAG,CAAClC,KAAK,CAAC;IACrC,IAAI,CAACC,KAAK,EAAE;MACV;IACF;IACAA,KAAK,CAACuB,OAAO,GAAG,IAAI;IACpBvB,KAAK,CAACY,KAAK,GAAGQ,IAAI,CAACC,GAAG,CAAC,CAAC;IACxBrB,KAAK,CAACM,QAAQ,GAAGN,KAAK,CAACwB,KAAK,CAACmB,MAAM,CAAC,CAACC,GAAG,EAAEC,GAAG,KAAKnC,IAAI,CAACoC,GAAG,CAACF,GAAG,EAAEC,GAAG,CAACE,SAAS,CAAC,EAAE,CAAC,CAAC;IAClF,IAAI,CAAClC,QAAQ,CAAC,CAAC;EACjB;EACAU,OAAOA,CAACxB,KAAK,EAAE;IACb,IAAI,CAAC,IAAI,CAACJ,QAAQ,EAAE;MAClB,OAAO,KAAK;IACd;IACA,MAAMK,KAAK,GAAG,IAAI,CAACP,OAAO,CAACwC,GAAG,CAAClC,KAAK,CAAC;IACrC,IAAI,CAACC,KAAK,IAAI,CAACA,KAAK,CAACuB,OAAO,IAAI,CAACvB,KAAK,CAACwB,KAAK,CAACL,MAAM,EAAE;MACnD,OAAO,KAAK;IACd;IACA,OAAO,IAAI;EACb;EACA6B,IAAIA,CAACjD,KAAK,EAAE;IACV,MAAMC,KAAK,GAAG,IAAI,CAACP,OAAO,CAACwC,GAAG,CAAClC,KAAK,CAAC;IACrC,IAAI,CAACC,KAAK,IAAI,CAACA,KAAK,CAACwB,KAAK,CAACL,MAAM,EAAE;MACjC;IACF;IACA,MAAMK,KAAK,GAAGxB,KAAK,CAACwB,KAAK;IACzB,IAAItN,CAAC,GAAGsN,KAAK,CAACL,MAAM,GAAG,CAAC;IACxB,OAAOjN,CAAC,IAAI,CAAC,EAAE,EAAEA,CAAC,EAAE;MAClBsN,KAAK,CAACtN,CAAC,CAAC,CAAC+O,MAAM,CAAC,CAAC;IACnB;IACAjD,KAAK,CAACwB,KAAK,GAAG,EAAE;IAChB,IAAI,CAAC1B,OAAO,CAACC,KAAK,EAAEC,KAAK,EAAEoB,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE,UAAU,CAAC;EACpD;EACA6B,MAAMA,CAACnD,KAAK,EAAE;IACZ,OAAO,IAAI,CAACN,OAAO,CAAC0D,MAAM,CAACpD,KAAK,CAAC;EACnC;AACF;AACA,IAAIqD,QAAQ,GAAG,IAAI9D,QAAQ,CAAC,CAAC;AAE7B,MAAM+D,WAAW,GAAG,aAAa;AACjC,MAAMC,aAAa,GAAG;EACpBC,OAAOA,CAACC,IAAI,EAAEC,EAAE,EAAEC,MAAM,EAAE;IACxB,OAAOA,MAAM,GAAG,GAAG,GAAGD,EAAE,GAAGD,IAAI;EACjC,CAAC;EACDvP,KAAKA,CAACuP,IAAI,EAAEC,EAAE,EAAEC,MAAM,EAAE;IACtB,MAAMC,EAAE,GAAG1P,KAAK,CAACuP,IAAI,IAAIH,WAAW,CAAC;IACrC,MAAMO,EAAE,GAAGD,EAAE,CAACE,KAAK,IAAI5P,KAAK,CAACwP,EAAE,IAAIJ,WAAW,CAAC;IAC/C,OAAOO,EAAE,IAAIA,EAAE,CAACC,KAAK,GACjBD,EAAE,CAACE,GAAG,CAACH,EAAE,EAAED,MAAM,CAAC,CAACK,SAAS,CAAC,CAAC,GAC9BN,EAAE;EACR,CAAC;EACDO,MAAMA,CAACR,IAAI,EAAEC,EAAE,EAAEC,MAAM,EAAE;IACvB,OAAOF,IAAI,GAAG,CAACC,EAAE,GAAGD,IAAI,IAAIE,MAAM;EACpC;AACF,CAAC;AACD,MAAMO,SAAS,CAAC;EACd1E,WAAWA,CAAC2E,GAAG,EAAEC,MAAM,EAAEC,IAAI,EAAEX,EAAE,EAAE;IACjC,MAAMY,YAAY,GAAGF,MAAM,CAACC,IAAI,CAAC;IACjCX,EAAE,GAAG5P,OAAO,CAAC,CAACqQ,GAAG,CAACT,EAAE,EAAEA,EAAE,EAAEY,YAAY,EAAEH,GAAG,CAACV,IAAI,CAAC,CAAC;IAClD,MAAMA,IAAI,GAAG3P,OAAO,CAAC,CAACqQ,GAAG,CAACV,IAAI,EAAEa,YAAY,EAAEZ,EAAE,CAAC,CAAC;IAClD,IAAI,CAAC9B,OAAO,GAAG,IAAI;IACnB,IAAI,CAAC2C,GAAG,GAAGJ,GAAG,CAAC1D,EAAE,IAAI8C,aAAa,CAACY,GAAG,CAAChE,IAAI,IAAI,OAAOsD,IAAI,CAAC;IAC3D,IAAI,CAACe,OAAO,GAAGxQ,OAAO,CAACmQ,GAAG,CAACM,MAAM,CAAC,IAAIzQ,OAAO,CAAC0Q,MAAM;IACpD,IAAI,CAACC,MAAM,GAAGhE,IAAI,CAACiE,KAAK,CAACvD,IAAI,CAACC,GAAG,CAAC,CAAC,IAAI6C,GAAG,CAACU,KAAK,IAAI,CAAC,CAAC,CAAC;IACvD,IAAI,CAAC7B,SAAS,GAAG,IAAI,CAACnB,MAAM,GAAGlB,IAAI,CAACiE,KAAK,CAACT,GAAG,CAAC5D,QAAQ,CAAC;IACvD,IAAI,CAACuE,KAAK,GAAG,CAAC,CAACX,GAAG,CAACY,IAAI;IACvB,IAAI,CAACC,OAAO,GAAGZ,MAAM;IACrB,IAAI,CAACa,KAAK,GAAGZ,IAAI;IACjB,IAAI,CAACa,KAAK,GAAGzB,IAAI;IACjB,IAAI,CAAC0B,GAAG,GAAGzB,EAAE;IACb,IAAI,CAAC0B,SAAS,GAAGtF,SAAS;EAC5B;EACAuF,MAAMA,CAAA,EAAG;IACP,OAAO,IAAI,CAACzD,OAAO;EACrB;EACA0D,MAAMA,CAACnB,GAAG,EAAET,EAAE,EAAExD,IAAI,EAAE;IACpB,MAAMa,EAAE,GAAG,IAAI;IACf,IAAIA,EAAE,CAACa,OAAO,EAAE;MACdb,EAAE,CAAChB,OAAO,CAAC,KAAK,CAAC;MACjB,MAAMuE,YAAY,GAAGvD,EAAE,CAACiE,OAAO,CAACjE,EAAE,CAACkE,KAAK,CAAC;MACzC,MAAMM,OAAO,GAAGrF,IAAI,GAAGa,EAAE,CAAC4D,MAAM;MAChC,MAAMa,MAAM,GAAGzE,EAAE,CAACiC,SAAS,GAAGuC,OAAO;MACrCxE,EAAE,CAAC4D,MAAM,GAAGzE,IAAI;MAChBa,EAAE,CAACiC,SAAS,GAAGrC,IAAI,CAACiE,KAAK,CAACjE,IAAI,CAACoC,GAAG,CAACyC,MAAM,EAAErB,GAAG,CAAC5D,QAAQ,CAAC,CAAC;MACzDQ,EAAE,CAACc,MAAM,IAAI0D,OAAO;MACpBxE,EAAE,CAAC+D,KAAK,GAAG,CAAC,CAACX,GAAG,CAACY,IAAI;MACrBhE,EAAE,CAACoE,GAAG,GAAGrR,OAAO,CAAC,CAACqQ,GAAG,CAACT,EAAE,EAAEA,EAAE,EAAEY,YAAY,EAAEH,GAAG,CAACV,IAAI,CAAC,CAAC;MACtD1C,EAAE,CAACmE,KAAK,GAAGpR,OAAO,CAAC,CAACqQ,GAAG,CAACV,IAAI,EAAEa,YAAY,EAAEZ,EAAE,CAAC,CAAC;IAClD;EACF;EACAR,MAAMA,CAAA,EAAG;IACP,MAAMnC,EAAE,GAAG,IAAI;IACf,IAAIA,EAAE,CAACa,OAAO,EAAE;MACdb,EAAE,CAACe,IAAI,CAACT,IAAI,CAACC,GAAG,CAAC,CAAC,CAAC;MACnBP,EAAE,CAACa,OAAO,GAAG,KAAK;MAClBb,EAAE,CAAChB,OAAO,CAAC,KAAK,CAAC;IACnB;EACF;EACA+B,IAAIA,CAAC5B,IAAI,EAAE;IACT,MAAMa,EAAE,GAAG,IAAI;IACf,MAAMwE,OAAO,GAAGrF,IAAI,GAAGa,EAAE,CAAC4D,MAAM;IAChC,MAAMpE,QAAQ,GAAGQ,EAAE,CAACiC,SAAS;IAC7B,MAAMqB,IAAI,GAAGtD,EAAE,CAACkE,KAAK;IACrB,MAAMxB,IAAI,GAAG1C,EAAE,CAACmE,KAAK;IACrB,MAAMH,IAAI,GAAGhE,EAAE,CAAC+D,KAAK;IACrB,MAAMpB,EAAE,GAAG3C,EAAE,CAACoE,GAAG;IACjB,IAAIxB,MAAM;IACV5C,EAAE,CAACa,OAAO,GAAG6B,IAAI,KAAKC,EAAE,KAAKqB,IAAI,IAAKQ,OAAO,GAAGhF,QAAS,CAAC;IAC1D,IAAI,CAACQ,EAAE,CAACa,OAAO,EAAE;MACfb,EAAE,CAACiE,OAAO,CAACX,IAAI,CAAC,GAAGX,EAAE;MACrB3C,EAAE,CAAChB,OAAO,CAAC,IAAI,CAAC;MAChB;IACF;IACA,IAAIwF,OAAO,GAAG,CAAC,EAAE;MACfxE,EAAE,CAACiE,OAAO,CAACX,IAAI,CAAC,GAAGZ,IAAI;MACvB;IACF;IACAE,MAAM,GAAI4B,OAAO,GAAGhF,QAAQ,GAAI,CAAC;IACjCoD,MAAM,GAAGoB,IAAI,IAAIpB,MAAM,GAAG,CAAC,GAAG,CAAC,GAAGA,MAAM,GAAGA,MAAM;IACjDA,MAAM,GAAG5C,EAAE,CAACyD,OAAO,CAAC7D,IAAI,CAACC,GAAG,CAAC,CAAC,EAAED,IAAI,CAACoC,GAAG,CAAC,CAAC,EAAEY,MAAM,CAAC,CAAC,CAAC;IACrD5C,EAAE,CAACiE,OAAO,CAACX,IAAI,CAAC,GAAGtD,EAAE,CAACwD,GAAG,CAACd,IAAI,EAAEC,EAAE,EAAEC,MAAM,CAAC;EAC7C;EACA8B,IAAIA,CAAA,EAAG;IACL,MAAMC,QAAQ,GAAG,IAAI,CAACN,SAAS,KAAK,IAAI,CAACA,SAAS,GAAG,EAAE,CAAC;IACxD,OAAO,IAAIO,OAAO,CAAC,CAACC,GAAG,EAAEC,GAAG,KAAK;MAC/BH,QAAQ,CAACjD,IAAI,CAAC;QAACmD,GAAG;QAAEC;MAAG,CAAC,CAAC;IAC3B,CAAC,CAAC;EACJ;EACA9F,OAAOA,CAAC+F,QAAQ,EAAE;IAChB,MAAMC,MAAM,GAAGD,QAAQ,GAAG,KAAK,GAAG,KAAK;IACvC,MAAMJ,QAAQ,GAAG,IAAI,CAACN,SAAS,IAAI,EAAE;IACrC,KAAK,IAAIjR,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGuR,QAAQ,CAACtE,MAAM,EAAEjN,CAAC,EAAE,EAAE;MACxCuR,QAAQ,CAACvR,CAAC,CAAC,CAAC4R,MAAM,CAAC,CAAC,CAAC;IACvB;EACF;AACF;AAEA,MAAMC,OAAO,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,aAAa,EAAE,QAAQ,EAAE,SAAS,CAAC;AAC9D,MAAMC,MAAM,GAAG,CAAC,OAAO,EAAE,aAAa,EAAE,iBAAiB,CAAC;AAC1DzR,QAAQ,CAAC6N,GAAG,CAAC,WAAW,EAAE;EACxBwC,KAAK,EAAE/E,SAAS;EAChBS,QAAQ,EAAE,IAAI;EACdkE,MAAM,EAAE,cAAc;EACtBhE,EAAE,EAAEX,SAAS;EACb2D,IAAI,EAAE3D,SAAS;EACfiF,IAAI,EAAEjF,SAAS;EACf4D,EAAE,EAAE5D,SAAS;EACbK,IAAI,EAAEL;AACR,CAAC,CAAC;AACF,MAAMoG,gBAAgB,GAAGC,MAAM,CAACC,IAAI,CAAC5R,QAAQ,CAAC6R,SAAS,CAAC;AACxD7R,QAAQ,CAAC8R,QAAQ,CAAC,WAAW,EAAE;EAC7BC,SAAS,EAAE,KAAK;EAChBC,UAAU,EAAE,KAAK;EACjBC,WAAW,EAAGC,IAAI,IAAKA,IAAI,KAAK,YAAY,IAAIA,IAAI,KAAK,YAAY,IAAIA,IAAI,KAAK;AACpF,CAAC,CAAC;AACFlS,QAAQ,CAAC6N,GAAG,CAAC,YAAY,EAAE;EACzB4D,MAAM,EAAE;IACN9F,IAAI,EAAE,OAAO;IACbwG,UAAU,EAAEV;EACd,CAAC;EACDD,OAAO,EAAE;IACP7F,IAAI,EAAE,QAAQ;IACdwG,UAAU,EAAEX;EACd;AACF,CAAC,CAAC;AACFxR,QAAQ,CAAC8R,QAAQ,CAAC,YAAY,EAAE;EAC9BC,SAAS,EAAE;AACb,CAAC,CAAC;AACF/R,QAAQ,CAAC6N,GAAG,CAAC,aAAa,EAAE;EAC1BgD,MAAM,EAAE;IACNgB,SAAS,EAAE;MACT9F,QAAQ,EAAE;IACZ;EACF,CAAC;EACDqG,MAAM,EAAE;IACNP,SAAS,EAAE;MACT9F,QAAQ,EAAE;IACZ;EACF,CAAC;EACDsG,IAAI,EAAE;IACJC,UAAU,EAAE;MACVb,MAAM,EAAE;QACNxC,IAAI,EAAE;MACR,CAAC;MACDsD,OAAO,EAAE;QACP5G,IAAI,EAAE,SAAS;QACfI,QAAQ,EAAE;MACZ;IACF;EACF,CAAC;EACDyG,IAAI,EAAE;IACJF,UAAU,EAAE;MACVb,MAAM,EAAE;QACNvC,EAAE,EAAE;MACN,CAAC;MACDqD,OAAO,EAAE;QACP5G,IAAI,EAAE,SAAS;QACfsE,MAAM,EAAE,QAAQ;QAChBhE,EAAE,EAAEhM,CAAC,IAAIA,CAAC,GAAG;MACf;IACF;EACF;AACF,CAAC,CAAC;AACF,MAAMwS,UAAU,CAAC;EACfzH,WAAWA,CAACQ,KAAK,EAAEkH,MAAM,EAAE;IACzB,IAAI,CAACC,MAAM,GAAGnH,KAAK;IACnB,IAAI,CAACoH,WAAW,GAAG,IAAIzH,GAAG,CAAC,CAAC;IAC5B,IAAI,CAAC0H,SAAS,CAACH,MAAM,CAAC;EACxB;EACAG,SAASA,CAACH,MAAM,EAAE;IAChB,IAAI,CAAC9S,QAAQ,CAAC8S,MAAM,CAAC,EAAE;MACrB;IACF;IACA,MAAMI,aAAa,GAAG,IAAI,CAACF,WAAW;IACtCjB,MAAM,CAACoB,mBAAmB,CAACL,MAAM,CAAC,CAAC1G,OAAO,CAACgH,GAAG,IAAI;MAChD,MAAMrD,GAAG,GAAG+C,MAAM,CAACM,GAAG,CAAC;MACvB,IAAI,CAACpT,QAAQ,CAAC+P,GAAG,CAAC,EAAE;QAClB;MACF;MACA,MAAM2B,QAAQ,GAAG,CAAC,CAAC;MACnB,KAAK,MAAM2B,MAAM,IAAIvB,gBAAgB,EAAE;QACrCJ,QAAQ,CAAC2B,MAAM,CAAC,GAAGtD,GAAG,CAACsD,MAAM,CAAC;MAChC;MACA,CAACnT,OAAO,CAAC6P,GAAG,CAACwC,UAAU,CAAC,IAAIxC,GAAG,CAACwC,UAAU,IAAI,CAACa,GAAG,CAAC,EAAEhH,OAAO,CAAE6D,IAAI,IAAK;QACrE,IAAIA,IAAI,KAAKmD,GAAG,IAAI,CAACF,aAAa,CAAC3E,GAAG,CAAC0B,IAAI,CAAC,EAAE;UAC5CiD,aAAa,CAACjF,GAAG,CAACgC,IAAI,EAAEyB,QAAQ,CAAC;QACnC;MACF,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ;EACA4B,eAAeA,CAACtD,MAAM,EAAEuD,MAAM,EAAE;IAC9B,MAAMC,UAAU,GAAGD,MAAM,CAACE,OAAO;IACjC,MAAMA,OAAO,GAAGC,oBAAoB,CAAC1D,MAAM,EAAEwD,UAAU,CAAC;IACxD,IAAI,CAACC,OAAO,EAAE;MACZ,OAAO,EAAE;IACX;IACA,MAAMf,UAAU,GAAG,IAAI,CAACiB,iBAAiB,CAACF,OAAO,EAAED,UAAU,CAAC;IAC9D,IAAIA,UAAU,CAACI,OAAO,EAAE;MACtBC,QAAQ,CAAC7D,MAAM,CAACyD,OAAO,CAACK,WAAW,EAAEN,UAAU,CAAC,CAACO,IAAI,CAAC,MAAM;QAC1D/D,MAAM,CAACyD,OAAO,GAAGD,UAAU;MAC7B,CAAC,EAAE,MAAM,CACT,CAAC,CAAC;IACJ;IACA,OAAOd,UAAU;EACnB;EACAiB,iBAAiBA,CAAC3D,MAAM,EAAEuD,MAAM,EAAE;IAChC,MAAML,aAAa,GAAG,IAAI,CAACF,WAAW;IACtC,MAAMN,UAAU,GAAG,EAAE;IACrB,MAAMtF,OAAO,GAAG4C,MAAM,CAAC8D,WAAW,KAAK9D,MAAM,CAAC8D,WAAW,GAAG,CAAC,CAAC,CAAC;IAC/D,MAAME,KAAK,GAAGjC,MAAM,CAACC,IAAI,CAACuB,MAAM,CAAC;IACjC,MAAMzH,IAAI,GAAGmB,IAAI,CAACC,GAAG,CAAC,CAAC;IACvB,IAAInN,CAAC;IACL,KAAKA,CAAC,GAAGiU,KAAK,CAAChH,MAAM,GAAG,CAAC,EAAEjN,CAAC,IAAI,CAAC,EAAE,EAAEA,CAAC,EAAE;MACtC,MAAMkQ,IAAI,GAAG+D,KAAK,CAACjU,CAAC,CAAC;MACrB,IAAIkQ,IAAI,CAACgE,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;QAC1B;MACF;MACA,IAAIhE,IAAI,KAAK,SAAS,EAAE;QACtByC,UAAU,CAACrE,IAAI,CAAC,GAAG,IAAI,CAACiF,eAAe,CAACtD,MAAM,EAAEuD,MAAM,CAAC,CAAC;QACxD;MACF;MACA,MAAMW,KAAK,GAAGX,MAAM,CAACtD,IAAI,CAAC;MAC1B,IAAIgC,SAAS,GAAG7E,OAAO,CAAC6C,IAAI,CAAC;MAC7B,MAAMF,GAAG,GAAGmD,aAAa,CAACpF,GAAG,CAACmC,IAAI,CAAC;MACnC,IAAIgC,SAAS,EAAE;QACb,IAAIlC,GAAG,IAAIkC,SAAS,CAAChB,MAAM,CAAC,CAAC,EAAE;UAC7BgB,SAAS,CAACf,MAAM,CAACnB,GAAG,EAAEmE,KAAK,EAAEpI,IAAI,CAAC;UAClC;QACF,CAAC,MAAM;UACLmG,SAAS,CAACnD,MAAM,CAAC,CAAC;QACpB;MACF;MACA,IAAI,CAACiB,GAAG,IAAI,CAACA,GAAG,CAAC5D,QAAQ,EAAE;QACzB6D,MAAM,CAACC,IAAI,CAAC,GAAGiE,KAAK;QACpB;MACF;MACA9G,OAAO,CAAC6C,IAAI,CAAC,GAAGgC,SAAS,GAAG,IAAInC,SAAS,CAACC,GAAG,EAAEC,MAAM,EAAEC,IAAI,EAAEiE,KAAK,CAAC;MACnExB,UAAU,CAACrE,IAAI,CAAC4D,SAAS,CAAC;IAC5B;IACA,OAAOS,UAAU;EACnB;EACAxB,MAAMA,CAAClB,MAAM,EAAEuD,MAAM,EAAE;IACrB,IAAI,IAAI,CAACP,WAAW,CAACmB,IAAI,KAAK,CAAC,EAAE;MAC/BpC,MAAM,CAACqC,MAAM,CAACpE,MAAM,EAAEuD,MAAM,CAAC;MAC7B;IACF;IACA,MAAMb,UAAU,GAAG,IAAI,CAACiB,iBAAiB,CAAC3D,MAAM,EAAEuD,MAAM,CAAC;IACzD,IAAIb,UAAU,CAAC1F,MAAM,EAAE;MACrBiC,QAAQ,CAACX,GAAG,CAAC,IAAI,CAACyE,MAAM,EAAEL,UAAU,CAAC;MACrC,OAAO,IAAI;IACb;EACF;AACF;AACA,SAASmB,QAAQA,CAACnB,UAAU,EAAEH,UAAU,EAAE;EACxC,MAAMnF,OAAO,GAAG,EAAE;EAClB,MAAM4E,IAAI,GAAGD,MAAM,CAACC,IAAI,CAACO,UAAU,CAAC;EACpC,KAAK,IAAIxS,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGiS,IAAI,CAAChF,MAAM,EAAEjN,CAAC,EAAE,EAAE;IACpC,MAAMsU,IAAI,GAAG3B,UAAU,CAACV,IAAI,CAACjS,CAAC,CAAC,CAAC;IAChC,IAAIsU,IAAI,IAAIA,IAAI,CAACpD,MAAM,CAAC,CAAC,EAAE;MACzB7D,OAAO,CAACiB,IAAI,CAACgG,IAAI,CAAChD,IAAI,CAAC,CAAC,CAAC;IAC3B;EACF;EACA,OAAOE,OAAO,CAAC+C,GAAG,CAAClH,OAAO,CAAC;AAC7B;AACA,SAASsG,oBAAoBA,CAAC1D,MAAM,EAAEwD,UAAU,EAAE;EAChD,IAAI,CAACA,UAAU,EAAE;IACf;EACF;EACA,IAAIC,OAAO,GAAGzD,MAAM,CAACyD,OAAO;EAC5B,IAAI,CAACA,OAAO,EAAE;IACZzD,MAAM,CAACyD,OAAO,GAAGD,UAAU;IAC3B;EACF;EACA,IAAIC,OAAO,CAACG,OAAO,EAAE;IACnB5D,MAAM,CAACyD,OAAO,GAAGA,OAAO,GAAG1B,MAAM,CAACqC,MAAM,CAAC,CAAC,CAAC,EAAEX,OAAO,EAAE;MAACG,OAAO,EAAE,KAAK;MAAEE,WAAW,EAAE,CAAC;IAAC,CAAC,CAAC;EAC1F;EACA,OAAOL,OAAO;AAChB;AAEA,SAASc,SAASA,CAACC,KAAK,EAAEC,eAAe,EAAE;EACzC,MAAMC,IAAI,GAAGF,KAAK,IAAIA,KAAK,CAACf,OAAO,IAAI,CAAC,CAAC;EACzC,MAAMkB,OAAO,GAAGD,IAAI,CAACC,OAAO;EAC5B,MAAMnI,GAAG,GAAGkI,IAAI,CAAClI,GAAG,KAAKd,SAAS,GAAG+I,eAAe,GAAG,CAAC;EACxD,MAAM9F,GAAG,GAAG+F,IAAI,CAAC/F,GAAG,KAAKjD,SAAS,GAAG+I,eAAe,GAAG,CAAC;EACxD,OAAO;IACLhI,KAAK,EAAEkI,OAAO,GAAGhG,GAAG,GAAGnC,GAAG;IAC1BoI,GAAG,EAAED,OAAO,GAAGnI,GAAG,GAAGmC;EACvB,CAAC;AACH;AACA,SAASkG,WAAWA,CAACC,MAAM,EAAEC,MAAM,EAAEN,eAAe,EAAE;EACpD,IAAIA,eAAe,KAAK,KAAK,EAAE;IAC7B,OAAO,KAAK;EACd;EACA,MAAM5R,CAAC,GAAG0R,SAAS,CAACO,MAAM,EAAEL,eAAe,CAAC;EAC5C,MAAM1R,CAAC,GAAGwR,SAAS,CAACQ,MAAM,EAAEN,eAAe,CAAC;EAC5C,OAAO;IACLO,GAAG,EAAEjS,CAAC,CAAC6R,GAAG;IACVK,KAAK,EAAEpS,CAAC,CAAC+R,GAAG;IACZM,MAAM,EAAEnS,CAAC,CAAC0J,KAAK;IACf0I,IAAI,EAAEtS,CAAC,CAAC4J;EACV,CAAC;AACH;AACA,SAAS2I,MAAMA,CAAClB,KAAK,EAAE;EACrB,IAAIvS,CAAC,EAAEpC,CAAC,EAAEU,CAAC,EAAEQ,CAAC;EACd,IAAIT,QAAQ,CAACkU,KAAK,CAAC,EAAE;IACnBvS,CAAC,GAAGuS,KAAK,CAACc,GAAG;IACbzV,CAAC,GAAG2U,KAAK,CAACe,KAAK;IACfhV,CAAC,GAAGiU,KAAK,CAACgB,MAAM;IAChBzU,CAAC,GAAGyT,KAAK,CAACiB,IAAI;EAChB,CAAC,MAAM;IACLxT,CAAC,GAAGpC,CAAC,GAAGU,CAAC,GAAGQ,CAAC,GAAGyT,KAAK;EACvB;EACA,OAAO;IACLc,GAAG,EAAErT,CAAC;IACNsT,KAAK,EAAE1V,CAAC;IACR2V,MAAM,EAAEjV,CAAC;IACTkV,IAAI,EAAE1U;EACR,CAAC;AACH;AACA,SAAS4U,uBAAuBA,CAACzJ,KAAK,EAAE0J,aAAa,EAAE;EACrD,MAAMtD,IAAI,GAAG,EAAE;EACf,MAAMuD,QAAQ,GAAG3J,KAAK,CAAC4J,sBAAsB,CAACF,aAAa,CAAC;EAC5D,IAAIvV,CAAC,EAAE0V,IAAI;EACX,KAAK1V,CAAC,GAAG,CAAC,EAAE0V,IAAI,GAAGF,QAAQ,CAACvI,MAAM,EAAEjN,CAAC,GAAG0V,IAAI,EAAE,EAAE1V,CAAC,EAAE;IACjDiS,IAAI,CAAC3D,IAAI,CAACkH,QAAQ,CAACxV,CAAC,CAAC,CAAC2V,KAAK,CAAC;EAC9B;EACA,OAAO1D,IAAI;AACb;AACA,SAAS2D,UAAUA,CAACC,KAAK,EAAE1B,KAAK,EAAE2B,OAAO,EAAEpC,OAAO,EAAE;EAClD,MAAMzB,IAAI,GAAG4D,KAAK,CAAC5D,IAAI;EACvB,MAAM8D,UAAU,GAAGrC,OAAO,CAACsC,IAAI,KAAK,QAAQ;EAC5C,IAAIhW,CAAC,EAAE0V,IAAI,EAAEO,YAAY,EAAEC,UAAU;EACrC,IAAI/B,KAAK,KAAK,IAAI,EAAE;IAClB;EACF;EACA,KAAKnU,CAAC,GAAG,CAAC,EAAE0V,IAAI,GAAGzD,IAAI,CAAChF,MAAM,EAAEjN,CAAC,GAAG0V,IAAI,EAAE,EAAE1V,CAAC,EAAE;IAC7CiW,YAAY,GAAG,CAAChE,IAAI,CAACjS,CAAC,CAAC;IACvB,IAAIiW,YAAY,KAAKH,OAAO,EAAE;MAC5B,IAAIpC,OAAO,CAACa,GAAG,EAAE;QACf;MACF;MACA;IACF;IACA2B,UAAU,GAAGL,KAAK,CAACrC,MAAM,CAACyC,YAAY,CAAC;IACvC,IAAIlV,cAAc,CAACmV,UAAU,CAAC,KAAKH,UAAU,IAAK5B,KAAK,KAAK,CAAC,IAAIhT,IAAI,CAACgT,KAAK,CAAC,KAAKhT,IAAI,CAAC+U,UAAU,CAAE,CAAC,EAAE;MACnG/B,KAAK,IAAI+B,UAAU;IACrB;EACF;EACA,OAAO/B,KAAK;AACd;AACA,SAASgC,wBAAwBA,CAACC,IAAI,EAAE;EACtC,MAAMnE,IAAI,GAAGD,MAAM,CAACC,IAAI,CAACmE,IAAI,CAAC;EAC9B,MAAMC,KAAK,GAAG,IAAIC,KAAK,CAACrE,IAAI,CAAChF,MAAM,CAAC;EACpC,IAAIjN,CAAC,EAAE0V,IAAI,EAAErC,GAAG;EAChB,KAAKrT,CAAC,GAAG,CAAC,EAAE0V,IAAI,GAAGzD,IAAI,CAAChF,MAAM,EAAEjN,CAAC,GAAG0V,IAAI,EAAE,EAAE1V,CAAC,EAAE;IAC7CqT,GAAG,GAAGpB,IAAI,CAACjS,CAAC,CAAC;IACbqW,KAAK,CAACrW,CAAC,CAAC,GAAG;MACT8C,CAAC,EAAEuQ,GAAG;MACNrQ,CAAC,EAAEoT,IAAI,CAAC/C,GAAG;IACb,CAAC;EACH;EACA,OAAOgD,KAAK;AACd;AACA,SAASE,SAASA,CAAC9B,KAAK,EAAE+B,IAAI,EAAE;EAC9B,MAAMC,OAAO,GAAGhC,KAAK,IAAIA,KAAK,CAACf,OAAO,CAAC+C,OAAO;EAC9C,OAAOA,OAAO,IAAKA,OAAO,KAAK9K,SAAS,IAAI6K,IAAI,CAACX,KAAK,KAAKlK,SAAU;AACvE;AACA,SAAS+K,WAAWA,CAACC,UAAU,EAAEC,UAAU,EAAEJ,IAAI,EAAE;EACjD,OAAOG,UAAU,CAACE,EAAE,GAAG,GAAG,GAAGD,UAAU,CAACC,EAAE,GAAG,GAAG,GAAGL,IAAI,CAACX,KAAK,GAAG,GAAG,GAAGW,IAAI,CAACxK,IAAI;AACjF;AACA,SAAS8K,aAAaA,CAACrC,KAAK,EAAE;EAC5B,MAAM;IAAChI,GAAG;IAAEmC,GAAG;IAAEmI,UAAU;IAAEC;EAAU,CAAC,GAAGvC,KAAK,CAACqC,aAAa,CAAC,CAAC;EAChE,OAAO;IACLrK,GAAG,EAAEsK,UAAU,GAAGtK,GAAG,GAAGwK,MAAM,CAACC,iBAAiB;IAChDtI,GAAG,EAAEoI,UAAU,GAAGpI,GAAG,GAAGqI,MAAM,CAACE;EACjC,CAAC;AACH;AACA,SAASC,gBAAgBA,CAACC,MAAM,EAAEC,QAAQ,EAAEC,UAAU,EAAE;EACtD,MAAMC,QAAQ,GAAGH,MAAM,CAACC,QAAQ,CAAC,KAAKD,MAAM,CAACC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;EAC5D,OAAOE,QAAQ,CAACD,UAAU,CAAC,KAAKC,QAAQ,CAACD,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC;AAC5D;AACA,SAASE,YAAYA,CAACC,UAAU,EAAEC,MAAM,EAAE;EACxC,MAAM;IAAC9L,KAAK;IAAE+L,WAAW,EAAEpB;EAAI,CAAC,GAAGkB,UAAU;EAC7C,MAAML,MAAM,GAAGxL,KAAK,CAACgM,OAAO,KAAKhM,KAAK,CAACgM,OAAO,GAAG,CAAC,CAAC,CAAC;EACpD,MAAM;IAACC,MAAM;IAAEC,MAAM;IAAEpC,KAAK,EAAEM;EAAY,CAAC,GAAGO,IAAI;EAClD,MAAMwB,KAAK,GAAGF,MAAM,CAACG,IAAI;EACzB,MAAMC,KAAK,GAAGH,MAAM,CAACE,IAAI;EACzB,MAAM5E,GAAG,GAAGqD,WAAW,CAACoB,MAAM,EAAEC,MAAM,EAAEvB,IAAI,CAAC;EAC7C,MAAMd,IAAI,GAAGiC,MAAM,CAAC1K,MAAM;EAC1B,IAAI4I,KAAK;EACT,KAAK,IAAI7V,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG0V,IAAI,EAAE,EAAE1V,CAAC,EAAE;IAC7B,MAAMwN,IAAI,GAAGmK,MAAM,CAAC3X,CAAC,CAAC;IACtB,MAAM;MAAC,CAACgY,KAAK,GAAGrC,KAAK;MAAE,CAACuC,KAAK,GAAG/D;IAAK,CAAC,GAAG3G,IAAI;IAC7C,MAAM2K,UAAU,GAAG3K,IAAI,CAACqK,OAAO,KAAKrK,IAAI,CAACqK,OAAO,GAAG,CAAC,CAAC,CAAC;IACtDhC,KAAK,GAAGsC,UAAU,CAACD,KAAK,CAAC,GAAGd,gBAAgB,CAACC,MAAM,EAAEhE,GAAG,EAAEsC,KAAK,CAAC;IAChEE,KAAK,CAACI,YAAY,CAAC,GAAG9B,KAAK;EAC7B;AACF;AACA,SAASiE,eAAeA,CAACvM,KAAK,EAAEoM,IAAI,EAAE;EACpC,MAAMI,MAAM,GAAGxM,KAAK,CAACwM,MAAM;EAC3B,OAAOrG,MAAM,CAACC,IAAI,CAACoG,MAAM,CAAC,CAACC,MAAM,CAACjF,GAAG,IAAIgF,MAAM,CAAChF,GAAG,CAAC,CAAC4E,IAAI,KAAKA,IAAI,CAAC,CAACM,KAAK,CAAC,CAAC;AAC7E;AACA,SAASC,oBAAoBA,CAACC,MAAM,EAAE9C,KAAK,EAAE;EAC3C,OAAO3D,MAAM,CAACqC,MAAM,CAACrC,MAAM,CAAC0G,MAAM,CAACD,MAAM,CAAC,EACxC;IACEvH,MAAM,EAAE,KAAK;IACbyH,OAAO,EAAEhN,SAAS;IAClBsK,YAAY,EAAEN,KAAK;IACnBA,KAAK;IACLK,IAAI,EAAE,SAAS;IACfhK,IAAI,EAAE;EACR,CACF,CAAC;AACH;AACA,SAAS4M,iBAAiBA,CAACH,MAAM,EAAE9C,KAAK,EAAEkD,OAAO,EAAE;EACjD,OAAO7G,MAAM,CAACqC,MAAM,CAACrC,MAAM,CAAC0G,MAAM,CAACD,MAAM,CAAC,EAAE;IAC1CvH,MAAM,EAAE,KAAK;IACb4H,SAAS,EAAEnD,KAAK;IAChBgC,MAAM,EAAEhM,SAAS;IACjBoN,GAAG,EAAEpN,SAAS;IACdkN,OAAO;IACPlD,KAAK;IACLK,IAAI,EAAE,SAAS;IACfhK,IAAI,EAAE;EACR,CAAC,CAAC;AACJ;AACA,SAASgN,WAAWA,CAACxC,IAAI,EAAElJ,KAAK,EAAE;EAChCA,KAAK,GAAGA,KAAK,IAAIkJ,IAAI,CAACyC,OAAO;EAC7B,KAAK,MAAMtB,MAAM,IAAIrK,KAAK,EAAE;IAC1B,MAAM+J,MAAM,GAAGM,MAAM,CAACE,OAAO;IAC7B,IAAI,CAACR,MAAM,IAAIA,MAAM,CAACb,IAAI,CAACuB,MAAM,CAAClB,EAAE,CAAC,KAAKlL,SAAS,IAAI0L,MAAM,CAACb,IAAI,CAACuB,MAAM,CAAClB,EAAE,CAAC,CAACL,IAAI,CAACb,KAAK,CAAC,KAAKhK,SAAS,EAAE;MACvG;IACF;IACA,OAAO0L,MAAM,CAACb,IAAI,CAACuB,MAAM,CAAClB,EAAE,CAAC,CAACL,IAAI,CAACb,KAAK,CAAC;EAC3C;AACF;AACA,MAAMuD,kBAAkB,GAAIlD,IAAI,IAAKA,IAAI,KAAK,OAAO,IAAIA,IAAI,KAAK,MAAM;AACxE,MAAMmD,gBAAgB,GAAGA,CAACC,MAAM,EAAEC,MAAM,KAAKA,MAAM,GAAGD,MAAM,GAAGpH,MAAM,CAACqC,MAAM,CAAC,CAAC,CAAC,EAAE+E,MAAM,CAAC;AACxF,MAAME,iBAAiB,CAAC;EACtBjO,WAAWA,CAACQ,KAAK,EAAEoK,YAAY,EAAE;IAC/B,IAAI,CAACpK,KAAK,GAAGA,KAAK;IAClB,IAAI,CAAC0N,IAAI,GAAG1N,KAAK,CAAC2N,GAAG;IACrB,IAAI,CAAC7D,KAAK,GAAGM,YAAY;IACzB,IAAI,CAACwD,eAAe,GAAG,CAAC,CAAC;IACzB,IAAI,CAAC7B,WAAW,GAAG,IAAI,CAAC8B,OAAO,CAAC,CAAC;IACjC,IAAI,CAACC,KAAK,GAAG,IAAI,CAAC/B,WAAW,CAAC5L,IAAI;IAClC,IAAI,CAAC0H,OAAO,GAAG/H,SAAS;IACxB,IAAI,CAACiO,QAAQ,GAAG,KAAK;IACrB,IAAI,CAACC,KAAK,GAAGlO,SAAS;IACtB,IAAI,CAACmO,WAAW,GAAGnO,SAAS;IAC5B,IAAI,CAACoO,cAAc,GAAGpO,SAAS;IAC/B,IAAI,CAACqO,UAAU,GAAGrO,SAAS;IAC3B,IAAI,CAACsO,UAAU,GAAGtO,SAAS;IAC3B,IAAI,CAACuO,mBAAmB,GAAG,KAAK;IAChC,IAAI,CAACC,QAAQ,GAAGxO,SAAS;IACzB,IAAI,CAACyO,UAAU,CAAC,CAAC;EACnB;EACAA,UAAUA,CAAA,EAAG;IACX,MAAMxN,EAAE,GAAG,IAAI;IACf,MAAM4J,IAAI,GAAG5J,EAAE,CAACgL,WAAW;IAC3BhL,EAAE,CAACsG,SAAS,CAAC,CAAC;IACdtG,EAAE,CAACyN,UAAU,CAAC,CAAC;IACf7D,IAAI,CAAC8D,QAAQ,GAAG/D,SAAS,CAACC,IAAI,CAACuB,MAAM,EAAEvB,IAAI,CAAC;IAC5C5J,EAAE,CAAC2N,WAAW,CAAC,CAAC;EAClB;EACAC,WAAWA,CAACvE,YAAY,EAAE;IACxB,IAAI,CAACN,KAAK,GAAGM,YAAY;EAC3B;EACAoE,UAAUA,CAAA,EAAG;IACX,MAAMzN,EAAE,GAAG,IAAI;IACf,MAAMf,KAAK,GAAGe,EAAE,CAACf,KAAK;IACtB,MAAM2K,IAAI,GAAG5J,EAAE,CAACgL,WAAW;IAC3B,MAAMe,OAAO,GAAG/L,EAAE,CAAC6N,UAAU,CAAC,CAAC;IAC/B,MAAMC,QAAQ,GAAGA,CAACzC,IAAI,EAAEnV,CAAC,EAAEE,CAAC,EAAExD,CAAC,KAAKyY,IAAI,KAAK,GAAG,GAAGnV,CAAC,GAAGmV,IAAI,KAAK,GAAG,GAAGzY,CAAC,GAAGwD,CAAC;IAC3E,MAAM2X,GAAG,GAAGnE,IAAI,CAACoE,OAAO,GAAGra,cAAc,CAACoY,OAAO,CAACiC,OAAO,EAAExC,eAAe,CAACvM,KAAK,EAAE,GAAG,CAAC,CAAC;IACvF,MAAMgP,GAAG,GAAGrE,IAAI,CAACsE,OAAO,GAAGva,cAAc,CAACoY,OAAO,CAACmC,OAAO,EAAE1C,eAAe,CAACvM,KAAK,EAAE,GAAG,CAAC,CAAC;IACvF,MAAMkP,GAAG,GAAGvE,IAAI,CAACwE,OAAO,GAAGza,cAAc,CAACoY,OAAO,CAACqC,OAAO,EAAE5C,eAAe,CAACvM,KAAK,EAAE,GAAG,CAAC,CAAC;IACvF,MAAMoP,SAAS,GAAGzE,IAAI,CAACyE,SAAS;IAChC,MAAMC,GAAG,GAAG1E,IAAI,CAAC2E,OAAO,GAAGT,QAAQ,CAACO,SAAS,EAAEN,GAAG,EAAEE,GAAG,EAAEE,GAAG,CAAC;IAC7D,MAAMK,GAAG,GAAG5E,IAAI,CAAC6E,OAAO,GAAGX,QAAQ,CAACO,SAAS,EAAEJ,GAAG,EAAEF,GAAG,EAAEI,GAAG,CAAC;IAC7DvE,IAAI,CAACzB,MAAM,GAAGnI,EAAE,CAAC0O,aAAa,CAACX,GAAG,CAAC;IACnCnE,IAAI,CAACxB,MAAM,GAAGpI,EAAE,CAAC0O,aAAa,CAACT,GAAG,CAAC;IACnCrE,IAAI,CAAC+E,MAAM,GAAG3O,EAAE,CAAC0O,aAAa,CAACP,GAAG,CAAC;IACnCvE,IAAI,CAACsB,MAAM,GAAGlL,EAAE,CAAC0O,aAAa,CAACJ,GAAG,CAAC;IACnC1E,IAAI,CAACuB,MAAM,GAAGnL,EAAE,CAAC0O,aAAa,CAACF,GAAG,CAAC;EACrC;EACAX,UAAUA,CAAA,EAAG;IACX,OAAO,IAAI,CAAC5O,KAAK,CAACuK,IAAI,CAACoF,QAAQ,CAAC,IAAI,CAAC7F,KAAK,CAAC;EAC7C;EACA+D,OAAOA,CAAA,EAAG;IACR,OAAO,IAAI,CAAC7N,KAAK,CAAC4P,cAAc,CAAC,IAAI,CAAC9F,KAAK,CAAC;EAC9C;EACA2F,aAAaA,CAACI,OAAO,EAAE;IACrB,OAAO,IAAI,CAAC7P,KAAK,CAACwM,MAAM,CAACqD,OAAO,CAAC;EACnC;EACAC,cAAcA,CAAClH,KAAK,EAAE;IACpB,MAAM+B,IAAI,GAAG,IAAI,CAACoB,WAAW;IAC7B,OAAOnD,KAAK,KAAK+B,IAAI,CAACsB,MAAM,GACxBtB,IAAI,CAACuB,MAAM,GACXvB,IAAI,CAACsB,MAAM;EACjB;EACA8D,KAAKA,CAAA,EAAG;IACN,IAAI,CAAC7O,OAAO,CAAC,OAAO,CAAC;EACvB;EACA8O,QAAQA,CAAA,EAAG;IACT,MAAMrF,IAAI,GAAG,IAAI,CAACoB,WAAW;IAC7B,IAAI,IAAI,CAACiC,KAAK,EAAE;MACdpZ,mBAAmB,CAAC,IAAI,CAACoZ,KAAK,EAAE,IAAI,CAAC;IACvC;IACA,IAAIrD,IAAI,CAAC8D,QAAQ,EAAE;MACjBtB,WAAW,CAACxC,IAAI,CAAC;IACnB;EACF;EACAsF,UAAUA,CAAA,EAAG;IACX,MAAMlP,EAAE,GAAG,IAAI;IACf,MAAM+L,OAAO,GAAG/L,EAAE,CAAC6N,UAAU,CAAC,CAAC;IAC/B,MAAMrE,IAAI,GAAGuC,OAAO,CAACvC,IAAI,KAAKuC,OAAO,CAACvC,IAAI,GAAG,EAAE,CAAC;IAChD,IAAInW,QAAQ,CAACmW,IAAI,CAAC,EAAE;MAClBxJ,EAAE,CAACiN,KAAK,GAAG1D,wBAAwB,CAACC,IAAI,CAAC;IAC3C,CAAC,MAAM,IAAIxJ,EAAE,CAACiN,KAAK,KAAKzD,IAAI,EAAE;MAC5B,IAAIxJ,EAAE,CAACiN,KAAK,EAAE;QACZpZ,mBAAmB,CAACmM,EAAE,CAACiN,KAAK,EAAEjN,EAAE,CAAC;QACjCoM,WAAW,CAACpM,EAAE,CAACgL,WAAW,CAAC;MAC7B;MACA,IAAIxB,IAAI,IAAIpE,MAAM,CAAC+J,YAAY,CAAC3F,IAAI,CAAC,EAAE;QACrCzV,iBAAiB,CAACyV,IAAI,EAAExJ,EAAE,CAAC;MAC7B;MACAA,EAAE,CAACiN,KAAK,GAAGzD,IAAI;IACjB;EACF;EACAmE,WAAWA,CAAA,EAAG;IACZ,MAAM3N,EAAE,GAAG,IAAI;IACf,MAAM4J,IAAI,GAAG5J,EAAE,CAACgL,WAAW;IAC3BhL,EAAE,CAACkP,UAAU,CAAC,CAAC;IACf,IAAIlP,EAAE,CAACoP,kBAAkB,EAAE;MACzBxF,IAAI,CAACmC,OAAO,GAAG,IAAI/L,EAAE,CAACoP,kBAAkB,CAAC,CAAC;IAC5C;EACF;EACAC,qBAAqBA,CAACC,gBAAgB,EAAE;IACtC,MAAMtP,EAAE,GAAG,IAAI;IACf,MAAM4J,IAAI,GAAG5J,EAAE,CAACgL,WAAW;IAC3B,MAAMe,OAAO,GAAG/L,EAAE,CAAC6N,UAAU,CAAC,CAAC;IAC/B,IAAI0B,YAAY,GAAG,KAAK;IACxBvP,EAAE,CAACkP,UAAU,CAAC,CAAC;IACftF,IAAI,CAAC8D,QAAQ,GAAG/D,SAAS,CAACC,IAAI,CAACuB,MAAM,EAAEvB,IAAI,CAAC;IAC5C,IAAIA,IAAI,CAACX,KAAK,KAAK8C,OAAO,CAAC9C,KAAK,EAAE;MAChCsG,YAAY,GAAG,IAAI;MACnBnD,WAAW,CAACxC,IAAI,CAAC;MACjBA,IAAI,CAACX,KAAK,GAAG8C,OAAO,CAAC9C,KAAK;IAC5B;IACAjJ,EAAE,CAACwP,eAAe,CAACF,gBAAgB,CAAC;IACpC,IAAIC,YAAY,EAAE;MAChB1E,YAAY,CAAC7K,EAAE,EAAE4J,IAAI,CAACyC,OAAO,CAAC;IAChC;EACF;EACA/F,SAASA,CAAA,EAAG;IACV,MAAMtG,EAAE,GAAG,IAAI;IACf,MAAMmG,MAAM,GAAGnG,EAAE,CAACf,KAAK,CAACkH,MAAM;IAC9B,MAAMsJ,SAAS,GAAGtJ,MAAM,CAACuJ,gBAAgB,CAAC1P,EAAE,CAAC+M,KAAK,CAAC;IACnD,MAAM4C,MAAM,GAAGxJ,MAAM,CAACyJ,eAAe,CAAC5P,EAAE,CAAC6N,UAAU,CAAC,CAAC,EAAE4B,SAAS,EAAE,IAAI,CAAC;IACvEzP,EAAE,CAAC8G,OAAO,GAAGX,MAAM,CAAC0J,cAAc,CAACF,MAAM,EAAE3P,EAAE,CAAC8P,UAAU,CAAC,CAAC,CAAC;IAC3D9P,EAAE,CAACgN,QAAQ,GAAGhN,EAAE,CAAC8G,OAAO,CAACiJ,OAAO;EAClC;EACAC,KAAKA,CAAClQ,KAAK,EAAEmQ,KAAK,EAAE;IAClB,MAAMjQ,EAAE,GAAG,IAAI;IACf,MAAM;MAACgL,WAAW,EAAEpB,IAAI;MAAEqD,KAAK,EAAEzD;IAAI,CAAC,GAAGxJ,EAAE;IAC3C,MAAM;MAACkL,MAAM;MAAEwC;IAAQ,CAAC,GAAG9D,IAAI;IAC/B,MAAMwB,KAAK,GAAGF,MAAM,CAACG,IAAI;IACzB,IAAI6E,MAAM,GAAGpQ,KAAK,KAAK,CAAC,IAAImQ,KAAK,KAAKzG,IAAI,CAACnJ,MAAM,GAAG,IAAI,GAAGuJ,IAAI,CAACuG,OAAO;IACvE,IAAIC,IAAI,GAAGtQ,KAAK,GAAG,CAAC,IAAI8J,IAAI,CAACyC,OAAO,CAACvM,KAAK,GAAG,CAAC,CAAC;IAC/C,IAAI1M,CAAC,EAAE2O,GAAG,EAAEgJ,MAAM;IAClB,IAAI/K,EAAE,CAACgN,QAAQ,KAAK,KAAK,EAAE;MACzBpD,IAAI,CAACyC,OAAO,GAAG7C,IAAI;MACnBI,IAAI,CAACuG,OAAO,GAAG,IAAI;IACrB,CAAC,MAAM;MACL,IAAI5c,OAAO,CAACiW,IAAI,CAAC1J,KAAK,CAAC,CAAC,EAAE;QACxBiL,MAAM,GAAG/K,EAAE,CAACqQ,cAAc,CAACzG,IAAI,EAAEJ,IAAI,EAAE1J,KAAK,EAAEmQ,KAAK,CAAC;MACtD,CAAC,MAAM,IAAI5c,QAAQ,CAACmW,IAAI,CAAC1J,KAAK,CAAC,CAAC,EAAE;QAChCiL,MAAM,GAAG/K,EAAE,CAACsQ,eAAe,CAAC1G,IAAI,EAAEJ,IAAI,EAAE1J,KAAK,EAAEmQ,KAAK,CAAC;MACvD,CAAC,MAAM;QACLlF,MAAM,GAAG/K,EAAE,CAACuQ,kBAAkB,CAAC3G,IAAI,EAAEJ,IAAI,EAAE1J,KAAK,EAAEmQ,KAAK,CAAC;MAC1D;MACA,MAAMO,0BAA0B,GAAGA,CAAA,KAAMzO,GAAG,CAACqJ,KAAK,CAAC,KAAK,IAAI,IAAKgF,IAAI,IAAIrO,GAAG,CAACqJ,KAAK,CAAC,GAAGgF,IAAI,CAAChF,KAAK,CAAE;MAClG,KAAKhY,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG6c,KAAK,EAAE,EAAE7c,CAAC,EAAE;QAC1BwW,IAAI,CAACyC,OAAO,CAACjZ,CAAC,GAAG0M,KAAK,CAAC,GAAGiC,GAAG,GAAGgJ,MAAM,CAAC3X,CAAC,CAAC;QACzC,IAAI8c,MAAM,EAAE;UACV,IAAIM,0BAA0B,CAAC,CAAC,EAAE;YAChCN,MAAM,GAAG,KAAK;UAChB;UACAE,IAAI,GAAGrO,GAAG;QACZ;MACF;MACA6H,IAAI,CAACuG,OAAO,GAAGD,MAAM;IACvB;IACA,IAAIxC,QAAQ,EAAE;MACZ7C,YAAY,CAAC7K,EAAE,EAAE+K,MAAM,CAAC;IAC1B;EACF;EACAwF,kBAAkBA,CAAC3G,IAAI,EAAEJ,IAAI,EAAE1J,KAAK,EAAEmQ,KAAK,EAAE;IAC3C,MAAM;MAAC/E,MAAM;MAAEC;IAAM,CAAC,GAAGvB,IAAI;IAC7B,MAAMwB,KAAK,GAAGF,MAAM,CAACG,IAAI;IACzB,MAAMC,KAAK,GAAGH,MAAM,CAACE,IAAI;IACzB,MAAMoF,MAAM,GAAGvF,MAAM,CAACwF,SAAS,CAAC,CAAC;IACjC,MAAMC,WAAW,GAAGzF,MAAM,KAAKC,MAAM;IACrC,MAAMJ,MAAM,GAAG,IAAIrB,KAAK,CAACuG,KAAK,CAAC;IAC/B,IAAI7c,CAAC,EAAE0V,IAAI,EAAEC,KAAK;IAClB,KAAK3V,CAAC,GAAG,CAAC,EAAE0V,IAAI,GAAGmH,KAAK,EAAE7c,CAAC,GAAG0V,IAAI,EAAE,EAAE1V,CAAC,EAAE;MACvC2V,KAAK,GAAG3V,CAAC,GAAG0M,KAAK;MACjBiL,MAAM,CAAC3X,CAAC,CAAC,GAAG;QACV,CAACgY,KAAK,GAAGuF,WAAW,IAAIzF,MAAM,CAAC8E,KAAK,CAACS,MAAM,CAAC1H,KAAK,CAAC,EAAEA,KAAK,CAAC;QAC1D,CAACuC,KAAK,GAAGH,MAAM,CAAC6E,KAAK,CAACxG,IAAI,CAACT,KAAK,CAAC,EAAEA,KAAK;MAC1C,CAAC;IACH;IACA,OAAOgC,MAAM;EACf;EACAsF,cAAcA,CAACzG,IAAI,EAAEJ,IAAI,EAAE1J,KAAK,EAAEmQ,KAAK,EAAE;IACvC,MAAM;MAAC9H,MAAM;MAAEC;IAAM,CAAC,GAAGwB,IAAI;IAC7B,MAAMmB,MAAM,GAAG,IAAIrB,KAAK,CAACuG,KAAK,CAAC;IAC/B,IAAI7c,CAAC,EAAE0V,IAAI,EAAEC,KAAK,EAAEnI,IAAI;IACxB,KAAKxN,CAAC,GAAG,CAAC,EAAE0V,IAAI,GAAGmH,KAAK,EAAE7c,CAAC,GAAG0V,IAAI,EAAE,EAAE1V,CAAC,EAAE;MACvC2V,KAAK,GAAG3V,CAAC,GAAG0M,KAAK;MACjBc,IAAI,GAAG4I,IAAI,CAACT,KAAK,CAAC;MAClBgC,MAAM,CAAC3X,CAAC,CAAC,GAAG;QACV8C,CAAC,EAAEiS,MAAM,CAAC6H,KAAK,CAACpP,IAAI,CAAC,CAAC,CAAC,EAAEmI,KAAK,CAAC;QAC/B3S,CAAC,EAAEgS,MAAM,CAAC4H,KAAK,CAACpP,IAAI,CAAC,CAAC,CAAC,EAAEmI,KAAK;MAChC,CAAC;IACH;IACA,OAAOgC,MAAM;EACf;EACAuF,eAAeA,CAAC1G,IAAI,EAAEJ,IAAI,EAAE1J,KAAK,EAAEmQ,KAAK,EAAE;IACxC,MAAM;MAAC9H,MAAM;MAAEC;IAAM,CAAC,GAAGwB,IAAI;IAC7B,MAAM;MAACgH,QAAQ,GAAG,GAAG;MAAEC,QAAQ,GAAG;IAAG,CAAC,GAAG,IAAI,CAAC7D,QAAQ;IACtD,MAAMjC,MAAM,GAAG,IAAIrB,KAAK,CAACuG,KAAK,CAAC;IAC/B,IAAI7c,CAAC,EAAE0V,IAAI,EAAEC,KAAK,EAAEnI,IAAI;IACxB,KAAKxN,CAAC,GAAG,CAAC,EAAE0V,IAAI,GAAGmH,KAAK,EAAE7c,CAAC,GAAG0V,IAAI,EAAE,EAAE1V,CAAC,EAAE;MACvC2V,KAAK,GAAG3V,CAAC,GAAG0M,KAAK;MACjBc,IAAI,GAAG4I,IAAI,CAACT,KAAK,CAAC;MAClBgC,MAAM,CAAC3X,CAAC,CAAC,GAAG;QACV8C,CAAC,EAAEiS,MAAM,CAAC6H,KAAK,CAAC/b,gBAAgB,CAAC2M,IAAI,EAAEgQ,QAAQ,CAAC,EAAE7H,KAAK,CAAC;QACxD3S,CAAC,EAAEgS,MAAM,CAAC4H,KAAK,CAAC/b,gBAAgB,CAAC2M,IAAI,EAAEiQ,QAAQ,CAAC,EAAE9H,KAAK;MACzD,CAAC;IACH;IACA,OAAOgC,MAAM;EACf;EACA+F,SAASA,CAAC/H,KAAK,EAAE;IACf,OAAO,IAAI,CAACiC,WAAW,CAACqB,OAAO,CAACtD,KAAK,CAAC;EACxC;EACAgI,cAAcA,CAAChI,KAAK,EAAE;IACpB,OAAO,IAAI,CAACiC,WAAW,CAACxB,IAAI,CAACT,KAAK,CAAC;EACrC;EACAC,UAAUA,CAACnB,KAAK,EAAEkD,MAAM,EAAE3B,IAAI,EAAE;IAC9B,MAAMnK,KAAK,GAAG,IAAI,CAACA,KAAK;IACxB,MAAM2K,IAAI,GAAG,IAAI,CAACoB,WAAW;IAC7B,MAAMzD,KAAK,GAAGwD,MAAM,CAAClD,KAAK,CAACwD,IAAI,CAAC;IAChC,MAAMpC,KAAK,GAAG;MACZ5D,IAAI,EAAEqD,uBAAuB,CAACzJ,KAAK,EAAE,IAAI,CAAC;MAC1C2H,MAAM,EAAEmE,MAAM,CAACE,OAAO,CAACpD,KAAK,CAACwD,IAAI;IACnC,CAAC;IACD,OAAOrC,UAAU,CAACC,KAAK,EAAE1B,KAAK,EAAEqC,IAAI,CAACb,KAAK,EAAE;MAACK;IAAI,CAAC,CAAC;EACrD;EACA4H,qBAAqBA,CAACC,KAAK,EAAEpJ,KAAK,EAAEkD,MAAM,EAAE9B,KAAK,EAAE;IACjD,MAAMiI,WAAW,GAAGnG,MAAM,CAAClD,KAAK,CAACwD,IAAI,CAAC;IACtC,IAAI9D,KAAK,GAAG2J,WAAW,KAAK,IAAI,GAAGC,GAAG,GAAGD,WAAW;IACpD,MAAMtK,MAAM,GAAGqC,KAAK,IAAI8B,MAAM,CAACE,OAAO,CAACpD,KAAK,CAACwD,IAAI,CAAC;IAClD,IAAIpC,KAAK,IAAIrC,MAAM,EAAE;MACnBqC,KAAK,CAACrC,MAAM,GAAGA,MAAM;MACrBqK,KAAK,CAACpR,GAAG,GAAGD,IAAI,CAACC,GAAG,CAACoR,KAAK,CAACpR,GAAG,EAAE0H,KAAK,CAAC;MACtC0J,KAAK,CAACjP,GAAG,GAAGpC,IAAI,CAACoC,GAAG,CAACiP,KAAK,CAACjP,GAAG,EAAEuF,KAAK,CAAC;MACtCA,KAAK,GAAGyB,UAAU,CAACC,KAAK,EAAEiI,WAAW,EAAE,IAAI,CAAClG,WAAW,CAACjC,KAAK,EAAE;QAACpB,GAAG,EAAE;MAAI,CAAC,CAAC;IAC7E;IACAsJ,KAAK,CAACpR,GAAG,GAAGD,IAAI,CAACC,GAAG,CAACoR,KAAK,CAACpR,GAAG,EAAE0H,KAAK,CAAC;IACtC0J,KAAK,CAACjP,GAAG,GAAGpC,IAAI,CAACoC,GAAG,CAACiP,KAAK,CAACjP,GAAG,EAAEuF,KAAK,CAAC;EACxC;EACA6J,SAASA,CAACvJ,KAAK,EAAEwJ,QAAQ,EAAE;IACzB,MAAMrR,EAAE,GAAG,IAAI;IACf,MAAM4J,IAAI,GAAG5J,EAAE,CAACgL,WAAW;IAC3B,MAAMqB,OAAO,GAAGzC,IAAI,CAACyC,OAAO;IAC5B,MAAM6D,MAAM,GAAGtG,IAAI,CAACuG,OAAO,IAAItI,KAAK,KAAK+B,IAAI,CAACsB,MAAM;IACpD,MAAMpC,IAAI,GAAGuD,OAAO,CAAChM,MAAM;IAC3B,MAAMiR,UAAU,GAAGtR,EAAE,CAAC+O,cAAc,CAAClH,KAAK,CAAC;IAC3C,MAAMoB,KAAK,GAAGoI,QAAQ,IAAIzH,IAAI,CAAC8D,QAAQ,IAAI;MAACrI,IAAI,EAAEqD,uBAAuB,CAAC1I,EAAE,CAACf,KAAK,EAAE,IAAI,CAAC;MAAE2H,MAAM,EAAE;IAAI,CAAC;IACxG,MAAMqK,KAAK,GAAG;MAACpR,GAAG,EAAEwK,MAAM,CAACE,iBAAiB;MAAEvI,GAAG,EAAEqI,MAAM,CAACC;IAAiB,CAAC;IAC5E,MAAM;MAACzK,GAAG,EAAE0R,QAAQ;MAAEvP,GAAG,EAAEwP;IAAQ,CAAC,GAAGtH,aAAa,CAACoH,UAAU,CAAC;IAChE,IAAIle,CAAC,EAAEmU,KAAK,EAAEwD,MAAM,EAAEzB,UAAU;IAChC,SAASmI,KAAKA,CAAA,EAAG;MACf1G,MAAM,GAAGsB,OAAO,CAACjZ,CAAC,CAAC;MACnBmU,KAAK,GAAGwD,MAAM,CAAClD,KAAK,CAACwD,IAAI,CAAC;MAC1B/B,UAAU,GAAGyB,MAAM,CAACuG,UAAU,CAACjG,IAAI,CAAC;MACpC,OAAO,CAAClX,cAAc,CAACoT,KAAK,CAAC,IAAIgK,QAAQ,GAAGjI,UAAU,IAAIkI,QAAQ,GAAGlI,UAAU;IACjF;IACA,KAAKlW,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG0V,IAAI,EAAE,EAAE1V,CAAC,EAAE;MACzB,IAAIqe,KAAK,CAAC,CAAC,EAAE;QACX;MACF;MACAzR,EAAE,CAACgR,qBAAqB,CAACC,KAAK,EAAEpJ,KAAK,EAAEkD,MAAM,EAAE9B,KAAK,CAAC;MACrD,IAAIiH,MAAM,EAAE;QACV;MACF;IACF;IACA,IAAIA,MAAM,EAAE;MACV,KAAK9c,CAAC,GAAG0V,IAAI,GAAG,CAAC,EAAE1V,CAAC,IAAI,CAAC,EAAE,EAAEA,CAAC,EAAE;QAC9B,IAAIqe,KAAK,CAAC,CAAC,EAAE;UACX;QACF;QACAzR,EAAE,CAACgR,qBAAqB,CAACC,KAAK,EAAEpJ,KAAK,EAAEkD,MAAM,EAAE9B,KAAK,CAAC;QACrD;MACF;IACF;IACA,OAAOgI,KAAK;EACd;EACAS,kBAAkBA,CAAC7J,KAAK,EAAE;IACxB,MAAMkD,MAAM,GAAG,IAAI,CAACC,WAAW,CAACqB,OAAO;IACvC,MAAMzF,MAAM,GAAG,EAAE;IACjB,IAAIxT,CAAC,EAAE0V,IAAI,EAAEvB,KAAK;IAClB,KAAKnU,CAAC,GAAG,CAAC,EAAE0V,IAAI,GAAGiC,MAAM,CAAC1K,MAAM,EAAEjN,CAAC,GAAG0V,IAAI,EAAE,EAAE1V,CAAC,EAAE;MAC/CmU,KAAK,GAAGwD,MAAM,CAAC3X,CAAC,CAAC,CAACyU,KAAK,CAACwD,IAAI,CAAC;MAC7B,IAAIlX,cAAc,CAACoT,KAAK,CAAC,EAAE;QACzBX,MAAM,CAAClF,IAAI,CAAC6F,KAAK,CAAC;MACpB;IACF;IACA,OAAOX,MAAM;EACf;EACA+K,cAAcA,CAAA,EAAG;IACf,OAAO,KAAK;EACd;EACAC,gBAAgBA,CAAC7I,KAAK,EAAE;IACtB,MAAM/I,EAAE,GAAG,IAAI;IACf,MAAM4J,IAAI,GAAG5J,EAAE,CAACgL,WAAW;IAC3B,MAAME,MAAM,GAAGtB,IAAI,CAACsB,MAAM;IAC1B,MAAMC,MAAM,GAAGvB,IAAI,CAACuB,MAAM;IAC1B,MAAMJ,MAAM,GAAG/K,EAAE,CAAC8Q,SAAS,CAAC/H,KAAK,CAAC;IAClC,OAAO;MACL8I,KAAK,EAAE3G,MAAM,GAAG,EAAE,GAAGA,MAAM,CAAC4G,gBAAgB,CAAC/G,MAAM,CAACG,MAAM,CAACG,IAAI,CAAC,CAAC,GAAG,EAAE;MACtE9D,KAAK,EAAE4D,MAAM,GAAG,EAAE,GAAGA,MAAM,CAAC2G,gBAAgB,CAAC/G,MAAM,CAACI,MAAM,CAACE,IAAI,CAAC,CAAC,GAAG;IACtE,CAAC;EACH;EACAlL,OAAOA,CAACiJ,IAAI,EAAE;IACZ,MAAMpJ,EAAE,GAAG,IAAI;IACf,MAAM4J,IAAI,GAAG5J,EAAE,CAACgL,WAAW;IAC3BhL,EAAE,CAACsG,SAAS,CAAC,CAAC;IACdtG,EAAE,CAAC6M,eAAe,GAAG,CAAC,CAAC;IACvB7M,EAAE,CAACuE,MAAM,CAAC6E,IAAI,IAAI,SAAS,CAAC;IAC5BQ,IAAI,CAACmI,KAAK,GAAGtJ,MAAM,CAAC9U,cAAc,CAACqM,EAAE,CAAC8G,OAAO,CAACkL,IAAI,EAAE9J,WAAW,CAAC0B,IAAI,CAACzB,MAAM,EAAEyB,IAAI,CAACxB,MAAM,EAAEpI,EAAE,CAAC2R,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC;EAClH;EACApN,MAAMA,CAAC6E,IAAI,EAAE,CAAC;EACdzI,IAAIA,CAAA,EAAG;IACL,MAAMX,EAAE,GAAG,IAAI;IACf,MAAM4M,GAAG,GAAG5M,EAAE,CAAC2M,IAAI;IACnB,MAAM1N,KAAK,GAAGe,EAAE,CAACf,KAAK;IACtB,MAAM2K,IAAI,GAAG5J,EAAE,CAACgL,WAAW;IAC3B,MAAMiH,QAAQ,GAAGrI,IAAI,CAACJ,IAAI,IAAI,EAAE;IAChC,MAAM0I,IAAI,GAAGjT,KAAK,CAACkT,SAAS;IAC5B,MAAM7N,MAAM,GAAG,EAAE;IACjB,MAAMxE,KAAK,GAAGE,EAAE,CAACoN,UAAU,IAAI,CAAC;IAChC,MAAM6C,KAAK,GAAGjQ,EAAE,CAACqN,UAAU,IAAK4E,QAAQ,CAAC5R,MAAM,GAAGP,KAAM;IACxD,IAAI1M,CAAC;IACL,IAAIwW,IAAI,CAACmC,OAAO,EAAE;MAChBnC,IAAI,CAACmC,OAAO,CAACpL,IAAI,CAACiM,GAAG,EAAEsF,IAAI,EAAEpS,KAAK,EAAEmQ,KAAK,CAAC;IAC5C;IACA,KAAK7c,CAAC,GAAG0M,KAAK,EAAE1M,CAAC,GAAG0M,KAAK,GAAGmQ,KAAK,EAAE,EAAE7c,CAAC,EAAE;MACtC,MAAM6Y,OAAO,GAAGgG,QAAQ,CAAC7e,CAAC,CAAC;MAC3B,IAAI6Y,OAAO,CAAC3H,MAAM,EAAE;QAClBA,MAAM,CAAC5C,IAAI,CAACuK,OAAO,CAAC;MACtB,CAAC,MAAM;QACLA,OAAO,CAACtL,IAAI,CAACiM,GAAG,EAAEsF,IAAI,CAAC;MACzB;IACF;IACA,KAAK9e,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGkR,MAAM,CAACjE,MAAM,EAAE,EAAEjN,CAAC,EAAE;MAClCkR,MAAM,CAAClR,CAAC,CAAC,CAACuN,IAAI,CAACiM,GAAG,EAAEsF,IAAI,CAAC;IAC3B;EACF;EACAE,QAAQA,CAACrJ,KAAK,EAAEzE,MAAM,EAAE;IACtB,MAAM8E,IAAI,GAAG9E,MAAM,GAAG,QAAQ,GAAG,SAAS;IAC1C,OAAOyE,KAAK,KAAKhK,SAAS,IAAI,IAAI,CAACiM,WAAW,CAACe,OAAO,GAClD,IAAI,CAACsG,4BAA4B,CAACjJ,IAAI,CAAC,GACvC,IAAI,CAACkJ,yBAAyB,CAACvJ,KAAK,IAAI,CAAC,EAAEK,IAAI,CAAC;EACtD;EACA0G,UAAUA,CAAC/G,KAAK,EAAEzE,MAAM,EAAE8E,IAAI,EAAE;IAC9B,MAAMpJ,EAAE,GAAG,IAAI;IACf,MAAM+L,OAAO,GAAG/L,EAAE,CAAC6N,UAAU,CAAC,CAAC;IAC/B,IAAI0E,OAAO;IACX,IAAIxJ,KAAK,IAAI,CAAC,IAAIA,KAAK,GAAG/I,EAAE,CAACgL,WAAW,CAACxB,IAAI,CAACnJ,MAAM,EAAE;MACpD,MAAM4L,OAAO,GAAGjM,EAAE,CAACgL,WAAW,CAACxB,IAAI,CAACT,KAAK,CAAC;MAC1CwJ,OAAO,GAAGtG,OAAO,CAACsB,QAAQ,KACvBtB,OAAO,CAACsB,QAAQ,GAAGvB,iBAAiB,CAAChM,EAAE,CAAC8P,UAAU,CAAC,CAAC,EAAE/G,KAAK,EAAEkD,OAAO,CAAC,CAAC;MACzEsG,OAAO,CAACxH,MAAM,GAAG/K,EAAE,CAAC8Q,SAAS,CAAC/H,KAAK,CAAC;MACpCwJ,OAAO,CAACpG,GAAG,GAAGJ,OAAO,CAACvC,IAAI,CAACT,KAAK,CAAC;IACnC,CAAC,MAAM;MACLwJ,OAAO,GAAGvS,EAAE,CAACuN,QAAQ,KAClBvN,EAAE,CAACuN,QAAQ,GAAG3B,oBAAoB,CAAC5L,EAAE,CAACf,KAAK,CAAC6Q,UAAU,CAAC,CAAC,EAAE9P,EAAE,CAAC+I,KAAK,CAAC,CAAC;MACvEwJ,OAAO,CAACxG,OAAO,GAAGA,OAAO;IAC3B;IACAwG,OAAO,CAACjO,MAAM,GAAG,CAAC,CAACA,MAAM;IACzBiO,OAAO,CAACnJ,IAAI,GAAGA,IAAI;IACnB,OAAOmJ,OAAO;EAChB;EACAF,4BAA4BA,CAACjJ,IAAI,EAAE;IACjC,OAAO,IAAI,CAACoJ,sBAAsB,CAAC,IAAI,CAACpD,kBAAkB,CAACnF,EAAE,EAAEb,IAAI,CAAC;EACtE;EACAkJ,yBAAyBA,CAACvJ,KAAK,EAAEK,IAAI,EAAE;IACrC,OAAO,IAAI,CAACoJ,sBAAsB,CAAC,IAAI,CAACC,eAAe,CAACxI,EAAE,EAAEb,IAAI,EAAEL,KAAK,CAAC;EAC1E;EACAyJ,sBAAsBA,CAACE,WAAW,EAA2B;IAAA,IAAzBtJ,IAAI,GAAAhJ,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAArB,SAAA,GAAAqB,SAAA,MAAG,SAAS;IAAA,IAAE2I,KAAK,GAAA3I,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAArB,SAAA;IACzD,MAAMiB,EAAE,GAAG,IAAI;IACf,MAAMsE,MAAM,GAAG8E,IAAI,KAAK,QAAQ;IAChC,MAAMuJ,KAAK,GAAG3S,EAAE,CAAC6M,eAAe;IAChC,MAAM+F,QAAQ,GAAGF,WAAW,GAAG,GAAG,GAAGtJ,IAAI;IACzC,MAAMoD,MAAM,GAAGmG,KAAK,CAACC,QAAQ,CAAC;IAC9B,MAAMC,OAAO,GAAG7S,EAAE,CAACsN,mBAAmB,IAAIjZ,OAAO,CAAC0U,KAAK,CAAC;IACxD,IAAIyD,MAAM,EAAE;MACV,OAAOD,gBAAgB,CAACC,MAAM,EAAEqG,OAAO,CAAC;IAC1C;IACA,MAAM1M,MAAM,GAAGnG,EAAE,CAACf,KAAK,CAACkH,MAAM;IAC9B,MAAMsJ,SAAS,GAAGtJ,MAAM,CAAC2M,uBAAuB,CAAC9S,EAAE,CAAC+M,KAAK,EAAE2F,WAAW,CAAC;IACvE,MAAMK,QAAQ,GAAGzO,MAAM,GAAG,IAAA0O,MAAA,CAAIN,WAAW,YAAS,OAAO,EAAEA,WAAW,EAAE,EAAE,CAAC,GAAG,CAACA,WAAW,EAAE,EAAE,CAAC;IAC/F,MAAM/C,MAAM,GAAGxJ,MAAM,CAACyJ,eAAe,CAAC5P,EAAE,CAAC6N,UAAU,CAAC,CAAC,EAAE4B,SAAS,CAAC;IACjE,MAAMwD,KAAK,GAAG7N,MAAM,CAACC,IAAI,CAAC5R,QAAQ,CAACwe,QAAQ,CAACS,WAAW,CAAC,CAAC;IACzD,MAAMH,OAAO,GAAGA,CAAA,KAAMvS,EAAE,CAAC8P,UAAU,CAAC/G,KAAK,EAAEzE,MAAM,CAAC;IAClD,MAAMsC,MAAM,GAAGT,MAAM,CAAC+M,mBAAmB,CAACvD,MAAM,EAAEsD,KAAK,EAAEV,OAAO,EAAEQ,QAAQ,CAAC;IAC3E,IAAInM,MAAM,CAACK,OAAO,EAAE;MAClBL,MAAM,CAACK,OAAO,GAAG4L,OAAO;MACxBF,KAAK,CAACC,QAAQ,CAAC,GAAGxN,MAAM,CAAC+N,MAAM,CAAC5G,gBAAgB,CAAC3F,MAAM,EAAEiM,OAAO,CAAC,CAAC;IACpE;IACA,OAAOjM,MAAM;EACf;EACAwM,kBAAkBA,CAACrK,KAAK,EAAEsK,UAAU,EAAE/O,MAAM,EAAE;IAC5C,MAAMtE,EAAE,GAAG,IAAI;IACf,MAAMf,KAAK,GAAGe,EAAE,CAACf,KAAK;IACtB,MAAM0T,KAAK,GAAG3S,EAAE,CAAC6M,eAAe;IAChC,MAAM+F,QAAQ,gBAAAI,MAAA,CAAgBK,UAAU,CAAE;IAC1C,MAAM7G,MAAM,GAAGmG,KAAK,CAACC,QAAQ,CAAC;IAC9B,IAAIpG,MAAM,EAAE;MACV,OAAOA,MAAM;IACf;IACA,IAAI1F,OAAO;IACX,IAAI7H,KAAK,CAAC6H,OAAO,CAACxB,SAAS,KAAK,KAAK,EAAE;MACrC,MAAMa,MAAM,GAAGnG,EAAE,CAACf,KAAK,CAACkH,MAAM;MAC9B,MAAMsJ,SAAS,GAAGtJ,MAAM,CAACmN,yBAAyB,CAACtT,EAAE,CAAC+M,KAAK,EAAEsG,UAAU,CAAC;MACxE,MAAM1D,MAAM,GAAGxJ,MAAM,CAACyJ,eAAe,CAAC5P,EAAE,CAAC6N,UAAU,CAAC,CAAC,EAAE4B,SAAS,CAAC;MACjE3I,OAAO,GAAGX,MAAM,CAAC0J,cAAc,CAACF,MAAM,EAAE3P,EAAE,CAAC8P,UAAU,CAAC/G,KAAK,EAAEzE,MAAM,EAAE+O,UAAU,CAAC,CAAC;IACnF;IACA,MAAMtN,UAAU,GAAG,IAAIG,UAAU,CAACjH,KAAK,EAAE6H,OAAO,IAAIA,OAAO,CAACf,UAAU,CAAC;IACvE,IAAIe,OAAO,IAAIA,OAAO,CAACyM,UAAU,EAAE;MACjCZ,KAAK,CAACC,QAAQ,CAAC,GAAGxN,MAAM,CAAC+N,MAAM,CAACpN,UAAU,CAAC;IAC7C;IACA,OAAOA,UAAU;EACnB;EACAyN,gBAAgBA,CAAC1M,OAAO,EAAE;IACxB,IAAI,CAACA,OAAO,CAACG,OAAO,EAAE;MACpB;IACF;IACA,OAAO,IAAI,CAACkG,cAAc,KAAK,IAAI,CAACA,cAAc,GAAG/H,MAAM,CAACqC,MAAM,CAAC,CAAC,CAAC,EAAEX,OAAO,CAAC,CAAC;EAClF;EACA2M,cAAcA,CAACrK,IAAI,EAAEsK,aAAa,EAAE;IAClC,OAAO,CAACA,aAAa,IAAIpH,kBAAkB,CAAClD,IAAI,CAAC,IAAI,IAAI,CAACnK,KAAK,CAAC0U,mBAAmB;EACrF;EACAC,aAAaA,CAAC3H,OAAO,EAAElD,KAAK,EAAEnD,UAAU,EAAEwD,IAAI,EAAE;IAC9C,IAAIkD,kBAAkB,CAAClD,IAAI,CAAC,EAAE;MAC5BhE,MAAM,CAACqC,MAAM,CAACwE,OAAO,EAAErG,UAAU,CAAC;IACpC,CAAC,MAAM;MACL,IAAI,CAACwN,kBAAkB,CAACrK,KAAK,EAAEK,IAAI,CAAC,CAAC7E,MAAM,CAAC0H,OAAO,EAAErG,UAAU,CAAC;IAClE;EACF;EACAiO,mBAAmBA,CAACH,aAAa,EAAEtK,IAAI,EAAEvC,UAAU,EAAE;IACnD,IAAI6M,aAAa,IAAI,CAACpH,kBAAkB,CAAClD,IAAI,CAAC,EAAE;MAC9C,IAAI,CAACgK,kBAAkB,CAACrU,SAAS,EAAEqK,IAAI,CAAC,CAAC7E,MAAM,CAACmP,aAAa,EAAE7M,UAAU,CAAC;IAC5E;EACF;EACAiN,SAASA,CAAC7H,OAAO,EAAElD,KAAK,EAAEK,IAAI,EAAE9E,MAAM,EAAE;IACtC2H,OAAO,CAAC3H,MAAM,GAAGA,MAAM;IACvB,MAAMwC,OAAO,GAAG,IAAI,CAACsL,QAAQ,CAACrJ,KAAK,EAAEzE,MAAM,CAAC;IAC5C,IAAI,CAAC8O,kBAAkB,CAACrK,KAAK,EAAEK,IAAI,EAAE9E,MAAM,CAAC,CAACC,MAAM,CAAC0H,OAAO,EAAE;MAC3DnF,OAAO,EAAG,CAACxC,MAAM,IAAI,IAAI,CAACkP,gBAAgB,CAAC1M,OAAO,CAAC,IAAKA;IAC1D,CAAC,CAAC;EACJ;EACAiN,gBAAgBA,CAAC9H,OAAO,EAAE5C,YAAY,EAAEN,KAAK,EAAE;IAC7C,IAAI,CAAC+K,SAAS,CAAC7H,OAAO,EAAElD,KAAK,EAAE,QAAQ,EAAE,KAAK,CAAC;EACjD;EACAiL,aAAaA,CAAC/H,OAAO,EAAE5C,YAAY,EAAEN,KAAK,EAAE;IAC1C,IAAI,CAAC+K,SAAS,CAAC7H,OAAO,EAAElD,KAAK,EAAE,QAAQ,EAAE,IAAI,CAAC;EAChD;EACAkL,wBAAwBA,CAAA,EAAG;IACzB,MAAMhI,OAAO,GAAG,IAAI,CAACjB,WAAW,CAACe,OAAO;IACxC,IAAIE,OAAO,EAAE;MACX,IAAI,CAAC6H,SAAS,CAAC7H,OAAO,EAAElN,SAAS,EAAE,QAAQ,EAAE,KAAK,CAAC;IACrD;EACF;EACAmV,qBAAqBA,CAAA,EAAG;IACtB,MAAMjI,OAAO,GAAG,IAAI,CAACjB,WAAW,CAACe,OAAO;IACxC,IAAIE,OAAO,EAAE;MACX,IAAI,CAAC6H,SAAS,CAAC7H,OAAO,EAAElN,SAAS,EAAE,QAAQ,EAAE,IAAI,CAAC;IACpD;EACF;EACAyQ,eAAeA,CAACF,gBAAgB,EAAE;IAChC,MAAMtP,EAAE,GAAG,IAAI;IACf,MAAMmU,OAAO,GAAGnU,EAAE,CAACgL,WAAW,CAACxB,IAAI,CAACnJ,MAAM;IAC1C,MAAM+T,OAAO,GAAGpU,EAAE,CAACiN,KAAK,CAAC5M,MAAM;IAC/B,IAAI+T,OAAO,GAAGD,OAAO,EAAE;MACrBnU,EAAE,CAACqU,eAAe,CAACF,OAAO,EAAEC,OAAO,GAAGD,OAAO,EAAE7E,gBAAgB,CAAC;IAClE,CAAC,MAAM,IAAI8E,OAAO,GAAGD,OAAO,EAAE;MAC5BnU,EAAE,CAACsU,eAAe,CAACF,OAAO,EAAED,OAAO,GAAGC,OAAO,CAAC;IAChD;IACA,MAAMnE,KAAK,GAAGrQ,IAAI,CAACC,GAAG,CAACuU,OAAO,EAAED,OAAO,CAAC;IACxC,IAAIlE,KAAK,EAAE;MACTjQ,EAAE,CAACgQ,KAAK,CAAC,CAAC,EAAEC,KAAK,CAAC;IACpB;EACF;EACAoE,eAAeA,CAACvU,KAAK,EAAEmQ,KAAK,EAA2B;IAAA,IAAzBX,gBAAgB,GAAAlP,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAArB,SAAA,GAAAqB,SAAA,MAAG,IAAI;IACnD,MAAMJ,EAAE,GAAG,IAAI;IACf,MAAM4J,IAAI,GAAG5J,EAAE,CAACgL,WAAW;IAC3B,MAAMxB,IAAI,GAAGI,IAAI,CAACJ,IAAI;IACtB,MAAMvB,GAAG,GAAGnI,KAAK,GAAGmQ,KAAK;IACzB,IAAI7c,CAAC;IACL,MAAMmhB,IAAI,GAAIC,GAAG,IAAK;MACpBA,GAAG,CAACnU,MAAM,IAAI4P,KAAK;MACnB,KAAK7c,CAAC,GAAGohB,GAAG,CAACnU,MAAM,GAAG,CAAC,EAAEjN,CAAC,IAAI6U,GAAG,EAAE7U,CAAC,EAAE,EAAE;QACtCohB,GAAG,CAACphB,CAAC,CAAC,GAAGohB,GAAG,CAACphB,CAAC,GAAG6c,KAAK,CAAC;MACzB;IACF,CAAC;IACDsE,IAAI,CAAC/K,IAAI,CAAC;IACV,KAAKpW,CAAC,GAAG0M,KAAK,EAAE1M,CAAC,GAAG6U,GAAG,EAAE,EAAE7U,CAAC,EAAE;MAC5BoW,IAAI,CAACpW,CAAC,CAAC,GAAG,IAAI4M,EAAE,CAACyS,eAAe,CAAC,CAAC;IACpC;IACA,IAAIzS,EAAE,CAACgN,QAAQ,EAAE;MACfuH,IAAI,CAAC3K,IAAI,CAACyC,OAAO,CAAC;IACpB;IACArM,EAAE,CAACgQ,KAAK,CAAClQ,KAAK,EAAEmQ,KAAK,CAAC;IACtB,IAAIX,gBAAgB,EAAE;MACpBtP,EAAE,CAACyU,cAAc,CAACjL,IAAI,EAAE1J,KAAK,EAAEmQ,KAAK,EAAE,OAAO,CAAC;IAChD;EACF;EACAwE,cAAcA,CAACxI,OAAO,EAAEnM,KAAK,EAAEmQ,KAAK,EAAE7G,IAAI,EAAE,CAAC;EAC7CkL,eAAeA,CAACxU,KAAK,EAAEmQ,KAAK,EAAE;IAC5B,MAAMjQ,EAAE,GAAG,IAAI;IACf,MAAM4J,IAAI,GAAG5J,EAAE,CAACgL,WAAW;IAC3B,IAAIhL,EAAE,CAACgN,QAAQ,EAAE;MACf,MAAM0H,OAAO,GAAG9K,IAAI,CAACyC,OAAO,CAACsI,MAAM,CAAC7U,KAAK,EAAEmQ,KAAK,CAAC;MACjD,IAAIrG,IAAI,CAAC8D,QAAQ,EAAE;QACjBtB,WAAW,CAACxC,IAAI,EAAE8K,OAAO,CAAC;MAC5B;IACF;IACA9K,IAAI,CAACJ,IAAI,CAACmL,MAAM,CAAC7U,KAAK,EAAEmQ,KAAK,CAAC;EAChC;EACA2E,WAAWA,CAAA,EAAG;IACZ,MAAM3E,KAAK,GAAG7P,SAAS,CAACC,MAAM;IAC9B,IAAI,CAACgU,eAAe,CAAC,IAAI,CAACxG,UAAU,CAAC,CAAC,CAACrE,IAAI,CAACnJ,MAAM,GAAG4P,KAAK,EAAEA,KAAK,CAAC;EACpE;EACA4E,UAAUA,CAAA,EAAG;IACX,IAAI,CAACP,eAAe,CAAC,IAAI,CAACtJ,WAAW,CAACxB,IAAI,CAACnJ,MAAM,GAAG,CAAC,EAAE,CAAC,CAAC;EAC3D;EACAyU,YAAYA,CAAA,EAAG;IACb,IAAI,CAACR,eAAe,CAAC,CAAC,EAAE,CAAC,CAAC;EAC5B;EACAS,aAAaA,CAACjV,KAAK,EAAEmQ,KAAK,EAAE;IAC1B,IAAI,CAACqE,eAAe,CAACxU,KAAK,EAAEmQ,KAAK,CAAC;IAClC,IAAI,CAACoE,eAAe,CAACvU,KAAK,EAAEM,SAAS,CAACC,MAAM,GAAG,CAAC,CAAC;EACnD;EACA2U,cAAcA,CAAA,EAAG;IACf,IAAI,CAACX,eAAe,CAAC,CAAC,EAAEjU,SAAS,CAACC,MAAM,CAAC;EAC3C;AACF;AACAqM,iBAAiB,CAACjZ,QAAQ,GAAG,CAAC,CAAC;AAC/BiZ,iBAAiB,CAACuI,SAAS,CAAC7F,kBAAkB,GAAG,IAAI;AACrD1C,iBAAiB,CAACuI,SAAS,CAACxC,eAAe,GAAG,IAAI;AAElD,SAASyC,iBAAiBA,CAACrN,KAAK,EAAE;EAChC,IAAI,CAACA,KAAK,CAACsN,MAAM,CAACC,IAAI,EAAE;IACtB,MAAMC,KAAK,GAAGxN,KAAK,CAACyN,uBAAuB,CAAC,KAAK,CAAC;IAClD,IAAI1O,MAAM,GAAG,EAAE;IACf,KAAK,IAAIxT,CAAC,GAAG,CAAC,EAAE0V,IAAI,GAAGuM,KAAK,CAAChV,MAAM,EAAEjN,CAAC,GAAG0V,IAAI,EAAE1V,CAAC,EAAE,EAAE;MAClDwT,MAAM,GAAGA,MAAM,CAACoM,MAAM,CAACqC,KAAK,CAACjiB,CAAC,CAAC,CAAC0X,UAAU,CAAC4G,kBAAkB,CAAC7J,KAAK,CAAC,CAAC;IACvE;IACAA,KAAK,CAACsN,MAAM,CAACC,IAAI,GAAGrgB,YAAY,CAAC6R,MAAM,CAAC2O,IAAI,CAAC,CAACziB,CAAC,EAAEQ,CAAC,KAAKR,CAAC,GAAGQ,CAAC,CAAC,CAAC;EAChE;EACA,OAAOuU,KAAK,CAACsN,MAAM,CAACC,IAAI;AAC1B;AACA,SAASI,oBAAoBA,CAAC3N,KAAK,EAAE;EACnC,MAAMjB,MAAM,GAAGsO,iBAAiB,CAACrN,KAAK,CAAC;EACvC,IAAIhI,GAAG,GAAGgI,KAAK,CAAC4N,OAAO;EACvB,IAAIriB,CAAC,EAAE0V,IAAI,EAAE4M,IAAI,EAAEtF,IAAI;EACvB,MAAMuF,gBAAgB,GAAGA,CAAA,KAAM;IAC7B9V,GAAG,GAAGD,IAAI,CAACC,GAAG,CAACA,GAAG,EAAEzM,CAAC,IAAIwM,IAAI,CAACgW,GAAG,CAACF,IAAI,GAAGtF,IAAI,CAAC,IAAIvQ,GAAG,CAAC;IACtDuQ,IAAI,GAAGsF,IAAI;EACb,CAAC;EACD,KAAKtiB,CAAC,GAAG,CAAC,EAAE0V,IAAI,GAAGlC,MAAM,CAACvG,MAAM,EAAEjN,CAAC,GAAG0V,IAAI,EAAE,EAAE1V,CAAC,EAAE;IAC/CsiB,IAAI,GAAG7N,KAAK,CAACgO,gBAAgB,CAACjP,MAAM,CAACxT,CAAC,CAAC,CAAC;IACxCuiB,gBAAgB,CAAC,CAAC;EACpB;EACA,KAAKviB,CAAC,GAAG,CAAC,EAAE0V,IAAI,GAAGjB,KAAK,CAACiO,KAAK,CAACzV,MAAM,EAAEjN,CAAC,GAAG0V,IAAI,EAAE,EAAE1V,CAAC,EAAE;IACpDsiB,IAAI,GAAG7N,KAAK,CAACkO,eAAe,CAAC3iB,CAAC,CAAC;IAC/BuiB,gBAAgB,CAAC,CAAC;EACpB;EACA,OAAO9V,GAAG;AACZ;AACA,SAASmW,wBAAwBA,CAACjN,KAAK,EAAEkN,KAAK,EAAEnP,OAAO,EAAEoP,UAAU,EAAE;EACnE,MAAMC,SAAS,GAAGrP,OAAO,CAACsP,YAAY;EACtC,IAAI5O,IAAI,EAAE6O,KAAK;EACf,IAAI5hB,aAAa,CAAC0hB,SAAS,CAAC,EAAE;IAC5B3O,IAAI,GAAGyO,KAAK,CAACpW,GAAG,GAAGiH,OAAO,CAACwP,kBAAkB;IAC7CD,KAAK,GAAGvP,OAAO,CAACyP,aAAa;EAC/B,CAAC,MAAM;IACL/O,IAAI,GAAG2O,SAAS,GAAGD,UAAU;IAC7BG,KAAK,GAAG,CAAC;EACX;EACA,OAAO;IACLG,KAAK,EAAEhP,IAAI,GAAG0O,UAAU;IACxBG,KAAK;IACLvW,KAAK,EAAEmW,KAAK,CAACQ,MAAM,CAAC1N,KAAK,CAAC,GAAIvB,IAAI,GAAG;EACvC,CAAC;AACH;AACA,SAASkP,yBAAyBA,CAAC3N,KAAK,EAAEkN,KAAK,EAAEnP,OAAO,EAAEoP,UAAU,EAAE;EACpE,MAAMO,MAAM,GAAGR,KAAK,CAACQ,MAAM;EAC3B,MAAMf,IAAI,GAAGe,MAAM,CAAC1N,KAAK,CAAC;EAC1B,IAAIqH,IAAI,GAAGrH,KAAK,GAAG,CAAC,GAAG0N,MAAM,CAAC1N,KAAK,GAAG,CAAC,CAAC,GAAG,IAAI;EAC/C,IAAI4N,IAAI,GAAG5N,KAAK,GAAG0N,MAAM,CAACpW,MAAM,GAAG,CAAC,GAAGoW,MAAM,CAAC1N,KAAK,GAAG,CAAC,CAAC,GAAG,IAAI;EAC/D,MAAM6N,OAAO,GAAG9P,OAAO,CAACwP,kBAAkB;EAC1C,IAAIlG,IAAI,KAAK,IAAI,EAAE;IACjBA,IAAI,GAAGsF,IAAI,IAAIiB,IAAI,KAAK,IAAI,GAAGV,KAAK,CAAChO,GAAG,GAAGgO,KAAK,CAACnW,KAAK,GAAG6W,IAAI,GAAGjB,IAAI,CAAC;EACvE;EACA,IAAIiB,IAAI,KAAK,IAAI,EAAE;IACjBA,IAAI,GAAGjB,IAAI,GAAGA,IAAI,GAAGtF,IAAI;EAC3B;EACA,MAAMtQ,KAAK,GAAG4V,IAAI,GAAG,CAACA,IAAI,GAAG9V,IAAI,CAACC,GAAG,CAACuQ,IAAI,EAAEuG,IAAI,CAAC,IAAI,CAAC,GAAGC,OAAO;EAChE,MAAMpP,IAAI,GAAG5H,IAAI,CAACgW,GAAG,CAACe,IAAI,GAAGvG,IAAI,CAAC,GAAG,CAAC,GAAGwG,OAAO;EAChD,OAAO;IACLJ,KAAK,EAAEhP,IAAI,GAAG0O,UAAU;IACxBG,KAAK,EAAEvP,OAAO,CAACyP,aAAa;IAC5BzW;EACF,CAAC;AACH;AACA,SAAS+W,aAAaA,CAACC,KAAK,EAAElW,IAAI,EAAEuK,MAAM,EAAE/X,CAAC,EAAE;EAC7C,MAAM2jB,UAAU,GAAG5L,MAAM,CAAC6E,KAAK,CAAC8G,KAAK,CAAC,CAAC,CAAC,EAAE1jB,CAAC,CAAC;EAC5C,MAAM4jB,QAAQ,GAAG7L,MAAM,CAAC6E,KAAK,CAAC8G,KAAK,CAAC,CAAC,CAAC,EAAE1jB,CAAC,CAAC;EAC1C,MAAMyM,GAAG,GAAGD,IAAI,CAACC,GAAG,CAACkX,UAAU,EAAEC,QAAQ,CAAC;EAC1C,MAAMhV,GAAG,GAAGpC,IAAI,CAACoC,GAAG,CAAC+U,UAAU,EAAEC,QAAQ,CAAC;EAC1C,IAAIC,QAAQ,GAAGpX,GAAG;EAClB,IAAIqX,MAAM,GAAGlV,GAAG;EAChB,IAAIpC,IAAI,CAACgW,GAAG,CAAC/V,GAAG,CAAC,GAAGD,IAAI,CAACgW,GAAG,CAAC5T,GAAG,CAAC,EAAE;IACjCiV,QAAQ,GAAGjV,GAAG;IACdkV,MAAM,GAAGrX,GAAG;EACd;EACAe,IAAI,CAACuK,MAAM,CAACE,IAAI,CAAC,GAAG6L,MAAM;EAC1BtW,IAAI,CAACuW,OAAO,GAAG;IACbF,QAAQ;IACRC,MAAM;IACNpX,KAAK,EAAEiX,UAAU;IACjB9O,GAAG,EAAE+O,QAAQ;IACbnX,GAAG;IACHmC;EACF,CAAC;AACH;AACA,SAASoV,UAAUA,CAACN,KAAK,EAAElW,IAAI,EAAEuK,MAAM,EAAE/X,CAAC,EAAE;EAC1C,IAAIG,OAAO,CAACujB,KAAK,CAAC,EAAE;IAClBD,aAAa,CAACC,KAAK,EAAElW,IAAI,EAAEuK,MAAM,EAAE/X,CAAC,CAAC;EACvC,CAAC,MAAM;IACLwN,IAAI,CAACuK,MAAM,CAACE,IAAI,CAAC,GAAGF,MAAM,CAAC6E,KAAK,CAAC8G,KAAK,EAAE1jB,CAAC,CAAC;EAC5C;EACA,OAAOwN,IAAI;AACb;AACA,SAASyW,qBAAqBA,CAACzN,IAAI,EAAEJ,IAAI,EAAE1J,KAAK,EAAEmQ,KAAK,EAAE;EACvD,MAAM/E,MAAM,GAAGtB,IAAI,CAACsB,MAAM;EAC1B,MAAMC,MAAM,GAAGvB,IAAI,CAACuB,MAAM;EAC1B,MAAMsF,MAAM,GAAGvF,MAAM,CAACwF,SAAS,CAAC,CAAC;EACjC,MAAMC,WAAW,GAAGzF,MAAM,KAAKC,MAAM;EACrC,MAAMJ,MAAM,GAAG,EAAE;EACjB,IAAI3X,CAAC,EAAE0V,IAAI,EAAElI,IAAI,EAAEkW,KAAK;EACxB,KAAK1jB,CAAC,GAAG0M,KAAK,EAAEgJ,IAAI,GAAGhJ,KAAK,GAAGmQ,KAAK,EAAE7c,CAAC,GAAG0V,IAAI,EAAE,EAAE1V,CAAC,EAAE;IACnD0jB,KAAK,GAAGtN,IAAI,CAACpW,CAAC,CAAC;IACfwN,IAAI,GAAG,CAAC,CAAC;IACTA,IAAI,CAACsK,MAAM,CAACG,IAAI,CAAC,GAAGsF,WAAW,IAAIzF,MAAM,CAAC8E,KAAK,CAACS,MAAM,CAACrd,CAAC,CAAC,EAAEA,CAAC,CAAC;IAC7D2X,MAAM,CAACrJ,IAAI,CAAC0V,UAAU,CAACN,KAAK,EAAElW,IAAI,EAAEuK,MAAM,EAAE/X,CAAC,CAAC,CAAC;EACjD;EACA,OAAO2X,MAAM;AACf;AACA,SAASuM,UAAUA,CAACC,MAAM,EAAE;EAC1B,OAAOA,MAAM,IAAIA,MAAM,CAACN,QAAQ,KAAKlY,SAAS,IAAIwY,MAAM,CAACL,MAAM,KAAKnY,SAAS;AAC/E;AACA,MAAMyY,aAAa,SAAS9K,iBAAiB,CAAC;EAC5C6D,kBAAkBA,CAAC3G,IAAI,EAAEJ,IAAI,EAAE1J,KAAK,EAAEmQ,KAAK,EAAE;IAC3C,OAAOoH,qBAAqB,CAACzN,IAAI,EAAEJ,IAAI,EAAE1J,KAAK,EAAEmQ,KAAK,CAAC;EACxD;EACAI,cAAcA,CAACzG,IAAI,EAAEJ,IAAI,EAAE1J,KAAK,EAAEmQ,KAAK,EAAE;IACvC,OAAOoH,qBAAqB,CAACzN,IAAI,EAAEJ,IAAI,EAAE1J,KAAK,EAAEmQ,KAAK,CAAC;EACxD;EACAK,eAAeA,CAAC1G,IAAI,EAAEJ,IAAI,EAAE1J,KAAK,EAAEmQ,KAAK,EAAE;IACxC,MAAM;MAAC/E,MAAM;MAAEC;IAAM,CAAC,GAAGvB,IAAI;IAC7B,MAAM;MAACgH,QAAQ,GAAG,GAAG;MAAEC,QAAQ,GAAG;IAAG,CAAC,GAAG,IAAI,CAAC7D,QAAQ;IACtD,MAAMyK,QAAQ,GAAGvM,MAAM,CAACG,IAAI,KAAK,GAAG,GAAGuF,QAAQ,GAAGC,QAAQ;IAC1D,MAAM6G,QAAQ,GAAGvM,MAAM,CAACE,IAAI,KAAK,GAAG,GAAGuF,QAAQ,GAAGC,QAAQ;IAC1D,MAAM9F,MAAM,GAAG,EAAE;IACjB,IAAI3X,CAAC,EAAE0V,IAAI,EAAElI,IAAI,EAAE+W,GAAG;IACtB,KAAKvkB,CAAC,GAAG0M,KAAK,EAAEgJ,IAAI,GAAGhJ,KAAK,GAAGmQ,KAAK,EAAE7c,CAAC,GAAG0V,IAAI,EAAE,EAAE1V,CAAC,EAAE;MACnDukB,GAAG,GAAGnO,IAAI,CAACpW,CAAC,CAAC;MACbwN,IAAI,GAAG,CAAC,CAAC;MACTA,IAAI,CAACsK,MAAM,CAACG,IAAI,CAAC,GAAGH,MAAM,CAAC8E,KAAK,CAAC/b,gBAAgB,CAAC0jB,GAAG,EAAEF,QAAQ,CAAC,EAAErkB,CAAC,CAAC;MACpE2X,MAAM,CAACrJ,IAAI,CAAC0V,UAAU,CAACnjB,gBAAgB,CAAC0jB,GAAG,EAAED,QAAQ,CAAC,EAAE9W,IAAI,EAAEuK,MAAM,EAAE/X,CAAC,CAAC,CAAC;IAC3E;IACA,OAAO2X,MAAM;EACf;EACAiG,qBAAqBA,CAACC,KAAK,EAAEpJ,KAAK,EAAEkD,MAAM,EAAE9B,KAAK,EAAE;IACjD,KAAK,CAAC+H,qBAAqB,CAACC,KAAK,EAAEpJ,KAAK,EAAEkD,MAAM,EAAE9B,KAAK,CAAC;IACxD,MAAMsO,MAAM,GAAGxM,MAAM,CAACoM,OAAO;IAC7B,IAAII,MAAM,IAAI1P,KAAK,KAAK,IAAI,CAACmD,WAAW,CAACG,MAAM,EAAE;MAC/C8F,KAAK,CAACpR,GAAG,GAAGD,IAAI,CAACC,GAAG,CAACoR,KAAK,CAACpR,GAAG,EAAE0X,MAAM,CAAC1X,GAAG,CAAC;MAC3CoR,KAAK,CAACjP,GAAG,GAAGpC,IAAI,CAACoC,GAAG,CAACiP,KAAK,CAACjP,GAAG,EAAEuV,MAAM,CAACvV,GAAG,CAAC;IAC7C;EACF;EACA4P,gBAAgBA,CAAC7I,KAAK,EAAE;IACtB,MAAM/I,EAAE,GAAG,IAAI;IACf,MAAM4J,IAAI,GAAG5J,EAAE,CAACgL,WAAW;IAC3B,MAAM;MAACE,MAAM;MAAEC;IAAM,CAAC,GAAGvB,IAAI;IAC7B,MAAMmB,MAAM,GAAG/K,EAAE,CAAC8Q,SAAS,CAAC/H,KAAK,CAAC;IAClC,MAAMwO,MAAM,GAAGxM,MAAM,CAACoM,OAAO;IAC7B,MAAM5P,KAAK,GAAG+P,UAAU,CAACC,MAAM,CAAC,GAC5B,GAAG,GAAGA,MAAM,CAACzX,KAAK,GAAG,IAAI,GAAGyX,MAAM,CAACtP,GAAG,GAAG,GAAG,GAC5C,EAAE,GAAGkD,MAAM,CAAC2G,gBAAgB,CAAC/G,MAAM,CAACI,MAAM,CAACE,IAAI,CAAC,CAAC;IACrD,OAAO;MACLwG,KAAK,EAAE,EAAE,GAAG3G,MAAM,CAAC4G,gBAAgB,CAAC/G,MAAM,CAACG,MAAM,CAACG,IAAI,CAAC,CAAC;MACxD9D;IACF,CAAC;EACH;EACAiG,UAAUA,CAAA,EAAG;IACX,MAAMxN,EAAE,GAAG,IAAI;IACfA,EAAE,CAACsN,mBAAmB,GAAG,IAAI;IAC7B,KAAK,CAACE,UAAU,CAAC,CAAC;IAClB,MAAM5D,IAAI,GAAG5J,EAAE,CAACgL,WAAW;IAC3BpB,IAAI,CAACX,KAAK,GAAGjJ,EAAE,CAAC6N,UAAU,CAAC,CAAC,CAAC5E,KAAK;EACpC;EACA1E,MAAMA,CAAC6E,IAAI,EAAE;IACX,MAAMpJ,EAAE,GAAG,IAAI;IACf,MAAM4J,IAAI,GAAG5J,EAAE,CAACgL,WAAW;IAC3BhL,EAAE,CAACyU,cAAc,CAAC7K,IAAI,CAACJ,IAAI,EAAE,CAAC,EAAEI,IAAI,CAACJ,IAAI,CAACnJ,MAAM,EAAE+I,IAAI,CAAC;EACzD;EACAqL,cAAcA,CAACmD,IAAI,EAAE9X,KAAK,EAAEmQ,KAAK,EAAE7G,IAAI,EAAE;IACvC,MAAMpJ,EAAE,GAAG,IAAI;IACf,MAAMgP,KAAK,GAAG5F,IAAI,KAAK,OAAO;IAC9B,MAAM+B,MAAM,GAAGnL,EAAE,CAACgL,WAAW,CAACG,MAAM;IACpC,MAAM0M,IAAI,GAAG1M,MAAM,CAAC2M,YAAY,CAAC,CAAC;IAClC,MAAMC,UAAU,GAAG5M,MAAM,CAAC6M,YAAY,CAAC,CAAC;IACxC,MAAM/B,KAAK,GAAGjW,EAAE,CAACiY,SAAS,CAAC,CAAC;IAC5B,MAAMC,SAAS,GAAGlY,EAAE,CAACsS,yBAAyB,CAACxS,KAAK,EAAEsJ,IAAI,CAAC;IAC3D,MAAMsK,aAAa,GAAG1T,EAAE,CAACwT,gBAAgB,CAAC0E,SAAS,CAAC;IACpD,MAAMzE,cAAc,GAAGzT,EAAE,CAACyT,cAAc,CAACrK,IAAI,EAAEsK,aAAa,CAAC;IAC7D1T,EAAE,CAAC6T,mBAAmB,CAACH,aAAa,EAAEtK,IAAI,EAAE8O,SAAS,CAAC;IACtD,KAAK,IAAI9kB,CAAC,GAAG0M,KAAK,EAAE1M,CAAC,GAAG0M,KAAK,GAAGmQ,KAAK,EAAE7c,CAAC,EAAE,EAAE;MAC1C,MAAM+kB,OAAO,GAAGnJ,KAAK,GAAG;QAAC6I,IAAI;QAAEO,IAAI,EAAEP;MAAI,CAAC,GAAG7X,EAAE,CAACqY,wBAAwB,CAACjlB,CAAC,CAAC;MAC3E,MAAMklB,OAAO,GAAGtY,EAAE,CAACuY,wBAAwB,CAACnlB,CAAC,EAAE6iB,KAAK,CAAC;MACrD,MAAMrQ,UAAU,GAAG;QACjBmS,UAAU;QACVF,IAAI,EAAEM,OAAO,CAACN,IAAI;QAClB3hB,CAAC,EAAE6hB,UAAU,GAAGI,OAAO,CAACC,IAAI,GAAGE,OAAO,CAACE,MAAM;QAC7CpiB,CAAC,EAAE2hB,UAAU,GAAGO,OAAO,CAACE,MAAM,GAAGL,OAAO,CAACC,IAAI;QAC7CK,MAAM,EAAEV,UAAU,GAAGO,OAAO,CAAC9Q,IAAI,GAAGzI,SAAS;QAC7C2Z,KAAK,EAAEX,UAAU,GAAGhZ,SAAS,GAAGuZ,OAAO,CAAC9Q;MAC1C,CAAC;MACD,IAAIiM,cAAc,EAAE;QAClB7N,UAAU,CAACkB,OAAO,GAAG4M,aAAa,IAAI1T,EAAE,CAACsS,yBAAyB,CAAClf,CAAC,EAAEgW,IAAI,CAAC;MAC7E;MACApJ,EAAE,CAAC4T,aAAa,CAACgE,IAAI,CAACxkB,CAAC,CAAC,EAAEA,CAAC,EAAEwS,UAAU,EAAEwD,IAAI,CAAC;IAChD;EACF;EACAuP,UAAUA,CAACC,IAAI,EAAE1M,SAAS,EAAE;IAC1B,MAAMlM,EAAE,GAAG,IAAI;IACf,MAAM4J,IAAI,GAAG5J,EAAE,CAACgL,WAAW;IAC3B,MAAME,MAAM,GAAGtB,IAAI,CAACsB,MAAM;IAC1B,MAAMtC,QAAQ,GAAGsC,MAAM,CAACoK,uBAAuB,CAACtV,EAAE,CAAC+M,KAAK,CAAC;IACzD,MAAMlD,OAAO,GAAGqB,MAAM,CAACpE,OAAO,CAAC+C,OAAO;IACtC,MAAMf,IAAI,GAAGF,QAAQ,CAACvI,MAAM;IAC5B,MAAMoK,MAAM,GAAG,EAAE;IACjB,IAAIrX,CAAC,EAAEwN,IAAI;IACX,KAAKxN,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG0V,IAAI,EAAE,EAAE1V,CAAC,EAAE;MACzBwN,IAAI,GAAGgI,QAAQ,CAACxV,CAAC,CAAC;MAClB,IAAI,OAAO8Y,SAAS,KAAK,WAAW,EAAE;QACpC,MAAM2M,GAAG,GAAGjY,IAAI,CAACkK,UAAU,CAACgG,SAAS,CAAC5E,SAAS,CAAC,CAC9CtL,IAAI,CAACkK,UAAU,CAACE,WAAW,CAACG,MAAM,CAACE,IAAI,CACxC;QACD,IAAI5W,aAAa,CAACokB,GAAG,CAAC,IAAIC,KAAK,CAACD,GAAG,CAAC,EAAE;UACpC;QACF;MACF;MACA,IAAIhP,OAAO,KAAK,KAAK,IAAIY,MAAM,CAACsO,OAAO,CAACnY,IAAI,CAACqI,KAAK,CAAC,KAAK,CAAC,CAAC,IAC3DY,OAAO,KAAK9K,SAAS,IAAI6B,IAAI,CAACqI,KAAK,KAAKlK,SAAU,EAAE;QACjD0L,MAAM,CAAC/I,IAAI,CAACd,IAAI,CAACqI,KAAK,CAAC;MACzB;MACA,IAAIrI,IAAI,CAACmI,KAAK,KAAK6P,IAAI,EAAE;QACvB;MACF;IACF;IACA,IAAI,CAACnO,MAAM,CAACpK,MAAM,EAAE;MAClBoK,MAAM,CAAC/I,IAAI,CAAC3C,SAAS,CAAC;IACxB;IACA,OAAO0L,MAAM;EACf;EACAuO,cAAcA,CAACjQ,KAAK,EAAE;IACpB,OAAO,IAAI,CAAC4P,UAAU,CAAC5Z,SAAS,EAAEgK,KAAK,CAAC,CAAC1I,MAAM;EACjD;EACA4Y,cAAcA,CAAC5P,YAAY,EAAE1D,IAAI,EAAE;IACjC,MAAM8E,MAAM,GAAG,IAAI,CAACkO,UAAU,CAACtP,YAAY,CAAC;IAC5C,MAAMN,KAAK,GAAIpD,IAAI,KAAK5G,SAAS,GAC7B0L,MAAM,CAACsO,OAAO,CAACpT,IAAI,CAAC,GACpB,CAAC,CAAC;IACN,OAAQoD,KAAK,KAAK,CAAC,CAAC,GAChB0B,MAAM,CAACpK,MAAM,GAAG,CAAC,GACjB0I,KAAK;EACX;EACAkP,SAASA,CAAA,EAAG;IACV,MAAMjY,EAAE,GAAG,IAAI;IACf,MAAM+H,IAAI,GAAG/H,EAAE,CAAC8G,OAAO;IACvB,MAAM8C,IAAI,GAAG5J,EAAE,CAACgL,WAAW;IAC3B,MAAME,MAAM,GAAGtB,IAAI,CAACsB,MAAM;IAC1B,MAAMuL,MAAM,GAAG,EAAE;IACjB,IAAIrjB,CAAC,EAAE0V,IAAI;IACX,KAAK1V,CAAC,GAAG,CAAC,EAAE0V,IAAI,GAAGc,IAAI,CAACJ,IAAI,CAACnJ,MAAM,EAAEjN,CAAC,GAAG0V,IAAI,EAAE,EAAE1V,CAAC,EAAE;MAClDqjB,MAAM,CAAC/U,IAAI,CAACwJ,MAAM,CAAC2K,gBAAgB,CAAC7V,EAAE,CAAC8Q,SAAS,CAAC1d,CAAC,CAAC,CAAC8X,MAAM,CAACG,IAAI,CAAC,EAAEjY,CAAC,CAAC,CAAC;IACvE;IACA,MAAMgjB,YAAY,GAAGrO,IAAI,CAACqO,YAAY;IACtC,MAAMvW,GAAG,GAAGuW,YAAY,IAAIZ,oBAAoB,CAACtK,MAAM,CAAC;IACxD,OAAO;MACLrL,GAAG;MACH4W,MAAM;MACN3W,KAAK,EAAEoL,MAAM,CAACgO,WAAW;MACzBjR,GAAG,EAAEiD,MAAM,CAACiO,SAAS;MACrBjD,UAAU,EAAElW,EAAE,CAACgZ,cAAc,CAAC,CAAC;MAC/BnR,KAAK,EAAEqD,MAAM;MACbkO,OAAO,EAAErR,IAAI,CAACqR,OAAO;MACrB/C,KAAK,EAAED,YAAY,GAAG,CAAC,GAAGrO,IAAI,CAACuO,kBAAkB,GAAGvO,IAAI,CAACwO;IAC3D,CAAC;EACH;EACA8B,wBAAwBA,CAACtP,KAAK,EAAE;IAC9B,MAAM/I,EAAE,GAAG,IAAI;IACf,MAAM;MAACmL,MAAM;MAAEuC;IAAQ,CAAC,GAAG1N,EAAE,CAACgL,WAAW;IACzC,MAAM;MAAC6M,IAAI,EAAEwB,SAAS;MAAEC;IAAY,CAAC,GAAGtZ,EAAE,CAAC8G,OAAO;IAClD,MAAMiE,MAAM,GAAG/K,EAAE,CAAC8Q,SAAS,CAAC/H,KAAK,CAAC;IAClC,MAAMwO,MAAM,GAAGxM,MAAM,CAACoM,OAAO;IAC7B,MAAMoC,QAAQ,GAAGjC,UAAU,CAACC,MAAM,CAAC;IACnC,IAAIhQ,KAAK,GAAGwD,MAAM,CAACI,MAAM,CAACE,IAAI,CAAC;IAC/B,IAAIvL,KAAK,GAAG,CAAC;IACb,IAAIO,MAAM,GAAGqN,QAAQ,GAAG1N,EAAE,CAACgJ,UAAU,CAACmC,MAAM,EAAEJ,MAAM,EAAE2C,QAAQ,CAAC,GAAGnG,KAAK;IACvE,IAAI6Q,IAAI,EAAE5Q,IAAI;IACd,IAAInH,MAAM,KAAKkH,KAAK,EAAE;MACpBzH,KAAK,GAAGO,MAAM,GAAGkH,KAAK;MACtBlH,MAAM,GAAGkH,KAAK;IAChB;IACA,IAAIgS,QAAQ,EAAE;MACZhS,KAAK,GAAGgQ,MAAM,CAACN,QAAQ;MACvB5W,MAAM,GAAGkX,MAAM,CAACL,MAAM,GAAGK,MAAM,CAACN,QAAQ;MACxC,IAAI1P,KAAK,KAAK,CAAC,IAAIhT,IAAI,CAACgT,KAAK,CAAC,KAAKhT,IAAI,CAACgjB,MAAM,CAACL,MAAM,CAAC,EAAE;QACtDpX,KAAK,GAAG,CAAC;MACX;MACAA,KAAK,IAAIyH,KAAK;IAChB;IACA,MAAMwP,UAAU,GAAG,CAACtiB,aAAa,CAAC4kB,SAAS,CAAC,IAAI,CAACE,QAAQ,GAAGF,SAAS,GAAGvZ,KAAK;IAC7E,IAAI+X,IAAI,GAAG1M,MAAM,CAAC0K,gBAAgB,CAACkB,UAAU,CAAC;IAC9C,IAAI,IAAI,CAAC9X,KAAK,CAACua,iBAAiB,CAACzQ,KAAK,CAAC,EAAE;MACvCqP,IAAI,GAAGjN,MAAM,CAAC0K,gBAAgB,CAAC/V,KAAK,GAAGO,MAAM,CAAC;IAChD,CAAC,MAAM;MACL+X,IAAI,GAAGP,IAAI;IACb;IACArQ,IAAI,GAAG4Q,IAAI,GAAGP,IAAI;IAClB,IAAIyB,YAAY,KAAKva,SAAS,IAAIa,IAAI,CAACgW,GAAG,CAACpO,IAAI,CAAC,GAAG8R,YAAY,EAAE;MAC/D9R,IAAI,GAAGA,IAAI,GAAG,CAAC,GAAG,CAAC8R,YAAY,GAAGA,YAAY;MAC9C,IAAI/R,KAAK,KAAK,CAAC,EAAE;QACfsQ,IAAI,IAAIrQ,IAAI,GAAG,CAAC;MAClB;MACA4Q,IAAI,GAAGP,IAAI,GAAGrQ,IAAI;IACpB;IACA,MAAMiS,UAAU,GAAGJ,SAAS,IAAI,CAAC;IACjC,IAAIxB,IAAI,KAAK1M,MAAM,CAAC0K,gBAAgB,CAAC4D,UAAU,CAAC,EAAE;MAChD,MAAMC,QAAQ,GAAGvO,MAAM,CAACwO,oBAAoB,CAACF,UAAU,CAAC,GAAG,CAAC;MAC5D,IAAIjS,IAAI,GAAG,CAAC,EAAE;QACZqQ,IAAI,IAAI6B,QAAQ;QAChBlS,IAAI,IAAIkS,QAAQ;MAClB,CAAC,MAAM,IAAIlS,IAAI,GAAG,CAAC,EAAE;QACnBqQ,IAAI,IAAI6B,QAAQ;QAChBlS,IAAI,IAAIkS,QAAQ;MAClB;IACF;IACA,OAAO;MACLlS,IAAI;MACJqQ,IAAI;MACJO,IAAI;MACJI,MAAM,EAAEJ,IAAI,GAAG5Q,IAAI,GAAG;IACxB,CAAC;EACH;EACA+Q,wBAAwBA,CAACxP,KAAK,EAAEkN,KAAK,EAAE;IACrC,MAAMjW,EAAE,GAAG,IAAI;IACf,MAAM6H,KAAK,GAAGoO,KAAK,CAACpO,KAAK;IACzB,MAAMf,OAAO,GAAG9G,EAAE,CAAC8G,OAAO;IAC1B,MAAM8S,eAAe,GAAGjmB,cAAc,CAACmT,OAAO,CAAC8S,eAAe,EAAEC,QAAQ,CAAC;IACzE,IAAIrB,MAAM,EAAEhR,IAAI;IAChB,IAAIyO,KAAK,CAACmD,OAAO,EAAE;MACjB,MAAMlD,UAAU,GAAGpP,OAAO,CAACgT,QAAQ,GAAG9Z,EAAE,CAACgZ,cAAc,CAACjQ,KAAK,CAAC,GAAGkN,KAAK,CAACC,UAAU;MACjF,MAAMjF,KAAK,GAAGnK,OAAO,CAACsP,YAAY,KAAK,MAAM,GACzCM,yBAAyB,CAAC3N,KAAK,EAAEkN,KAAK,EAAEnP,OAAO,EAAEoP,UAAU,CAAC,GAC5DF,wBAAwB,CAACjN,KAAK,EAAEkN,KAAK,EAAEnP,OAAO,EAAEoP,UAAU,CAAC;MAC/D,MAAM6D,UAAU,GAAG/Z,EAAE,CAACiZ,cAAc,CAACjZ,EAAE,CAAC+I,KAAK,EAAE/I,EAAE,CAACgL,WAAW,CAAC/B,KAAK,CAAC;MACpEuP,MAAM,GAAGvH,KAAK,CAACnR,KAAK,GAAImR,KAAK,CAACuF,KAAK,GAAGuD,UAAW,GAAI9I,KAAK,CAACuF,KAAK,GAAG,CAAE;MACrEhP,IAAI,GAAG5H,IAAI,CAACC,GAAG,CAAC+Z,eAAe,EAAE3I,KAAK,CAACuF,KAAK,GAAGvF,KAAK,CAACoF,KAAK,CAAC;IAC7D,CAAC,MAAM;MACLmC,MAAM,GAAG3Q,KAAK,CAACgO,gBAAgB,CAAC7V,EAAE,CAAC8Q,SAAS,CAAC/H,KAAK,CAAC,CAAClB,KAAK,CAACwD,IAAI,CAAC,EAAEtC,KAAK,CAAC;MACvEvB,IAAI,GAAG5H,IAAI,CAACC,GAAG,CAAC+Z,eAAe,EAAE3D,KAAK,CAACpW,GAAG,GAAGoW,KAAK,CAACI,KAAK,CAAC;IAC3D;IACA,OAAO;MACLwB,IAAI,EAAEW,MAAM,GAAGhR,IAAI,GAAG,CAAC;MACvB4Q,IAAI,EAAEI,MAAM,GAAGhR,IAAI,GAAG,CAAC;MACvBgR,MAAM;MACNhR;IACF,CAAC;EACH;EACA7G,IAAIA,CAAA,EAAG;IACL,MAAMX,EAAE,GAAG,IAAI;IACf,MAAMf,KAAK,GAAGe,EAAE,CAACf,KAAK;IACtB,MAAM2K,IAAI,GAAG5J,EAAE,CAACgL,WAAW;IAC3B,MAAMG,MAAM,GAAGvB,IAAI,CAACuB,MAAM;IAC1B,MAAM6O,KAAK,GAAGpQ,IAAI,CAACJ,IAAI;IACvB,MAAMV,IAAI,GAAGkR,KAAK,CAAC3Z,MAAM;IACzB,IAAIjN,CAAC,GAAG,CAAC;IACTuB,QAAQ,CAACsK,KAAK,CAAC2N,GAAG,EAAE3N,KAAK,CAACkT,SAAS,CAAC;IACpC,OAAO/e,CAAC,GAAG0V,IAAI,EAAE,EAAE1V,CAAC,EAAE;MACpB,IAAI4M,EAAE,CAAC8Q,SAAS,CAAC1d,CAAC,CAAC,CAAC+X,MAAM,CAACE,IAAI,CAAC,KAAK,IAAI,EAAE;QACzC2O,KAAK,CAAC5mB,CAAC,CAAC,CAACuN,IAAI,CAACX,EAAE,CAAC2M,IAAI,CAAC;MACxB;IACF;IACA9X,UAAU,CAACoK,KAAK,CAAC2N,GAAG,CAAC;EACvB;AACF;AACA4K,aAAa,CAACvN,EAAE,GAAG,KAAK;AACxBuN,aAAa,CAAC/jB,QAAQ,GAAG;EACvB2b,kBAAkB,EAAE,KAAK;EACzBqD,eAAe,EAAE,KAAK;EACtB6D,kBAAkB,EAAE,GAAG;EACvBC,aAAa,EAAE,GAAG;EAClB6C,OAAO,EAAE,IAAI;EACbrT,UAAU,EAAE;IACVd,OAAO,EAAE;MACP7F,IAAI,EAAE,QAAQ;MACdwG,UAAU,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,MAAM,EAAE,OAAO,EAAE,QAAQ;IAClD;EACF;AACF,CAAC;AACD4R,aAAa,CAACre,SAAS,GAAG;EACxB8gB,WAAW,EAAE;IACX7Q,IAAI,EAAE;EACR,CAAC;EACDqC,MAAM,EAAE;IACNyO,OAAO,EAAE;MACP9a,IAAI,EAAE,UAAU;MAChB+a,MAAM,EAAE,IAAI;MACZC,IAAI,EAAE;QACJD,MAAM,EAAE;MACV;IACF,CAAC;IACDE,OAAO,EAAE;MACPjb,IAAI,EAAE,QAAQ;MACdkb,WAAW,EAAE;IACf;EACF;AACF,CAAC;AAED,MAAMC,gBAAgB,SAAS7N,iBAAiB,CAAC;EAC/Cc,UAAUA,CAAA,EAAG;IACX,IAAI,CAACF,mBAAmB,GAAG,IAAI;IAC/B,KAAK,CAACE,UAAU,CAAC,CAAC;EACpB;EACA8C,eAAeA,CAAC1G,IAAI,EAAEJ,IAAI,EAAE1J,KAAK,EAAEmQ,KAAK,EAAE;IACxC,MAAM;MAAC9H,MAAM;MAAEC;IAAM,CAAC,GAAGwB,IAAI;IAC7B,MAAM;MAACgH,QAAQ,GAAG,GAAG;MAAEC,QAAQ,GAAG;IAAG,CAAC,GAAG,IAAI,CAAC7D,QAAQ;IACtD,MAAMjC,MAAM,GAAG,EAAE;IACjB,IAAI3X,CAAC,EAAE0V,IAAI,EAAElI,IAAI;IACjB,KAAKxN,CAAC,GAAG0M,KAAK,EAAEgJ,IAAI,GAAGhJ,KAAK,GAAGmQ,KAAK,EAAE7c,CAAC,GAAG0V,IAAI,EAAE,EAAE1V,CAAC,EAAE;MACnDwN,IAAI,GAAG4I,IAAI,CAACpW,CAAC,CAAC;MACd2X,MAAM,CAACrJ,IAAI,CAAC;QACVxL,CAAC,EAAEiS,MAAM,CAAC6H,KAAK,CAAC/b,gBAAgB,CAAC2M,IAAI,EAAEgQ,QAAQ,CAAC,EAAExd,CAAC,CAAC;QACpDgD,CAAC,EAAEgS,MAAM,CAAC4H,KAAK,CAAC/b,gBAAgB,CAAC2M,IAAI,EAAEiQ,QAAQ,CAAC,EAAEzd,CAAC,CAAC;QACpD+jB,OAAO,EAAEvW,IAAI,IAAIA,IAAI,CAAChO,CAAC,IAAI,CAACgO,IAAI,CAAChO;MACnC,CAAC,CAAC;IACJ;IACA,OAAOmY,MAAM;EACf;EACA4G,cAAcA,CAAA,EAAG;IACf,MAAM;MAACnI,IAAI;MAAE6C;IAAO,CAAC,GAAG,IAAI,CAACrB,WAAW;IACxC,IAAIhJ,GAAG,GAAG,CAAC;IACX,KAAK,IAAI5O,CAAC,GAAGoW,IAAI,CAACnJ,MAAM,GAAG,CAAC,EAAEjN,CAAC,IAAI,CAAC,EAAE,EAAEA,CAAC,EAAE;MACzC4O,GAAG,GAAGpC,IAAI,CAACoC,GAAG,CAACA,GAAG,EAAEwH,IAAI,CAACpW,CAAC,CAAC,CAACoU,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE6E,OAAO,CAACjZ,CAAC,CAAC,CAAC+jB,OAAO,CAAC;IAC7D;IACA,OAAOnV,GAAG,GAAG,CAAC,IAAIA,GAAG;EACvB;EACA4P,gBAAgBA,CAAC7I,KAAK,EAAE;IACtB,MAAM/I,EAAE,GAAG,IAAI;IACf,MAAM4J,IAAI,GAAG5J,EAAE,CAACgL,WAAW;IAC3B,MAAM;MAAC7C,MAAM;MAAEC;IAAM,CAAC,GAAGwB,IAAI;IAC7B,MAAMmB,MAAM,GAAG/K,EAAE,CAAC8Q,SAAS,CAAC/H,KAAK,CAAC;IAClC,MAAM7S,CAAC,GAAGiS,MAAM,CAAC2J,gBAAgB,CAAC/G,MAAM,CAAC7U,CAAC,CAAC;IAC3C,MAAME,CAAC,GAAGgS,MAAM,CAAC0J,gBAAgB,CAAC/G,MAAM,CAAC3U,CAAC,CAAC;IAC3C,MAAMxD,CAAC,GAAGmY,MAAM,CAACoM,OAAO;IACxB,OAAO;MACLtF,KAAK,EAAEjI,IAAI,CAACiI,KAAK;MACjBtK,KAAK,EAAE,GAAG,GAAGrR,CAAC,GAAG,IAAI,GAAGE,CAAC,IAAIxD,CAAC,GAAG,IAAI,GAAGA,CAAC,GAAG,EAAE,CAAC,GAAG;IACpD,CAAC;EACH;EACA2R,MAAMA,CAAC6E,IAAI,EAAE;IACX,MAAMpJ,EAAE,GAAG,IAAI;IACf,MAAMwa,MAAM,GAAGxa,EAAE,CAACgL,WAAW,CAACxB,IAAI;IAClCxJ,EAAE,CAACyU,cAAc,CAAC+F,MAAM,EAAE,CAAC,EAAEA,MAAM,CAACna,MAAM,EAAE+I,IAAI,CAAC;EACnD;EACAqL,cAAcA,CAAC+F,MAAM,EAAE1a,KAAK,EAAEmQ,KAAK,EAAE7G,IAAI,EAAE;IACzC,MAAMpJ,EAAE,GAAG,IAAI;IACf,MAAMgP,KAAK,GAAG5F,IAAI,KAAK,OAAO;IAC9B,MAAM;MAACjB,MAAM;MAAEC;IAAM,CAAC,GAAGpI,EAAE,CAACgL,WAAW;IACvC,MAAMkN,SAAS,GAAGlY,EAAE,CAACsS,yBAAyB,CAACxS,KAAK,EAAEsJ,IAAI,CAAC;IAC3D,MAAMsK,aAAa,GAAG1T,EAAE,CAACwT,gBAAgB,CAAC0E,SAAS,CAAC;IACpD,MAAMzE,cAAc,GAAGzT,EAAE,CAACyT,cAAc,CAACrK,IAAI,EAAEsK,aAAa,CAAC;IAC7D,KAAK,IAAItgB,CAAC,GAAG0M,KAAK,EAAE1M,CAAC,GAAG0M,KAAK,GAAGmQ,KAAK,EAAE7c,CAAC,EAAE,EAAE;MAC1C,MAAMqnB,KAAK,GAAGD,MAAM,CAACpnB,CAAC,CAAC;MACvB,MAAM2X,MAAM,GAAG,CAACiE,KAAK,IAAIhP,EAAE,CAAC8Q,SAAS,CAAC1d,CAAC,CAAC;MACxC,MAAM8C,CAAC,GAAG8Y,KAAK,GAAG7G,MAAM,CAACuS,kBAAkB,CAAC,GAAG,CAAC,GAAGvS,MAAM,CAAC0N,gBAAgB,CAAC9K,MAAM,CAAC7U,CAAC,CAAC;MACpF,MAAME,CAAC,GAAG4Y,KAAK,GAAG5G,MAAM,CAAC0P,YAAY,CAAC,CAAC,GAAG1P,MAAM,CAACyN,gBAAgB,CAAC9K,MAAM,CAAC3U,CAAC,CAAC;MAC3E,MAAMwP,UAAU,GAAG;QACjB1P,CAAC;QACDE,CAAC;QACDukB,IAAI,EAAE7B,KAAK,CAAC5iB,CAAC,CAAC,IAAI4iB,KAAK,CAAC1iB,CAAC;MAC3B,CAAC;MACD,IAAIqd,cAAc,EAAE;QAClB7N,UAAU,CAACkB,OAAO,GAAG9G,EAAE,CAACsS,yBAAyB,CAAClf,CAAC,EAAEgW,IAAI,CAAC;QAC1D,IAAI4F,KAAK,EAAE;UACTpJ,UAAU,CAACkB,OAAO,CAAC8T,MAAM,GAAG,CAAC;QAC/B;MACF;MACA5a,EAAE,CAAC4T,aAAa,CAAC6G,KAAK,EAAErnB,CAAC,EAAEwS,UAAU,EAAEwD,IAAI,CAAC;IAC9C;IACApJ,EAAE,CAAC6T,mBAAmB,CAACH,aAAa,EAAEtK,IAAI,EAAE8O,SAAS,CAAC;EACxD;EACA5F,yBAAyBA,CAACvJ,KAAK,EAAEK,IAAI,EAAE;IACrC,MAAM2B,MAAM,GAAG,IAAI,CAAC+F,SAAS,CAAC/H,KAAK,CAAC;IACpC,IAAInC,MAAM,GAAG,KAAK,CAAC0L,yBAAyB,CAACvJ,KAAK,EAAEK,IAAI,CAAC;IACzD,IAAIxC,MAAM,CAACK,OAAO,EAAE;MAClBL,MAAM,GAAGxB,MAAM,CAACqC,MAAM,CAAC,CAAC,CAAC,EAAEb,MAAM,EAAE;QAACK,OAAO,EAAE;MAAK,CAAC,CAAC;IACtD;IACA,MAAM2T,MAAM,GAAGhU,MAAM,CAACgU,MAAM;IAC5B,IAAIxR,IAAI,KAAK,QAAQ,EAAE;MACrBxC,MAAM,CAACgU,MAAM,GAAG,CAAC;IACnB;IACAhU,MAAM,CAACgU,MAAM,IAAIjnB,cAAc,CAACoX,MAAM,IAAIA,MAAM,CAACoM,OAAO,EAAEyD,MAAM,CAAC;IACjE,OAAOhU,MAAM;EACf;AACF;AACA2T,gBAAgB,CAACtQ,EAAE,GAAG,QAAQ;AAC9BsQ,gBAAgB,CAAC9mB,QAAQ,GAAG;EAC1B2b,kBAAkB,EAAE,KAAK;EACzBqD,eAAe,EAAE,OAAO;EACxB1M,UAAU,EAAE;IACVd,OAAO,EAAE;MACP7F,IAAI,EAAE,QAAQ;MACdwG,UAAU,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,aAAa,EAAE,QAAQ;IAChD;EACF;AACF,CAAC;AACD2U,gBAAgB,CAACphB,SAAS,GAAG;EAC3BsS,MAAM,EAAE;IACNvV,CAAC,EAAE;MACDkJ,IAAI,EAAE;IACR,CAAC;IACDhJ,CAAC,EAAE;MACDgJ,IAAI,EAAE;IACR;EACF,CAAC;EACDyb,OAAO,EAAE;IACPC,OAAO,EAAE;MACPzb,SAAS,EAAE;QACT0b,KAAKA,CAAA,EAAG;UACN,OAAO,EAAE;QACX;MACF;IACF;EACF;AACF,CAAC;AAED,SAASC,iBAAiBA,CAACC,QAAQ,EAAEC,aAAa,EAAEC,MAAM,EAAE;EAC1D,IAAIC,MAAM,GAAG,CAAC;EACd,IAAIC,MAAM,GAAG,CAAC;EACd,IAAIC,OAAO,GAAG,CAAC;EACf,IAAIC,OAAO,GAAG,CAAC;EACf,IAAIL,aAAa,GAAG3lB,GAAG,EAAE;IACvB,MAAMimB,UAAU,GAAGP,QAAQ;IAC3B,MAAMQ,QAAQ,GAAGD,UAAU,GAAGN,aAAa;IAC3C,MAAMQ,MAAM,GAAG9b,IAAI,CAAC+b,GAAG,CAACH,UAAU,CAAC;IACnC,MAAMI,MAAM,GAAGhc,IAAI,CAACic,GAAG,CAACL,UAAU,CAAC;IACnC,MAAMM,IAAI,GAAGlc,IAAI,CAAC+b,GAAG,CAACF,QAAQ,CAAC;IAC/B,MAAMM,IAAI,GAAGnc,IAAI,CAACic,GAAG,CAACJ,QAAQ,CAAC;IAC/B,MAAMO,OAAO,GAAGA,CAACC,KAAK,EAAEnpB,CAAC,EAAEQ,CAAC,KAAKqC,aAAa,CAACsmB,KAAK,EAAET,UAAU,EAAEC,QAAQ,CAAC,GAAG,CAAC,GAAG7b,IAAI,CAACoC,GAAG,CAAClP,CAAC,EAAEA,CAAC,GAAGqoB,MAAM,EAAE7nB,CAAC,EAAEA,CAAC,GAAG6nB,MAAM,CAAC;IACxH,MAAMe,OAAO,GAAGA,CAACD,KAAK,EAAEnpB,CAAC,EAAEQ,CAAC,KAAKqC,aAAa,CAACsmB,KAAK,EAAET,UAAU,EAAEC,QAAQ,CAAC,GAAG,CAAC,CAAC,GAAG7b,IAAI,CAACC,GAAG,CAAC/M,CAAC,EAAEA,CAAC,GAAGqoB,MAAM,EAAE7nB,CAAC,EAAEA,CAAC,GAAG6nB,MAAM,CAAC;IACzH,MAAMgB,IAAI,GAAGH,OAAO,CAAC,CAAC,EAAEN,MAAM,EAAEI,IAAI,CAAC;IACrC,MAAMM,IAAI,GAAGJ,OAAO,CAACnmB,OAAO,EAAE+lB,MAAM,EAAEG,IAAI,CAAC;IAC3C,MAAMM,IAAI,GAAGH,OAAO,CAACnmB,EAAE,EAAE2lB,MAAM,EAAEI,IAAI,CAAC;IACtC,MAAMQ,IAAI,GAAGJ,OAAO,CAACnmB,EAAE,GAAGF,OAAO,EAAE+lB,MAAM,EAAEG,IAAI,CAAC;IAChDX,MAAM,GAAG,CAACe,IAAI,GAAGE,IAAI,IAAI,CAAC;IAC1BhB,MAAM,GAAG,CAACe,IAAI,GAAGE,IAAI,IAAI,CAAC;IAC1BhB,OAAO,GAAG,EAAEa,IAAI,GAAGE,IAAI,CAAC,GAAG,CAAC;IAC5Bd,OAAO,GAAG,EAAEa,IAAI,GAAGE,IAAI,CAAC,GAAG,CAAC;EAC9B;EACA,OAAO;IAAClB,MAAM;IAAEC,MAAM;IAAEC,OAAO;IAAEC;EAAO,CAAC;AAC3C;AACA,MAAMgB,kBAAkB,SAAS7P,iBAAiB,CAAC;EACjDjO,WAAWA,CAACQ,KAAK,EAAEoK,YAAY,EAAE;IAC/B,KAAK,CAACpK,KAAK,EAAEoK,YAAY,CAAC;IAC1B,IAAI,CAACiE,mBAAmB,GAAG,IAAI;IAC/B,IAAI,CAACkP,WAAW,GAAGzd,SAAS;IAC5B,IAAI,CAAC0d,WAAW,GAAG1d,SAAS;IAC5B,IAAI,CAACuc,OAAO,GAAGvc,SAAS;IACxB,IAAI,CAACwc,OAAO,GAAGxc,SAAS;EAC1B;EACA0O,UAAUA,CAAA,EAAG,CAAC;EACduC,KAAKA,CAAClQ,KAAK,EAAEmQ,KAAK,EAAE;IAClB,MAAMzG,IAAI,GAAG,IAAI,CAACqE,UAAU,CAAC,CAAC,CAACrE,IAAI;IACnC,MAAMI,IAAI,GAAG,IAAI,CAACoB,WAAW;IAC7B,IAAI5X,CAAC,EAAE0V,IAAI;IACX,KAAK1V,CAAC,GAAG0M,KAAK,EAAEgJ,IAAI,GAAGhJ,KAAK,GAAGmQ,KAAK,EAAE7c,CAAC,GAAG0V,IAAI,EAAE,EAAE1V,CAAC,EAAE;MACnDwW,IAAI,CAACyC,OAAO,CAACjZ,CAAC,CAAC,GAAG,CAACoW,IAAI,CAACpW,CAAC,CAAC;IAC5B;EACF;EACAspB,YAAYA,CAAA,EAAG;IACb,OAAOznB,SAAS,CAAC,IAAI,CAAC6R,OAAO,CAACmU,QAAQ,GAAG,EAAE,CAAC;EAC9C;EACA0B,iBAAiBA,CAAA,EAAG;IAClB,OAAO1nB,SAAS,CAAC,IAAI,CAAC6R,OAAO,CAACoU,aAAa,CAAC;EAC9C;EACA0B,mBAAmBA,CAAA,EAAG;IACpB,IAAI/c,GAAG,GAAGtK,GAAG;IACb,IAAIyM,GAAG,GAAG,CAACzM,GAAG;IACd,MAAMyK,EAAE,GAAG,IAAI;IACf,KAAK,IAAI5M,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG4M,EAAE,CAACf,KAAK,CAACuK,IAAI,CAACoF,QAAQ,CAACvO,MAAM,EAAE,EAAEjN,CAAC,EAAE;MACtD,IAAI4M,EAAE,CAACf,KAAK,CAAC4d,gBAAgB,CAACzpB,CAAC,CAAC,EAAE;QAChC,MAAM0X,UAAU,GAAG9K,EAAE,CAACf,KAAK,CAAC4P,cAAc,CAACzb,CAAC,CAAC,CAAC0X,UAAU;QACxD,MAAMmQ,QAAQ,GAAGnQ,UAAU,CAAC4R,YAAY,CAAC,CAAC;QAC1C,MAAMxB,aAAa,GAAGpQ,UAAU,CAAC6R,iBAAiB,CAAC,CAAC;QACpD9c,GAAG,GAAGD,IAAI,CAACC,GAAG,CAACA,GAAG,EAAEob,QAAQ,CAAC;QAC7BjZ,GAAG,GAAGpC,IAAI,CAACoC,GAAG,CAACA,GAAG,EAAEiZ,QAAQ,GAAGC,aAAa,CAAC;MAC/C;IACF;IACA,OAAO;MACLD,QAAQ,EAAEpb,GAAG;MACbqb,aAAa,EAAElZ,GAAG,GAAGnC;IACvB,CAAC;EACH;EACA0E,MAAMA,CAAC6E,IAAI,EAAE;IACX,MAAMpJ,EAAE,GAAG,IAAI;IACf,MAAMf,KAAK,GAAGe,EAAE,CAACf,KAAK;IACtB,MAAM;MAACkT;IAAS,CAAC,GAAGlT,KAAK;IACzB,MAAM2K,IAAI,GAAG5J,EAAE,CAACgL,WAAW;IAC3B,MAAM8R,IAAI,GAAGlT,IAAI,CAACJ,IAAI;IACtB,MAAMuT,OAAO,GAAG/c,EAAE,CAACgd,iBAAiB,CAAC,CAAC,GAAGhd,EAAE,CAACid,YAAY,CAACH,IAAI,CAAC;IAC9D,MAAMI,OAAO,GAAGtd,IAAI,CAACoC,GAAG,CAAC,CAACpC,IAAI,CAACC,GAAG,CAACsS,SAAS,CAACuG,KAAK,EAAEvG,SAAS,CAACsG,MAAM,CAAC,GAAGsE,OAAO,IAAI,CAAC,EAAE,CAAC,CAAC;IACxF,MAAM5B,MAAM,GAAGvb,IAAI,CAACC,GAAG,CAAC1K,YAAY,CAAC6K,EAAE,CAAC8G,OAAO,CAACqU,MAAM,EAAE+B,OAAO,CAAC,EAAE,CAAC,CAAC;IACpE,MAAMC,WAAW,GAAGnd,EAAE,CAACod,cAAc,CAACpd,EAAE,CAAC+I,KAAK,CAAC;IAC/C,MAAM;MAACmS,aAAa;MAAED;IAAQ,CAAC,GAAGjb,EAAE,CAAC4c,mBAAmB,CAAC,CAAC;IAC1D,MAAM;MAACxB,MAAM;MAAEC,MAAM;MAAEC,OAAO;MAAEC;IAAO,CAAC,GAAGP,iBAAiB,CAACC,QAAQ,EAAEC,aAAa,EAAEC,MAAM,CAAC;IAC7F,MAAMkC,QAAQ,GAAG,CAAClL,SAAS,CAACuG,KAAK,GAAGqE,OAAO,IAAI3B,MAAM;IACrD,MAAMkC,SAAS,GAAG,CAACnL,SAAS,CAACsG,MAAM,GAAGsE,OAAO,IAAI1B,MAAM;IACvD,MAAMkC,SAAS,GAAG3d,IAAI,CAACoC,GAAG,CAACpC,IAAI,CAACC,GAAG,CAACwd,QAAQ,EAAEC,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;IAChE,MAAMb,WAAW,GAAGpnB,WAAW,CAAC2K,EAAE,CAAC8G,OAAO,CAAC8T,MAAM,EAAE2C,SAAS,CAAC;IAC7D,MAAMf,WAAW,GAAG5c,IAAI,CAACoC,GAAG,CAACya,WAAW,GAAGtB,MAAM,EAAE,CAAC,CAAC;IACrD,MAAMqC,YAAY,GAAG,CAACf,WAAW,GAAGD,WAAW,IAAIxc,EAAE,CAACyd,6BAA6B,CAAC,CAAC;IACrFzd,EAAE,CAACsb,OAAO,GAAGA,OAAO,GAAGmB,WAAW;IAClCzc,EAAE,CAACub,OAAO,GAAGA,OAAO,GAAGkB,WAAW;IAClC7S,IAAI,CAAC8T,KAAK,GAAG1d,EAAE,CAAC2d,cAAc,CAAC,CAAC;IAChC3d,EAAE,CAACyc,WAAW,GAAGA,WAAW,GAAGe,YAAY,GAAGxd,EAAE,CAAC4d,oBAAoB,CAAC5d,EAAE,CAAC+I,KAAK,CAAC;IAC/E/I,EAAE,CAACwc,WAAW,GAAG5c,IAAI,CAACoC,GAAG,CAAChC,EAAE,CAACyc,WAAW,GAAGe,YAAY,GAAGL,WAAW,EAAE,CAAC,CAAC;IACzEnd,EAAE,CAACyU,cAAc,CAACqI,IAAI,EAAE,CAAC,EAAEA,IAAI,CAACzc,MAAM,EAAE+I,IAAI,CAAC;EAC/C;EACAyU,cAAcA,CAACzqB,CAAC,EAAE4b,KAAK,EAAE;IACvB,MAAMhP,EAAE,GAAG,IAAI;IACf,MAAM+H,IAAI,GAAG/H,EAAE,CAAC8G,OAAO;IACvB,MAAM8C,IAAI,GAAG5J,EAAE,CAACgL,WAAW;IAC3B,MAAMkQ,aAAa,GAAGlb,EAAE,CAAC2c,iBAAiB,CAAC,CAAC;IAC5C,IAAK3N,KAAK,IAAIjH,IAAI,CAACzC,SAAS,CAACwY,aAAa,IAAK,CAAC,IAAI,CAAC7e,KAAK,CAACua,iBAAiB,CAACpmB,CAAC,CAAC,IAAIwW,IAAI,CAACyC,OAAO,CAACjZ,CAAC,CAAC,KAAK,IAAI,EAAE;MAC3G,OAAO,CAAC;IACV;IACA,OAAO4M,EAAE,CAAC+d,sBAAsB,CAACnU,IAAI,CAACyC,OAAO,CAACjZ,CAAC,CAAC,GAAG8nB,aAAa,GAAG3lB,GAAG,CAAC;EACzE;EACAkf,cAAcA,CAACqI,IAAI,EAAEhd,KAAK,EAAEmQ,KAAK,EAAE7G,IAAI,EAAE;IACvC,MAAMpJ,EAAE,GAAG,IAAI;IACf,MAAMgP,KAAK,GAAG5F,IAAI,KAAK,OAAO;IAC9B,MAAMnK,KAAK,GAAGe,EAAE,CAACf,KAAK;IACtB,MAAMkT,SAAS,GAAGlT,KAAK,CAACkT,SAAS;IACjC,MAAMpK,IAAI,GAAG9I,KAAK,CAAC6H,OAAO;IAC1B,MAAMkX,aAAa,GAAGjW,IAAI,CAACzC,SAAS;IACpC,MAAM2Y,OAAO,GAAG,CAAC9L,SAAS,CAAC3J,IAAI,GAAG2J,SAAS,CAAC7J,KAAK,IAAI,CAAC;IACtD,MAAM4V,OAAO,GAAG,CAAC/L,SAAS,CAAC9J,GAAG,GAAG8J,SAAS,CAAC5J,MAAM,IAAI,CAAC;IACtD,MAAM4V,YAAY,GAAGnP,KAAK,IAAIgP,aAAa,CAACG,YAAY;IACxD,MAAM3B,WAAW,GAAG2B,YAAY,GAAG,CAAC,GAAGne,EAAE,CAACwc,WAAW;IACrD,MAAMC,WAAW,GAAG0B,YAAY,GAAG,CAAC,GAAGne,EAAE,CAACyc,WAAW;IACrD,MAAMvE,SAAS,GAAGlY,EAAE,CAACsS,yBAAyB,CAACxS,KAAK,EAAEsJ,IAAI,CAAC;IAC3D,MAAMsK,aAAa,GAAG1T,EAAE,CAACwT,gBAAgB,CAAC0E,SAAS,CAAC;IACpD,MAAMzE,cAAc,GAAGzT,EAAE,CAACyT,cAAc,CAACrK,IAAI,EAAEsK,aAAa,CAAC;IAC7D,IAAI8H,UAAU,GAAGxb,EAAE,CAAC0c,YAAY,CAAC,CAAC;IAClC,IAAItpB,CAAC;IACL,KAAKA,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG0M,KAAK,EAAE,EAAE1M,CAAC,EAAE;MAC1BooB,UAAU,IAAIxb,EAAE,CAAC6d,cAAc,CAACzqB,CAAC,EAAE4b,KAAK,CAAC;IAC3C;IACA,KAAK5b,CAAC,GAAG0M,KAAK,EAAE1M,CAAC,GAAG0M,KAAK,GAAGmQ,KAAK,EAAE,EAAE7c,CAAC,EAAE;MACtC,MAAM8nB,aAAa,GAAGlb,EAAE,CAAC6d,cAAc,CAACzqB,CAAC,EAAE4b,KAAK,CAAC;MACjD,MAAMoP,GAAG,GAAGtB,IAAI,CAAC1pB,CAAC,CAAC;MACnB,MAAMwS,UAAU,GAAG;QACjB1P,CAAC,EAAE+nB,OAAO,GAAGje,EAAE,CAACsb,OAAO;QACvBllB,CAAC,EAAE8nB,OAAO,GAAGle,EAAE,CAACub,OAAO;QACvBC,UAAU;QACVC,QAAQ,EAAED,UAAU,GAAGN,aAAa;QACpCA,aAAa;QACbuB,WAAW;QACXD;MACF,CAAC;MACD,IAAI/I,cAAc,EAAE;QAClB7N,UAAU,CAACkB,OAAO,GAAG4M,aAAa,IAAI1T,EAAE,CAACsS,yBAAyB,CAAClf,CAAC,EAAEgW,IAAI,CAAC;MAC7E;MACAoS,UAAU,IAAIN,aAAa;MAC3Blb,EAAE,CAAC4T,aAAa,CAACwK,GAAG,EAAEhrB,CAAC,EAAEwS,UAAU,EAAEwD,IAAI,CAAC;IAC5C;IACApJ,EAAE,CAAC6T,mBAAmB,CAACH,aAAa,EAAEtK,IAAI,EAAE8O,SAAS,CAAC;EACxD;EACAyF,cAAcA,CAAA,EAAG;IACf,MAAM/T,IAAI,GAAG,IAAI,CAACoB,WAAW;IAC7B,MAAMqT,QAAQ,GAAGzU,IAAI,CAACJ,IAAI;IAC1B,IAAIkU,KAAK,GAAG,CAAC;IACb,IAAItqB,CAAC;IACL,KAAKA,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGirB,QAAQ,CAAChe,MAAM,EAAEjN,CAAC,EAAE,EAAE;MACpC,MAAMmU,KAAK,GAAGqC,IAAI,CAACyC,OAAO,CAACjZ,CAAC,CAAC;MAC7B,IAAImU,KAAK,KAAK,IAAI,IAAI,CAACuR,KAAK,CAACvR,KAAK,CAAC,IAAI,IAAI,CAACtI,KAAK,CAACua,iBAAiB,CAACpmB,CAAC,CAAC,EAAE;QACtEsqB,KAAK,IAAI9d,IAAI,CAACgW,GAAG,CAACrO,KAAK,CAAC;MAC1B;IACF;IACA,OAAOmW,KAAK;EACd;EACAK,sBAAsBA,CAACxW,KAAK,EAAE;IAC5B,MAAMmW,KAAK,GAAG,IAAI,CAAC1S,WAAW,CAAC0S,KAAK;IACpC,IAAIA,KAAK,GAAG,CAAC,IAAI,CAAC5E,KAAK,CAACvR,KAAK,CAAC,EAAE;MAC9B,OAAOhS,GAAG,IAAIqK,IAAI,CAACgW,GAAG,CAACrO,KAAK,CAAC,GAAGmW,KAAK,CAAC;IACxC;IACA,OAAO,CAAC;EACV;EACA9L,gBAAgBA,CAAC7I,KAAK,EAAE;IACtB,MAAM/I,EAAE,GAAG,IAAI;IACf,MAAM4J,IAAI,GAAG5J,EAAE,CAACgL,WAAW;IAC3B,MAAM/L,KAAK,GAAGe,EAAE,CAACf,KAAK;IACtB,MAAMwR,MAAM,GAAGxR,KAAK,CAACuK,IAAI,CAACiH,MAAM,IAAI,EAAE;IACtC,MAAMlJ,KAAK,GAAG9R,YAAY,CAACmU,IAAI,CAACyC,OAAO,CAACtD,KAAK,CAAC,EAAE9J,KAAK,CAAC6H,OAAO,CAACwX,MAAM,CAAC;IACrE,OAAO;MACLzM,KAAK,EAAEpB,MAAM,CAAC1H,KAAK,CAAC,IAAI,EAAE;MAC1BxB;IACF,CAAC;EACH;EACAyV,iBAAiBA,CAACF,IAAI,EAAE;IACtB,MAAM9c,EAAE,GAAG,IAAI;IACf,IAAIgC,GAAG,GAAG,CAAC;IACX,MAAM/C,KAAK,GAAGe,EAAE,CAACf,KAAK;IACtB,IAAI7L,CAAC,EAAE0V,IAAI,EAAEc,IAAI,EAAEkB,UAAU,EAAEhE,OAAO;IACtC,IAAI,CAACgW,IAAI,EAAE;MACT,KAAK1pB,CAAC,GAAG,CAAC,EAAE0V,IAAI,GAAG7J,KAAK,CAACuK,IAAI,CAACoF,QAAQ,CAACvO,MAAM,EAAEjN,CAAC,GAAG0V,IAAI,EAAE,EAAE1V,CAAC,EAAE;QAC5D,IAAI6L,KAAK,CAAC4d,gBAAgB,CAACzpB,CAAC,CAAC,EAAE;UAC7BwW,IAAI,GAAG3K,KAAK,CAAC4P,cAAc,CAACzb,CAAC,CAAC;UAC9B0pB,IAAI,GAAGlT,IAAI,CAACJ,IAAI;UAChBsB,UAAU,GAAGlB,IAAI,CAACkB,UAAU;UAC5B,IAAIA,UAAU,KAAK9K,EAAE,EAAE;YACrB8K,UAAU,CAACxE,SAAS,CAAC,CAAC;UACxB;UACA;QACF;MACF;IACF;IACA,IAAI,CAACwW,IAAI,EAAE;MACT,OAAO,CAAC;IACV;IACA,KAAK1pB,CAAC,GAAG,CAAC,EAAE0V,IAAI,GAAGgU,IAAI,CAACzc,MAAM,EAAEjN,CAAC,GAAG0V,IAAI,EAAE,EAAE1V,CAAC,EAAE;MAC7C0T,OAAO,GAAGgE,UAAU,CAACwH,yBAAyB,CAAClf,CAAC,CAAC;MACjD,IAAI0T,OAAO,CAACyX,WAAW,KAAK,OAAO,EAAE;QACnCvc,GAAG,GAAGpC,IAAI,CAACoC,GAAG,CAACA,GAAG,EAAE8E,OAAO,CAAC0X,WAAW,IAAI,CAAC,EAAE1X,OAAO,CAAC2X,gBAAgB,IAAI,CAAC,CAAC;MAC9E;IACF;IACA,OAAOzc,GAAG;EACZ;EACAib,YAAYA,CAACH,IAAI,EAAE;IACjB,IAAI9a,GAAG,GAAG,CAAC;IACX,KAAK,IAAI5O,CAAC,GAAG,CAAC,EAAE0V,IAAI,GAAGgU,IAAI,CAACzc,MAAM,EAAEjN,CAAC,GAAG0V,IAAI,EAAE,EAAE1V,CAAC,EAAE;MACjD,MAAM0T,OAAO,GAAG,IAAI,CAACwL,yBAAyB,CAAClf,CAAC,CAAC;MACjD4O,GAAG,GAAGpC,IAAI,CAACoC,GAAG,CAACA,GAAG,EAAE8E,OAAO,CAACqT,MAAM,IAAI,CAAC,EAAErT,OAAO,CAAC4X,WAAW,IAAI,CAAC,CAAC;IACpE;IACA,OAAO1c,GAAG;EACZ;EACA4b,oBAAoBA,CAACvU,YAAY,EAAE;IACjC,IAAIsV,gBAAgB,GAAG,CAAC;IACxB,KAAK,IAAIvrB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGiW,YAAY,EAAE,EAAEjW,CAAC,EAAE;MACrC,IAAI,IAAI,CAAC6L,KAAK,CAAC4d,gBAAgB,CAACzpB,CAAC,CAAC,EAAE;QAClCurB,gBAAgB,IAAI,IAAI,CAACvB,cAAc,CAAChqB,CAAC,CAAC;MAC5C;IACF;IACA,OAAOurB,gBAAgB;EACzB;EACAvB,cAAcA,CAAC/T,YAAY,EAAE;IAC3B,OAAOzJ,IAAI,CAACoC,GAAG,CAACrO,cAAc,CAAC,IAAI,CAACsL,KAAK,CAACuK,IAAI,CAACoF,QAAQ,CAACvF,YAAY,CAAC,CAACuV,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EACtF;EACAnB,6BAA6BA,CAAA,EAAG;IAC9B,OAAO,IAAI,CAACG,oBAAoB,CAAC,IAAI,CAAC3e,KAAK,CAACuK,IAAI,CAACoF,QAAQ,CAACvO,MAAM,CAAC,IAAI,CAAC;EACxE;AACF;AACAkc,kBAAkB,CAACtS,EAAE,GAAG,UAAU;AAClCsS,kBAAkB,CAAC9oB,QAAQ,GAAG;EAC5B2b,kBAAkB,EAAE,KAAK;EACzBqD,eAAe,EAAE,KAAK;EACtBnN,SAAS,EAAE;IACTwY,aAAa,EAAE,IAAI;IACnBK,YAAY,EAAE;EAChB,CAAC;EACDpY,UAAU,EAAE;IACVd,OAAO,EAAE;MACP7F,IAAI,EAAE,QAAQ;MACdwG,UAAU,EAAE,CAAC,eAAe,EAAE,UAAU,EAAE,aAAa,EAAE,aAAa,EAAE,YAAY,EAAE,GAAG,EAAE,GAAG,EAAE,QAAQ,EAAE,aAAa;IACzH;EACF,CAAC;EACDuV,MAAM,EAAE,KAAK;EACbF,QAAQ,EAAE,CAAC;EACXC,aAAa,EAAE,GAAG;EAClBN,MAAM,EAAE,MAAM;EACdvM,SAAS,EAAE;AACb,CAAC;AACDkO,kBAAkB,CAACpjB,SAAS,GAAG;EAC7B0lB,WAAW,EAAE,CAAC;EACdhE,OAAO,EAAE;IACPiE,MAAM,EAAE;MACNrO,MAAM,EAAE;QACNsO,cAAcA,CAAC9f,KAAK,EAAE;UACpB,MAAMuK,IAAI,GAAGvK,KAAK,CAACuK,IAAI;UACvB,IAAIA,IAAI,CAACiH,MAAM,CAACpQ,MAAM,IAAImJ,IAAI,CAACoF,QAAQ,CAACvO,MAAM,EAAE;YAC9C,OAAOmJ,IAAI,CAACiH,MAAM,CAACuO,GAAG,CAAC,CAACnN,KAAK,EAAEze,CAAC,KAAK;cACnC,MAAMwW,IAAI,GAAG3K,KAAK,CAAC4P,cAAc,CAAC,CAAC,CAAC;cACpC,MAAMoQ,KAAK,GAAGrV,IAAI,CAACkB,UAAU,CAACsH,QAAQ,CAAChf,CAAC,CAAC;cACzC,OAAO;gBACL8rB,IAAI,EAAErN,KAAK;gBACXsN,SAAS,EAAEF,KAAK,CAACG,eAAe;gBAChCC,WAAW,EAAEJ,KAAK,CAACK,WAAW;gBAC9BC,SAAS,EAAEN,KAAK,CAACT,WAAW;gBAC5BgB,MAAM,EAAE,CAACvgB,KAAK,CAACua,iBAAiB,CAACpmB,CAAC,CAAC;gBACnC2V,KAAK,EAAE3V;cACT,CAAC;YACH,CAAC,CAAC;UACJ;UACA,OAAO,EAAE;QACX;MACF,CAAC;MACDqsB,OAAOA,CAACzsB,CAAC,EAAE0sB,UAAU,EAAEZ,MAAM,EAAE;QAC7BA,MAAM,CAAC7f,KAAK,CAAC0gB,oBAAoB,CAACD,UAAU,CAAC3W,KAAK,CAAC;QACnD+V,MAAM,CAAC7f,KAAK,CAACsF,MAAM,CAAC,CAAC;MACvB;IACF,CAAC;IACDuW,OAAO,EAAE;MACPzb,SAAS,EAAE;QACT0b,KAAKA,CAAA,EAAG;UACN,OAAO,EAAE;QACX,CAAC;QACDlJ,KAAKA,CAAC+N,WAAW,EAAE;UACjB,IAAIC,SAAS,GAAGD,WAAW,CAAC/N,KAAK;UACjC,MAAMtK,KAAK,GAAG,IAAI,GAAGqY,WAAW,CAACE,cAAc;UAC/C,IAAIvsB,OAAO,CAACssB,SAAS,CAAC,EAAE;YACtBA,SAAS,GAAGA,SAAS,CAACE,KAAK,CAAC,CAAC;YAC7BF,SAAS,CAAC,CAAC,CAAC,IAAItY,KAAK;UACvB,CAAC,MAAM;YACLsY,SAAS,IAAItY,KAAK;UACpB;UACA,OAAOsY,SAAS;QAClB;MACF;IACF;EACF;AACF,CAAC;AAED,MAAMG,cAAc,SAAStT,iBAAiB,CAAC;EAC7Cc,UAAUA,CAAA,EAAG;IACX,IAAI,CAACF,mBAAmB,GAAG,IAAI;IAC/B,KAAK,CAACE,UAAU,CAAC,CAAC;EACpB;EACAjJ,MAAMA,CAAC6E,IAAI,EAAE;IACX,MAAMpJ,EAAE,GAAG,IAAI;IACf,MAAM4J,IAAI,GAAG5J,EAAE,CAACgL,WAAW;IAC3B,MAAM;MAACe,OAAO,EAAEkU,IAAI;MAAEzW,IAAI,EAAEgR,MAAM,GAAG,EAAE;MAAE0F;IAAQ,CAAC,GAAGtW,IAAI;IACzD,MAAMuW,kBAAkB,GAAGngB,EAAE,CAACf,KAAK,CAAC0U,mBAAmB;IACvD,IAAI;MAAC7T,KAAK;MAAEmQ;IAAK,CAAC,GAAGmQ,+BAA+B,CAACxW,IAAI,EAAE4Q,MAAM,EAAE2F,kBAAkB,CAAC;IACtFngB,EAAE,CAACoN,UAAU,GAAGtN,KAAK;IACrBE,EAAE,CAACqN,UAAU,GAAG4C,KAAK;IACrB,IAAIoQ,kBAAkB,CAACzW,IAAI,CAAC,EAAE;MAC5B9J,KAAK,GAAG,CAAC;MACTmQ,KAAK,GAAGuK,MAAM,CAACna,MAAM;IACvB;IACA4f,IAAI,CAACK,UAAU,GAAG,CAAC,CAACJ,QAAQ,CAACI,UAAU;IACvCL,IAAI,CAACzF,MAAM,GAAGA,MAAM;IACpB,IAAIpR,IAAI,KAAK,QAAQ,EAAE;MACrB,MAAMtC,OAAO,GAAG9G,EAAE,CAACqS,4BAA4B,CAACjJ,IAAI,CAAC;MACrD,IAAI,CAACpJ,EAAE,CAAC8G,OAAO,CAACyZ,QAAQ,EAAE;QACxBzZ,OAAO,CAAC0X,WAAW,GAAG,CAAC;MACzB;MACAxe,EAAE,CAAC4T,aAAa,CAACqM,IAAI,EAAElhB,SAAS,EAAE;QAChCyhB,QAAQ,EAAE,CAACL,kBAAkB;QAC7BrZ;MACF,CAAC,EAAEsC,IAAI,CAAC;IACV;IACApJ,EAAE,CAACyU,cAAc,CAAC+F,MAAM,EAAE1a,KAAK,EAAEmQ,KAAK,EAAE7G,IAAI,CAAC;EAC/C;EACAqL,cAAcA,CAAC+F,MAAM,EAAE1a,KAAK,EAAEmQ,KAAK,EAAE7G,IAAI,EAAE;IACzC,MAAMpJ,EAAE,GAAG,IAAI;IACf,MAAMgP,KAAK,GAAG5F,IAAI,KAAK,OAAO;IAC9B,MAAM;MAACjB,MAAM;MAAEC,MAAM;MAAEsF;IAAQ,CAAC,GAAG1N,EAAE,CAACgL,WAAW;IACjD,MAAMkN,SAAS,GAAGlY,EAAE,CAACsS,yBAAyB,CAACxS,KAAK,EAAEsJ,IAAI,CAAC;IAC3D,MAAMsK,aAAa,GAAG1T,EAAE,CAACwT,gBAAgB,CAAC0E,SAAS,CAAC;IACpD,MAAMzE,cAAc,GAAGzT,EAAE,CAACyT,cAAc,CAACrK,IAAI,EAAEsK,aAAa,CAAC;IAC7D,MAAM+M,QAAQ,GAAGzgB,EAAE,CAAC8G,OAAO,CAAC2Z,QAAQ;IACpC,MAAMC,YAAY,GAAGzqB,QAAQ,CAACwqB,QAAQ,CAAC,GAAGA,QAAQ,GAAGpW,MAAM,CAACE,iBAAiB;IAC7E,MAAMoW,YAAY,GAAG3gB,EAAE,CAACf,KAAK,CAAC0U,mBAAmB,IAAI3E,KAAK,IAAI5F,IAAI,KAAK,MAAM;IAC7E,IAAIwX,UAAU,GAAG9gB,KAAK,GAAG,CAAC,IAAIE,EAAE,CAAC8Q,SAAS,CAAChR,KAAK,GAAG,CAAC,CAAC;IACrD,KAAK,IAAI1M,CAAC,GAAG0M,KAAK,EAAE1M,CAAC,GAAG0M,KAAK,GAAGmQ,KAAK,EAAE,EAAE7c,CAAC,EAAE;MAC1C,MAAMqnB,KAAK,GAAGD,MAAM,CAACpnB,CAAC,CAAC;MACvB,MAAM2X,MAAM,GAAG/K,EAAE,CAAC8Q,SAAS,CAAC1d,CAAC,CAAC;MAC9B,MAAMwS,UAAU,GAAG+a,YAAY,GAAGlG,KAAK,GAAG,CAAC,CAAC;MAC5C,MAAMvkB,CAAC,GAAG0P,UAAU,CAAC1P,CAAC,GAAGiS,MAAM,CAAC0N,gBAAgB,CAAC9K,MAAM,CAAC7U,CAAC,EAAE9C,CAAC,CAAC;MAC7D,MAAMgD,CAAC,GAAGwP,UAAU,CAACxP,CAAC,GAAG4Y,KAAK,GAAG5G,MAAM,CAAC0P,YAAY,CAAC,CAAC,GAAG1P,MAAM,CAACyN,gBAAgB,CAACnI,QAAQ,GAAG1N,EAAE,CAACgJ,UAAU,CAACZ,MAAM,EAAE2C,MAAM,EAAE2C,QAAQ,CAAC,GAAG3C,MAAM,CAAC3U,CAAC,EAAEhD,CAAC,CAAC;MAClJwS,UAAU,CAAC+U,IAAI,GAAG7B,KAAK,CAAC5iB,CAAC,CAAC,IAAI4iB,KAAK,CAAC1iB,CAAC,CAAC;MACtCwP,UAAU,CAAC1D,IAAI,GAAG9O,CAAC,GAAG,CAAC,IAAK2X,MAAM,CAAC7U,CAAC,GAAG0qB,UAAU,CAAC1qB,CAAC,GAAIwqB,YAAY;MACnE,IAAIjN,cAAc,EAAE;QAClB7N,UAAU,CAACkB,OAAO,GAAG4M,aAAa,IAAI1T,EAAE,CAACsS,yBAAyB,CAAClf,CAAC,EAAEgW,IAAI,CAAC;MAC7E;MACA,IAAI,CAACuX,YAAY,EAAE;QACjB3gB,EAAE,CAAC4T,aAAa,CAAC6G,KAAK,EAAErnB,CAAC,EAAEwS,UAAU,EAAEwD,IAAI,CAAC;MAC9C;MACAwX,UAAU,GAAG7V,MAAM;IACrB;IACA/K,EAAE,CAAC6T,mBAAmB,CAACH,aAAa,EAAEtK,IAAI,EAAE8O,SAAS,CAAC;EACxD;EACAvG,cAAcA,CAAA,EAAG;IACf,MAAM3R,EAAE,GAAG,IAAI;IACf,MAAM4J,IAAI,GAAG5J,EAAE,CAACgL,WAAW;IAC3B,MAAMe,OAAO,GAAGnC,IAAI,CAACmC,OAAO;IAC5B,MAAM8U,MAAM,GAAG9U,OAAO,CAACjF,OAAO,IAAIiF,OAAO,CAACjF,OAAO,CAAC0X,WAAW,IAAI,CAAC;IAClE,MAAMhV,IAAI,GAAGI,IAAI,CAACJ,IAAI,IAAI,EAAE;IAC5B,IAAI,CAACA,IAAI,CAACnJ,MAAM,EAAE;MAChB,OAAOwgB,MAAM;IACf;IACA,MAAMC,UAAU,GAAGtX,IAAI,CAAC,CAAC,CAAC,CAAChC,IAAI,CAACxH,EAAE,CAACsS,yBAAyB,CAAC,CAAC,CAAC,CAAC;IAChE,MAAMyO,SAAS,GAAGvX,IAAI,CAACA,IAAI,CAACnJ,MAAM,GAAG,CAAC,CAAC,CAACmH,IAAI,CAACxH,EAAE,CAACsS,yBAAyB,CAAC9I,IAAI,CAACnJ,MAAM,GAAG,CAAC,CAAC,CAAC;IAC3F,OAAOT,IAAI,CAACoC,GAAG,CAAC6e,MAAM,EAAEC,UAAU,EAAEC,SAAS,CAAC,GAAG,CAAC;EACpD;EACApgB,IAAIA,CAAA,EAAG;IACL,IAAI,CAACqK,WAAW,CAACe,OAAO,CAACiV,mBAAmB,CAAC,IAAI,CAAC/hB,KAAK,CAACkT,SAAS,CAAC;IAClE,KAAK,CAACxR,IAAI,CAAC,CAAC;EACd;AACF;AACAqf,cAAc,CAAC/V,EAAE,GAAG,MAAM;AAC1B+V,cAAc,CAACvsB,QAAQ,GAAG;EACxB2b,kBAAkB,EAAE,MAAM;EAC1BqD,eAAe,EAAE,OAAO;EACxB8N,QAAQ,EAAE,IAAI;EACdE,QAAQ,EAAE;AACZ,CAAC;AACDT,cAAc,CAAC7mB,SAAS,GAAG;EACzBsS,MAAM,EAAE;IACNyO,OAAO,EAAE;MACP9a,IAAI,EAAE;IACR,CAAC;IACDib,OAAO,EAAE;MACPjb,IAAI,EAAE;IACR;EACF;AACF,CAAC;AACD,SAASghB,+BAA+BA,CAACxW,IAAI,EAAE4Q,MAAM,EAAE2F,kBAAkB,EAAE;EACzE,MAAMc,UAAU,GAAGzG,MAAM,CAACna,MAAM;EAChC,IAAIP,KAAK,GAAG,CAAC;EACb,IAAImQ,KAAK,GAAGgR,UAAU;EACtB,IAAIrX,IAAI,CAACuG,OAAO,EAAE;IAChB,MAAM;MAACjF,MAAM;MAAEmB;IAAO,CAAC,GAAGzC,IAAI;IAC9B,MAAMyB,IAAI,GAAGH,MAAM,CAACG,IAAI;IACxB,MAAM;MAACxL,GAAG;MAAEmC,GAAG;MAAEmI,UAAU;MAAEC;IAAU,CAAC,GAAGc,MAAM,CAAChB,aAAa,CAAC,CAAC;IACjE,IAAIC,UAAU,EAAE;MACdrK,KAAK,GAAG3J,WAAW,CAACyJ,IAAI,CAACC,GAAG,CAC1BxJ,YAAY,CAACgW,OAAO,EAAEnB,MAAM,CAACG,IAAI,EAAExL,GAAG,CAAC,CAACqhB,EAAE,EAC1Cf,kBAAkB,GAAGc,UAAU,GAAG5qB,YAAY,CAACmkB,MAAM,EAAEnP,IAAI,EAAEH,MAAM,CAAC2K,gBAAgB,CAAChW,GAAG,CAAC,CAAC,CAACqhB,EAAE,CAAC,EAChG,CAAC,EAAED,UAAU,GAAG,CAAC,CAAC;IACpB;IACA,IAAI7W,UAAU,EAAE;MACd6F,KAAK,GAAG9Z,WAAW,CAACyJ,IAAI,CAACoC,GAAG,CAC1B3L,YAAY,CAACgW,OAAO,EAAEnB,MAAM,CAACG,IAAI,EAAErJ,GAAG,CAAC,CAACmf,EAAE,GAAG,CAAC,EAC9ChB,kBAAkB,GAAG,CAAC,GAAG9pB,YAAY,CAACmkB,MAAM,EAAEnP,IAAI,EAAEH,MAAM,CAAC2K,gBAAgB,CAAC7T,GAAG,CAAC,CAAC,CAACmf,EAAE,GAAG,CAAC,CAAC,EAC3FrhB,KAAK,EAAEmhB,UAAU,CAAC,GAAGnhB,KAAK;IAC5B,CAAC,MAAM;MACLmQ,KAAK,GAAGgR,UAAU,GAAGnhB,KAAK;IAC5B;EACF;EACA,OAAO;IAACA,KAAK;IAAEmQ;EAAK,CAAC;AACvB;AACA,SAASoQ,kBAAkBA,CAACzW,IAAI,EAAE;EAChC,MAAM;IAACzB,MAAM;IAAEC,MAAM;IAAEgZ;EAAY,CAAC,GAAGxX,IAAI;EAC3C,MAAMyX,SAAS,GAAG;IAChBC,IAAI,EAAEnZ,MAAM,CAACtI,GAAG;IAChB0hB,IAAI,EAAEpZ,MAAM,CAACnG,GAAG;IAChBwf,IAAI,EAAEpZ,MAAM,CAACvI,GAAG;IAChB4hB,IAAI,EAAErZ,MAAM,CAACpG;EACf,CAAC;EACD,IAAI,CAACof,YAAY,EAAE;IACjBxX,IAAI,CAACwX,YAAY,GAAGC,SAAS;IAC7B,OAAO,IAAI;EACb;EACA,MAAMK,OAAO,GAAGN,YAAY,CAACE,IAAI,KAAKnZ,MAAM,CAACtI,GAAG,IAC7CuhB,YAAY,CAACG,IAAI,KAAKpZ,MAAM,CAACnG,GAAG,IAChCof,YAAY,CAACI,IAAI,KAAKpZ,MAAM,CAACvI,GAAG,IAChCuhB,YAAY,CAACK,IAAI,KAAKrZ,MAAM,CAACpG,GAAG;EACnCoD,MAAM,CAACqC,MAAM,CAAC2Z,YAAY,EAAEC,SAAS,CAAC;EACtC,OAAOK,OAAO;AAChB;AAEA,MAAMC,mBAAmB,SAASjV,iBAAiB,CAAC;EAClDjO,WAAWA,CAACQ,KAAK,EAAEoK,YAAY,EAAE;IAC/B,KAAK,CAACpK,KAAK,EAAEoK,YAAY,CAAC;IAC1B,IAAI,CAACmT,WAAW,GAAGzd,SAAS;IAC5B,IAAI,CAAC0d,WAAW,GAAG1d,SAAS;EAC9B;EACAwF,MAAMA,CAAC6E,IAAI,EAAE;IACX,MAAM0T,IAAI,GAAG,IAAI,CAAC9R,WAAW,CAACxB,IAAI;IAClC,IAAI,CAACoY,aAAa,CAAC,CAAC;IACpB,IAAI,CAACnN,cAAc,CAACqI,IAAI,EAAE,CAAC,EAAEA,IAAI,CAACzc,MAAM,EAAE+I,IAAI,CAAC;EACjD;EACAwY,aAAaA,CAAA,EAAG;IACd,MAAM5hB,EAAE,GAAG,IAAI;IACf,MAAMf,KAAK,GAAGe,EAAE,CAACf,KAAK;IACtB,MAAMkT,SAAS,GAAGlT,KAAK,CAACkT,SAAS;IACjC,MAAMpK,IAAI,GAAG9I,KAAK,CAAC6H,OAAO;IAC1B,MAAM+a,OAAO,GAAGjiB,IAAI,CAACC,GAAG,CAACsS,SAAS,CAAC7J,KAAK,GAAG6J,SAAS,CAAC3J,IAAI,EAAE2J,SAAS,CAAC5J,MAAM,GAAG4J,SAAS,CAAC9J,GAAG,CAAC;IAC5F,MAAMoU,WAAW,GAAG7c,IAAI,CAACoC,GAAG,CAAC6f,OAAO,GAAG,CAAC,EAAE,CAAC,CAAC;IAC5C,MAAMrF,WAAW,GAAG5c,IAAI,CAACoC,GAAG,CAAC+F,IAAI,CAAC+Z,gBAAgB,GAAIrF,WAAW,GAAG,GAAG,GAAK1U,IAAI,CAAC+Z,gBAAiB,GAAG,CAAC,EAAE,CAAC,CAAC;IAC1G,MAAMtE,YAAY,GAAG,CAACf,WAAW,GAAGD,WAAW,IAAIvd,KAAK,CAAC8iB,sBAAsB,CAAC,CAAC;IACjF/hB,EAAE,CAACyc,WAAW,GAAGA,WAAW,GAAIe,YAAY,GAAGxd,EAAE,CAAC+I,KAAM;IACxD/I,EAAE,CAACwc,WAAW,GAAGxc,EAAE,CAACyc,WAAW,GAAGe,YAAY;EAChD;EACA/I,cAAcA,CAACqI,IAAI,EAAEhd,KAAK,EAAEmQ,KAAK,EAAE7G,IAAI,EAAE;IACvC,MAAMpJ,EAAE,GAAG,IAAI;IACf,MAAMgP,KAAK,GAAG5F,IAAI,KAAK,OAAO;IAC9B,MAAMnK,KAAK,GAAGe,EAAE,CAACf,KAAK;IACtB,MAAM8M,OAAO,GAAG/L,EAAE,CAAC6N,UAAU,CAAC,CAAC;IAC/B,MAAM9F,IAAI,GAAG9I,KAAK,CAAC6H,OAAO;IAC1B,MAAMkX,aAAa,GAAGjW,IAAI,CAACzC,SAAS;IACpC,MAAMuC,KAAK,GAAG7H,EAAE,CAACgL,WAAW,CAAC2D,MAAM;IACnC,MAAMsP,OAAO,GAAGpW,KAAK,CAACma,OAAO;IAC7B,MAAM9D,OAAO,GAAGrW,KAAK,CAACoa,OAAO;IAC7B,MAAMC,iBAAiB,GAAGra,KAAK,CAACsa,aAAa,CAAC,CAAC,CAAC,GAAG,GAAG,GAAGpsB,EAAE;IAC3D,IAAIkmB,KAAK,GAAGiG,iBAAiB;IAC7B,IAAI9uB,CAAC;IACL,MAAMgvB,YAAY,GAAG,GAAG,GAAGpiB,EAAE,CAACqiB,oBAAoB,CAAC,CAAC;IACpD,KAAKjvB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG0M,KAAK,EAAE,EAAE1M,CAAC,EAAE;MAC1B6oB,KAAK,IAAIjc,EAAE,CAACsiB,aAAa,CAAClvB,CAAC,EAAEgW,IAAI,EAAEgZ,YAAY,CAAC;IAClD;IACA,KAAKhvB,CAAC,GAAG0M,KAAK,EAAE1M,CAAC,GAAG0M,KAAK,GAAGmQ,KAAK,EAAE7c,CAAC,EAAE,EAAE;MACtC,MAAMgrB,GAAG,GAAGtB,IAAI,CAAC1pB,CAAC,CAAC;MACnB,IAAIooB,UAAU,GAAGS,KAAK;MACtB,IAAIR,QAAQ,GAAGQ,KAAK,GAAGjc,EAAE,CAACsiB,aAAa,CAAClvB,CAAC,EAAEgW,IAAI,EAAEgZ,YAAY,CAAC;MAC9D,IAAI3F,WAAW,GAAGxd,KAAK,CAACua,iBAAiB,CAACpmB,CAAC,CAAC,GAAGyU,KAAK,CAAC0a,6BAA6B,CAACxW,OAAO,CAACvC,IAAI,CAACpW,CAAC,CAAC,CAAC,GAAG,CAAC;MACvG6oB,KAAK,GAAGR,QAAQ;MAChB,IAAIzM,KAAK,EAAE;QACT,IAAIgP,aAAa,CAACG,YAAY,EAAE;UAC9B1B,WAAW,GAAG,CAAC;QACjB;QACA,IAAIuB,aAAa,CAACF,aAAa,EAAE;UAC/BtC,UAAU,GAAGC,QAAQ,GAAGyG,iBAAiB;QAC3C;MACF;MACA,MAAMtc,UAAU,GAAG;QACjB1P,CAAC,EAAE+nB,OAAO;QACV7nB,CAAC,EAAE8nB,OAAO;QACV1B,WAAW,EAAE,CAAC;QACdC,WAAW;QACXjB,UAAU;QACVC,QAAQ;QACR3U,OAAO,EAAE9G,EAAE,CAACsS,yBAAyB,CAAClf,CAAC,EAAEgW,IAAI;MAC/C,CAAC;MACDpJ,EAAE,CAAC4T,aAAa,CAACwK,GAAG,EAAEhrB,CAAC,EAAEwS,UAAU,EAAEwD,IAAI,CAAC;IAC5C;EACF;EACAiZ,oBAAoBA,CAAA,EAAG;IACrB,MAAMtW,OAAO,GAAG,IAAI,CAAC8B,UAAU,CAAC,CAAC;IACjC,MAAMjE,IAAI,GAAG,IAAI,CAACoB,WAAW;IAC7B,IAAIiF,KAAK,GAAG,CAAC;IACbrG,IAAI,CAACJ,IAAI,CAAC/J,OAAO,CAAC,CAACwM,OAAO,EAAElD,KAAK,KAAK;MACpC,IAAI,CAAC+P,KAAK,CAAC/M,OAAO,CAACvC,IAAI,CAACT,KAAK,CAAC,CAAC,IAAI,IAAI,CAAC9J,KAAK,CAACua,iBAAiB,CAACzQ,KAAK,CAAC,EAAE;QACtEkH,KAAK,EAAE;MACT;IACF,CAAC,CAAC;IACF,OAAOA,KAAK;EACd;EACAqS,aAAaA,CAACvZ,KAAK,EAAEK,IAAI,EAAEgZ,YAAY,EAAE;IACvC,OAAO,IAAI,CAACnjB,KAAK,CAACua,iBAAiB,CAACzQ,KAAK,CAAC,GACtC9T,SAAS,CAAC,IAAI,CAACqd,yBAAyB,CAACvJ,KAAK,EAAEK,IAAI,CAAC,CAAC6S,KAAK,IAAImG,YAAY,CAAC,GAC5E,CAAC;EACP;AACF;AACAT,mBAAmB,CAAC1X,EAAE,GAAG,WAAW;AACpC0X,mBAAmB,CAACluB,QAAQ,GAAG;EAC7Bgf,eAAe,EAAE,KAAK;EACtBnN,SAAS,EAAE;IACTwY,aAAa,EAAE,IAAI;IACnBK,YAAY,EAAE;EAChB,CAAC;EACDpY,UAAU,EAAE;IACVd,OAAO,EAAE;MACP7F,IAAI,EAAE,QAAQ;MACdwG,UAAU,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,YAAY,EAAE,UAAU,EAAE,aAAa,EAAE,aAAa;IAC/E;EACF,CAAC;EACDyI,SAAS,EAAE,GAAG;EACdmN,UAAU,EAAE;AACd,CAAC;AACDmG,mBAAmB,CAACxoB,SAAS,GAAG;EAC9B0lB,WAAW,EAAE,CAAC;EACdhE,OAAO,EAAE;IACPiE,MAAM,EAAE;MACNrO,MAAM,EAAE;QACNsO,cAAcA,CAAC9f,KAAK,EAAE;UACpB,MAAMuK,IAAI,GAAGvK,KAAK,CAACuK,IAAI;UACvB,IAAIA,IAAI,CAACiH,MAAM,CAACpQ,MAAM,IAAImJ,IAAI,CAACoF,QAAQ,CAACvO,MAAM,EAAE;YAC9C,OAAOmJ,IAAI,CAACiH,MAAM,CAACuO,GAAG,CAAC,CAACnN,KAAK,EAAEze,CAAC,KAAK;cACnC,MAAMwW,IAAI,GAAG3K,KAAK,CAAC4P,cAAc,CAAC,CAAC,CAAC;cACpC,MAAMoQ,KAAK,GAAGrV,IAAI,CAACkB,UAAU,CAACsH,QAAQ,CAAChf,CAAC,CAAC;cACzC,OAAO;gBACL8rB,IAAI,EAAErN,KAAK;gBACXsN,SAAS,EAAEF,KAAK,CAACG,eAAe;gBAChCC,WAAW,EAAEJ,KAAK,CAACK,WAAW;gBAC9BC,SAAS,EAAEN,KAAK,CAACT,WAAW;gBAC5BgB,MAAM,EAAE,CAACvgB,KAAK,CAACua,iBAAiB,CAACpmB,CAAC,CAAC;gBACnC2V,KAAK,EAAE3V;cACT,CAAC;YACH,CAAC,CAAC;UACJ;UACA,OAAO,EAAE;QACX;MACF,CAAC;MACDqsB,OAAOA,CAACzsB,CAAC,EAAE0sB,UAAU,EAAEZ,MAAM,EAAE;QAC7BA,MAAM,CAAC7f,KAAK,CAAC0gB,oBAAoB,CAACD,UAAU,CAAC3W,KAAK,CAAC;QACnD+V,MAAM,CAAC7f,KAAK,CAACsF,MAAM,CAAC,CAAC;MACvB;IACF,CAAC;IACDuW,OAAO,EAAE;MACPzb,SAAS,EAAE;QACT0b,KAAKA,CAAA,EAAG;UACN,OAAO,EAAE;QACX,CAAC;QACDlJ,KAAKA,CAACU,OAAO,EAAE;UACb,OAAOA,OAAO,CAACtT,KAAK,CAACuK,IAAI,CAACiH,MAAM,CAAC8B,OAAO,CAACrG,SAAS,CAAC,GAAG,IAAI,GAAGqG,OAAO,CAACuN,cAAc;QACrF;MACF;IACF;EACF,CAAC;EACDrU,MAAM,EAAE;IACN7Y,CAAC,EAAE;MACDwM,IAAI,EAAE,cAAc;MACpBojB,UAAU,EAAE;QACVC,OAAO,EAAE;MACX,CAAC;MACDnI,WAAW,EAAE,IAAI;MACjBF,IAAI,EAAE;QACJsI,QAAQ,EAAE;MACZ,CAAC;MACDC,WAAW,EAAE;QACXF,OAAO,EAAE;MACX,CAAC;MACDjH,UAAU,EAAE;IACd;EACF;AACF,CAAC;AAED,MAAMoH,aAAa,SAASrG,kBAAkB,CAAC;AAE/CqG,aAAa,CAAC3Y,EAAE,GAAG,KAAK;AACxB2Y,aAAa,CAACnvB,QAAQ,GAAG;EACvB0nB,MAAM,EAAE,CAAC;EACTF,QAAQ,EAAE,CAAC;EACXC,aAAa,EAAE,GAAG;EAClBN,MAAM,EAAE;AACV,CAAC;AAED,MAAMiI,eAAe,SAASnW,iBAAiB,CAAC;EAC9CkF,gBAAgBA,CAAC7I,KAAK,EAAE;IACtB,MAAM/I,EAAE,GAAG,IAAI;IACf,MAAMmL,MAAM,GAAGnL,EAAE,CAACgL,WAAW,CAACG,MAAM;IACpC,MAAMJ,MAAM,GAAG/K,EAAE,CAAC8Q,SAAS,CAAC/H,KAAK,CAAC;IAClC,OAAO;MACL8I,KAAK,EAAE1G,MAAM,CAACuF,SAAS,CAAC,CAAC,CAAC3H,KAAK,CAAC;MAChCxB,KAAK,EAAE,EAAE,GAAG4D,MAAM,CAAC2G,gBAAgB,CAAC/G,MAAM,CAACI,MAAM,CAACE,IAAI,CAAC;IACzD,CAAC;EACH;EACA9G,MAAMA,CAAC6E,IAAI,EAAE;IACX,MAAMpJ,EAAE,GAAG,IAAI;IACf,MAAM4J,IAAI,GAAG5J,EAAE,CAACgL,WAAW;IAC3B,MAAMiV,IAAI,GAAGrW,IAAI,CAACmC,OAAO;IACzB,MAAMyO,MAAM,GAAG5Q,IAAI,CAACJ,IAAI,IAAI,EAAE;IAC9B,MAAMiH,MAAM,GAAG7G,IAAI,CAACsB,MAAM,CAACwF,SAAS,CAAC,CAAC;IACtCuP,IAAI,CAACzF,MAAM,GAAGA,MAAM;IACpB,IAAIpR,IAAI,KAAK,QAAQ,EAAE;MACrB,MAAMtC,OAAO,GAAG9G,EAAE,CAACqS,4BAA4B,CAACjJ,IAAI,CAAC;MACrD,IAAI,CAACpJ,EAAE,CAAC8G,OAAO,CAACyZ,QAAQ,EAAE;QACxBzZ,OAAO,CAAC0X,WAAW,GAAG,CAAC;MACzB;MACA,MAAM5Y,UAAU,GAAG;QACjB7B,KAAK,EAAE,IAAI;QACX+e,SAAS,EAAErS,MAAM,CAACpQ,MAAM,KAAKma,MAAM,CAACna,MAAM;QAC1CyG;MACF,CAAC;MACD9G,EAAE,CAAC4T,aAAa,CAACqM,IAAI,EAAElhB,SAAS,EAAE6G,UAAU,EAAEwD,IAAI,CAAC;IACrD;IACApJ,EAAE,CAACyU,cAAc,CAAC+F,MAAM,EAAE,CAAC,EAAEA,MAAM,CAACna,MAAM,EAAE+I,IAAI,CAAC;EACnD;EACAqL,cAAcA,CAAC+F,MAAM,EAAE1a,KAAK,EAAEmQ,KAAK,EAAE7G,IAAI,EAAE;IACzC,MAAMpJ,EAAE,GAAG,IAAI;IACf,MAAM+L,OAAO,GAAG/L,EAAE,CAAC6N,UAAU,CAAC,CAAC;IAC/B,MAAMhG,KAAK,GAAG7H,EAAE,CAACgL,WAAW,CAAC2D,MAAM;IACnC,MAAMK,KAAK,GAAG5F,IAAI,KAAK,OAAO;IAC9B,KAAK,IAAIhW,CAAC,GAAG0M,KAAK,EAAE1M,CAAC,GAAG0M,KAAK,GAAGmQ,KAAK,EAAE7c,CAAC,EAAE,EAAE;MAC1C,MAAMqnB,KAAK,GAAGD,MAAM,CAACpnB,CAAC,CAAC;MACvB,MAAM0T,OAAO,GAAG9G,EAAE,CAACsS,yBAAyB,CAAClf,CAAC,EAAEgW,IAAI,CAAC;MACrD,MAAM2Z,aAAa,GAAGlb,KAAK,CAACmb,wBAAwB,CAAC5vB,CAAC,EAAE2Y,OAAO,CAACvC,IAAI,CAACpW,CAAC,CAAC,CAAC;MACxE,MAAM8C,CAAC,GAAG8Y,KAAK,GAAGnH,KAAK,CAACma,OAAO,GAAGe,aAAa,CAAC7sB,CAAC;MACjD,MAAME,CAAC,GAAG4Y,KAAK,GAAGnH,KAAK,CAACoa,OAAO,GAAGc,aAAa,CAAC3sB,CAAC;MACjD,MAAMwP,UAAU,GAAG;QACjB1P,CAAC;QACDE,CAAC;QACD6lB,KAAK,EAAE8G,aAAa,CAAC9G,KAAK;QAC1BtB,IAAI,EAAE7B,KAAK,CAAC5iB,CAAC,CAAC,IAAI4iB,KAAK,CAAC1iB,CAAC,CAAC;QAC1B0Q;MACF,CAAC;MACD9G,EAAE,CAAC4T,aAAa,CAAC6G,KAAK,EAAErnB,CAAC,EAAEwS,UAAU,EAAEwD,IAAI,CAAC;IAC9C;EACF;AACF;AACAyZ,eAAe,CAAC5Y,EAAE,GAAG,OAAO;AAC5B4Y,eAAe,CAACpvB,QAAQ,GAAG;EACzB2b,kBAAkB,EAAE,MAAM;EAC1BqD,eAAe,EAAE,OAAO;EACxBpE,SAAS,EAAE,GAAG;EACdkS,QAAQ,EAAE,IAAI;EACdtO,QAAQ,EAAE;IACRgO,IAAI,EAAE;MACJgD,IAAI,EAAE;IACR;EACF;AACF,CAAC;AACDJ,eAAe,CAAC1pB,SAAS,GAAG;EAC1B0lB,WAAW,EAAE,CAAC;EACdpT,MAAM,EAAE;IACN7Y,CAAC,EAAE;MACDwM,IAAI,EAAE;IACR;EACF;AACF,CAAC;AAED,MAAM8jB,iBAAiB,SAASlD,cAAc,CAAC;AAE/CkD,iBAAiB,CAACjZ,EAAE,GAAG,SAAS;AAChCiZ,iBAAiB,CAACzvB,QAAQ,GAAG;EAC3B8sB,QAAQ,EAAE,KAAK;EACf0C,IAAI,EAAE;AACR,CAAC;AACDC,iBAAiB,CAAC/pB,SAAS,GAAG;EAC5B8gB,WAAW,EAAE;IACX7Q,IAAI,EAAE;EACR,CAAC;EACDyR,OAAO,EAAE;IACPC,OAAO,EAAE;MACPzb,SAAS,EAAE;QACT0b,KAAKA,CAAA,EAAG;UACN,OAAO,EAAE;QACX,CAAC;QACDlJ,KAAKA,CAACjR,IAAI,EAAE;UACV,OAAO,GAAG,GAAGA,IAAI,CAACiR,KAAK,GAAG,IAAI,GAAGjR,IAAI,CAACkf,cAAc,GAAG,GAAG;QAC5D;MACF;IACF;EACF,CAAC;EACDrU,MAAM,EAAE;IACNvV,CAAC,EAAE;MACDkJ,IAAI,EAAE;IACR,CAAC;IACDhJ,CAAC,EAAE;MACDgJ,IAAI,EAAE;IACR;EACF;AACF,CAAC;AAED,IAAI+jB,WAAW,GAAG,aAAa/d,MAAM,CAAC+N,MAAM,CAAC;EAC7CiQ,SAAS,EAAE,IAAI;EACf5L,aAAa,EAAEA,aAAa;EAC5B+C,gBAAgB,EAAEA,gBAAgB;EAClCgC,kBAAkB,EAAEA,kBAAkB;EACtCyD,cAAc,EAAEA,cAAc;EAC9B2B,mBAAmB,EAAEA,mBAAmB;EACxCiB,aAAa,EAAEA,aAAa;EAC5BC,eAAe,EAAEA,eAAe;EAChCK,iBAAiB,EAAEA;AACnB,CAAC,CAAC;AAEF,SAASG,QAAQA,CAAA,EAAG;EAClB,MAAM,IAAIC,KAAK,CAAC,2GAA2G,CAAC;AAC9H;AACA,MAAMC,WAAW,CAAC;EAChB9kB,WAAWA,CAACqI,OAAO,EAAE;IACnB,IAAI,CAACA,OAAO,GAAGA,OAAO,IAAI,CAAC,CAAC;EAC9B;EACA0c,OAAOA,CAAA,EAAG;IACR,OAAOH,QAAQ,CAAC,CAAC;EACnB;EACArT,KAAKA,CAACzI,KAAK,EAAEkc,MAAM,EAAE;IACnB,OAAOJ,QAAQ,CAAC,CAAC;EACnB;EACAI,MAAMA,CAACC,SAAS,EAAED,MAAM,EAAE;IACxB,OAAOJ,QAAQ,CAAC,CAAC;EACnB;EACA1hB,GAAGA,CAAC+hB,SAAS,EAAEC,MAAM,EAAEC,IAAI,EAAE;IAC3B,OAAOP,QAAQ,CAAC,CAAC;EACnB;EACAQ,IAAIA,CAAC/wB,CAAC,EAAEQ,CAAC,EAAEswB,IAAI,EAAE;IACf,OAAOP,QAAQ,CAAC,CAAC;EACnB;EACAS,OAAOA,CAACJ,SAAS,EAAEE,IAAI,EAAEG,OAAO,EAAE;IAChC,OAAOV,QAAQ,CAAC,CAAC;EACnB;EACAW,KAAKA,CAACN,SAAS,EAAEE,IAAI,EAAE;IACrB,OAAOP,QAAQ,CAAC,CAAC;EACnB;AACF;AACAE,WAAW,CAACU,QAAQ,GAAG,UAASC,OAAO,EAAE;EACvC9e,MAAM,CAACqC,MAAM,CAAC8b,WAAW,CAACtO,SAAS,EAAEiP,OAAO,CAAC;AAC/C,CAAC;AACD,IAAIC,QAAQ,GAAG;EACbC,KAAK,EAAEb;AACT,CAAC;AAED,SAASc,mBAAmBA,CAACrxB,CAAC,EAAEiM,KAAK,EAAE;EACrC,IAAI,QAAQ,IAAIjM,CAAC,EAAE;IACjB,OAAO;MACLkD,CAAC,EAAElD,CAAC,CAACkD,CAAC;MACNE,CAAC,EAAEpD,CAAC,CAACoD;IACP,CAAC;EACH;EACA,OAAOG,qBAAqB,CAACvD,CAAC,EAAEiM,KAAK,CAAC;AACxC;AACA,SAASqlB,uBAAuBA,CAACrlB,KAAK,EAAEslB,OAAO,EAAE;EAC/C,MAAM3b,QAAQ,GAAG3J,KAAK,CAACulB,4BAA4B,CAAC,CAAC;EACrD,IAAIzb,KAAK,EAAES,IAAI,EAAEyC,OAAO;EACxB,KAAK,IAAI7Y,CAAC,GAAG,CAAC,EAAE0V,IAAI,GAAGF,QAAQ,CAACvI,MAAM,EAAEjN,CAAC,GAAG0V,IAAI,EAAE,EAAE1V,CAAC,EAAE;IACrD,CAAC;MAAC2V,KAAK;MAAES;IAAI,CAAC,GAAGZ,QAAQ,CAACxV,CAAC,CAAC;IAC5B,KAAK,IAAIoB,CAAC,GAAG,CAAC,EAAEiwB,IAAI,GAAGjb,IAAI,CAACnJ,MAAM,EAAE7L,CAAC,GAAGiwB,IAAI,EAAE,EAAEjwB,CAAC,EAAE;MACjDyX,OAAO,GAAGzC,IAAI,CAAChV,CAAC,CAAC;MACjB,IAAI,CAACyX,OAAO,CAAC0O,IAAI,EAAE;QACjB4J,OAAO,CAACtY,OAAO,EAAElD,KAAK,EAAEvU,CAAC,CAAC;MAC5B;IACF;EACF;AACF;AACA,SAASkwB,YAAYA,CAACC,OAAO,EAAEtZ,IAAI,EAAE9D,KAAK,EAAEqd,SAAS,EAAE;EACrD,MAAM;IAAC9Z,UAAU;IAAEtB,IAAI;IAAE2G;EAAO,CAAC,GAAGwU,OAAO;EAC3C,MAAMzZ,MAAM,GAAGJ,UAAU,CAACE,WAAW,CAACE,MAAM;EAC5C,IAAIA,MAAM,IAAIG,IAAI,KAAKH,MAAM,CAACG,IAAI,IAAI8E,OAAO,IAAI3G,IAAI,CAACnJ,MAAM,EAAE;IAC5D,MAAMwkB,YAAY,GAAG3Z,MAAM,CAAC4Z,cAAc,GAAGnuB,aAAa,GAAGN,YAAY;IACzE,IAAI,CAACuuB,SAAS,EAAE;MACd,OAAOC,YAAY,CAACrb,IAAI,EAAE6B,IAAI,EAAE9D,KAAK,CAAC;IACxC,CAAC,MAAM,IAAIuD,UAAU,CAACqC,cAAc,EAAE;MACpC,MAAM4X,EAAE,GAAGvb,IAAI,CAAC,CAAC,CAAC;MAClB,MAAMyH,KAAK,GAAG,OAAO8T,EAAE,CAACC,QAAQ,KAAK,UAAU,IAAID,EAAE,CAACC,QAAQ,CAAC3Z,IAAI,CAAC;MACpE,IAAI4F,KAAK,EAAE;QACT,MAAMnR,KAAK,GAAG+kB,YAAY,CAACrb,IAAI,EAAE6B,IAAI,EAAE9D,KAAK,GAAG0J,KAAK,CAAC;QACrD,MAAMhJ,GAAG,GAAG4c,YAAY,CAACrb,IAAI,EAAE6B,IAAI,EAAE9D,KAAK,GAAG0J,KAAK,CAAC;QACnD,OAAO;UAACiQ,EAAE,EAAEphB,KAAK,CAACohB,EAAE;UAAEC,EAAE,EAAElZ,GAAG,CAACkZ;QAAE,CAAC;MACnC;IACF;EACF;EACA,OAAO;IAACD,EAAE,EAAE,CAAC;IAAEC,EAAE,EAAE3X,IAAI,CAACnJ,MAAM,GAAG;EAAC,CAAC;AACrC;AACA,SAAS4kB,sBAAsBA,CAAChmB,KAAK,EAAEoM,IAAI,EAAE6Z,QAAQ,EAAEX,OAAO,EAAEK,SAAS,EAAE;EACzE,MAAMhc,QAAQ,GAAG3J,KAAK,CAACulB,4BAA4B,CAAC,CAAC;EACrD,MAAMjd,KAAK,GAAG2d,QAAQ,CAAC7Z,IAAI,CAAC;EAC5B,KAAK,IAAIjY,CAAC,GAAG,CAAC,EAAE0V,IAAI,GAAGF,QAAQ,CAACvI,MAAM,EAAEjN,CAAC,GAAG0V,IAAI,EAAE,EAAE1V,CAAC,EAAE;IACrD,MAAM;MAAC2V,KAAK;MAAES;IAAI,CAAC,GAAGZ,QAAQ,CAACxV,CAAC,CAAC;IACjC,MAAM;MAAC8tB,EAAE;MAAEC;IAAE,CAAC,GAAGuD,YAAY,CAAC9b,QAAQ,CAACxV,CAAC,CAAC,EAAEiY,IAAI,EAAE9D,KAAK,EAAEqd,SAAS,CAAC;IAClE,KAAK,IAAIpwB,CAAC,GAAG0sB,EAAE,EAAE1sB,CAAC,IAAI2sB,EAAE,EAAE,EAAE3sB,CAAC,EAAE;MAC7B,MAAMyX,OAAO,GAAGzC,IAAI,CAAChV,CAAC,CAAC;MACvB,IAAI,CAACyX,OAAO,CAAC0O,IAAI,EAAE;QACjB4J,OAAO,CAACtY,OAAO,EAAElD,KAAK,EAAEvU,CAAC,CAAC;MAC5B;IACF;EACF;AACF;AACA,SAAS2wB,wBAAwBA,CAAC9Z,IAAI,EAAE;EACtC,MAAM+Z,IAAI,GAAG/Z,IAAI,CAAC0N,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;EACrC,MAAMsM,IAAI,GAAGha,IAAI,CAAC0N,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;EACrC,OAAO,UAASuM,GAAG,EAAEC,GAAG,EAAE;IACxB,MAAMC,MAAM,GAAGJ,IAAI,GAAGxlB,IAAI,CAACgW,GAAG,CAAC0P,GAAG,CAACpvB,CAAC,GAAGqvB,GAAG,CAACrvB,CAAC,CAAC,GAAG,CAAC;IACjD,MAAMuvB,MAAM,GAAGJ,IAAI,GAAGzlB,IAAI,CAACgW,GAAG,CAAC0P,GAAG,CAAClvB,CAAC,GAAGmvB,GAAG,CAACnvB,CAAC,CAAC,GAAG,CAAC;IACjD,OAAOwJ,IAAI,CAAC8lB,IAAI,CAAC9lB,IAAI,CAAC+lB,GAAG,CAACH,MAAM,EAAE,CAAC,CAAC,GAAG5lB,IAAI,CAAC+lB,GAAG,CAACF,MAAM,EAAE,CAAC,CAAC,CAAC;EAC7D,CAAC;AACH;AACA,SAASG,iBAAiBA,CAAC3mB,KAAK,EAAEimB,QAAQ,EAAE7Z,IAAI,EAAEwa,gBAAgB,EAAE;EAClE,MAAMnlB,KAAK,GAAG,EAAE;EAChB,IAAI,CAACjK,cAAc,CAACyuB,QAAQ,EAAEjmB,KAAK,CAACkT,SAAS,EAAElT,KAAK,CAAC6mB,WAAW,CAAC,EAAE;IACjE,OAAOplB,KAAK;EACd;EACA,MAAMqlB,cAAc,GAAG,SAAAA,CAAS9Z,OAAO,EAAE5C,YAAY,EAAEN,KAAK,EAAE;IAC5D,IAAIkD,OAAO,CAAC+Z,OAAO,CAACd,QAAQ,CAAChvB,CAAC,EAAEgvB,QAAQ,CAAC9uB,CAAC,EAAEyvB,gBAAgB,CAAC,EAAE;MAC7DnlB,KAAK,CAACgB,IAAI,CAAC;QAACuK,OAAO;QAAE5C,YAAY;QAAEN;MAAK,CAAC,CAAC;IAC5C;EACF,CAAC;EACDkc,sBAAsB,CAAChmB,KAAK,EAAEoM,IAAI,EAAE6Z,QAAQ,EAAEa,cAAc,EAAE,IAAI,CAAC;EACnE,OAAOrlB,KAAK;AACd;AACA,SAASulB,eAAeA,CAAChnB,KAAK,EAAEimB,QAAQ,EAAE7Z,IAAI,EAAEuZ,SAAS,EAAEiB,gBAAgB,EAAE;EAC3E,MAAMK,cAAc,GAAGf,wBAAwB,CAAC9Z,IAAI,CAAC;EACrD,IAAI8a,WAAW,GAAG9b,MAAM,CAACE,iBAAiB;EAC1C,IAAI7J,KAAK,GAAG,EAAE;EACd,IAAI,CAACjK,cAAc,CAACyuB,QAAQ,EAAEjmB,KAAK,CAACkT,SAAS,EAAElT,KAAK,CAAC6mB,WAAW,CAAC,EAAE;IACjE,OAAOplB,KAAK;EACd;EACA,MAAMqlB,cAAc,GAAG,SAAAA,CAAS9Z,OAAO,EAAE5C,YAAY,EAAEN,KAAK,EAAE;IAC5D,IAAI6b,SAAS,IAAI,CAAC3Y,OAAO,CAAC+Z,OAAO,CAACd,QAAQ,CAAChvB,CAAC,EAAEgvB,QAAQ,CAAC9uB,CAAC,EAAEyvB,gBAAgB,CAAC,EAAE;MAC3E;IACF;IACA,MAAMrN,MAAM,GAAGvM,OAAO,CAACma,cAAc,CAACP,gBAAgB,CAAC;IACvD,MAAMQ,QAAQ,GAAGH,cAAc,CAAChB,QAAQ,EAAE1M,MAAM,CAAC;IACjD,IAAI6N,QAAQ,GAAGF,WAAW,EAAE;MAC1BzlB,KAAK,GAAG,CAAC;QAACuL,OAAO;QAAE5C,YAAY;QAAEN;MAAK,CAAC,CAAC;MACxCod,WAAW,GAAGE,QAAQ;IACxB,CAAC,MAAM,IAAIA,QAAQ,KAAKF,WAAW,EAAE;MACnCzlB,KAAK,CAACgB,IAAI,CAAC;QAACuK,OAAO;QAAE5C,YAAY;QAAEN;MAAK,CAAC,CAAC;IAC5C;EACF,CAAC;EACDkc,sBAAsB,CAAChmB,KAAK,EAAEoM,IAAI,EAAE6Z,QAAQ,EAAEa,cAAc,CAAC;EAC7D,OAAOrlB,KAAK;AACd;AACA,SAAS4lB,YAAYA,CAACrnB,KAAK,EAAEjM,CAAC,EAAE8T,OAAO,EAAE+e,gBAAgB,EAAE;EACzD,MAAMX,QAAQ,GAAGb,mBAAmB,CAACrxB,CAAC,EAAEiM,KAAK,CAAC;EAC9C,MAAMyB,KAAK,GAAG,EAAE;EAChB,MAAM2K,IAAI,GAAGvE,OAAO,CAACuE,IAAI;EACzB,MAAMkb,WAAW,GAAGlb,IAAI,KAAK,GAAG,GAAG,UAAU,GAAG,UAAU;EAC1D,IAAImb,cAAc,GAAG,KAAK;EAC1BlC,uBAAuB,CAACrlB,KAAK,EAAE,CAACgN,OAAO,EAAE5C,YAAY,EAAEN,KAAK,KAAK;IAC/D,IAAIkD,OAAO,CAACsa,WAAW,CAAC,CAACrB,QAAQ,CAAC7Z,IAAI,CAAC,EAAEwa,gBAAgB,CAAC,EAAE;MAC1DnlB,KAAK,CAACgB,IAAI,CAAC;QAACuK,OAAO;QAAE5C,YAAY;QAAEN;MAAK,CAAC,CAAC;IAC5C;IACA,IAAIkD,OAAO,CAAC+Z,OAAO,CAACd,QAAQ,CAAChvB,CAAC,EAAEgvB,QAAQ,CAAC9uB,CAAC,EAAEyvB,gBAAgB,CAAC,EAAE;MAC7DW,cAAc,GAAG,IAAI;IACvB;EACF,CAAC,CAAC;EACF,IAAI1f,OAAO,CAAC8d,SAAS,IAAI,CAAC4B,cAAc,EAAE;IACxC,OAAO,EAAE;EACX;EACA,OAAO9lB,KAAK;AACd;AACA,IAAI+lB,WAAW,GAAG;EAChBC,KAAK,EAAE;IACL3d,KAAKA,CAAC9J,KAAK,EAAEjM,CAAC,EAAE8T,OAAO,EAAE+e,gBAAgB,EAAE;MACzC,MAAMX,QAAQ,GAAGb,mBAAmB,CAACrxB,CAAC,EAAEiM,KAAK,CAAC;MAC9C,MAAMoM,IAAI,GAAGvE,OAAO,CAACuE,IAAI,IAAI,GAAG;MAChC,MAAM3K,KAAK,GAAGoG,OAAO,CAAC8d,SAAS,GAC3BgB,iBAAiB,CAAC3mB,KAAK,EAAEimB,QAAQ,EAAE7Z,IAAI,EAAEwa,gBAAgB,CAAC,GAC1DI,eAAe,CAAChnB,KAAK,EAAEimB,QAAQ,EAAE7Z,IAAI,EAAE,KAAK,EAAEwa,gBAAgB,CAAC;MACnE,MAAM5T,QAAQ,GAAG,EAAE;MACnB,IAAI,CAACvR,KAAK,CAACL,MAAM,EAAE;QACjB,OAAO,EAAE;MACX;MACApB,KAAK,CAACulB,4BAA4B,CAAC,CAAC,CAAC/kB,OAAO,CAAEmK,IAAI,IAAK;QACrD,MAAMb,KAAK,GAAGrI,KAAK,CAAC,CAAC,CAAC,CAACqI,KAAK;QAC5B,MAAMkD,OAAO,GAAGrC,IAAI,CAACJ,IAAI,CAACT,KAAK,CAAC;QAChC,IAAIkD,OAAO,IAAI,CAACA,OAAO,CAAC0O,IAAI,EAAE;UAC5B1I,QAAQ,CAACvQ,IAAI,CAAC;YAACuK,OAAO;YAAE5C,YAAY,EAAEO,IAAI,CAACb,KAAK;YAAEA;UAAK,CAAC,CAAC;QAC3D;MACF,CAAC,CAAC;MACF,OAAOkJ,QAAQ;IACjB,CAAC;IACDlG,OAAOA,CAAC9M,KAAK,EAAEjM,CAAC,EAAE8T,OAAO,EAAE+e,gBAAgB,EAAE;MAC3C,MAAMX,QAAQ,GAAGb,mBAAmB,CAACrxB,CAAC,EAAEiM,KAAK,CAAC;MAC9C,MAAMoM,IAAI,GAAGvE,OAAO,CAACuE,IAAI,IAAI,IAAI;MACjC,IAAI3K,KAAK,GAAGoG,OAAO,CAAC8d,SAAS,GACzBgB,iBAAiB,CAAC3mB,KAAK,EAAEimB,QAAQ,EAAE7Z,IAAI,EAAEwa,gBAAgB,CAAC,GAC5DI,eAAe,CAAChnB,KAAK,EAAEimB,QAAQ,EAAE7Z,IAAI,EAAE,KAAK,EAAEwa,gBAAgB,CAAC;MACjE,IAAInlB,KAAK,CAACL,MAAM,GAAG,CAAC,EAAE;QACpB,MAAMgJ,YAAY,GAAG3I,KAAK,CAAC,CAAC,CAAC,CAAC2I,YAAY;QAC1C,MAAMG,IAAI,GAAGvK,KAAK,CAAC4P,cAAc,CAACxF,YAAY,CAAC,CAACG,IAAI;QACpD9I,KAAK,GAAG,EAAE;QACV,KAAK,IAAItN,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGoW,IAAI,CAACnJ,MAAM,EAAE,EAAEjN,CAAC,EAAE;UACpCsN,KAAK,CAACgB,IAAI,CAAC;YAACuK,OAAO,EAAEzC,IAAI,CAACpW,CAAC,CAAC;YAAEiW,YAAY;YAAEN,KAAK,EAAE3V;UAAC,CAAC,CAAC;QACxD;MACF;MACA,OAAOsN,KAAK;IACd,CAAC;IACD+Z,KAAKA,CAACxb,KAAK,EAAEjM,CAAC,EAAE8T,OAAO,EAAE+e,gBAAgB,EAAE;MACzC,MAAMX,QAAQ,GAAGb,mBAAmB,CAACrxB,CAAC,EAAEiM,KAAK,CAAC;MAC9C,MAAMoM,IAAI,GAAGvE,OAAO,CAACuE,IAAI,IAAI,IAAI;MACjC,OAAOua,iBAAiB,CAAC3mB,KAAK,EAAEimB,QAAQ,EAAE7Z,IAAI,EAAEwa,gBAAgB,CAAC;IACnE,CAAC;IACDc,OAAOA,CAAC1nB,KAAK,EAAEjM,CAAC,EAAE8T,OAAO,EAAE+e,gBAAgB,EAAE;MAC3C,MAAMX,QAAQ,GAAGb,mBAAmB,CAACrxB,CAAC,EAAEiM,KAAK,CAAC;MAC9C,MAAMoM,IAAI,GAAGvE,OAAO,CAACuE,IAAI,IAAI,IAAI;MACjC,OAAO4a,eAAe,CAAChnB,KAAK,EAAEimB,QAAQ,EAAE7Z,IAAI,EAAEvE,OAAO,CAAC8d,SAAS,EAAEiB,gBAAgB,CAAC;IACpF,CAAC;IACD3vB,CAACA,CAAC+I,KAAK,EAAEjM,CAAC,EAAE8T,OAAO,EAAE+e,gBAAgB,EAAE;MACrC/e,OAAO,CAACuE,IAAI,GAAG,GAAG;MAClB,OAAOib,YAAY,CAACrnB,KAAK,EAAEjM,CAAC,EAAE8T,OAAO,EAAE+e,gBAAgB,CAAC;IAC1D,CAAC;IACDzvB,CAACA,CAAC6I,KAAK,EAAEjM,CAAC,EAAE8T,OAAO,EAAE+e,gBAAgB,EAAE;MACrC/e,OAAO,CAACuE,IAAI,GAAG,GAAG;MAClB,OAAOib,YAAY,CAACrnB,KAAK,EAAEjM,CAAC,EAAE8T,OAAO,EAAE+e,gBAAgB,CAAC;IAC1D;EACF;AACF,CAAC;AAED,MAAMe,gBAAgB,GAAG,CAAC,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,QAAQ,CAAC;AAC3D,SAASC,gBAAgBA,CAACC,KAAK,EAAE5B,QAAQ,EAAE;EACzC,OAAO4B,KAAK,CAACpb,MAAM,CAAChY,CAAC,IAAIA,CAAC,CAACqzB,GAAG,KAAK7B,QAAQ,CAAC;AAC9C;AACA,SAAS8B,2BAA2BA,CAACF,KAAK,EAAEzb,IAAI,EAAE;EAChD,OAAOyb,KAAK,CAACpb,MAAM,CAAChY,CAAC,IAAIkzB,gBAAgB,CAAC7N,OAAO,CAACrlB,CAAC,CAACqzB,GAAG,CAAC,KAAK,CAAC,CAAC,IAAIrzB,CAAC,CAACuzB,GAAG,CAAC5b,IAAI,KAAKA,IAAI,CAAC;AACzF;AACA,SAAS6b,YAAYA,CAACJ,KAAK,EAAE9e,OAAO,EAAE;EACpC,OAAO8e,KAAK,CAACvR,IAAI,CAAC,CAACziB,CAAC,EAAEQ,CAAC,KAAK;IAC1B,MAAM6zB,EAAE,GAAGnf,OAAO,GAAG1U,CAAC,GAAGR,CAAC;IAC1B,MAAMs0B,EAAE,GAAGpf,OAAO,GAAGlV,CAAC,GAAGQ,CAAC;IAC1B,OAAO6zB,EAAE,CAACvI,MAAM,KAAKwI,EAAE,CAACxI,MAAM,GAC5BuI,EAAE,CAACpe,KAAK,GAAGqe,EAAE,CAACre,KAAK,GACnBoe,EAAE,CAACvI,MAAM,GAAGwI,EAAE,CAACxI,MAAM;EACzB,CAAC,CAAC;AACJ;AACA,SAASyI,SAASA,CAACC,KAAK,EAAE;EACxB,MAAMC,WAAW,GAAG,EAAE;EACtB,IAAIn0B,CAAC,EAAE0V,IAAI,EAAEme,GAAG;EAChB,KAAK7zB,CAAC,GAAG,CAAC,EAAE0V,IAAI,GAAG,CAACwe,KAAK,IAAI,EAAE,EAAEjnB,MAAM,EAAEjN,CAAC,GAAG0V,IAAI,EAAE,EAAE1V,CAAC,EAAE;IACtD6zB,GAAG,GAAGK,KAAK,CAACl0B,CAAC,CAAC;IACdm0B,WAAW,CAAC7lB,IAAI,CAAC;MACfqH,KAAK,EAAE3V,CAAC;MACR6zB,GAAG;MACHF,GAAG,EAAEE,GAAG,CAAC/B,QAAQ;MACjBnN,UAAU,EAAEkP,GAAG,CAACjP,YAAY,CAAC,CAAC;MAC9B4G,MAAM,EAAEqI,GAAG,CAACrI;IACd,CAAC,CAAC;EACJ;EACA,OAAO2I,WAAW;AACpB;AACA,SAASC,aAAaA,CAACC,OAAO,EAAEC,MAAM,EAAE;EACtC,IAAIt0B,CAAC,EAAE0V,IAAI,EAAE6e,MAAM;EACnB,KAAKv0B,CAAC,GAAG,CAAC,EAAE0V,IAAI,GAAG2e,OAAO,CAACpnB,MAAM,EAAEjN,CAAC,GAAG0V,IAAI,EAAE,EAAE1V,CAAC,EAAE;IAChDu0B,MAAM,GAAGF,OAAO,CAACr0B,CAAC,CAAC;IACnB,IAAIu0B,MAAM,CAAC5P,UAAU,EAAE;MACrB4P,MAAM,CAACjP,KAAK,GAAGiP,MAAM,CAACV,GAAG,CAACW,QAAQ,IAAIF,MAAM,CAACG,cAAc;MAC3DF,MAAM,CAAClP,MAAM,GAAGiP,MAAM,CAACI,aAAa;IACtC,CAAC,MAAM;MACLH,MAAM,CAACjP,KAAK,GAAGgP,MAAM,CAACK,YAAY;MAClCJ,MAAM,CAAClP,MAAM,GAAGkP,MAAM,CAACV,GAAG,CAACW,QAAQ,IAAIF,MAAM,CAACM,eAAe;IAC/D;EACF;AACF;AACA,SAASC,gBAAgBA,CAACX,KAAK,EAAE;EAC/B,MAAMC,WAAW,GAAGF,SAAS,CAACC,KAAK,CAAC;EACpC,MAAMM,QAAQ,GAAGV,YAAY,CAACK,WAAW,CAAC7b,MAAM,CAACwc,IAAI,IAAIA,IAAI,CAACjB,GAAG,CAACW,QAAQ,CAAC,EAAE,IAAI,CAAC;EAClF,MAAMpf,IAAI,GAAG0e,YAAY,CAACL,gBAAgB,CAACU,WAAW,EAAE,MAAM,CAAC,EAAE,IAAI,CAAC;EACtE,MAAMjf,KAAK,GAAG4e,YAAY,CAACL,gBAAgB,CAACU,WAAW,EAAE,OAAO,CAAC,CAAC;EAClE,MAAMlf,GAAG,GAAG6e,YAAY,CAACL,gBAAgB,CAACU,WAAW,EAAE,KAAK,CAAC,EAAE,IAAI,CAAC;EACpE,MAAMhf,MAAM,GAAG2e,YAAY,CAACL,gBAAgB,CAACU,WAAW,EAAE,QAAQ,CAAC,CAAC;EACpE,MAAMY,gBAAgB,GAAGnB,2BAA2B,CAACO,WAAW,EAAE,GAAG,CAAC;EACtE,MAAMa,cAAc,GAAGpB,2BAA2B,CAACO,WAAW,EAAE,GAAG,CAAC;EACpE,OAAO;IACLK,QAAQ;IACRS,UAAU,EAAE7f,IAAI,CAACwK,MAAM,CAAC3K,GAAG,CAAC;IAC5BigB,cAAc,EAAEhgB,KAAK,CAAC0K,MAAM,CAACoV,cAAc,CAAC,CAACpV,MAAM,CAACzK,MAAM,CAAC,CAACyK,MAAM,CAACmV,gBAAgB,CAAC;IACpFhW,SAAS,EAAE0U,gBAAgB,CAACU,WAAW,EAAE,WAAW,CAAC;IACrDgB,QAAQ,EAAE/f,IAAI,CAACwK,MAAM,CAAC1K,KAAK,CAAC,CAAC0K,MAAM,CAACoV,cAAc,CAAC;IACnDrQ,UAAU,EAAE1P,GAAG,CAAC2K,MAAM,CAACzK,MAAM,CAAC,CAACyK,MAAM,CAACmV,gBAAgB;EACxD,CAAC;AACH;AACA,SAASK,cAAcA,CAACC,UAAU,EAAEtW,SAAS,EAAErf,CAAC,EAAEQ,CAAC,EAAE;EACnD,OAAOsM,IAAI,CAACoC,GAAG,CAACymB,UAAU,CAAC31B,CAAC,CAAC,EAAEqf,SAAS,CAACrf,CAAC,CAAC,CAAC,GAAG8M,IAAI,CAACoC,GAAG,CAACymB,UAAU,CAACn1B,CAAC,CAAC,EAAE6e,SAAS,CAAC7e,CAAC,CAAC,CAAC;AACtF;AACA,SAASo1B,gBAAgBA,CAACD,UAAU,EAAEE,UAAU,EAAE;EAChDF,UAAU,CAACpgB,GAAG,GAAGzI,IAAI,CAACoC,GAAG,CAACymB,UAAU,CAACpgB,GAAG,EAAEsgB,UAAU,CAACtgB,GAAG,CAAC;EACzDogB,UAAU,CAACjgB,IAAI,GAAG5I,IAAI,CAACoC,GAAG,CAACymB,UAAU,CAACjgB,IAAI,EAAEmgB,UAAU,CAACngB,IAAI,CAAC;EAC5DigB,UAAU,CAAClgB,MAAM,GAAG3I,IAAI,CAACoC,GAAG,CAACymB,UAAU,CAAClgB,MAAM,EAAEogB,UAAU,CAACpgB,MAAM,CAAC;EAClEkgB,UAAU,CAACngB,KAAK,GAAG1I,IAAI,CAACoC,GAAG,CAACymB,UAAU,CAACngB,KAAK,EAAEqgB,UAAU,CAACrgB,KAAK,CAAC;AACjE;AACA,SAASsgB,UAAUA,CAACzW,SAAS,EAAEuV,MAAM,EAAEC,MAAM,EAAE;EAC7C,MAAMV,GAAG,GAAGU,MAAM,CAACV,GAAG;EACtB,MAAMwB,UAAU,GAAGtW,SAAS,CAACsW,UAAU;EACvC,IAAIp1B,QAAQ,CAACs0B,MAAM,CAACZ,GAAG,CAAC,EAAE;IACxB,OAAO;MAAC8B,IAAI,EAAE,KAAK;MAAEC,KAAK,EAAE;IAAK,CAAC;EACpC;EACA,IAAInB,MAAM,CAACngB,IAAI,EAAE;IACf2K,SAAS,CAACwV,MAAM,CAACZ,GAAG,CAAC,IAAIY,MAAM,CAACngB,IAAI;EACtC;EACAmgB,MAAM,CAACngB,IAAI,GAAGmgB,MAAM,CAAC5P,UAAU,GAAGkP,GAAG,CAACxO,MAAM,GAAGwO,GAAG,CAACvO,KAAK;EACxDvG,SAAS,CAACwV,MAAM,CAACZ,GAAG,CAAC,IAAIY,MAAM,CAACngB,IAAI;EACpC,IAAIyf,GAAG,CAAC8B,UAAU,EAAE;IAClBL,gBAAgB,CAACD,UAAU,EAAExB,GAAG,CAAC8B,UAAU,CAAC,CAAC,CAAC;EAChD;EACA,MAAMC,QAAQ,GAAGppB,IAAI,CAACoC,GAAG,CAAC,CAAC,EAAE0lB,MAAM,CAACuB,UAAU,GAAGT,cAAc,CAACC,UAAU,EAAEtW,SAAS,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC;EACxG,MAAM+W,SAAS,GAAGtpB,IAAI,CAACoC,GAAG,CAAC,CAAC,EAAE0lB,MAAM,CAACyB,WAAW,GAAGX,cAAc,CAACC,UAAU,EAAEtW,SAAS,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC;EAC1G,MAAMiX,YAAY,GAAGJ,QAAQ,KAAK7W,SAAS,CAACnc,CAAC;EAC7C,MAAMqzB,aAAa,GAAGH,SAAS,KAAK/W,SAAS,CAAC/d,CAAC;EAC/C+d,SAAS,CAACnc,CAAC,GAAGgzB,QAAQ;EACtB7W,SAAS,CAAC/d,CAAC,GAAG80B,SAAS;EACvB,OAAOvB,MAAM,CAAC5P,UAAU,GACpB;IAAC8Q,IAAI,EAAEO,YAAY;IAAEN,KAAK,EAAEO;EAAa,CAAC,GAC1C;IAACR,IAAI,EAAEQ,aAAa;IAAEP,KAAK,EAAEM;EAAY,CAAC;AAChD;AACA,SAASE,gBAAgBA,CAACnX,SAAS,EAAE;EACnC,MAAMsW,UAAU,GAAGtW,SAAS,CAACsW,UAAU;EACvC,SAASc,SAASA,CAACxC,GAAG,EAAE;IACtB,MAAMyC,MAAM,GAAG5pB,IAAI,CAACoC,GAAG,CAACymB,UAAU,CAAC1B,GAAG,CAAC,GAAG5U,SAAS,CAAC4U,GAAG,CAAC,EAAE,CAAC,CAAC;IAC5D5U,SAAS,CAAC4U,GAAG,CAAC,IAAIyC,MAAM;IACxB,OAAOA,MAAM;EACf;EACArX,SAAS,CAAC/b,CAAC,IAAImzB,SAAS,CAAC,KAAK,CAAC;EAC/BpX,SAAS,CAACjc,CAAC,IAAIqzB,SAAS,CAAC,MAAM,CAAC;EAChCA,SAAS,CAAC,OAAO,CAAC;EAClBA,SAAS,CAAC,QAAQ,CAAC;AACrB;AACA,SAASE,UAAUA,CAAC1R,UAAU,EAAE5F,SAAS,EAAE;EACzC,MAAMsW,UAAU,GAAGtW,SAAS,CAACsW,UAAU;EACvC,SAASiB,kBAAkBA,CAACC,SAAS,EAAE;IACrC,MAAMC,MAAM,GAAG;MAACphB,IAAI,EAAE,CAAC;MAAEH,GAAG,EAAE,CAAC;MAAEC,KAAK,EAAE,CAAC;MAAEC,MAAM,EAAE;IAAC,CAAC;IACrDohB,SAAS,CAAClqB,OAAO,CAAEsnB,GAAG,IAAK;MACzB6C,MAAM,CAAC7C,GAAG,CAAC,GAAGnnB,IAAI,CAACoC,GAAG,CAACmQ,SAAS,CAAC4U,GAAG,CAAC,EAAE0B,UAAU,CAAC1B,GAAG,CAAC,CAAC;IACzD,CAAC,CAAC;IACF,OAAO6C,MAAM;EACf;EACA,OAAO7R,UAAU,GACb2R,kBAAkB,CAAC,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC,GACrCA,kBAAkB,CAAC,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;AAC3C;AACA,SAASG,QAAQA,CAACvC,KAAK,EAAEnV,SAAS,EAAEuV,MAAM,EAAE;EAC1C,MAAMoC,UAAU,GAAG,EAAE;EACrB,IAAI12B,CAAC,EAAE0V,IAAI,EAAE6e,MAAM,EAAEV,GAAG,EAAE8C,KAAK,EAAErI,OAAO;EACxC,KAAKtuB,CAAC,GAAG,CAAC,EAAE0V,IAAI,GAAGwe,KAAK,CAACjnB,MAAM,EAAE0pB,KAAK,GAAG,CAAC,EAAE32B,CAAC,GAAG0V,IAAI,EAAE,EAAE1V,CAAC,EAAE;IACzDu0B,MAAM,GAAGL,KAAK,CAACl0B,CAAC,CAAC;IACjB6zB,GAAG,GAAGU,MAAM,CAACV,GAAG;IAChBA,GAAG,CAAC1iB,MAAM,CACRojB,MAAM,CAACjP,KAAK,IAAIvG,SAAS,CAACnc,CAAC,EAC3B2xB,MAAM,CAAClP,MAAM,IAAItG,SAAS,CAAC/d,CAAC,EAC5Bq1B,UAAU,CAAC9B,MAAM,CAAC5P,UAAU,EAAE5F,SAAS,CACzC,CAAC;IACD,MAAM;MAAC0W,IAAI;MAAEC;IAAK,CAAC,GAAGF,UAAU,CAACzW,SAAS,EAAEuV,MAAM,EAAEC,MAAM,CAAC;IAC3DoC,KAAK,IAAIlB,IAAI,IAAIiB,UAAU,CAACzpB,MAAM;IAClCqhB,OAAO,GAAGA,OAAO,IAAIoH,KAAK;IAC1B,IAAI,CAAC7B,GAAG,CAACW,QAAQ,EAAE;MACjBkC,UAAU,CAACpoB,IAAI,CAACimB,MAAM,CAAC;IACzB;EACF;EACA,OAAOoC,KAAK,IAAIF,QAAQ,CAACC,UAAU,EAAE3X,SAAS,EAAEuV,MAAM,CAAC,IAAIhG,OAAO;AACpE;AACA,SAASsI,UAAUA,CAAC1C,KAAK,EAAEnV,SAAS,EAAEuV,MAAM,EAAE;EAC5C,MAAMuC,WAAW,GAAGvC,MAAM,CAACwC,OAAO;EAClC,IAAIh0B,CAAC,GAAGic,SAAS,CAACjc,CAAC;EACnB,IAAIE,CAAC,GAAG+b,SAAS,CAAC/b,CAAC;EACnB,IAAIhD,CAAC,EAAE0V,IAAI,EAAE6e,MAAM,EAAEV,GAAG;EACxB,KAAK7zB,CAAC,GAAG,CAAC,EAAE0V,IAAI,GAAGwe,KAAK,CAACjnB,MAAM,EAAEjN,CAAC,GAAG0V,IAAI,EAAE,EAAE1V,CAAC,EAAE;IAC9Cu0B,MAAM,GAAGL,KAAK,CAACl0B,CAAC,CAAC;IACjB6zB,GAAG,GAAGU,MAAM,CAACV,GAAG;IAChB,IAAIU,MAAM,CAAC5P,UAAU,EAAE;MACrBkP,GAAG,CAACze,IAAI,GAAGye,GAAG,CAACW,QAAQ,GAAGqC,WAAW,CAACzhB,IAAI,GAAG2J,SAAS,CAAC3J,IAAI;MAC3Dye,GAAG,CAAC3e,KAAK,GAAG2e,GAAG,CAACW,QAAQ,GAAGF,MAAM,CAACuB,UAAU,GAAGgB,WAAW,CAAC3hB,KAAK,GAAG6J,SAAS,CAAC3J,IAAI,GAAG2J,SAAS,CAACnc,CAAC;MAC/FixB,GAAG,CAAC5e,GAAG,GAAGjS,CAAC;MACX6wB,GAAG,CAAC1e,MAAM,GAAGnS,CAAC,GAAG6wB,GAAG,CAACxO,MAAM;MAC3BwO,GAAG,CAACvO,KAAK,GAAGuO,GAAG,CAAC3e,KAAK,GAAG2e,GAAG,CAACze,IAAI;MAChCpS,CAAC,GAAG6wB,GAAG,CAAC1e,MAAM;IAChB,CAAC,MAAM;MACL0e,GAAG,CAACze,IAAI,GAAGtS,CAAC;MACZ+wB,GAAG,CAAC3e,KAAK,GAAGpS,CAAC,GAAG+wB,GAAG,CAACvO,KAAK;MACzBuO,GAAG,CAAC5e,GAAG,GAAG4e,GAAG,CAACW,QAAQ,GAAGqC,WAAW,CAAC5hB,GAAG,GAAG8J,SAAS,CAAC9J,GAAG;MACxD4e,GAAG,CAAC1e,MAAM,GAAG0e,GAAG,CAACW,QAAQ,GAAGF,MAAM,CAACyB,WAAW,GAAGc,WAAW,CAAC3hB,KAAK,GAAG6J,SAAS,CAAC9J,GAAG,GAAG8J,SAAS,CAAC/d,CAAC;MAChG6yB,GAAG,CAACxO,MAAM,GAAGwO,GAAG,CAAC1e,MAAM,GAAG0e,GAAG,CAAC5e,GAAG;MACjCnS,CAAC,GAAG+wB,GAAG,CAAC3e,KAAK;IACf;EACF;EACA6J,SAAS,CAACjc,CAAC,GAAGA,CAAC;EACfic,SAAS,CAAC/b,CAAC,GAAGA,CAAC;AACjB;AACA3C,QAAQ,CAAC6N,GAAG,CAAC,QAAQ,EAAE;EACrB4oB,OAAO,EAAE;IACP7hB,GAAG,EAAE,CAAC;IACNC,KAAK,EAAE,CAAC;IACRC,MAAM,EAAE,CAAC;IACTC,IAAI,EAAE;EACR;AACF,CAAC,CAAC;AACF,IAAIif,OAAO,GAAG;EACZ0C,MAAMA,CAAClrB,KAAK,EAAE2B,IAAI,EAAE;IAClB,IAAI,CAAC3B,KAAK,CAACqoB,KAAK,EAAE;MAChBroB,KAAK,CAACqoB,KAAK,GAAG,EAAE;IAClB;IACA1mB,IAAI,CAACgnB,QAAQ,GAAGhnB,IAAI,CAACgnB,QAAQ,IAAI,KAAK;IACtChnB,IAAI,CAACskB,QAAQ,GAAGtkB,IAAI,CAACskB,QAAQ,IAAI,KAAK;IACtCtkB,IAAI,CAACge,MAAM,GAAGhe,IAAI,CAACge,MAAM,IAAI,CAAC;IAC9Bhe,IAAI,CAACwpB,OAAO,GAAGxpB,IAAI,CAACwpB,OAAO,IAAI,YAAW;MACxC,OAAO,CAAC;QACN9zB,CAAC,EAAE,CAAC;QACJqK,IAAIA,CAACwR,SAAS,EAAE;UACdvR,IAAI,CAACD,IAAI,CAACwR,SAAS,CAAC;QACtB;MACF,CAAC,CAAC;IACJ,CAAC;IACDlT,KAAK,CAACqoB,KAAK,CAAC5lB,IAAI,CAACd,IAAI,CAAC;EACxB,CAAC;EACDypB,SAASA,CAACprB,KAAK,EAAEqrB,UAAU,EAAE;IAC3B,MAAMvhB,KAAK,GAAG9J,KAAK,CAACqoB,KAAK,GAAGroB,KAAK,CAACqoB,KAAK,CAACvO,OAAO,CAACuR,UAAU,CAAC,GAAG,CAAC,CAAC;IAChE,IAAIvhB,KAAK,KAAK,CAAC,CAAC,EAAE;MAChB9J,KAAK,CAACqoB,KAAK,CAAC3S,MAAM,CAAC5L,KAAK,EAAE,CAAC,CAAC;IAC9B;EACF,CAAC;EACDzC,SAASA,CAACrH,KAAK,EAAE2B,IAAI,EAAEkG,OAAO,EAAE;IAC9BlG,IAAI,CAACgnB,QAAQ,GAAG9gB,OAAO,CAAC8gB,QAAQ;IAChChnB,IAAI,CAACskB,QAAQ,GAAGpe,OAAO,CAACoe,QAAQ;IAChCtkB,IAAI,CAACge,MAAM,GAAG9X,OAAO,CAAC8X,MAAM;EAC9B,CAAC;EACDra,MAAMA,CAACtF,KAAK,EAAEyZ,KAAK,EAAED,MAAM,EAAE8R,UAAU,EAAE;IACvC,IAAI,CAACtrB,KAAK,EAAE;MACV;IACF;IACA,MAAMirB,OAAO,GAAGrzB,SAAS,CAACoI,KAAK,CAAC6H,OAAO,CAAC6gB,MAAM,CAACuC,OAAO,CAAC;IACvD,MAAMrC,cAAc,GAAGnP,KAAK,GAAGwR,OAAO,CAACxR,KAAK;IAC5C,MAAMsP,eAAe,GAAGvP,MAAM,GAAGyR,OAAO,CAACzR,MAAM;IAC/C,MAAM6O,KAAK,GAAGW,gBAAgB,CAAChpB,KAAK,CAACqoB,KAAK,CAAC;IAC3C,MAAMkD,aAAa,GAAGlD,KAAK,CAACiB,QAAQ;IACpC,MAAMkC,eAAe,GAAGnD,KAAK,CAACvP,UAAU;IACxChhB,IAAI,CAACkI,KAAK,CAACqoB,KAAK,EAAEL,GAAG,IAAI;MACvB,IAAI,OAAOA,GAAG,CAACyD,YAAY,KAAK,UAAU,EAAE;QAC1CzD,GAAG,CAACyD,YAAY,CAAC,CAAC;MACpB;IACF,CAAC,CAAC;IACF,MAAMC,uBAAuB,GAAGH,aAAa,CAAC3oB,MAAM,CAAC,CAAC6b,KAAK,EAAEwK,IAAI,KAC/DA,IAAI,CAACjB,GAAG,CAACngB,OAAO,IAAIohB,IAAI,CAACjB,GAAG,CAACngB,OAAO,CAAC2b,OAAO,KAAK,KAAK,GAAG/E,KAAK,GAAGA,KAAK,GAAG,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC;IACrF,MAAMgK,MAAM,GAAGtiB,MAAM,CAAC+N,MAAM,CAAC;MAC3B8V,UAAU,EAAEvQ,KAAK;MACjByQ,WAAW,EAAE1Q,MAAM;MACnByR,OAAO;MACPrC,cAAc;MACdG,eAAe;MACfD,YAAY,EAAEF,cAAc,GAAG,CAAC,GAAG8C,uBAAuB;MAC1D7C,aAAa,EAAEE,eAAe,GAAG;IACnC,CAAC,CAAC;IACF,MAAMS,UAAU,GAAGrjB,MAAM,CAACqC,MAAM,CAAC,CAAC,CAAC,EAAEyiB,OAAO,CAAC;IAC7CxB,gBAAgB,CAACD,UAAU,EAAE5xB,SAAS,CAAC0zB,UAAU,CAAC,CAAC;IACnD,MAAMpY,SAAS,GAAG/M,MAAM,CAACqC,MAAM,CAAC;MAC9BghB,UAAU;MACVzyB,CAAC,EAAE6xB,cAAc;MACjBzzB,CAAC,EAAE4zB,eAAe;MAClB9xB,CAAC,EAAEg0B,OAAO,CAAC1hB,IAAI;MACfpS,CAAC,EAAE8zB,OAAO,CAAC7hB;IACb,CAAC,EAAE6hB,OAAO,CAAC;IACX1C,aAAa,CAACgD,aAAa,CAACxX,MAAM,CAACyX,eAAe,CAAC,EAAE/C,MAAM,CAAC;IAC5DmC,QAAQ,CAACvC,KAAK,CAACM,QAAQ,EAAEzV,SAAS,EAAEuV,MAAM,CAAC;IAC3CmC,QAAQ,CAACW,aAAa,EAAErY,SAAS,EAAEuV,MAAM,CAAC;IAC1C,IAAImC,QAAQ,CAACY,eAAe,EAAEtY,SAAS,EAAEuV,MAAM,CAAC,EAAE;MAChDmC,QAAQ,CAACW,aAAa,EAAErY,SAAS,EAAEuV,MAAM,CAAC;IAC5C;IACA4B,gBAAgB,CAACnX,SAAS,CAAC;IAC3B6X,UAAU,CAAC1C,KAAK,CAACe,UAAU,EAAElW,SAAS,EAAEuV,MAAM,CAAC;IAC/CvV,SAAS,CAACjc,CAAC,IAAIic,SAAS,CAACnc,CAAC;IAC1Bmc,SAAS,CAAC/b,CAAC,IAAI+b,SAAS,CAAC/d,CAAC;IAC1B41B,UAAU,CAAC1C,KAAK,CAACgB,cAAc,EAAEnW,SAAS,EAAEuV,MAAM,CAAC;IACnDzoB,KAAK,CAACkT,SAAS,GAAG;MAChB3J,IAAI,EAAE2J,SAAS,CAAC3J,IAAI;MACpBH,GAAG,EAAE8J,SAAS,CAAC9J,GAAG;MAClBC,KAAK,EAAE6J,SAAS,CAAC3J,IAAI,GAAG2J,SAAS,CAACnc,CAAC;MACnCuS,MAAM,EAAE4J,SAAS,CAAC9J,GAAG,GAAG8J,SAAS,CAAC/d,CAAC;MACnCqkB,MAAM,EAAEtG,SAAS,CAAC/d,CAAC;MACnBskB,KAAK,EAAEvG,SAAS,CAACnc;IACnB,CAAC;IACDe,IAAI,CAACuwB,KAAK,CAACnV,SAAS,EAAGwV,MAAM,IAAK;MAChC,MAAMV,GAAG,GAAGU,MAAM,CAACV,GAAG;MACtB7hB,MAAM,CAACqC,MAAM,CAACwf,GAAG,EAAEhoB,KAAK,CAACkT,SAAS,CAAC;MACnC8U,GAAG,CAAC1iB,MAAM,CAAC4N,SAAS,CAACnc,CAAC,EAAEmc,SAAS,CAAC/d,CAAC,CAAC;IACtC,CAAC,CAAC;EACJ;AACF,CAAC;AAED,MAAMw2B,YAAY,CAAC;EACjBC,cAAcA,CAACC,MAAM,EAAEjM,WAAW,EAAE,CAAC;EACrCkM,cAAcA,CAACxY,OAAO,EAAE;IACtB,OAAO,KAAK;EACd;EACAyY,gBAAgBA,CAAC/rB,KAAK,EAAEG,IAAI,EAAE6rB,QAAQ,EAAE,CAAC;EACzCC,mBAAmBA,CAACjsB,KAAK,EAAEG,IAAI,EAAE6rB,QAAQ,EAAE,CAAC;EAC5CE,mBAAmBA,CAAA,EAAG;IACpB,OAAO,CAAC;EACV;EACAl0B,cAAcA,CAACgV,OAAO,EAAEyM,KAAK,EAAED,MAAM,EAAEoG,WAAW,EAAE;IAClDnG,KAAK,GAAG9Y,IAAI,CAACoC,GAAG,CAAC,CAAC,EAAE0W,KAAK,IAAIzM,OAAO,CAACyM,KAAK,CAAC;IAC3CD,MAAM,GAAGA,MAAM,IAAIxM,OAAO,CAACwM,MAAM;IACjC,OAAO;MACLC,KAAK;MACLD,MAAM,EAAE7Y,IAAI,CAACoC,GAAG,CAAC,CAAC,EAAE6c,WAAW,GAAGjf,IAAI,CAACiE,KAAK,CAAC6U,KAAK,GAAGmG,WAAW,CAAC,GAAGpG,MAAM;IAC5E,CAAC;EACH;EACA2S,UAAUA,CAACN,MAAM,EAAE;IACjB,OAAO,IAAI;EACb;AACF;AAEA,MAAMO,aAAa,SAAST,YAAY,CAAC;EACvCC,cAAcA,CAACjqB,IAAI,EAAE;IACnB,OAAOA,IAAI,IAAIA,IAAI,CAACkP,UAAU,IAAIlP,IAAI,CAACkP,UAAU,CAAC,IAAI,CAAC,IAAI,IAAI;EACjE;AACF;AAEA,MAAMwb,WAAW,GAAG,UAAU;AAC9B,MAAMC,WAAW,GAAG;EAClBC,UAAU,EAAE,WAAW;EACvBC,SAAS,EAAE,WAAW;EACtBC,QAAQ,EAAE,SAAS;EACnBC,YAAY,EAAE,YAAY;EAC1BC,WAAW,EAAE,WAAW;EACxBC,WAAW,EAAE,WAAW;EACxBC,SAAS,EAAE,SAAS;EACpBC,YAAY,EAAE,UAAU;EACxBC,UAAU,EAAE;AACd,CAAC;AACD,MAAMC,aAAa,GAAG1kB,KAAK,IAAIA,KAAK,KAAK,IAAI,IAAIA,KAAK,KAAK,EAAE;AAC7D,SAAS2kB,UAAUA,CAACpB,MAAM,EAAEjM,WAAW,EAAE;EACvC,MAAMI,KAAK,GAAG6L,MAAM,CAAC7L,KAAK;EAC1B,MAAMkN,YAAY,GAAGrB,MAAM,CAACsB,YAAY,CAAC,QAAQ,CAAC;EAClD,MAAMC,WAAW,GAAGvB,MAAM,CAACsB,YAAY,CAAC,OAAO,CAAC;EAChDtB,MAAM,CAACQ,WAAW,CAAC,GAAG;IACpBgB,OAAO,EAAE;MACP7T,MAAM,EAAE0T,YAAY;MACpBzT,KAAK,EAAE2T,WAAW;MAClBpN,KAAK,EAAE;QACLwD,OAAO,EAAExD,KAAK,CAACwD,OAAO;QACtBhK,MAAM,EAAEwG,KAAK,CAACxG,MAAM;QACpBC,KAAK,EAAEuG,KAAK,CAACvG;MACf;IACF;EACF,CAAC;EACDuG,KAAK,CAACwD,OAAO,GAAGxD,KAAK,CAACwD,OAAO,IAAI,OAAO;EACxCxD,KAAK,CAACsN,SAAS,GAAGtN,KAAK,CAACsN,SAAS,IAAI,YAAY;EACjD,IAAIN,aAAa,CAACI,WAAW,CAAC,EAAE;IAC9B,MAAMG,YAAY,GAAGn1B,YAAY,CAACyzB,MAAM,EAAE,OAAO,CAAC;IAClD,IAAI0B,YAAY,KAAKztB,SAAS,EAAE;MAC9B+rB,MAAM,CAACpS,KAAK,GAAG8T,YAAY;IAC7B;EACF;EACA,IAAIP,aAAa,CAACE,YAAY,CAAC,EAAE;IAC/B,IAAIrB,MAAM,CAAC7L,KAAK,CAACxG,MAAM,KAAK,EAAE,EAAE;MAC9BqS,MAAM,CAACrS,MAAM,GAAGqS,MAAM,CAACpS,KAAK,IAAImG,WAAW,IAAI,CAAC,CAAC;IACnD,CAAC,MAAM;MACL,MAAM4N,aAAa,GAAGp1B,YAAY,CAACyzB,MAAM,EAAE,QAAQ,CAAC;MACpD,IAAI2B,aAAa,KAAK1tB,SAAS,EAAE;QAC/B+rB,MAAM,CAACrS,MAAM,GAAGgU,aAAa;MAC/B;IACF;EACF;EACA,OAAO3B,MAAM;AACf;AACA,MAAM4B,oBAAoB,GAAGj1B,4BAA4B,GAAG;EAACk1B,OAAO,EAAE;AAAI,CAAC,GAAG,KAAK;AACnF,SAASC,WAAWA,CAACC,IAAI,EAAEztB,IAAI,EAAE6rB,QAAQ,EAAE;EACzC4B,IAAI,CAAC7B,gBAAgB,CAAC5rB,IAAI,EAAE6rB,QAAQ,EAAEyB,oBAAoB,CAAC;AAC7D;AACA,SAASI,cAAcA,CAAC7tB,KAAK,EAAEG,IAAI,EAAE6rB,QAAQ,EAAE;EAC7ChsB,KAAK,CAAC6rB,MAAM,CAACI,mBAAmB,CAAC9rB,IAAI,EAAE6rB,QAAQ,EAAEyB,oBAAoB,CAAC;AACxE;AACA,SAASK,eAAeA,CAACvrB,KAAK,EAAEvC,KAAK,EAAE;EACrC,MAAMG,IAAI,GAAGmsB,WAAW,CAAC/pB,KAAK,CAACpC,IAAI,CAAC,IAAIoC,KAAK,CAACpC,IAAI;EAClD,MAAM;IAAClJ,CAAC;IAAEE;EAAC,CAAC,GAAGG,qBAAqB,CAACiL,KAAK,EAAEvC,KAAK,CAAC;EAClD,OAAO;IACLG,IAAI;IACJH,KAAK;IACL+tB,MAAM,EAAExrB,KAAK;IACbtL,CAAC,EAAEA,CAAC,KAAK6I,SAAS,GAAG7I,CAAC,GAAG,IAAI;IAC7BE,CAAC,EAAEA,CAAC,KAAK2I,SAAS,GAAG3I,CAAC,GAAG;EAC3B,CAAC;AACH;AACA,SAAS62B,oBAAoBA,CAAChuB,KAAK,EAAEG,IAAI,EAAE6rB,QAAQ,EAAE;EACnD,MAAMH,MAAM,GAAG7rB,KAAK,CAAC6rB,MAAM;EAC3B,MAAMoC,SAAS,GAAGpC,MAAM,IAAI3zB,cAAc,CAAC2zB,MAAM,CAAC;EAClD,MAAM7e,OAAO,GAAGihB,SAAS,IAAIpC,MAAM;EACnC,MAAMqC,QAAQ,GAAG,IAAIC,gBAAgB,CAACC,OAAO,IAAI;IAC/C,MAAMxhB,MAAM,GAAG1U,cAAc,CAAC8U,OAAO,CAAC;IACtCohB,OAAO,CAAC5tB,OAAO,CAACqX,KAAK,IAAI;MACvB,KAAK,IAAI1jB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG0jB,KAAK,CAACwW,UAAU,CAACjtB,MAAM,EAAEjN,CAAC,EAAE,EAAE;QAChD,MAAMm6B,KAAK,GAAGzW,KAAK,CAACwW,UAAU,CAACl6B,CAAC,CAAC;QACjC,IAAIm6B,KAAK,KAAKthB,OAAO,IAAIshB,KAAK,KAAK1hB,MAAM,EAAE;UACzCof,QAAQ,CAACnU,KAAK,CAACzT,MAAM,CAAC;QACxB;MACF;IACF,CAAC,CAAC;EACJ,CAAC,CAAC;EACF8pB,QAAQ,CAACK,OAAO,CAACC,QAAQ,EAAE;IAACC,SAAS,EAAE,IAAI;IAAEC,OAAO,EAAE;EAAI,CAAC,CAAC;EAC5D,OAAOR,QAAQ;AACjB;AACA,SAASS,oBAAoBA,CAAC3uB,KAAK,EAAEG,IAAI,EAAE6rB,QAAQ,EAAE;EACnD,MAAMH,MAAM,GAAG7rB,KAAK,CAAC6rB,MAAM;EAC3B,MAAMoC,SAAS,GAAGpC,MAAM,IAAI3zB,cAAc,CAAC2zB,MAAM,CAAC;EAClD,IAAI,CAACoC,SAAS,EAAE;IACd;EACF;EACA,MAAMC,QAAQ,GAAG,IAAIC,gBAAgB,CAACC,OAAO,IAAI;IAC/CA,OAAO,CAAC5tB,OAAO,CAACqX,KAAK,IAAI;MACvB,KAAK,IAAI1jB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG0jB,KAAK,CAAC+W,YAAY,CAACxtB,MAAM,EAAEjN,CAAC,EAAE,EAAE;QAClD,IAAI0jB,KAAK,CAAC+W,YAAY,CAACz6B,CAAC,CAAC,KAAK03B,MAAM,EAAE;UACpCG,QAAQ,CAAC,CAAC;UACV;QACF;MACF;IACF,CAAC,CAAC;EACJ,CAAC,CAAC;EACFkC,QAAQ,CAACK,OAAO,CAACN,SAAS,EAAE;IAACQ,SAAS,EAAE;EAAI,CAAC,CAAC;EAC9C,OAAOP,QAAQ;AACjB;AACA,MAAMW,kBAAkB,GAAG,IAAIlvB,GAAG,CAAC,CAAC;AACpC,IAAImvB,mBAAmB,GAAG,CAAC;AAC3B,SAASC,cAAcA,CAAA,EAAG;EACxB,MAAMC,GAAG,GAAG/tB,MAAM,CAACguB,gBAAgB;EACnC,IAAID,GAAG,KAAKF,mBAAmB,EAAE;IAC/B;EACF;EACAA,mBAAmB,GAAGE,GAAG;EACzBH,kBAAkB,CAACruB,OAAO,CAAC,CAACoG,MAAM,EAAE5G,KAAK,KAAK;IAC5C,IAAIA,KAAK,CAACkvB,uBAAuB,KAAKF,GAAG,EAAE;MACzCpoB,MAAM,CAAC,CAAC;IACV;EACF,CAAC,CAAC;AACJ;AACA,SAASuoB,6BAA6BA,CAACnvB,KAAK,EAAE4G,MAAM,EAAE;EACpD,IAAI,CAACioB,kBAAkB,CAACtmB,IAAI,EAAE;IAC5BtH,MAAM,CAAC8qB,gBAAgB,CAAC,QAAQ,EAAEgD,cAAc,CAAC;EACnD;EACAF,kBAAkB,CAACxsB,GAAG,CAACrC,KAAK,EAAE4G,MAAM,CAAC;AACvC;AACA,SAASwoB,+BAA+BA,CAACpvB,KAAK,EAAE;EAC9C6uB,kBAAkB,CAACzrB,MAAM,CAACpD,KAAK,CAAC;EAChC,IAAI,CAAC6uB,kBAAkB,CAACtmB,IAAI,EAAE;IAC5BtH,MAAM,CAACgrB,mBAAmB,CAAC,QAAQ,EAAE8C,cAAc,CAAC;EACtD;AACF;AACA,SAASM,oBAAoBA,CAACrvB,KAAK,EAAEG,IAAI,EAAE6rB,QAAQ,EAAE;EACnD,MAAMH,MAAM,GAAG7rB,KAAK,CAAC6rB,MAAM;EAC3B,MAAMoC,SAAS,GAAGpC,MAAM,IAAI3zB,cAAc,CAAC2zB,MAAM,CAAC;EAClD,IAAI,CAACoC,SAAS,EAAE;IACd;EACF;EACA,MAAMrnB,MAAM,GAAGtO,SAAS,CAAC,CAACmhB,KAAK,EAAED,MAAM,KAAK;IAC1C,MAAMziB,CAAC,GAAGk3B,SAAS,CAACqB,WAAW;IAC/BtD,QAAQ,CAACvS,KAAK,EAAED,MAAM,CAAC;IACvB,IAAIziB,CAAC,GAAGk3B,SAAS,CAACqB,WAAW,EAAE;MAC7BtD,QAAQ,CAAC,CAAC;IACZ;EACF,CAAC,EAAE/qB,MAAM,CAAC;EACV,MAAMitB,QAAQ,GAAG,IAAIqB,cAAc,CAACnB,OAAO,IAAI;IAC7C,MAAMvW,KAAK,GAAGuW,OAAO,CAAC,CAAC,CAAC;IACxB,MAAM3U,KAAK,GAAG5B,KAAK,CAAC2X,WAAW,CAAC/V,KAAK;IACrC,MAAMD,MAAM,GAAG3B,KAAK,CAAC2X,WAAW,CAAChW,MAAM;IACvC,IAAIC,KAAK,KAAK,CAAC,IAAID,MAAM,KAAK,CAAC,EAAE;MAC/B;IACF;IACA5S,MAAM,CAAC6S,KAAK,EAAED,MAAM,CAAC;EACvB,CAAC,CAAC;EACF0U,QAAQ,CAACK,OAAO,CAACN,SAAS,CAAC;EAC3BkB,6BAA6B,CAACnvB,KAAK,EAAE4G,MAAM,CAAC;EAC5C,OAAOsnB,QAAQ;AACjB;AACA,SAASuB,eAAeA,CAACzvB,KAAK,EAAEG,IAAI,EAAE+tB,QAAQ,EAAE;EAC9C,IAAIA,QAAQ,EAAE;IACZA,QAAQ,CAACwB,UAAU,CAAC,CAAC;EACvB;EACA,IAAIvvB,IAAI,KAAK,QAAQ,EAAE;IACrBivB,+BAA+B,CAACpvB,KAAK,CAAC;EACxC;AACF;AACA,SAAS2vB,oBAAoBA,CAAC3vB,KAAK,EAAEG,IAAI,EAAE6rB,QAAQ,EAAE;EACnD,MAAMH,MAAM,GAAG7rB,KAAK,CAAC6rB,MAAM;EAC3B,MAAM+D,KAAK,GAAGt3B,SAAS,CAAEiK,KAAK,IAAK;IACjC,IAAIvC,KAAK,CAAC2N,GAAG,KAAK,IAAI,EAAE;MACtBqe,QAAQ,CAAC8B,eAAe,CAACvrB,KAAK,EAAEvC,KAAK,CAAC,CAAC;IACzC;EACF,CAAC,EAAEA,KAAK,EAAG6vB,IAAI,IAAK;IAClB,MAAMttB,KAAK,GAAGstB,IAAI,CAAC,CAAC,CAAC;IACrB,OAAO,CAACttB,KAAK,EAAEA,KAAK,CAAC8Z,OAAO,EAAE9Z,KAAK,CAAC+Z,OAAO,CAAC;EAC9C,CAAC,CAAC;EACFqR,WAAW,CAAC9B,MAAM,EAAE1rB,IAAI,EAAEyvB,KAAK,CAAC;EAChC,OAAOA,KAAK;AACd;AACA,MAAME,WAAW,SAASnE,YAAY,CAAC;EACrCC,cAAcA,CAACC,MAAM,EAAEjM,WAAW,EAAE;IAClC,MAAMtM,OAAO,GAAGuY,MAAM,IAAIA,MAAM,CAAChb,UAAU,IAAIgb,MAAM,CAAChb,UAAU,CAAC,IAAI,CAAC;IACtE,IAAIyC,OAAO,IAAIA,OAAO,CAACuY,MAAM,KAAKA,MAAM,EAAE;MACxCoB,UAAU,CAACpB,MAAM,EAAEjM,WAAW,CAAC;MAC/B,OAAOtM,OAAO;IAChB;IACA,OAAO,IAAI;EACb;EACAwY,cAAcA,CAACxY,OAAO,EAAE;IACtB,MAAMuY,MAAM,GAAGvY,OAAO,CAACuY,MAAM;IAC7B,IAAI,CAACA,MAAM,CAACQ,WAAW,CAAC,EAAE;MACxB,OAAO,KAAK;IACd;IACA,MAAMgB,OAAO,GAAGxB,MAAM,CAACQ,WAAW,CAAC,CAACgB,OAAO;IAC3C,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC7sB,OAAO,CAAE6D,IAAI,IAAK;MACpC,MAAMiE,KAAK,GAAG+kB,OAAO,CAAChpB,IAAI,CAAC;MAC3B,IAAI7O,aAAa,CAAC8S,KAAK,CAAC,EAAE;QACxBujB,MAAM,CAACkE,eAAe,CAAC1rB,IAAI,CAAC;MAC9B,CAAC,MAAM;QACLwnB,MAAM,CAACmE,YAAY,CAAC3rB,IAAI,EAAEiE,KAAK,CAAC;MAClC;IACF,CAAC,CAAC;IACF,MAAM0X,KAAK,GAAGqN,OAAO,CAACrN,KAAK,IAAI,CAAC,CAAC;IACjC7Z,MAAM,CAACC,IAAI,CAAC4Z,KAAK,CAAC,CAACxf,OAAO,CAAEgH,GAAG,IAAK;MAClCqkB,MAAM,CAAC7L,KAAK,CAACxY,GAAG,CAAC,GAAGwY,KAAK,CAACxY,GAAG,CAAC;IAChC,CAAC,CAAC;IACFqkB,MAAM,CAACpS,KAAK,GAAGoS,MAAM,CAACpS,KAAK;IAC3B,OAAOoS,MAAM,CAACQ,WAAW,CAAC;IAC1B,OAAO,IAAI;EACb;EACAN,gBAAgBA,CAAC/rB,KAAK,EAAEG,IAAI,EAAE6rB,QAAQ,EAAE;IACtC,IAAI,CAACC,mBAAmB,CAACjsB,KAAK,EAAEG,IAAI,CAAC;IACrC,MAAM8vB,OAAO,GAAGjwB,KAAK,CAACkwB,QAAQ,KAAKlwB,KAAK,CAACkwB,QAAQ,GAAG,CAAC,CAAC,CAAC;IACvD,MAAMC,QAAQ,GAAG;MACfC,MAAM,EAAEpC,oBAAoB;MAC5BqC,MAAM,EAAE1B,oBAAoB;MAC5B/nB,MAAM,EAAEyoB;IACV,CAAC;IACD,MAAM/J,OAAO,GAAG6K,QAAQ,CAAChwB,IAAI,CAAC,IAAIwvB,oBAAoB;IACtDM,OAAO,CAAC9vB,IAAI,CAAC,GAAGmlB,OAAO,CAACtlB,KAAK,EAAEG,IAAI,EAAE6rB,QAAQ,CAAC;EAChD;EACAC,mBAAmBA,CAACjsB,KAAK,EAAEG,IAAI,EAAE;IAC/B,MAAM8vB,OAAO,GAAGjwB,KAAK,CAACkwB,QAAQ,KAAKlwB,KAAK,CAACkwB,QAAQ,GAAG,CAAC,CAAC,CAAC;IACvD,MAAMN,KAAK,GAAGK,OAAO,CAAC9vB,IAAI,CAAC;IAC3B,IAAI,CAACyvB,KAAK,EAAE;MACV;IACF;IACA,MAAMO,QAAQ,GAAG;MACfC,MAAM,EAAEX,eAAe;MACvBY,MAAM,EAAEZ,eAAe;MACvB7oB,MAAM,EAAE6oB;IACV,CAAC;IACD,MAAMnK,OAAO,GAAG6K,QAAQ,CAAChwB,IAAI,CAAC,IAAI0tB,cAAc;IAChDvI,OAAO,CAACtlB,KAAK,EAAEG,IAAI,EAAEyvB,KAAK,CAAC;IAC3BK,OAAO,CAAC9vB,IAAI,CAAC,GAAGL,SAAS;EAC3B;EACAosB,mBAAmBA,CAAA,EAAG;IACpB,OAAOjrB,MAAM,CAACguB,gBAAgB;EAChC;EACAj3B,cAAcA,CAAC6zB,MAAM,EAAEpS,KAAK,EAAED,MAAM,EAAEoG,WAAW,EAAE;IACjD,OAAO5nB,cAAc,CAAC6zB,MAAM,EAAEpS,KAAK,EAAED,MAAM,EAAEoG,WAAW,CAAC;EAC3D;EACAuM,UAAUA,CAACN,MAAM,EAAE;IACjB,MAAMoC,SAAS,GAAG/1B,cAAc,CAAC2zB,MAAM,CAAC;IACxC,OAAO,CAAC,EAAEoC,SAAS,IAAI/1B,cAAc,CAAC+1B,SAAS,CAAC,CAAC;EACnD;AACF;AAEA,MAAMqC,OAAO,CAAC;EACZ9wB,WAAWA,CAAA,EAAG;IACZ,IAAI,CAACvI,CAAC,GAAG6I,SAAS;IAClB,IAAI,CAAC3I,CAAC,GAAG2I,SAAS;IAClB,IAAI,CAACuF,MAAM,GAAG,KAAK;IACnB,IAAI,CAACwC,OAAO,GAAG/H,SAAS;IACxB,IAAI,CAACoI,WAAW,GAAGpI,SAAS;EAC9B;EACAywB,eAAeA,CAAC3J,gBAAgB,EAAE;IAChC,MAAM;MAAC3vB,CAAC;MAAEE;IAAC,CAAC,GAAG,IAAI,CAACq5B,QAAQ,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE5J,gBAAgB,CAAC;IAC1D,OAAO;MAAC3vB,CAAC;MAAEE;IAAC,CAAC;EACf;EACAs5B,QAAQA,CAAA,EAAG;IACT,OAAOz5B,QAAQ,CAAC,IAAI,CAACC,CAAC,CAAC,IAAID,QAAQ,CAAC,IAAI,CAACG,CAAC,CAAC;EAC7C;EACAq5B,QAAQA,CAACpoB,KAAK,EAAEsoB,KAAK,EAAE;IACrB,MAAM3vB,EAAE,GAAG,IAAI;IACf,MAAMd,KAAK,GAAG,IAAI,CAACiI,WAAW;IAC9B,IAAI,CAACwoB,KAAK,IAAI,CAACzwB,KAAK,EAAE;MACpB,OAAOc,EAAE;IACX;IACA,MAAM4vB,GAAG,GAAG,CAAC,CAAC;IACdvoB,KAAK,CAAC5H,OAAO,CAAC6D,IAAI,IAAI;MACpBssB,GAAG,CAACtsB,IAAI,CAAC,GAAGpE,KAAK,CAACoE,IAAI,CAAC,IAAIpE,KAAK,CAACoE,IAAI,CAAC,CAACgB,MAAM,CAAC,CAAC,GAAGpF,KAAK,CAACoE,IAAI,CAAC,CAACc,GAAG,GAAGpE,EAAE,CAACsD,IAAI,CAAC;IAC9E,CAAC,CAAC;IACF,OAAOssB,GAAG;EACZ;AACF;AACAL,OAAO,CAAC97B,QAAQ,GAAG,CAAC,CAAC;AACrB87B,OAAO,CAACM,aAAa,GAAG9wB,SAAS;AAEjC,MAAM+wB,UAAU,GAAG;EACjBlpB,MAAMA,CAACW,KAAK,EAAE;IACZ,OAAOhU,OAAO,CAACgU,KAAK,CAAC,GAAGA,KAAK,GAAG,EAAE,GAAGA,KAAK;EAC5C,CAAC;EACDwoB,OAAOA,CAACC,SAAS,EAAEjnB,KAAK,EAAE+M,KAAK,EAAE;IAC/B,IAAIka,SAAS,KAAK,CAAC,EAAE;MACnB,OAAO,GAAG;IACZ;IACA,MAAM1R,MAAM,GAAG,IAAI,CAACrf,KAAK,CAAC6H,OAAO,CAACwX,MAAM;IACxC,IAAI2R,QAAQ;IACZ,IAAIC,KAAK,GAAGF,SAAS;IACrB,IAAIla,KAAK,CAACzV,MAAM,GAAG,CAAC,EAAE;MACpB,MAAM8vB,OAAO,GAAGvwB,IAAI,CAACoC,GAAG,CAACpC,IAAI,CAACgW,GAAG,CAACE,KAAK,CAAC,CAAC,CAAC,CAACvO,KAAK,CAAC,EAAE3H,IAAI,CAACgW,GAAG,CAACE,KAAK,CAACA,KAAK,CAACzV,MAAM,GAAG,CAAC,CAAC,CAACkH,KAAK,CAAC,CAAC;MAC3F,IAAI4oB,OAAO,GAAG,IAAI,IAAIA,OAAO,GAAG,KAAK,EAAE;QACrCF,QAAQ,GAAG,YAAY;MACzB;MACAC,KAAK,GAAGE,cAAc,CAACJ,SAAS,EAAEla,KAAK,CAAC;IAC1C;IACA,MAAMua,QAAQ,GAAG14B,KAAK,CAACiI,IAAI,CAACgW,GAAG,CAACsa,KAAK,CAAC,CAAC;IACvC,MAAMI,UAAU,GAAG1wB,IAAI,CAACoC,GAAG,CAACpC,IAAI,CAACC,GAAG,CAAC,CAAC,CAAC,GAAGD,IAAI,CAACiE,KAAK,CAACwsB,QAAQ,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC;IACvE,MAAMvpB,OAAO,GAAG;MAACmpB,QAAQ;MAAEM,qBAAqB,EAAED,UAAU;MAAEE,qBAAqB,EAAEF;IAAU,CAAC;IAChGlrB,MAAM,CAACqC,MAAM,CAACX,OAAO,EAAE,IAAI,CAACA,OAAO,CAACgP,KAAK,CAAC2N,MAAM,CAAC;IACjD,OAAOhuB,YAAY,CAACu6B,SAAS,EAAE1R,MAAM,EAAExX,OAAO,CAAC;EACjD,CAAC;EACD2pB,WAAWA,CAACT,SAAS,EAAEjnB,KAAK,EAAE+M,KAAK,EAAE;IACnC,IAAIka,SAAS,KAAK,CAAC,EAAE;MACnB,OAAO,GAAG;IACZ;IACA,MAAMvrB,MAAM,GAAGurB,SAAS,GAAIpwB,IAAI,CAAC+lB,GAAG,CAAC,EAAE,EAAE/lB,IAAI,CAACiE,KAAK,CAAClM,KAAK,CAACq4B,SAAS,CAAC,CAAC,CAAE;IACvE,IAAIvrB,MAAM,KAAK,CAAC,IAAIA,MAAM,KAAK,CAAC,IAAIA,MAAM,KAAK,CAAC,EAAE;MAChD,OAAOqrB,UAAU,CAACC,OAAO,CAAC9vB,IAAI,CAAC,IAAI,EAAE+vB,SAAS,EAAEjnB,KAAK,EAAE+M,KAAK,CAAC;IAC/D;IACA,OAAO,EAAE;EACX;AACF,CAAC;AACD,SAASsa,cAAcA,CAACJ,SAAS,EAAEla,KAAK,EAAE;EACxC,IAAIoa,KAAK,GAAGpa,KAAK,CAACzV,MAAM,GAAG,CAAC,GAAGyV,KAAK,CAAC,CAAC,CAAC,CAACvO,KAAK,GAAGuO,KAAK,CAAC,CAAC,CAAC,CAACvO,KAAK,GAAGuO,KAAK,CAAC,CAAC,CAAC,CAACvO,KAAK,GAAGuO,KAAK,CAAC,CAAC,CAAC,CAACvO,KAAK;EAChG,IAAI3H,IAAI,CAACgW,GAAG,CAACsa,KAAK,CAAC,GAAG,CAAC,IAAIF,SAAS,KAAKpwB,IAAI,CAACiE,KAAK,CAACmsB,SAAS,CAAC,EAAE;IAC9DE,KAAK,GAAGF,SAAS,GAAGpwB,IAAI,CAACiE,KAAK,CAACmsB,SAAS,CAAC;EAC3C;EACA,OAAOE,KAAK;AACd;AACA,IAAIQ,KAAK,GAAG;EAACZ;AAAU,CAAC;AAExBr8B,QAAQ,CAAC6N,GAAG,CAAC,OAAO,EAAE;EACpBmhB,OAAO,EAAE,IAAI;EACbtI,MAAM,EAAE,KAAK;EACbnS,OAAO,EAAE,KAAK;EACdsS,WAAW,EAAE,KAAK;EAClBqW,MAAM,EAAE,OAAO;EACfC,KAAK,EAAE,CAAC;EACRxW,IAAI,EAAE;IACJqI,OAAO,EAAE,IAAI;IACblD,SAAS,EAAE,CAAC;IACZsR,UAAU,EAAE,IAAI;IAChBC,eAAe,EAAE,IAAI;IACrBC,SAAS,EAAE,IAAI;IACfC,UAAU,EAAE,CAAC;IACbC,SAAS,EAAEA,CAACtkB,IAAI,EAAE7F,OAAO,KAAKA,OAAO,CAACyY,SAAS;IAC/C2R,SAAS,EAAEA,CAACvkB,IAAI,EAAE7F,OAAO,KAAKA,OAAO,CAAC3T,KAAK;IAC3CgnB,MAAM,EAAE,KAAK;IACbgX,UAAU,EAAE,EAAE;IACdC,gBAAgB,EAAE,GAAG;IACrB9R,WAAW,EAAEA,CAAC3S,IAAI,EAAE7F,OAAO,KAAKA,OAAO,CAAC3T,KAAK;IAC7CqrB,WAAW,EAAEA,CAAC7R,IAAI,EAAE7F,OAAO,KAAKA,OAAO,CAACyY;EAC1C,CAAC;EACDxE,KAAK,EAAE;IACL0H,OAAO,EAAE,KAAK;IACdvD,IAAI,EAAE,EAAE;IACRgL,OAAO,EAAE;MACP7hB,GAAG,EAAE,CAAC;MACNE,MAAM,EAAE;IACV;EACF,CAAC;EACDuN,KAAK,EAAE;IACLub,WAAW,EAAE,CAAC;IACdC,WAAW,EAAE,EAAE;IACfC,MAAM,EAAE,KAAK;IACbC,eAAe,EAAE,CAAC;IAClBC,eAAe,EAAE,EAAE;IACnBvH,OAAO,EAAE,CAAC;IACVzH,OAAO,EAAE,IAAI;IACbiP,QAAQ,EAAE,IAAI;IACdC,eAAe,EAAE,CAAC;IAClBC,WAAW,EAAE,CAAC;IACd35B,QAAQ,EAAEy4B,KAAK,CAACZ,UAAU,CAAClpB,MAAM;IACjCirB,KAAK,EAAE,CAAC,CAAC;IACTC,KAAK,EAAE,CAAC,CAAC;IACTC,KAAK,EAAE,QAAQ;IACfC,UAAU,EAAE;EACd;AACF,CAAC,CAAC;AACFv+B,QAAQ,CAACw+B,KAAK,CAAC,aAAa,EAAE,OAAO,EAAE,EAAE,EAAE,OAAO,CAAC;AACnDx+B,QAAQ,CAACw+B,KAAK,CAAC,YAAY,EAAE,OAAO,EAAE,EAAE,EAAE,aAAa,CAAC;AACxDx+B,QAAQ,CAACw+B,KAAK,CAAC,aAAa,EAAE,OAAO,EAAE,EAAE,EAAE,OAAO,CAAC;AACnDx+B,QAAQ,CAAC8R,QAAQ,CAAC,OAAO,EAAE;EACzBC,SAAS,EAAE,KAAK;EAChBE,WAAW,EAAGC,IAAI,IAAK,CAACA,IAAI,CAACusB,UAAU,CAAC,QAAQ,CAAC,IAAI,CAACvsB,IAAI,CAACusB,UAAU,CAAC,OAAO,CAAC,IAAIvsB,IAAI,KAAK,UAAU,IAAIA,IAAI,KAAK,QAAQ;EAC1HF,UAAU,EAAGE,IAAI,IAAKA,IAAI,KAAK,YAAY,IAAIA,IAAI,KAAK;AAC1D,CAAC,CAAC;AACFlS,QAAQ,CAAC8R,QAAQ,CAAC,QAAQ,EAAE;EAC1BC,SAAS,EAAE;AACb,CAAC,CAAC;AAEF,SAASksB,QAAQA,CAAC7pB,KAAK,EAAEiO,KAAK,EAAE;EAC9B,MAAMqc,QAAQ,GAAGtqB,KAAK,CAACf,OAAO,CAACgP,KAAK;EACpC,MAAMsc,UAAU,GAAGD,QAAQ,CAACE,aAAa,IAAIC,iBAAiB,CAACzqB,KAAK,CAAC;EACrE,MAAM0qB,YAAY,GAAGJ,QAAQ,CAACL,KAAK,CAACU,OAAO,GAAGC,eAAe,CAAC3c,KAAK,CAAC,GAAG,EAAE;EACzE,MAAM4c,eAAe,GAAGH,YAAY,CAAClyB,MAAM;EAC3C,MAAMsyB,KAAK,GAAGJ,YAAY,CAAC,CAAC,CAAC;EAC7B,MAAM3Z,IAAI,GAAG2Z,YAAY,CAACG,eAAe,GAAG,CAAC,CAAC;EAC9C,MAAME,QAAQ,GAAG,EAAE;EACnB,IAAIF,eAAe,GAAGN,UAAU,EAAE;IAChCS,UAAU,CAAC/c,KAAK,EAAE8c,QAAQ,EAAEL,YAAY,EAAEG,eAAe,GAAGN,UAAU,CAAC;IACvE,OAAOQ,QAAQ;EACjB;EACA,MAAM7V,OAAO,GAAG+V,gBAAgB,CAACP,YAAY,EAAEzc,KAAK,EAAEsc,UAAU,CAAC;EACjE,IAAIM,eAAe,GAAG,CAAC,EAAE;IACvB,IAAIt/B,CAAC,EAAE0V,IAAI;IACX,MAAMiqB,eAAe,GAAGL,eAAe,GAAG,CAAC,GAAG9yB,IAAI,CAACozB,KAAK,CAAC,CAACpa,IAAI,GAAG+Z,KAAK,KAAKD,eAAe,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI;IACvG/X,IAAI,CAAC7E,KAAK,EAAE8c,QAAQ,EAAE7V,OAAO,EAAEtoB,aAAa,CAACs+B,eAAe,CAAC,GAAG,CAAC,GAAGJ,KAAK,GAAGI,eAAe,EAAEJ,KAAK,CAAC;IACnG,KAAKv/B,CAAC,GAAG,CAAC,EAAE0V,IAAI,GAAG4pB,eAAe,GAAG,CAAC,EAAEt/B,CAAC,GAAG0V,IAAI,EAAE1V,CAAC,EAAE,EAAE;MACrDunB,IAAI,CAAC7E,KAAK,EAAE8c,QAAQ,EAAE7V,OAAO,EAAEwV,YAAY,CAACn/B,CAAC,CAAC,EAAEm/B,YAAY,CAACn/B,CAAC,GAAG,CAAC,CAAC,CAAC;IACtE;IACAunB,IAAI,CAAC7E,KAAK,EAAE8c,QAAQ,EAAE7V,OAAO,EAAEnE,IAAI,EAAEnkB,aAAa,CAACs+B,eAAe,CAAC,GAAGjd,KAAK,CAACzV,MAAM,GAAGuY,IAAI,GAAGma,eAAe,CAAC;IAC5G,OAAOH,QAAQ;EACjB;EACAjY,IAAI,CAAC7E,KAAK,EAAE8c,QAAQ,EAAE7V,OAAO,CAAC;EAC9B,OAAO6V,QAAQ;AACjB;AACA,SAASN,iBAAiBA,CAACzqB,KAAK,EAAE;EAChC,MAAMsS,MAAM,GAAGtS,KAAK,CAACf,OAAO,CAACqT,MAAM;EACnC,MAAM6W,UAAU,GAAGnpB,KAAK,CAACorB,SAAS,CAAC,CAAC;EACpC,MAAMC,QAAQ,GAAGrrB,KAAK,CAAC4N,OAAO,GAAGub,UAAU,IAAI7W,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC;EAC9D,MAAMgZ,QAAQ,GAAGtrB,KAAK,CAACurB,UAAU,GAAGpC,UAAU;EAC9C,OAAOpxB,IAAI,CAACiE,KAAK,CAACjE,IAAI,CAACC,GAAG,CAACqzB,QAAQ,EAAEC,QAAQ,CAAC,CAAC;AACjD;AACA,SAASL,gBAAgBA,CAACP,YAAY,EAAEzc,KAAK,EAAEsc,UAAU,EAAE;EACzD,MAAMiB,gBAAgB,GAAGC,cAAc,CAACf,YAAY,CAAC;EACrD,MAAMxV,OAAO,GAAGjH,KAAK,CAACzV,MAAM,GAAG+xB,UAAU;EACzC,IAAI,CAACiB,gBAAgB,EAAE;IACrB,OAAOzzB,IAAI,CAACoC,GAAG,CAAC+a,OAAO,EAAE,CAAC,CAAC;EAC7B;EACA,MAAMwW,OAAO,GAAG17B,UAAU,CAACw7B,gBAAgB,CAAC;EAC5C,KAAK,IAAIjgC,CAAC,GAAG,CAAC,EAAE0V,IAAI,GAAGyqB,OAAO,CAAClzB,MAAM,GAAG,CAAC,EAAEjN,CAAC,GAAG0V,IAAI,EAAE1V,CAAC,EAAE,EAAE;IACxD,MAAMwP,MAAM,GAAG2wB,OAAO,CAACngC,CAAC,CAAC;IACzB,IAAIwP,MAAM,GAAGma,OAAO,EAAE;MACpB,OAAOna,MAAM;IACf;EACF;EACA,OAAOhD,IAAI,CAACoC,GAAG,CAAC+a,OAAO,EAAE,CAAC,CAAC;AAC7B;AACA,SAAS0V,eAAeA,CAAC3c,KAAK,EAAE;EAC9B,MAAM0d,MAAM,GAAG,EAAE;EACjB,IAAIpgC,CAAC,EAAE0V,IAAI;EACX,KAAK1V,CAAC,GAAG,CAAC,EAAE0V,IAAI,GAAGgN,KAAK,CAACzV,MAAM,EAAEjN,CAAC,GAAG0V,IAAI,EAAE1V,CAAC,EAAE,EAAE;IAC9C,IAAI0iB,KAAK,CAAC1iB,CAAC,CAAC,CAAC0+B,KAAK,EAAE;MAClB0B,MAAM,CAAC9xB,IAAI,CAACtO,CAAC,CAAC;IAChB;EACF;EACA,OAAOogC,MAAM;AACf;AACA,SAASX,UAAUA,CAAC/c,KAAK,EAAE8c,QAAQ,EAAEL,YAAY,EAAExV,OAAO,EAAE;EAC1D,IAAI9M,KAAK,GAAG,CAAC;EACb,IAAI0G,IAAI,GAAG4b,YAAY,CAAC,CAAC,CAAC;EAC1B,IAAIn/B,CAAC;EACL2pB,OAAO,GAAGnd,IAAI,CAAC6zB,IAAI,CAAC1W,OAAO,CAAC;EAC5B,KAAK3pB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG0iB,KAAK,CAACzV,MAAM,EAAEjN,CAAC,EAAE,EAAE;IACjC,IAAIA,CAAC,KAAKujB,IAAI,EAAE;MACdic,QAAQ,CAAClxB,IAAI,CAACoU,KAAK,CAAC1iB,CAAC,CAAC,CAAC;MACvB6c,KAAK,EAAE;MACP0G,IAAI,GAAG4b,YAAY,CAACtiB,KAAK,GAAG8M,OAAO,CAAC;IACtC;EACF;AACF;AACA,SAASpC,IAAIA,CAAC7E,KAAK,EAAE8c,QAAQ,EAAE7V,OAAO,EAAE2W,UAAU,EAAEC,QAAQ,EAAE;EAC5D,MAAM7zB,KAAK,GAAGnM,cAAc,CAAC+/B,UAAU,EAAE,CAAC,CAAC;EAC3C,MAAMzrB,GAAG,GAAGrI,IAAI,CAACC,GAAG,CAAClM,cAAc,CAACggC,QAAQ,EAAE7d,KAAK,CAACzV,MAAM,CAAC,EAAEyV,KAAK,CAACzV,MAAM,CAAC;EAC1E,IAAI4P,KAAK,GAAG,CAAC;EACb,IAAI5P,MAAM,EAAEjN,CAAC,EAAEujB,IAAI;EACnBoG,OAAO,GAAGnd,IAAI,CAAC6zB,IAAI,CAAC1W,OAAO,CAAC;EAC5B,IAAI4W,QAAQ,EAAE;IACZtzB,MAAM,GAAGszB,QAAQ,GAAGD,UAAU;IAC9B3W,OAAO,GAAG1c,MAAM,GAAGT,IAAI,CAACiE,KAAK,CAACxD,MAAM,GAAG0c,OAAO,CAAC;EACjD;EACApG,IAAI,GAAG7W,KAAK;EACZ,OAAO6W,IAAI,GAAG,CAAC,EAAE;IACf1G,KAAK,EAAE;IACP0G,IAAI,GAAG/W,IAAI,CAACozB,KAAK,CAAClzB,KAAK,GAAGmQ,KAAK,GAAG8M,OAAO,CAAC;EAC5C;EACA,KAAK3pB,CAAC,GAAGwM,IAAI,CAACoC,GAAG,CAAClC,KAAK,EAAE,CAAC,CAAC,EAAE1M,CAAC,GAAG6U,GAAG,EAAE7U,CAAC,EAAE,EAAE;IACzC,IAAIA,CAAC,KAAKujB,IAAI,EAAE;MACdic,QAAQ,CAAClxB,IAAI,CAACoU,KAAK,CAAC1iB,CAAC,CAAC,CAAC;MACvB6c,KAAK,EAAE;MACP0G,IAAI,GAAG/W,IAAI,CAACozB,KAAK,CAAClzB,KAAK,GAAGmQ,KAAK,GAAG8M,OAAO,CAAC;IAC5C;EACF;AACF;AACA,SAASuW,cAAcA,CAAC9e,GAAG,EAAE;EAC3B,MAAMof,GAAG,GAAGpf,GAAG,CAACnU,MAAM;EACtB,IAAIjN,CAAC,EAAEywB,IAAI;EACX,IAAI+P,GAAG,GAAG,CAAC,EAAE;IACX,OAAO,KAAK;EACd;EACA,KAAK/P,IAAI,GAAGrP,GAAG,CAAC,CAAC,CAAC,EAAEphB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGwgC,GAAG,EAAE,EAAExgC,CAAC,EAAE;IACvC,IAAIohB,GAAG,CAACphB,CAAC,CAAC,GAAGohB,GAAG,CAACphB,CAAC,GAAG,CAAC,CAAC,KAAKywB,IAAI,EAAE;MAChC,OAAO,KAAK;IACd;EACF;EACA,OAAOA,IAAI;AACb;AAEA,MAAMgQ,YAAY,GAAI9B,KAAK,IAAKA,KAAK,KAAK,MAAM,GAAG,OAAO,GAAGA,KAAK,KAAK,OAAO,GAAG,MAAM,GAAGA,KAAK;AAC/F,MAAM+B,cAAc,GAAGA,CAACjsB,KAAK,EAAEksB,IAAI,EAAE5Z,MAAM,KAAK4Z,IAAI,KAAK,KAAK,IAAIA,IAAI,KAAK,MAAM,GAAGlsB,KAAK,CAACksB,IAAI,CAAC,GAAG5Z,MAAM,GAAGtS,KAAK,CAACksB,IAAI,CAAC,GAAG5Z,MAAM;AAC/H,SAAS6Z,MAAMA,CAACxf,GAAG,EAAEyf,QAAQ,EAAE;EAC7B,MAAMT,MAAM,GAAG,EAAE;EACjB,MAAMU,SAAS,GAAG1f,GAAG,CAACnU,MAAM,GAAG4zB,QAAQ;EACvC,MAAML,GAAG,GAAGpf,GAAG,CAACnU,MAAM;EACtB,IAAIjN,CAAC,GAAG,CAAC;EACT,OAAOA,CAAC,GAAGwgC,GAAG,EAAExgC,CAAC,IAAI8gC,SAAS,EAAE;IAC9BV,MAAM,CAAC9xB,IAAI,CAAC8S,GAAG,CAAC5U,IAAI,CAACiE,KAAK,CAACzQ,CAAC,CAAC,CAAC,CAAC;EACjC;EACA,OAAOogC,MAAM;AACf;AACA,SAASW,mBAAmBA,CAACtsB,KAAK,EAAEkB,KAAK,EAAEqrB,eAAe,EAAE;EAC1D,MAAM/zB,MAAM,GAAGwH,KAAK,CAACiO,KAAK,CAACzV,MAAM;EACjC,MAAMg0B,UAAU,GAAGz0B,IAAI,CAACC,GAAG,CAACkJ,KAAK,EAAE1I,MAAM,GAAG,CAAC,CAAC;EAC9C,MAAMP,KAAK,GAAG+H,KAAK,CAACqR,WAAW;EAC/B,MAAMjR,GAAG,GAAGJ,KAAK,CAACsR,SAAS;EAC3B,MAAMmb,OAAO,GAAG,IAAI;EACpB,IAAIC,SAAS,GAAG1sB,KAAK,CAACkO,eAAe,CAACse,UAAU,CAAC;EACjD,IAAIla,MAAM;EACV,IAAIia,eAAe,EAAE;IACnB,IAAI/zB,MAAM,KAAK,CAAC,EAAE;MAChB8Z,MAAM,GAAGva,IAAI,CAACoC,GAAG,CAACuyB,SAAS,GAAGz0B,KAAK,EAAEmI,GAAG,GAAGssB,SAAS,CAAC;IACvD,CAAC,MAAM,IAAIxrB,KAAK,KAAK,CAAC,EAAE;MACtBoR,MAAM,GAAG,CAACtS,KAAK,CAACkO,eAAe,CAAC,CAAC,CAAC,GAAGwe,SAAS,IAAI,CAAC;IACrD,CAAC,MAAM;MACLpa,MAAM,GAAG,CAACoa,SAAS,GAAG1sB,KAAK,CAACkO,eAAe,CAACse,UAAU,GAAG,CAAC,CAAC,IAAI,CAAC;IAClE;IACAE,SAAS,IAAIF,UAAU,GAAGtrB,KAAK,GAAGoR,MAAM,GAAG,CAACA,MAAM;IAClD,IAAIoa,SAAS,GAAGz0B,KAAK,GAAGw0B,OAAO,IAAIC,SAAS,GAAGtsB,GAAG,GAAGqsB,OAAO,EAAE;MAC5D;IACF;EACF;EACA,OAAOC,SAAS;AAClB;AACA,SAASC,cAAcA,CAACC,MAAM,EAAEp0B,MAAM,EAAE;EACtCtJ,IAAI,CAAC09B,MAAM,EAAG9hB,KAAK,IAAK;IACtB,MAAM+hB,EAAE,GAAG/hB,KAAK,CAAC+hB,EAAE;IACnB,MAAMC,KAAK,GAAGD,EAAE,CAACr0B,MAAM,GAAG,CAAC;IAC3B,IAAIjN,CAAC;IACL,IAAIuhC,KAAK,GAAGt0B,MAAM,EAAE;MAClB,KAAKjN,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGuhC,KAAK,EAAE,EAAEvhC,CAAC,EAAE;QAC1B,OAAOuf,KAAK,CAACnJ,IAAI,CAACkrB,EAAE,CAACthC,CAAC,CAAC,CAAC;MAC1B;MACAshC,EAAE,CAAC/f,MAAM,CAAC,CAAC,EAAEggB,KAAK,CAAC;IACrB;EACF,CAAC,CAAC;AACJ;AACA,SAASC,iBAAiBA,CAAC9tB,OAAO,EAAE;EAClC,OAAOA,OAAO,CAACiqB,SAAS,GAAGjqB,OAAO,CAACkqB,UAAU,GAAG,CAAC;AACnD;AACA,SAAS6D,cAAcA,CAAC/tB,OAAO,EAAEguB,QAAQ,EAAE;EACzC,IAAI,CAAChuB,OAAO,CAAC2b,OAAO,EAAE;IACpB,OAAO,CAAC;EACV;EACA,MAAMsS,IAAI,GAAGl8B,MAAM,CAACiO,OAAO,CAACiuB,IAAI,EAAED,QAAQ,CAAC;EAC3C,MAAM5K,OAAO,GAAGrzB,SAAS,CAACiQ,OAAO,CAACojB,OAAO,CAAC;EAC1C,MAAM8K,KAAK,GAAGzhC,OAAO,CAACuT,OAAO,CAACoY,IAAI,CAAC,GAAGpY,OAAO,CAACoY,IAAI,CAAC7e,MAAM,GAAG,CAAC;EAC7D,OAAQ20B,KAAK,GAAGD,IAAI,CAACE,UAAU,GAAI/K,OAAO,CAACzR,MAAM;AACnD;AACA,SAASyc,kBAAkBA,CAACrpB,MAAM,EAAEhE,KAAK,EAAE;EACzC,OAAOzC,MAAM,CAACqC,MAAM,CAACrC,MAAM,CAAC0G,MAAM,CAACD,MAAM,CAAC,EAAE;IAC1ChE,KAAK;IACLzI,IAAI,EAAE;EACR,CAAC,CAAC;AACJ;AACA,SAAS+1B,iBAAiBA,CAACtpB,MAAM,EAAE9C,KAAK,EAAEhI,IAAI,EAAE;EAC9C,OAAOqE,MAAM,CAACqC,MAAM,CAACrC,MAAM,CAAC0G,MAAM,CAACD,MAAM,CAAC,EAAE;IAC1C9K,IAAI;IACJgI,KAAK;IACL3J,IAAI,EAAE;EACR,CAAC,CAAC;AACJ;AACA,SAASg2B,UAAUA,CAACrD,KAAK,EAAE7M,QAAQ,EAAEld,OAAO,EAAE;EAC5C,IAAI4nB,GAAG,GAAG72B,kBAAkB,CAACg5B,KAAK,CAAC;EACnC,IAAK/pB,OAAO,IAAIkd,QAAQ,KAAK,OAAO,IAAM,CAACld,OAAO,IAAIkd,QAAQ,KAAK,OAAQ,EAAE;IAC3E0K,GAAG,GAAGiE,YAAY,CAACjE,GAAG,CAAC;EACzB;EACA,OAAOA,GAAG;AACZ;AACA,SAASyF,SAASA,CAACxtB,KAAK,EAAEsS,MAAM,EAAE+K,QAAQ,EAAE6M,KAAK,EAAE;EACjD,MAAM;IAAC1pB,GAAG;IAAEG,IAAI;IAAED,MAAM;IAAED;EAAK,CAAC,GAAGT,KAAK;EACxC,IAAIoT,QAAQ,GAAG,CAAC;EAChB,IAAIoC,QAAQ,EAAEiY,MAAM,EAAEC,MAAM;EAC5B,IAAI1tB,KAAK,CAACmQ,YAAY,CAAC,CAAC,EAAE;IACxBsd,MAAM,GAAGr8B,cAAc,CAAC84B,KAAK,EAAEvpB,IAAI,EAAEF,KAAK,CAAC;IAC3CitB,MAAM,GAAGzB,cAAc,CAACjsB,KAAK,EAAEqd,QAAQ,EAAE/K,MAAM,CAAC;IAChDkD,QAAQ,GAAG/U,KAAK,GAAGE,IAAI;EACzB,CAAC,MAAM;IACL8sB,MAAM,GAAGxB,cAAc,CAACjsB,KAAK,EAAEqd,QAAQ,EAAE/K,MAAM,CAAC;IAChDob,MAAM,GAAGt8B,cAAc,CAAC84B,KAAK,EAAExpB,MAAM,EAAEF,GAAG,CAAC;IAC3C4S,QAAQ,GAAGiK,QAAQ,KAAK,MAAM,GAAG,CAACrvB,OAAO,GAAGA,OAAO;EACrD;EACA,OAAO;IAACy/B,MAAM;IAAEC,MAAM;IAAElY,QAAQ;IAAEpC;EAAQ,CAAC;AAC7C;AACA,MAAMua,KAAK,SAASjG,OAAO,CAAC;EAC1B9wB,WAAWA,CAAC2E,GAAG,EAAE;IACf,KAAK,CAAC,CAAC;IACP,IAAI,CAAC6G,EAAE,GAAG7G,GAAG,CAAC6G,EAAE;IAChB,IAAI,CAAC7K,IAAI,GAAGgE,GAAG,CAAChE,IAAI;IACpB,IAAI,CAAC0H,OAAO,GAAG/H,SAAS;IACxB,IAAI,CAAC6N,GAAG,GAAGxJ,GAAG,CAACwJ,GAAG;IAClB,IAAI,CAAC3N,KAAK,GAAGmE,GAAG,CAACnE,KAAK;IACtB,IAAI,CAACoJ,GAAG,GAAGtJ,SAAS;IACpB,IAAI,CAACwJ,MAAM,GAAGxJ,SAAS;IACvB,IAAI,CAACyJ,IAAI,GAAGzJ,SAAS;IACrB,IAAI,CAACuJ,KAAK,GAAGvJ,SAAS;IACtB,IAAI,CAAC2Z,KAAK,GAAG3Z,SAAS;IACtB,IAAI,CAAC0Z,MAAM,GAAG1Z,SAAS;IACvB,IAAI,CAAC02B,QAAQ,GAAG;MACdjtB,IAAI,EAAE,CAAC;MACPF,KAAK,EAAE,CAAC;MACRD,GAAG,EAAE,CAAC;MACNE,MAAM,EAAE;IACV,CAAC;IACD,IAAI,CAAC8U,QAAQ,GAAGte,SAAS;IACzB,IAAI,CAACue,SAAS,GAAGve,SAAS;IAC1B,IAAI,CAAC22B,UAAU,GAAG32B,SAAS;IAC3B,IAAI,CAAC42B,aAAa,GAAG52B,SAAS;IAC9B,IAAI,CAAC62B,WAAW,GAAG72B,SAAS;IAC5B,IAAI,CAAC82B,YAAY,GAAG92B,SAAS;IAC7B,IAAI,CAACsM,IAAI,GAAGtM,SAAS;IACrB,IAAI,CAAC+2B,aAAa,GAAG/2B,SAAS;IAC9B,IAAI,CAACc,GAAG,GAAGd,SAAS;IACpB,IAAI,CAACiD,GAAG,GAAGjD,SAAS;IACpB,IAAI,CAAC+W,KAAK,GAAG,EAAE;IACf,IAAI,CAACigB,cAAc,GAAG,IAAI;IAC1B,IAAI,CAACC,WAAW,GAAG,IAAI;IACvB,IAAI,CAACC,WAAW,GAAG,IAAI;IACvB,IAAI,CAACxgB,OAAO,GAAG,CAAC;IAChB,IAAI,CAAC2d,UAAU,GAAG,CAAC;IACnB,IAAI,CAAC8C,iBAAiB,GAAG,CAAC,CAAC;IAC3B,IAAI,CAAChd,WAAW,GAAGna,SAAS;IAC5B,IAAI,CAACoa,SAAS,GAAGpa,SAAS;IAC1B,IAAI,CAAC+lB,cAAc,GAAG,KAAK;IAC3B,IAAI,CAACqR,QAAQ,GAAGp3B,SAAS;IACzB,IAAI,CAACq3B,QAAQ,GAAGr3B,SAAS;IACzB,IAAI,CAACs3B,aAAa,GAAGt3B,SAAS;IAC9B,IAAI,CAACu3B,aAAa,GAAGv3B,SAAS;IAC9B,IAAI,CAACw3B,YAAY,GAAG,CAAC;IACrB,IAAI,CAACC,YAAY,GAAG,CAAC;IACrB,IAAI,CAACrhB,MAAM,GAAG,CAAC,CAAC;IAChB,IAAI,CAACshB,iBAAiB,GAAG,KAAK;IAC9B,IAAI,CAAClpB,QAAQ,GAAGxO,SAAS;EAC3B;EACA23B,IAAIA,CAAC5vB,OAAO,EAAE;IACZ,MAAM9G,EAAE,GAAG,IAAI;IACfA,EAAE,CAAC8G,OAAO,GAAGA,OAAO;IACpB9G,EAAE,CAACqL,IAAI,GAAGvE,OAAO,CAACuE,IAAI;IACtBrL,EAAE,CAACo2B,QAAQ,GAAGp2B,EAAE,CAACgQ,KAAK,CAAClJ,OAAO,CAACjH,GAAG,CAAC;IACnCG,EAAE,CAACm2B,QAAQ,GAAGn2B,EAAE,CAACgQ,KAAK,CAAClJ,OAAO,CAAC9E,GAAG,CAAC;IACnChC,EAAE,CAACs2B,aAAa,GAAGt2B,EAAE,CAACgQ,KAAK,CAAClJ,OAAO,CAAC6vB,YAAY,CAAC;IACjD32B,EAAE,CAACq2B,aAAa,GAAGr2B,EAAE,CAACgQ,KAAK,CAAClJ,OAAO,CAAC8vB,YAAY,CAAC;EACnD;EACA5mB,KAAKA,CAAC7D,GAAG,EAAEpD,KAAK,EAAE;IAChB,OAAOoD,GAAG;EACZ;EACAjC,aAAaA,CAAA,EAAG;IACd,IAAI;MAACksB,QAAQ;MAAED,QAAQ;MAAEG,aAAa;MAAED;IAAa,CAAC,GAAG,IAAI;IAC7DD,QAAQ,GAAGr+B,eAAe,CAACq+B,QAAQ,EAAE/rB,MAAM,CAACE,iBAAiB,CAAC;IAC9D4rB,QAAQ,GAAGp+B,eAAe,CAACo+B,QAAQ,EAAE9rB,MAAM,CAACC,iBAAiB,CAAC;IAC9DgsB,aAAa,GAAGv+B,eAAe,CAACu+B,aAAa,EAAEjsB,MAAM,CAACE,iBAAiB,CAAC;IACxE8rB,aAAa,GAAGt+B,eAAe,CAACs+B,aAAa,EAAEhsB,MAAM,CAACC,iBAAiB,CAAC;IACxE,OAAO;MACLzK,GAAG,EAAE9H,eAAe,CAACq+B,QAAQ,EAAEE,aAAa,CAAC;MAC7Ct0B,GAAG,EAAEjK,eAAe,CAACo+B,QAAQ,EAAEE,aAAa,CAAC;MAC7ClsB,UAAU,EAAEhW,cAAc,CAACiiC,QAAQ,CAAC;MACpChsB,UAAU,EAAEjW,cAAc,CAACgiC,QAAQ;IACrC,CAAC;EACH;EACA/kB,SAASA,CAACC,QAAQ,EAAE;IAClB,MAAMrR,EAAE,GAAG,IAAI;IACf,IAAI;MAACH,GAAG;MAAEmC,GAAG;MAAEmI,UAAU;MAAEC;IAAU,CAAC,GAAGpK,EAAE,CAACkK,aAAa,CAAC,CAAC;IAC3D,IAAI+G,KAAK;IACT,IAAI9G,UAAU,IAAIC,UAAU,EAAE;MAC5B,OAAO;QAACvK,GAAG;QAAEmC;MAAG,CAAC;IACnB;IACA,MAAMqT,KAAK,GAAGrV,EAAE,CAACsV,uBAAuB,CAAC,CAAC;IAC1C,KAAK,IAAIliB,CAAC,GAAG,CAAC,EAAE0V,IAAI,GAAGuM,KAAK,CAAChV,MAAM,EAAEjN,CAAC,GAAG0V,IAAI,EAAE,EAAE1V,CAAC,EAAE;MAClD6d,KAAK,GAAGoE,KAAK,CAACjiB,CAAC,CAAC,CAAC0X,UAAU,CAACsG,SAAS,CAACpR,EAAE,EAAEqR,QAAQ,CAAC;MACnD,IAAI,CAAClH,UAAU,EAAE;QACftK,GAAG,GAAGD,IAAI,CAACC,GAAG,CAACA,GAAG,EAAEoR,KAAK,CAACpR,GAAG,CAAC;MAChC;MACA,IAAI,CAACuK,UAAU,EAAE;QACfpI,GAAG,GAAGpC,IAAI,CAACoC,GAAG,CAACA,GAAG,EAAEiP,KAAK,CAACjP,GAAG,CAAC;MAChC;IACF;IACA,OAAO;MACLnC,GAAG,EAAE9H,eAAe,CAAC8H,GAAG,EAAE9H,eAAe,CAACiK,GAAG,EAAEnC,GAAG,CAAC,CAAC;MACpDmC,GAAG,EAAEjK,eAAe,CAACiK,GAAG,EAAEjK,eAAe,CAAC8H,GAAG,EAAEmC,GAAG,CAAC;IACrD,CAAC;EACH;EACA+mB,UAAUA,CAAA,EAAG;IACX,MAAM/oB,EAAE,GAAG,IAAI;IACf,OAAO;MACLwI,IAAI,EAAExI,EAAE,CAAC41B,WAAW,IAAI,CAAC;MACzBvtB,GAAG,EAAErI,EAAE,CAAC01B,UAAU,IAAI,CAAC;MACvBptB,KAAK,EAAEtI,EAAE,CAAC61B,YAAY,IAAI,CAAC;MAC3BttB,MAAM,EAAEvI,EAAE,CAAC21B,aAAa,IAAI;IAC9B,CAAC;EACH;EACAkB,QAAQA,CAAA,EAAG;IACT,OAAO,IAAI,CAAC/gB,KAAK;EACnB;EACApF,SAASA,CAAA,EAAG;IACV,MAAMlH,IAAI,GAAG,IAAI,CAACvK,KAAK,CAACuK,IAAI;IAC5B,OAAO,IAAI,CAAC1C,OAAO,CAAC2J,MAAM,KAAK,IAAI,CAACuH,YAAY,CAAC,CAAC,GAAGxO,IAAI,CAACstB,OAAO,GAAGttB,IAAI,CAACutB,OAAO,CAAC,IAAIvtB,IAAI,CAACiH,MAAM,IAAI,EAAE;EACxG;EACAia,YAAYA,CAAA,EAAG;IACb,IAAI,CAACvV,MAAM,GAAG,CAAC,CAAC;IAChB,IAAI,CAACshB,iBAAiB,GAAG,KAAK;EAChC;EACAO,YAAYA,CAAA,EAAG;IACb/+B,QAAQ,CAAC,IAAI,CAAC6O,OAAO,CAACkwB,YAAY,EAAE,CAAC,IAAI,CAAC,CAAC;EAC7C;EACAzyB,MAAMA,CAAC8Y,QAAQ,EAAEC,SAAS,EAAE2Z,OAAO,EAAE;IACnC,MAAMj3B,EAAE,GAAG,IAAI;IACf,MAAMmyB,QAAQ,GAAGnyB,EAAE,CAAC8G,OAAO,CAACgP,KAAK;IACjC,MAAMohB,UAAU,GAAG/E,QAAQ,CAAC+E,UAAU;IACtCl3B,EAAE,CAACg3B,YAAY,CAAC,CAAC;IACjBh3B,EAAE,CAACqd,QAAQ,GAAGA,QAAQ;IACtBrd,EAAE,CAACsd,SAAS,GAAGA,SAAS;IACxBtd,EAAE,CAACy1B,QAAQ,GAAGwB,OAAO,GAAG7xB,MAAM,CAACqC,MAAM,CAAC;MACpCe,IAAI,EAAE,CAAC;MACPF,KAAK,EAAE,CAAC;MACRD,GAAG,EAAE,CAAC;MACNE,MAAM,EAAE;IACV,CAAC,EAAE0uB,OAAO,CAAC;IACXj3B,EAAE,CAAC8V,KAAK,GAAG,IAAI;IACf9V,EAAE,CAACi2B,WAAW,GAAG,IAAI;IACrBj2B,EAAE,CAAC+1B,cAAc,GAAG,IAAI;IACxB/1B,EAAE,CAACg2B,WAAW,GAAG,IAAI;IACrBh2B,EAAE,CAACm3B,mBAAmB,CAAC,CAAC;IACxBn3B,EAAE,CAACo3B,aAAa,CAAC,CAAC;IAClBp3B,EAAE,CAACq3B,kBAAkB,CAAC,CAAC;IACvBr3B,EAAE,CAACozB,UAAU,GAAGpzB,EAAE,CAACgY,YAAY,CAAC,CAAC,GAC7BhY,EAAE,CAAC0Y,KAAK,GAAGue,OAAO,CAACzuB,IAAI,GAAGyuB,OAAO,CAAC3uB,KAAK,GACvCtI,EAAE,CAACyY,MAAM,GAAGwe,OAAO,CAAC5uB,GAAG,GAAG4uB,OAAO,CAAC1uB,MAAM;IAC5C,IAAI,CAACvI,EAAE,CAACy2B,iBAAiB,EAAE;MACzBz2B,EAAE,CAACs3B,gBAAgB,CAAC,CAAC;MACrBt3B,EAAE,CAACu3B,mBAAmB,CAAC,CAAC;MACxBv3B,EAAE,CAACw3B,eAAe,CAAC,CAAC;MACpBx3B,EAAE,CAACy2B,iBAAiB,GAAG,IAAI;IAC7B;IACAz2B,EAAE,CAACy3B,gBAAgB,CAAC,CAAC;IACrBz3B,EAAE,CAAC8V,KAAK,GAAG9V,EAAE,CAAC03B,UAAU,CAAC,CAAC,IAAI,EAAE;IAChC13B,EAAE,CAAC23B,eAAe,CAAC,CAAC;IACpB,MAAMC,eAAe,GAAGV,UAAU,GAAGl3B,EAAE,CAAC8V,KAAK,CAACzV,MAAM;IACpDL,EAAE,CAAC63B,qBAAqB,CAACD,eAAe,GAAG5D,MAAM,CAACh0B,EAAE,CAAC8V,KAAK,EAAEohB,UAAU,CAAC,GAAGl3B,EAAE,CAAC8V,KAAK,CAAC;IACnF9V,EAAE,CAACsG,SAAS,CAAC,CAAC;IACdtG,EAAE,CAAC83B,4BAA4B,CAAC,CAAC;IACjC93B,EAAE,CAAC+3B,sBAAsB,CAAC,CAAC;IAC3B/3B,EAAE,CAACg4B,2BAA2B,CAAC,CAAC;IAChC,IAAI7F,QAAQ,CAAC1P,OAAO,KAAK0P,QAAQ,CAACT,QAAQ,IAAIS,QAAQ,CAAC8F,MAAM,KAAK,MAAM,CAAC,EAAE;MACzEj4B,EAAE,CAAC8V,KAAK,GAAG4b,QAAQ,CAAC1xB,EAAE,EAAEA,EAAE,CAAC8V,KAAK,CAAC;MACjC9V,EAAE,CAACi2B,WAAW,GAAG,IAAI;IACvB;IACA,IAAI2B,eAAe,EAAE;MACnB53B,EAAE,CAAC63B,qBAAqB,CAAC73B,EAAE,CAAC8V,KAAK,CAAC;IACpC;IACA9V,EAAE,CAACk4B,SAAS,CAAC,CAAC;IACdl4B,EAAE,CAACm4B,GAAG,CAAC,CAAC;IACRn4B,EAAE,CAACo4B,QAAQ,CAAC,CAAC;IACbp4B,EAAE,CAACq4B,WAAW,CAAC,CAAC;EAClB;EACA/xB,SAASA,CAAA,EAAG;IACV,MAAMtG,EAAE,GAAG,IAAI;IACf,IAAIs4B,aAAa,GAAGt4B,EAAE,CAAC8G,OAAO,CAACkB,OAAO;IACtC,IAAIuwB,UAAU,EAAEC,QAAQ;IACxB,IAAIx4B,EAAE,CAACgY,YAAY,CAAC,CAAC,EAAE;MACrBugB,UAAU,GAAGv4B,EAAE,CAACwI,IAAI;MACpBgwB,QAAQ,GAAGx4B,EAAE,CAACsI,KAAK;IACrB,CAAC,MAAM;MACLiwB,UAAU,GAAGv4B,EAAE,CAACqI,GAAG;MACnBmwB,QAAQ,GAAGx4B,EAAE,CAACuI,MAAM;MACpB+vB,aAAa,GAAG,CAACA,aAAa;IAChC;IACAt4B,EAAE,CAACkZ,WAAW,GAAGqf,UAAU;IAC3Bv4B,EAAE,CAACmZ,SAAS,GAAGqf,QAAQ;IACvBx4B,EAAE,CAAC8kB,cAAc,GAAGwT,aAAa;IACjCt4B,EAAE,CAACyV,OAAO,GAAG+iB,QAAQ,GAAGD,UAAU;IAClCv4B,EAAE,CAACy4B,cAAc,GAAGz4B,EAAE,CAAC8G,OAAO,CAAC4xB,aAAa;EAC9C;EACAL,WAAWA,CAAA,EAAG;IACZpgC,QAAQ,CAAC,IAAI,CAAC6O,OAAO,CAACuxB,WAAW,EAAE,CAAC,IAAI,CAAC,CAAC;EAC5C;EACAlB,mBAAmBA,CAAA,EAAG;IACpBl/B,QAAQ,CAAC,IAAI,CAAC6O,OAAO,CAACqwB,mBAAmB,EAAE,CAAC,IAAI,CAAC,CAAC;EACpD;EACAC,aAAaA,CAAA,EAAG;IACd,MAAMp3B,EAAE,GAAG,IAAI;IACf,IAAIA,EAAE,CAACgY,YAAY,CAAC,CAAC,EAAE;MACrBhY,EAAE,CAAC0Y,KAAK,GAAG1Y,EAAE,CAACqd,QAAQ;MACtBrd,EAAE,CAACwI,IAAI,GAAG,CAAC;MACXxI,EAAE,CAACsI,KAAK,GAAGtI,EAAE,CAAC0Y,KAAK;IACrB,CAAC,MAAM;MACL1Y,EAAE,CAACyY,MAAM,GAAGzY,EAAE,CAACsd,SAAS;MACxBtd,EAAE,CAACqI,GAAG,GAAG,CAAC;MACVrI,EAAE,CAACuI,MAAM,GAAGvI,EAAE,CAACyY,MAAM;IACvB;IACAzY,EAAE,CAAC41B,WAAW,GAAG,CAAC;IAClB51B,EAAE,CAAC01B,UAAU,GAAG,CAAC;IACjB11B,EAAE,CAAC61B,YAAY,GAAG,CAAC;IACnB71B,EAAE,CAAC21B,aAAa,GAAG,CAAC;EACtB;EACA0B,kBAAkBA,CAAA,EAAG;IACnBp/B,QAAQ,CAAC,IAAI,CAAC6O,OAAO,CAACuwB,kBAAkB,EAAE,CAAC,IAAI,CAAC,CAAC;EACnD;EACAsB,UAAUA,CAAChzB,IAAI,EAAE;IACf,MAAM3F,EAAE,GAAG,IAAI;IACfA,EAAE,CAACf,KAAK,CAAC25B,aAAa,CAACjzB,IAAI,EAAE3F,EAAE,CAAC8P,UAAU,CAAC,CAAC,CAAC;IAC7C7X,QAAQ,CAAC+H,EAAE,CAAC8G,OAAO,CAACnB,IAAI,CAAC,EAAE,CAAC3F,EAAE,CAAC,CAAC;EAClC;EACAs3B,gBAAgBA,CAAA,EAAG;IACjB,IAAI,CAACqB,UAAU,CAAC,kBAAkB,CAAC;EACrC;EACApB,mBAAmBA,CAAA,EAAG,CAAC;EACvBC,eAAeA,CAAA,EAAG;IAChB,IAAI,CAACmB,UAAU,CAAC,iBAAiB,CAAC;EACpC;EACAlB,gBAAgBA,CAAA,EAAG;IACjB,IAAI,CAACkB,UAAU,CAAC,kBAAkB,CAAC;EACrC;EACAjB,UAAUA,CAAA,EAAG;IACX,OAAO,EAAE;EACX;EACAC,eAAeA,CAAA,EAAG;IAChB,IAAI,CAACgB,UAAU,CAAC,iBAAiB,CAAC;EACpC;EACAE,2BAA2BA,CAAA,EAAG;IAC5B5gC,QAAQ,CAAC,IAAI,CAAC6O,OAAO,CAAC+xB,2BAA2B,EAAE,CAAC,IAAI,CAAC,CAAC;EAC5D;EACAC,kBAAkBA,CAAChjB,KAAK,EAAE;IACxB,MAAM9V,EAAE,GAAG,IAAI;IACf,MAAMmyB,QAAQ,GAAGnyB,EAAE,CAAC8G,OAAO,CAACgP,KAAK;IACjC,IAAI1iB,CAAC,EAAE0V,IAAI,EAAE/H,IAAI;IACjB,KAAK3N,CAAC,GAAG,CAAC,EAAE0V,IAAI,GAAGgN,KAAK,CAACzV,MAAM,EAAEjN,CAAC,GAAG0V,IAAI,EAAE1V,CAAC,EAAE,EAAE;MAC9C2N,IAAI,GAAG+U,KAAK,CAAC1iB,CAAC,CAAC;MACf2N,IAAI,CAAC8Q,KAAK,GAAG5Z,QAAQ,CAACk6B,QAAQ,CAACl6B,QAAQ,EAAE,CAAC8I,IAAI,CAACwG,KAAK,EAAEnU,CAAC,EAAE0iB,KAAK,CAAC,EAAE9V,EAAE,CAAC;IACtE;EACF;EACA+4B,0BAA0BA,CAAA,EAAG;IAC3B9gC,QAAQ,CAAC,IAAI,CAAC6O,OAAO,CAACiyB,0BAA0B,EAAE,CAAC,IAAI,CAAC,CAAC;EAC3D;EACAjB,4BAA4BA,CAAA,EAAG;IAC7B7/B,QAAQ,CAAC,IAAI,CAAC6O,OAAO,CAACgxB,4BAA4B,EAAE,CAAC,IAAI,CAAC,CAAC;EAC7D;EACAC,sBAAsBA,CAAA,EAAG;IACvB,MAAM/3B,EAAE,GAAG,IAAI;IACf,MAAM8G,OAAO,GAAG9G,EAAE,CAAC8G,OAAO;IAC1B,MAAMqrB,QAAQ,GAAGrrB,OAAO,CAACgP,KAAK;IAC9B,MAAMkjB,QAAQ,GAAGh5B,EAAE,CAAC8V,KAAK,CAACzV,MAAM;IAChC,MAAMgxB,WAAW,GAAGc,QAAQ,CAACd,WAAW,IAAI,CAAC;IAC7C,MAAMC,WAAW,GAAGa,QAAQ,CAACb,WAAW;IACxC,IAAIwE,aAAa,GAAGzE,WAAW;IAC/B,IAAIJ,SAAS,EAAE3T,SAAS,EAAE2b,gBAAgB;IAC1C,IAAI,CAACj5B,EAAE,CAACk5B,UAAU,CAAC,CAAC,IAAI,CAAC/G,QAAQ,CAAC1P,OAAO,IAAI4O,WAAW,IAAIC,WAAW,IAAI0H,QAAQ,IAAI,CAAC,IAAI,CAACh5B,EAAE,CAACgY,YAAY,CAAC,CAAC,EAAE;MAC9GhY,EAAE,CAAC81B,aAAa,GAAGzE,WAAW;MAC9B;IACF;IACA,MAAM8H,UAAU,GAAGn5B,EAAE,CAACo5B,cAAc,CAAC,CAAC;IACtC,MAAMC,aAAa,GAAGF,UAAU,CAACG,MAAM,CAAC5gB,KAAK;IAC7C,MAAM6gB,cAAc,GAAGJ,UAAU,CAACK,OAAO,CAAC/gB,MAAM;IAChD,MAAM4E,QAAQ,GAAGlnB,WAAW,CAAC6J,EAAE,CAACf,KAAK,CAACyZ,KAAK,GAAG2gB,aAAa,EAAE,CAAC,EAAEr5B,EAAE,CAACqd,QAAQ,CAAC;IAC5E4T,SAAS,GAAGnqB,OAAO,CAACqT,MAAM,GAAGna,EAAE,CAACqd,QAAQ,GAAG2b,QAAQ,GAAG3b,QAAQ,IAAI2b,QAAQ,GAAG,CAAC,CAAC;IAC/E,IAAIK,aAAa,GAAG,CAAC,GAAGpI,SAAS,EAAE;MACjCA,SAAS,GAAG5T,QAAQ,IAAI2b,QAAQ,IAAIlyB,OAAO,CAACqT,MAAM,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC;MAC9DmD,SAAS,GAAGtd,EAAE,CAACsd,SAAS,GAAGsX,iBAAiB,CAAC9tB,OAAO,CAACsT,IAAI,CAAC,GAC1D+X,QAAQ,CAACjI,OAAO,GAAG2K,cAAc,CAAC/tB,OAAO,CAACiU,KAAK,EAAE/a,EAAE,CAACf,KAAK,CAAC6H,OAAO,CAACiuB,IAAI,CAAC;MACvEkE,gBAAgB,GAAGr5B,IAAI,CAAC8lB,IAAI,CAAC2T,aAAa,GAAGA,aAAa,GAAGE,cAAc,GAAGA,cAAc,CAAC;MAC7FzD,aAAa,GAAG39B,SAAS,CAACyH,IAAI,CAACC,GAAG,CAChCD,IAAI,CAAC65B,IAAI,CAAC75B,IAAI,CAACC,GAAG,CAAC,CAACs5B,UAAU,CAACK,OAAO,CAAC/gB,MAAM,GAAG,CAAC,IAAIwY,SAAS,EAAE,CAAC,CAAC,CAAC,EACnErxB,IAAI,CAAC65B,IAAI,CAAC75B,IAAI,CAACC,GAAG,CAACyd,SAAS,GAAG2b,gBAAgB,EAAE,CAAC,CAAC,CAAC,GAAGr5B,IAAI,CAAC65B,IAAI,CAACF,cAAc,GAAGN,gBAAgB,CACpG,CAAC,CAAC;MACFnD,aAAa,GAAGl2B,IAAI,CAACoC,GAAG,CAACqvB,WAAW,EAAEzxB,IAAI,CAACC,GAAG,CAACyxB,WAAW,EAAEwE,aAAa,CAAC,CAAC;IAC7E;IACA91B,EAAE,CAAC81B,aAAa,GAAGA,aAAa;EAClC;EACAkC,2BAA2BA,CAAA,EAAG;IAC5B//B,QAAQ,CAAC,IAAI,CAAC6O,OAAO,CAACkxB,2BAA2B,EAAE,CAAC,IAAI,CAAC,CAAC;EAC5D;EACAE,SAASA,CAAA,EAAG;IACVjgC,QAAQ,CAAC,IAAI,CAAC6O,OAAO,CAACoxB,SAAS,EAAE,CAAC,IAAI,CAAC,CAAC;EAC1C;EACAC,GAAGA,CAAA,EAAG;IACJ,MAAMn4B,EAAE,GAAG,IAAI;IACf,MAAM6hB,OAAO,GAAG;MACdnJ,KAAK,EAAE,CAAC;MACRD,MAAM,EAAE;IACV,CAAC;IACD,MAAM;MAACxZ,KAAK;MAAE6H,OAAO,EAAE;QAACgP,KAAK,EAAEqc,QAAQ;QAAEpX,KAAK,EAAE2e,SAAS;QAAEtf,IAAI,EAAEuf;MAAQ;IAAC,CAAC,GAAG35B,EAAE;IAChF,MAAMyiB,OAAO,GAAGziB,EAAE,CAACk5B,UAAU,CAAC,CAAC;IAC/B,MAAMlhB,YAAY,GAAGhY,EAAE,CAACgY,YAAY,CAAC,CAAC;IACtC,IAAIyK,OAAO,EAAE;MACX,MAAMmX,WAAW,GAAG/E,cAAc,CAAC6E,SAAS,EAAEz6B,KAAK,CAAC6H,OAAO,CAACiuB,IAAI,CAAC;MACjE,IAAI/c,YAAY,EAAE;QAChB6J,OAAO,CAACnJ,KAAK,GAAG1Y,EAAE,CAACqd,QAAQ;QAC3BwE,OAAO,CAACpJ,MAAM,GAAGmc,iBAAiB,CAAC+E,QAAQ,CAAC,GAAGC,WAAW;MAC5D,CAAC,MAAM;QACL/X,OAAO,CAACpJ,MAAM,GAAGzY,EAAE,CAACsd,SAAS;QAC7BuE,OAAO,CAACnJ,KAAK,GAAGkc,iBAAiB,CAAC+E,QAAQ,CAAC,GAAGC,WAAW;MAC3D;MACA,IAAIzH,QAAQ,CAAC1P,OAAO,IAAIziB,EAAE,CAAC8V,KAAK,CAACzV,MAAM,EAAE;QACvC,MAAM;UAACsyB,KAAK;UAAE/Z,IAAI;UAAE0gB,MAAM;UAAEE;QAAO,CAAC,GAAGx5B,EAAE,CAACo5B,cAAc,CAAC,CAAC;QAC1D,MAAMS,WAAW,GAAG1H,QAAQ,CAACjI,OAAO,GAAG,CAAC;QACxC,MAAM4P,YAAY,GAAG7kC,SAAS,CAAC+K,EAAE,CAAC81B,aAAa,CAAC;QAChD,MAAMna,GAAG,GAAG/b,IAAI,CAAC+b,GAAG,CAACme,YAAY,CAAC;QAClC,MAAMje,GAAG,GAAGjc,IAAI,CAACic,GAAG,CAACie,YAAY,CAAC;QAClC,IAAI9hB,YAAY,EAAE;UAChB,MAAM+hB,WAAW,GAAGle,GAAG,GAAGyd,MAAM,CAAC5gB,KAAK,GAAGiD,GAAG,GAAG6d,OAAO,CAAC/gB,MAAM;UAC7DoJ,OAAO,CAACpJ,MAAM,GAAG7Y,IAAI,CAACC,GAAG,CAACG,EAAE,CAACsd,SAAS,EAAEuE,OAAO,CAACpJ,MAAM,GAAGshB,WAAW,GAAGF,WAAW,CAAC;QACrF,CAAC,MAAM;UACL,MAAMG,UAAU,GAAG7H,QAAQ,CAACZ,MAAM,GAAG,CAAC,GAAG5V,GAAG,GAAG2d,MAAM,CAAC5gB,KAAK,GAAGmD,GAAG,GAAG2d,OAAO,CAAC/gB,MAAM;UAClFoJ,OAAO,CAACnJ,KAAK,GAAG9Y,IAAI,CAACC,GAAG,CAACG,EAAE,CAACqd,QAAQ,EAAEwE,OAAO,CAACnJ,KAAK,GAAGshB,UAAU,GAAGH,WAAW,CAAC;QACjF;QACA75B,EAAE,CAACi6B,iBAAiB,CAACtH,KAAK,EAAE/Z,IAAI,EAAEiD,GAAG,EAAEF,GAAG,CAAC;MAC7C;IACF;IACA3b,EAAE,CAACk6B,cAAc,CAAC,CAAC;IACnB,IAAIliB,YAAY,EAAE;MAChBhY,EAAE,CAAC0Y,KAAK,GAAG1Y,EAAE,CAACyV,OAAO,GAAGxW,KAAK,CAACyZ,KAAK,GAAG1Y,EAAE,CAACy1B,QAAQ,CAACjtB,IAAI,GAAGxI,EAAE,CAACy1B,QAAQ,CAACntB,KAAK;MAC1EtI,EAAE,CAACyY,MAAM,GAAGoJ,OAAO,CAACpJ,MAAM;IAC5B,CAAC,MAAM;MACLzY,EAAE,CAAC0Y,KAAK,GAAGmJ,OAAO,CAACnJ,KAAK;MACxB1Y,EAAE,CAACyY,MAAM,GAAGzY,EAAE,CAACyV,OAAO,GAAGxW,KAAK,CAACwZ,MAAM,GAAGzY,EAAE,CAACy1B,QAAQ,CAACptB,GAAG,GAAGrI,EAAE,CAACy1B,QAAQ,CAACltB,MAAM;IAC9E;EACF;EACA0xB,iBAAiBA,CAACtH,KAAK,EAAE/Z,IAAI,EAAEiD,GAAG,EAAEF,GAAG,EAAE;IACvC,MAAM3b,EAAE,GAAG,IAAI;IACf,MAAM;MAAC8V,KAAK,EAAE;QAACic,KAAK;QAAE7H;MAAO,CAAC;MAAEhF;IAAQ,CAAC,GAAGllB,EAAE,CAAC8G,OAAO;IACtD,MAAMqzB,SAAS,GAAGn6B,EAAE,CAAC81B,aAAa,KAAK,CAAC;IACxC,MAAMsE,gBAAgB,GAAGlV,QAAQ,KAAK,KAAK,IAAIllB,EAAE,CAACqL,IAAI,KAAK,GAAG;IAC9D,IAAIrL,EAAE,CAACgY,YAAY,CAAC,CAAC,EAAE;MACrB,MAAMqiB,UAAU,GAAGr6B,EAAE,CAAC+V,eAAe,CAAC,CAAC,CAAC,GAAG/V,EAAE,CAACwI,IAAI;MAClD,MAAM8xB,WAAW,GAAGt6B,EAAE,CAACsI,KAAK,GAAGtI,EAAE,CAAC+V,eAAe,CAAC/V,EAAE,CAAC8V,KAAK,CAACzV,MAAM,GAAG,CAAC,CAAC;MACtE,IAAIu1B,WAAW,GAAG,CAAC;MACnB,IAAIC,YAAY,GAAG,CAAC;MACpB,IAAIsE,SAAS,EAAE;QACb,IAAIC,gBAAgB,EAAE;UACpBxE,WAAW,GAAGja,GAAG,GAAGgX,KAAK,CAACja,KAAK;UAC/Bmd,YAAY,GAAGha,GAAG,GAAGjD,IAAI,CAACH,MAAM;QAClC,CAAC,MAAM;UACLmd,WAAW,GAAG/Z,GAAG,GAAG8W,KAAK,CAACla,MAAM;UAChCod,YAAY,GAAGla,GAAG,GAAG/C,IAAI,CAACF,KAAK;QACjC;MACF,CAAC,MAAM,IAAIqZ,KAAK,KAAK,OAAO,EAAE;QAC5B8D,YAAY,GAAGjd,IAAI,CAACF,KAAK;MAC3B,CAAC,MAAM,IAAIqZ,KAAK,KAAK,KAAK,EAAE;QAC1B6D,WAAW,GAAGjD,KAAK,CAACja,KAAK;MAC3B,CAAC,MAAM;QACLkd,WAAW,GAAGjD,KAAK,CAACja,KAAK,GAAG,CAAC;QAC7Bmd,YAAY,GAAGjd,IAAI,CAACF,KAAK,GAAG,CAAC;MAC/B;MACA1Y,EAAE,CAAC41B,WAAW,GAAGh2B,IAAI,CAACoC,GAAG,CAAC,CAAC4zB,WAAW,GAAGyE,UAAU,GAAGnQ,OAAO,IAAIlqB,EAAE,CAAC0Y,KAAK,IAAI1Y,EAAE,CAAC0Y,KAAK,GAAG2hB,UAAU,CAAC,EAAE,CAAC,CAAC;MACvGr6B,EAAE,CAAC61B,YAAY,GAAGj2B,IAAI,CAACoC,GAAG,CAAC,CAAC6zB,YAAY,GAAGyE,WAAW,GAAGpQ,OAAO,IAAIlqB,EAAE,CAAC0Y,KAAK,IAAI1Y,EAAE,CAAC0Y,KAAK,GAAG4hB,WAAW,CAAC,EAAE,CAAC,CAAC;IAC7G,CAAC,MAAM;MACL,IAAI5E,UAAU,GAAG9c,IAAI,CAACH,MAAM,GAAG,CAAC;MAChC,IAAIkd,aAAa,GAAGhD,KAAK,CAACla,MAAM,GAAG,CAAC;MACpC,IAAIsZ,KAAK,KAAK,OAAO,EAAE;QACrB2D,UAAU,GAAG,CAAC;QACdC,aAAa,GAAGhD,KAAK,CAACla,MAAM;MAC9B,CAAC,MAAM,IAAIsZ,KAAK,KAAK,KAAK,EAAE;QAC1B2D,UAAU,GAAG9c,IAAI,CAACH,MAAM;QACxBkd,aAAa,GAAG,CAAC;MACnB;MACA31B,EAAE,CAAC01B,UAAU,GAAGA,UAAU,GAAGxL,OAAO;MACpClqB,EAAE,CAAC21B,aAAa,GAAGA,aAAa,GAAGzL,OAAO;IAC5C;EACF;EACAgQ,cAAcA,CAAA,EAAG;IACf,MAAMl6B,EAAE,GAAG,IAAI;IACf,IAAIA,EAAE,CAACy1B,QAAQ,EAAE;MACfz1B,EAAE,CAACy1B,QAAQ,CAACjtB,IAAI,GAAG5I,IAAI,CAACoC,GAAG,CAAChC,EAAE,CAAC41B,WAAW,EAAE51B,EAAE,CAACy1B,QAAQ,CAACjtB,IAAI,CAAC;MAC7DxI,EAAE,CAACy1B,QAAQ,CAACptB,GAAG,GAAGzI,IAAI,CAACoC,GAAG,CAAChC,EAAE,CAAC01B,UAAU,EAAE11B,EAAE,CAACy1B,QAAQ,CAACptB,GAAG,CAAC;MAC1DrI,EAAE,CAACy1B,QAAQ,CAACntB,KAAK,GAAG1I,IAAI,CAACoC,GAAG,CAAChC,EAAE,CAAC61B,YAAY,EAAE71B,EAAE,CAACy1B,QAAQ,CAACntB,KAAK,CAAC;MAChEtI,EAAE,CAACy1B,QAAQ,CAACltB,MAAM,GAAG3I,IAAI,CAACoC,GAAG,CAAChC,EAAE,CAAC21B,aAAa,EAAE31B,EAAE,CAACy1B,QAAQ,CAACltB,MAAM,CAAC;IACrE;EACF;EACA6vB,QAAQA,CAAA,EAAG;IACTngC,QAAQ,CAAC,IAAI,CAAC6O,OAAO,CAACsxB,QAAQ,EAAE,CAAC,IAAI,CAAC,CAAC;EACzC;EACApgB,YAAYA,CAAA,EAAG;IACb,MAAM;MAAC3M,IAAI;MAAE6Z;IAAQ,CAAC,GAAG,IAAI,CAACpe,OAAO;IACrC,OAAOoe,QAAQ,KAAK,KAAK,IAAIA,QAAQ,KAAK,QAAQ,IAAI7Z,IAAI,KAAK,GAAG;EACpE;EACAkvB,UAAUA,CAAA,EAAG;IACX,OAAO,IAAI,CAACzzB,OAAO,CAAC8gB,QAAQ;EAC9B;EACAiQ,qBAAqBA,CAAC/hB,KAAK,EAAE;IAC3B,MAAM9V,EAAE,GAAG,IAAI;IACfA,EAAE,CAAC64B,2BAA2B,CAAC,CAAC;IAChC74B,EAAE,CAAC84B,kBAAkB,CAAChjB,KAAK,CAAC;IAC5B9V,EAAE,CAAC+4B,0BAA0B,CAAC,CAAC;EACjC;EACAK,cAAcA,CAAA,EAAG;IACf,MAAMp5B,EAAE,GAAG,IAAI;IACf,IAAIm5B,UAAU,GAAGn5B,EAAE,CAACi2B,WAAW;IAC/B,IAAI,CAACkD,UAAU,EAAE;MACf,MAAMjC,UAAU,GAAGl3B,EAAE,CAAC8G,OAAO,CAACgP,KAAK,CAACohB,UAAU;MAC9C,IAAIphB,KAAK,GAAG9V,EAAE,CAAC8V,KAAK;MACpB,IAAIohB,UAAU,GAAGphB,KAAK,CAACzV,MAAM,EAAE;QAC7ByV,KAAK,GAAGke,MAAM,CAACle,KAAK,EAAEohB,UAAU,CAAC;MACnC;MACAl3B,EAAE,CAACi2B,WAAW,GAAGkD,UAAU,GAAGn5B,EAAE,CAACw6B,kBAAkB,CAAC1kB,KAAK,EAAEA,KAAK,CAACzV,MAAM,CAAC;IAC1E;IACA,OAAO84B,UAAU;EACnB;EACAqB,kBAAkBA,CAAC1kB,KAAK,EAAEzV,MAAM,EAAE;IAChC,MAAM;MAACuM,GAAG;MAAEspB,iBAAiB,EAAEzB;IAAM,CAAC,GAAG,IAAI;IAC7C,MAAMgG,MAAM,GAAG,EAAE;IACjB,MAAMC,OAAO,GAAG,EAAE;IAClB,IAAIC,eAAe,GAAG,CAAC;IACvB,IAAIC,gBAAgB,GAAG,CAAC;IACxB,IAAIxnC,CAAC,EAAEoB,CAAC,EAAEiwB,IAAI,EAAE5S,KAAK,EAAEgpB,QAAQ,EAAEC,UAAU,EAAEnoB,KAAK,EAAEsiB,UAAU,EAAEvc,KAAK,EAAED,MAAM,EAAEsiB,WAAW;IAC1F,KAAK3nC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGiN,MAAM,EAAE,EAAEjN,CAAC,EAAE;MAC3Bye,KAAK,GAAGiE,KAAK,CAAC1iB,CAAC,CAAC,CAACye,KAAK;MACtBgpB,QAAQ,GAAG,IAAI,CAACG,uBAAuB,CAAC5nC,CAAC,CAAC;MAC1CwZ,GAAG,CAACmoB,IAAI,GAAG+F,UAAU,GAAGD,QAAQ,CAACI,MAAM;MACvCtoB,KAAK,GAAG8hB,MAAM,CAACqG,UAAU,CAAC,GAAGrG,MAAM,CAACqG,UAAU,CAAC,IAAI;QAACtxB,IAAI,EAAE,CAAC,CAAC;QAAEkrB,EAAE,EAAE;MAAE,CAAC;MACrEO,UAAU,GAAG4F,QAAQ,CAAC5F,UAAU;MAChCvc,KAAK,GAAGD,MAAM,GAAG,CAAC;MAClB,IAAI,CAAChkB,aAAa,CAACod,KAAK,CAAC,IAAI,CAACte,OAAO,CAACse,KAAK,CAAC,EAAE;QAC5C6G,KAAK,GAAGrgB,YAAY,CAACuU,GAAG,EAAE+F,KAAK,CAACnJ,IAAI,EAAEmJ,KAAK,CAAC+hB,EAAE,EAAEhc,KAAK,EAAE7G,KAAK,CAAC;QAC7D4G,MAAM,GAAGwc,UAAU;MACrB,CAAC,MAAM,IAAI1hC,OAAO,CAACse,KAAK,CAAC,EAAE;QACzB,KAAKrd,CAAC,GAAG,CAAC,EAAEiwB,IAAI,GAAG5S,KAAK,CAACxR,MAAM,EAAE7L,CAAC,GAAGiwB,IAAI,EAAE,EAAEjwB,CAAC,EAAE;UAC9CumC,WAAW,GAAGlpB,KAAK,CAACrd,CAAC,CAAC;UACtB,IAAI,CAACC,aAAa,CAACsmC,WAAW,CAAC,IAAI,CAACxnC,OAAO,CAACwnC,WAAW,CAAC,EAAE;YACxDriB,KAAK,GAAGrgB,YAAY,CAACuU,GAAG,EAAE+F,KAAK,CAACnJ,IAAI,EAAEmJ,KAAK,CAAC+hB,EAAE,EAAEhc,KAAK,EAAEqiB,WAAW,CAAC;YACnEtiB,MAAM,IAAIwc,UAAU;UACtB;QACF;MACF;MACAwF,MAAM,CAAC/4B,IAAI,CAACgX,KAAK,CAAC;MAClBgiB,OAAO,CAACh5B,IAAI,CAAC+W,MAAM,CAAC;MACpBkiB,eAAe,GAAG/6B,IAAI,CAACoC,GAAG,CAAC0W,KAAK,EAAEiiB,eAAe,CAAC;MAClDC,gBAAgB,GAAGh7B,IAAI,CAACoC,GAAG,CAACyW,MAAM,EAAEmiB,gBAAgB,CAAC;IACvD;IACApG,cAAc,CAACC,MAAM,EAAEp0B,MAAM,CAAC;IAC9B,MAAMi5B,MAAM,GAAGmB,MAAM,CAAC1hB,OAAO,CAAC4hB,eAAe,CAAC;IAC9C,MAAMnB,OAAO,GAAGkB,OAAO,CAAC3hB,OAAO,CAAC6hB,gBAAgB,CAAC;IACjD,MAAMM,OAAO,GAAIC,GAAG,KAAM;MAACziB,KAAK,EAAE+hB,MAAM,CAACU,GAAG,CAAC,IAAI,CAAC;MAAE1iB,MAAM,EAAEiiB,OAAO,CAACS,GAAG,CAAC,IAAI;IAAC,CAAC,CAAC;IAC/E,OAAO;MACLxI,KAAK,EAAEuI,OAAO,CAAC,CAAC,CAAC;MACjBtiB,IAAI,EAAEsiB,OAAO,CAAC76B,MAAM,GAAG,CAAC,CAAC;MACzBi5B,MAAM,EAAE4B,OAAO,CAAC5B,MAAM,CAAC;MACvBE,OAAO,EAAE0B,OAAO,CAAC1B,OAAO;IAC1B,CAAC;EACH;EACA1nB,gBAAgBA,CAACvK,KAAK,EAAE;IACtB,OAAOA,KAAK;EACd;EACAsO,gBAAgBA,CAACtO,KAAK,EAAEwB,KAAK,EAAE;IAC7B,OAAOoI,GAAG;EACZ;EACAiqB,gBAAgBA,CAACC,KAAK,EAAE,CAAC;EACzBtlB,eAAeA,CAAChN,KAAK,EAAE;IACrB,MAAM+M,KAAK,GAAG,IAAI,CAACA,KAAK;IACxB,IAAI/M,KAAK,GAAG,CAAC,IAAIA,KAAK,GAAG+M,KAAK,CAACzV,MAAM,GAAG,CAAC,EAAE;MACzC,OAAO,IAAI;IACb;IACA,OAAO,IAAI,CAACwV,gBAAgB,CAACC,KAAK,CAAC/M,KAAK,CAAC,CAACxB,KAAK,CAAC;EAClD;EACAmT,kBAAkBA,CAAC4gB,OAAO,EAAE;IAC1B,MAAMt7B,EAAE,GAAG,IAAI;IACf,IAAIA,EAAE,CAAC8kB,cAAc,EAAE;MACrBwW,OAAO,GAAG,CAAC,GAAGA,OAAO;IACvB;IACA,MAAMD,KAAK,GAAGr7B,EAAE,CAACkZ,WAAW,GAAGoiB,OAAO,GAAGt7B,EAAE,CAACyV,OAAO;IACnD,OAAOld,WAAW,CAACyH,EAAE,CAACy4B,cAAc,GAAGhgC,WAAW,CAACuH,EAAE,CAACf,KAAK,EAAEo8B,KAAK,EAAE,CAAC,CAAC,GAAGA,KAAK,CAAC;EACjF;EACAE,kBAAkBA,CAACF,KAAK,EAAE;IACxB,MAAMC,OAAO,GAAG,CAACD,KAAK,GAAG,IAAI,CAACniB,WAAW,IAAI,IAAI,CAACzD,OAAO;IACzD,OAAO,IAAI,CAACqP,cAAc,GAAG,CAAC,GAAGwW,OAAO,GAAGA,OAAO;EACpD;EACAxjB,YAAYA,CAAA,EAAG;IACb,OAAO,IAAI,CAACjC,gBAAgB,CAAC,IAAI,CAAC2lB,YAAY,CAAC,CAAC,CAAC;EACnD;EACAA,YAAYA,CAAA,EAAG;IACb,MAAM;MAAC37B,GAAG;MAAEmC;IAAG,CAAC,GAAG,IAAI;IACvB,OAAOnC,GAAG,GAAG,CAAC,IAAImC,GAAG,GAAG,CAAC,GAAGA,GAAG,GAC7BnC,GAAG,GAAG,CAAC,IAAImC,GAAG,GAAG,CAAC,GAAGnC,GAAG,GACxB,CAAC;EACL;EACAiQ,UAAUA,CAAC/G,KAAK,EAAE;IAChB,MAAM/I,EAAE,GAAG,IAAI;IACf,MAAM8V,KAAK,GAAG9V,EAAE,CAAC8V,KAAK,IAAI,EAAE;IAC5B,IAAI/M,KAAK,IAAI,CAAC,IAAIA,KAAK,GAAG+M,KAAK,CAACzV,MAAM,EAAE;MACtC,MAAMU,IAAI,GAAG+U,KAAK,CAAC/M,KAAK,CAAC;MACzB,OAAOhI,IAAI,CAACwM,QAAQ,KACrBxM,IAAI,CAACwM,QAAQ,GAAG4nB,iBAAiB,CAACn1B,EAAE,CAAC8P,UAAU,CAAC,CAAC,EAAE/G,KAAK,EAAEhI,IAAI,CAAC,CAAC;IACjE;IACA,OAAOf,EAAE,CAACuN,QAAQ,KAClBvN,EAAE,CAACuN,QAAQ,GAAG2nB,kBAAkB,CAACl1B,EAAE,CAACf,KAAK,CAAC6Q,UAAU,CAAC,CAAC,EAAE9P,EAAE,CAAC,CAAC;EAC9D;EACAizB,SAASA,CAAA,EAAG;IACV,MAAMjzB,EAAE,GAAG,IAAI;IACf,MAAMy7B,WAAW,GAAGz7B,EAAE,CAAC8G,OAAO,CAACgP,KAAK;IACpC,MAAM4lB,GAAG,GAAGzmC,SAAS,CAAC+K,EAAE,CAAC81B,aAAa,CAAC;IACvC,MAAMna,GAAG,GAAG/b,IAAI,CAACgW,GAAG,CAAChW,IAAI,CAAC+b,GAAG,CAAC+f,GAAG,CAAC,CAAC;IACnC,MAAM7f,GAAG,GAAGjc,IAAI,CAACgW,GAAG,CAAChW,IAAI,CAACic,GAAG,CAAC6f,GAAG,CAAC,CAAC;IACnC,MAAMvC,UAAU,GAAGn5B,EAAE,CAACo5B,cAAc,CAAC,CAAC;IACtC,MAAMlP,OAAO,GAAGuR,WAAW,CAAC9J,eAAe,IAAI,CAAC;IAChD,MAAM37B,CAAC,GAAGmjC,UAAU,GAAGA,UAAU,CAACG,MAAM,CAAC5gB,KAAK,GAAGwR,OAAO,GAAG,CAAC;IAC5D,MAAM91B,CAAC,GAAG+kC,UAAU,GAAGA,UAAU,CAACK,OAAO,CAAC/gB,MAAM,GAAGyR,OAAO,GAAG,CAAC;IAC9D,OAAOlqB,EAAE,CAACgY,YAAY,CAAC,CAAC,GACpB5jB,CAAC,GAAGunB,GAAG,GAAG3lB,CAAC,GAAG6lB,GAAG,GAAG7lB,CAAC,GAAG2lB,GAAG,GAAGvnB,CAAC,GAAGynB,GAAG,GACrCznB,CAAC,GAAGynB,GAAG,GAAG7lB,CAAC,GAAG2lB,GAAG,GAAGvnB,CAAC,GAAGunB,GAAG,GAAG3lB,CAAC,GAAG6lB,GAAG;EAC3C;EACAqd,UAAUA,CAAA,EAAG;IACX,MAAMzW,OAAO,GAAG,IAAI,CAAC3b,OAAO,CAAC2b,OAAO;IACpC,IAAIA,OAAO,KAAK,MAAM,EAAE;MACtB,OAAO,CAAC,CAACA,OAAO;IAClB;IACA,OAAO,IAAI,CAACnN,uBAAuB,CAAC,CAAC,CAACjV,MAAM,GAAG,CAAC;EAClD;EACAs7B,qBAAqBA,CAACxpB,SAAS,EAAE;IAC/B,MAAMnS,EAAE,GAAG,IAAI;IACf,MAAMqL,IAAI,GAAGrL,EAAE,CAACqL,IAAI;IACpB,MAAMpM,KAAK,GAAGe,EAAE,CAACf,KAAK;IACtB,MAAM6H,OAAO,GAAG9G,EAAE,CAAC8G,OAAO;IAC1B,MAAM;MAACsT,IAAI;MAAE8K;IAAQ,CAAC,GAAGpe,OAAO;IAChC,MAAMqT,MAAM,GAAGC,IAAI,CAACD,MAAM;IAC1B,MAAMnC,YAAY,GAAGhY,EAAE,CAACgY,YAAY,CAAC,CAAC;IACtC,MAAMlC,KAAK,GAAG9V,EAAE,CAAC8V,KAAK;IACtB,MAAM8lB,WAAW,GAAG9lB,KAAK,CAACzV,MAAM,IAAI8Z,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC;IACnD,MAAM0hB,EAAE,GAAGjH,iBAAiB,CAACxa,IAAI,CAAC;IAClC,MAAM1Z,KAAK,GAAG,EAAE;IAChB,MAAMo7B,UAAU,GAAG1hB,IAAI,CAAC2hB,UAAU,CAAC/7B,EAAE,CAAC8P,UAAU,CAAC,CAAC,CAAC,CAAC;IACpD,MAAMksB,SAAS,GAAGF,UAAU,CAACjL,UAAU,GAAGiL,UAAU,CAACtd,WAAW,GAAG,CAAC;IACpE,MAAMyd,aAAa,GAAGD,SAAS,GAAG,CAAC;IACnC,MAAME,gBAAgB,GAAG,SAAAA,CAASb,KAAK,EAAE;MACvC,OAAO5iC,WAAW,CAACwG,KAAK,EAAEo8B,KAAK,EAAEW,SAAS,CAAC;IAC7C,CAAC;IACD,IAAIG,WAAW,EAAE/oC,CAAC,EAAEmhC,SAAS,EAAE6H,gBAAgB;IAC/C,IAAIC,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE;IACtC,IAAI1X,QAAQ,KAAK,KAAK,EAAE;MACtBiX,WAAW,GAAGD,gBAAgB,CAACl8B,EAAE,CAACuI,MAAM,CAAC;MACzC+zB,GAAG,GAAGt8B,EAAE,CAACuI,MAAM,GAAGszB,EAAE;MACpBW,GAAG,GAAGL,WAAW,GAAGF,aAAa;MACjCS,EAAE,GAAGR,gBAAgB,CAAC/pB,SAAS,CAAC9J,GAAG,CAAC,GAAG4zB,aAAa;MACpDW,EAAE,GAAGzqB,SAAS,CAAC5J,MAAM;IACvB,CAAC,MAAM,IAAI2c,QAAQ,KAAK,QAAQ,EAAE;MAChCiX,WAAW,GAAGD,gBAAgB,CAACl8B,EAAE,CAACqI,GAAG,CAAC;MACtCq0B,EAAE,GAAGvqB,SAAS,CAAC9J,GAAG;MAClBu0B,EAAE,GAAGV,gBAAgB,CAAC/pB,SAAS,CAAC5J,MAAM,CAAC,GAAG0zB,aAAa;MACvDK,GAAG,GAAGH,WAAW,GAAGF,aAAa;MACjCO,GAAG,GAAGx8B,EAAE,CAACqI,GAAG,GAAGwzB,EAAE;IACnB,CAAC,MAAM,IAAI3W,QAAQ,KAAK,MAAM,EAAE;MAC9BiX,WAAW,GAAGD,gBAAgB,CAACl8B,EAAE,CAACsI,KAAK,CAAC;MACxC+zB,GAAG,GAAGr8B,EAAE,CAACsI,KAAK,GAAGuzB,EAAE;MACnBU,GAAG,GAAGJ,WAAW,GAAGF,aAAa;MACjCQ,EAAE,GAAGP,gBAAgB,CAAC/pB,SAAS,CAAC3J,IAAI,CAAC,GAAGyzB,aAAa;MACrDU,EAAE,GAAGxqB,SAAS,CAAC7J,KAAK;IACtB,CAAC,MAAM,IAAI4c,QAAQ,KAAK,OAAO,EAAE;MAC/BiX,WAAW,GAAGD,gBAAgB,CAACl8B,EAAE,CAACwI,IAAI,CAAC;MACvCi0B,EAAE,GAAGtqB,SAAS,CAAC3J,IAAI;MACnBm0B,EAAE,GAAGT,gBAAgB,CAAC/pB,SAAS,CAAC7J,KAAK,CAAC,GAAG2zB,aAAa;MACtDI,GAAG,GAAGF,WAAW,GAAGF,aAAa;MACjCM,GAAG,GAAGv8B,EAAE,CAACwI,IAAI,GAAGqzB,EAAE;IACpB,CAAC,MAAM,IAAIxwB,IAAI,KAAK,GAAG,EAAE;MACvB,IAAI6Z,QAAQ,KAAK,QAAQ,EAAE;QACzBiX,WAAW,GAAGD,gBAAgB,CAAC,CAAC/pB,SAAS,CAAC9J,GAAG,GAAG8J,SAAS,CAAC5J,MAAM,IAAI,CAAC,GAAG,GAAG,CAAC;MAC9E,CAAC,MAAM,IAAIlV,QAAQ,CAAC6xB,QAAQ,CAAC,EAAE;QAC7B,MAAM2X,cAAc,GAAGz3B,MAAM,CAACC,IAAI,CAAC6f,QAAQ,CAAC,CAAC,CAAC,CAAC;QAC/C,MAAM3d,KAAK,GAAG2d,QAAQ,CAAC2X,cAAc,CAAC;QACtCV,WAAW,GAAGD,gBAAgB,CAACl8B,EAAE,CAACf,KAAK,CAACwM,MAAM,CAACoxB,cAAc,CAAC,CAAChnB,gBAAgB,CAACtO,KAAK,CAAC,CAAC;MACzF;MACAm1B,EAAE,GAAGvqB,SAAS,CAAC9J,GAAG;MAClBu0B,EAAE,GAAGzqB,SAAS,CAAC5J,MAAM;MACrB+zB,GAAG,GAAGH,WAAW,GAAGF,aAAa;MACjCO,GAAG,GAAGF,GAAG,GAAGT,EAAE;IAChB,CAAC,MAAM,IAAIxwB,IAAI,KAAK,GAAG,EAAE;MACvB,IAAI6Z,QAAQ,KAAK,QAAQ,EAAE;QACzBiX,WAAW,GAAGD,gBAAgB,CAAC,CAAC/pB,SAAS,CAAC3J,IAAI,GAAG2J,SAAS,CAAC7J,KAAK,IAAI,CAAC,CAAC;MACxE,CAAC,MAAM,IAAIjV,QAAQ,CAAC6xB,QAAQ,CAAC,EAAE;QAC7B,MAAM2X,cAAc,GAAGz3B,MAAM,CAACC,IAAI,CAAC6f,QAAQ,CAAC,CAAC,CAAC,CAAC;QAC/C,MAAM3d,KAAK,GAAG2d,QAAQ,CAAC2X,cAAc,CAAC;QACtCV,WAAW,GAAGD,gBAAgB,CAACl8B,EAAE,CAACf,KAAK,CAACwM,MAAM,CAACoxB,cAAc,CAAC,CAAChnB,gBAAgB,CAACtO,KAAK,CAAC,CAAC;MACzF;MACA80B,GAAG,GAAGF,WAAW,GAAGF,aAAa;MACjCM,GAAG,GAAGF,GAAG,GAAGR,EAAE;MACdY,EAAE,GAAGtqB,SAAS,CAAC3J,IAAI;MACnBm0B,EAAE,GAAGxqB,SAAS,CAAC7J,KAAK;IACtB;IACA,KAAKlV,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGwoC,WAAW,EAAE,EAAExoC,CAAC,EAAE;MAChC,MAAM0pC,WAAW,GAAG1iB,IAAI,CAAC2hB,UAAU,CAAC/7B,EAAE,CAAC8P,UAAU,CAAC1c,CAAC,CAAC,CAAC;MACrD,MAAMmsB,SAAS,GAAGud,WAAW,CAACvd,SAAS;MACvC,MAAMwd,SAAS,GAAGD,WAAW,CAAC3pC,KAAK;MACnC,MAAMg+B,UAAU,GAAG/W,IAAI,CAAC+W,UAAU,IAAI,EAAE;MACxC,MAAMC,gBAAgB,GAAG0L,WAAW,CAAC1L,gBAAgB;MACrD,MAAMH,SAAS,GAAG6L,WAAW,CAAC7L,SAAS;MACvC,MAAMC,SAAS,GAAG4L,WAAW,CAAC5L,SAAS;MACvC,MAAM8L,cAAc,GAAGF,WAAW,CAACE,cAAc,IAAI,EAAE;MACvD,MAAMC,oBAAoB,GAAGH,WAAW,CAACG,oBAAoB;MAC7D1I,SAAS,GAAGJ,mBAAmB,CAACn0B,EAAE,EAAE5M,CAAC,EAAE+mB,MAAM,CAAC;MAC9C,IAAIoa,SAAS,KAAKx1B,SAAS,EAAE;QAC3B;MACF;MACAq9B,gBAAgB,GAAG3jC,WAAW,CAACwG,KAAK,EAAEs1B,SAAS,EAAEhV,SAAS,CAAC;MAC3D,IAAIvH,YAAY,EAAE;QAChBqkB,GAAG,GAAGE,GAAG,GAAGE,EAAE,GAAGE,EAAE,GAAGP,gBAAgB;MACxC,CAAC,MAAM;QACLE,GAAG,GAAGE,GAAG,GAAGE,EAAE,GAAGE,EAAE,GAAGR,gBAAgB;MACxC;MACA17B,KAAK,CAACgB,IAAI,CAAC;QACT26B,GAAG;QACHC,GAAG;QACHC,GAAG;QACHC,GAAG;QACHC,EAAE;QACFC,EAAE;QACFC,EAAE;QACFC,EAAE;QACFlkB,KAAK,EAAE6G,SAAS;QAChBpsB,KAAK,EAAE4pC,SAAS;QAChB5L,UAAU;QACVC,gBAAgB;QAChBH,SAAS;QACTC,SAAS;QACT8L,cAAc;QACdC;MACF,CAAC,CAAC;IACJ;IACAj9B,EAAE,CAACu2B,YAAY,GAAGqF,WAAW;IAC7B57B,EAAE,CAACw2B,YAAY,GAAG2F,WAAW;IAC7B,OAAOz7B,KAAK;EACd;EACAw8B,kBAAkBA,CAAC/qB,SAAS,EAAE;IAC5B,MAAMnS,EAAE,GAAG,IAAI;IACf,MAAMqL,IAAI,GAAGrL,EAAE,CAACqL,IAAI;IACpB,MAAMvE,OAAO,GAAG9G,EAAE,CAAC8G,OAAO;IAC1B,MAAM;MAACoe,QAAQ;MAAEpP,KAAK,EAAE2lB;IAAW,CAAC,GAAG30B,OAAO;IAC9C,MAAMkR,YAAY,GAAGhY,EAAE,CAACgY,YAAY,CAAC,CAAC;IACtC,MAAMlC,KAAK,GAAG9V,EAAE,CAAC8V,KAAK;IACtB,MAAM;MAACic,KAAK;MAAEC,UAAU;MAAE9H;IAAO,CAAC,GAAGuR,WAAW;IAChD,MAAMI,EAAE,GAAGjH,iBAAiB,CAAC9tB,OAAO,CAACsT,IAAI,CAAC;IAC1C,MAAM+iB,cAAc,GAAGtB,EAAE,GAAG3R,OAAO;IACnC,MAAMjP,QAAQ,GAAG,CAAChmB,SAAS,CAAC+K,EAAE,CAAC81B,aAAa,CAAC;IAC7C,MAAMp1B,KAAK,GAAG,EAAE;IAChB,IAAItN,CAAC,EAAE0V,IAAI,EAAE/H,IAAI,EAAE8Q,KAAK,EAAE3b,CAAC,EAAEE,CAAC,EAAEgnC,SAAS,EAAE/B,KAAK,EAAEtG,IAAI,EAAEE,UAAU,EAAEoI,SAAS,EAAEC,UAAU;IACzF,IAAIC,YAAY,GAAG,QAAQ;IAC3B,IAAIrY,QAAQ,KAAK,KAAK,EAAE;MACtB9uB,CAAC,GAAG4J,EAAE,CAACuI,MAAM,GAAG40B,cAAc;MAC9BC,SAAS,GAAGp9B,EAAE,CAACw9B,uBAAuB,CAAC,CAAC;IAC1C,CAAC,MAAM,IAAItY,QAAQ,KAAK,QAAQ,EAAE;MAChC9uB,CAAC,GAAG4J,EAAE,CAACqI,GAAG,GAAG80B,cAAc;MAC3BC,SAAS,GAAGp9B,EAAE,CAACw9B,uBAAuB,CAAC,CAAC;IAC1C,CAAC,MAAM,IAAItY,QAAQ,KAAK,MAAM,EAAE;MAC9B,MAAM0K,GAAG,GAAG,IAAI,CAAC6N,uBAAuB,CAAC5B,EAAE,CAAC;MAC5CuB,SAAS,GAAGxN,GAAG,CAACwN,SAAS;MACzBlnC,CAAC,GAAG05B,GAAG,CAAC15B,CAAC;IACX,CAAC,MAAM,IAAIgvB,QAAQ,KAAK,OAAO,EAAE;MAC/B,MAAM0K,GAAG,GAAG,IAAI,CAAC6N,uBAAuB,CAAC5B,EAAE,CAAC;MAC5CuB,SAAS,GAAGxN,GAAG,CAACwN,SAAS;MACzBlnC,CAAC,GAAG05B,GAAG,CAAC15B,CAAC;IACX,CAAC,MAAM,IAAImV,IAAI,KAAK,GAAG,EAAE;MACvB,IAAI6Z,QAAQ,KAAK,QAAQ,EAAE;QACzB9uB,CAAC,GAAI,CAAC+b,SAAS,CAAC9J,GAAG,GAAG8J,SAAS,CAAC5J,MAAM,IAAI,CAAC,GAAI40B,cAAc;MAC/D,CAAC,MAAM,IAAI9pC,QAAQ,CAAC6xB,QAAQ,CAAC,EAAE;QAC7B,MAAM2X,cAAc,GAAGz3B,MAAM,CAACC,IAAI,CAAC6f,QAAQ,CAAC,CAAC,CAAC,CAAC;QAC/C,MAAM3d,KAAK,GAAG2d,QAAQ,CAAC2X,cAAc,CAAC;QACtCzmC,CAAC,GAAG4J,EAAE,CAACf,KAAK,CAACwM,MAAM,CAACoxB,cAAc,CAAC,CAAChnB,gBAAgB,CAACtO,KAAK,CAAC,GAAG41B,cAAc;MAC9E;MACAC,SAAS,GAAGp9B,EAAE,CAACw9B,uBAAuB,CAAC,CAAC;IAC1C,CAAC,MAAM,IAAInyB,IAAI,KAAK,GAAG,EAAE;MACvB,IAAI6Z,QAAQ,KAAK,QAAQ,EAAE;QACzBhvB,CAAC,GAAI,CAACic,SAAS,CAAC3J,IAAI,GAAG2J,SAAS,CAAC7J,KAAK,IAAI,CAAC,GAAI60B,cAAc;MAC/D,CAAC,MAAM,IAAI9pC,QAAQ,CAAC6xB,QAAQ,CAAC,EAAE;QAC7B,MAAM2X,cAAc,GAAGz3B,MAAM,CAACC,IAAI,CAAC6f,QAAQ,CAAC,CAAC,CAAC,CAAC;QAC/C,MAAM3d,KAAK,GAAG2d,QAAQ,CAAC2X,cAAc,CAAC;QACtC3mC,CAAC,GAAG8J,EAAE,CAACf,KAAK,CAACwM,MAAM,CAACoxB,cAAc,CAAC,CAAChnB,gBAAgB,CAACtO,KAAK,CAAC;MAC7D;MACA61B,SAAS,GAAG,IAAI,CAACK,uBAAuB,CAAC5B,EAAE,CAAC,CAACuB,SAAS;IACxD;IACA,IAAI/xB,IAAI,KAAK,GAAG,EAAE;MAChB,IAAI0mB,KAAK,KAAK,OAAO,EAAE;QACrBwL,YAAY,GAAG,KAAK;MACtB,CAAC,MAAM,IAAIxL,KAAK,KAAK,KAAK,EAAE;QAC1BwL,YAAY,GAAG,QAAQ;MACzB;IACF;IACA,MAAMpE,UAAU,GAAGn5B,EAAE,CAACo5B,cAAc,CAAC,CAAC;IACtC,KAAKhmC,CAAC,GAAG,CAAC,EAAE0V,IAAI,GAAGgN,KAAK,CAACzV,MAAM,EAAEjN,CAAC,GAAG0V,IAAI,EAAE,EAAE1V,CAAC,EAAE;MAC9C2N,IAAI,GAAG+U,KAAK,CAAC1iB,CAAC,CAAC;MACfye,KAAK,GAAG9Q,IAAI,CAAC8Q,KAAK;MAClB,MAAMirB,WAAW,GAAGrB,WAAW,CAACM,UAAU,CAAC/7B,EAAE,CAAC8P,UAAU,CAAC1c,CAAC,CAAC,CAAC;MAC5DioC,KAAK,GAAGr7B,EAAE,CAAC+V,eAAe,CAAC3iB,CAAC,CAAC,GAAGqoC,WAAW,CAAC7J,WAAW;MACvDmD,IAAI,GAAG/0B,EAAE,CAACg7B,uBAAuB,CAAC5nC,CAAC,CAAC;MACpC6hC,UAAU,GAAGF,IAAI,CAACE,UAAU;MAC5BoI,SAAS,GAAG9pC,OAAO,CAACse,KAAK,CAAC,GAAGA,KAAK,CAACxR,MAAM,GAAG,CAAC;MAC7C,MAAMq9B,SAAS,GAAGL,SAAS,GAAG,CAAC;MAC/B,MAAMlqC,KAAK,GAAG2pC,WAAW,CAAC3pC,KAAK;MAC/B,MAAMwqC,WAAW,GAAGb,WAAW,CAACrL,eAAe;MAC/C,MAAMmM,WAAW,GAAGd,WAAW,CAACtL,eAAe;MAC/C,IAAIxZ,YAAY,EAAE;QAChB9hB,CAAC,GAAGmlC,KAAK;QACT,IAAInW,QAAQ,KAAK,KAAK,EAAE;UACtB,IAAI8M,UAAU,KAAK,MAAM,IAAI/W,QAAQ,KAAK,CAAC,EAAE;YAC3CqiB,UAAU,GAAG,CAACD,SAAS,GAAGpI,UAAU,GAAGA,UAAU,GAAG,CAAC;UACvD,CAAC,MAAM,IAAIjD,UAAU,KAAK,QAAQ,EAAE;YAClCsL,UAAU,GAAG,CAACnE,UAAU,CAACK,OAAO,CAAC/gB,MAAM,GAAG,CAAC,GAAGilB,SAAS,GAAGzI,UAAU,GAAGA,UAAU;UACnF,CAAC,MAAM;YACLqI,UAAU,GAAG,CAACnE,UAAU,CAACK,OAAO,CAAC/gB,MAAM,GAAGwc,UAAU,GAAG,CAAC;UAC1D;QACF,CAAC,MAAM;UACL,IAAIjD,UAAU,KAAK,MAAM,IAAI/W,QAAQ,KAAK,CAAC,EAAE;YAC3CqiB,UAAU,GAAGrI,UAAU,GAAG,CAAC;UAC7B,CAAC,MAAM,IAAIjD,UAAU,KAAK,QAAQ,EAAE;YAClCsL,UAAU,GAAGnE,UAAU,CAACK,OAAO,CAAC/gB,MAAM,GAAG,CAAC,GAAGilB,SAAS,GAAGzI,UAAU;UACrE,CAAC,MAAM;YACLqI,UAAU,GAAGnE,UAAU,CAACK,OAAO,CAAC/gB,MAAM,GAAG4kB,SAAS,GAAGpI,UAAU;UACjE;QACF;MACF,CAAC,MAAM;QACL7+B,CAAC,GAAGilC,KAAK;QACTiC,UAAU,GAAG,CAAC,CAAC,GAAGD,SAAS,IAAIpI,UAAU,GAAG,CAAC;MAC/C;MACAv0B,KAAK,CAACgB,IAAI,CAAC;QACTuZ,QAAQ;QACRpJ,KAAK;QACLkjB,IAAI;QACJ5hC,KAAK;QACLwqC,WAAW;QACXC,WAAW;QACXN,UAAU;QACVF,SAAS;QACTG,YAAY;QACZM,WAAW,EAAE,CAAC3nC,CAAC,EAAEE,CAAC;MACpB,CAAC,CAAC;IACJ;IACA,OAAOsK,KAAK;EACd;EACA88B,uBAAuBA,CAAA,EAAG;IACxB,MAAMx9B,EAAE,GAAG,IAAI;IACf,MAAM;MAACklB,QAAQ;MAAEpP;IAAK,CAAC,GAAG9V,EAAE,CAAC8G,OAAO;IACpC,MAAMmU,QAAQ,GAAG,CAAChmB,SAAS,CAAC+K,EAAE,CAAC81B,aAAa,CAAC;IAC7C,IAAI7a,QAAQ,EAAE;MACZ,OAAOiK,QAAQ,KAAK,KAAK,GAAG,MAAM,GAAG,OAAO;IAC9C;IACA,IAAI6M,KAAK,GAAG,QAAQ;IACpB,IAAIjc,KAAK,CAACic,KAAK,KAAK,OAAO,EAAE;MAC3BA,KAAK,GAAG,MAAM;IAChB,CAAC,MAAM,IAAIjc,KAAK,CAACic,KAAK,KAAK,KAAK,EAAE;MAChCA,KAAK,GAAG,OAAO;IACjB;IACA,OAAOA,KAAK;EACd;EACA0L,uBAAuBA,CAAC5B,EAAE,EAAE;IAC1B,MAAM77B,EAAE,GAAG,IAAI;IACf,MAAM;MAACklB,QAAQ;MAAEpP,KAAK,EAAE;QAACkc,UAAU;QAAET,MAAM;QAAErH;MAAO;IAAC,CAAC,GAAGlqB,EAAE,CAAC8G,OAAO;IACnE,MAAMqyB,UAAU,GAAGn5B,EAAE,CAACo5B,cAAc,CAAC,CAAC;IACtC,MAAM+D,cAAc,GAAGtB,EAAE,GAAG3R,OAAO;IACnC,MAAMoP,MAAM,GAAGH,UAAU,CAACG,MAAM,CAAC5gB,KAAK;IACtC,IAAI0kB,SAAS;IACb,IAAIlnC,CAAC;IACL,IAAIgvB,QAAQ,KAAK,MAAM,EAAE;MACvB,IAAIqM,MAAM,EAAE;QACV6L,SAAS,GAAG,MAAM;QAClBlnC,CAAC,GAAG8J,EAAE,CAACsI,KAAK,GAAG4hB,OAAO;MACxB,CAAC,MAAM;QACLh0B,CAAC,GAAG8J,EAAE,CAACsI,KAAK,GAAG60B,cAAc;QAC7B,IAAInL,UAAU,KAAK,MAAM,EAAE;UACzBoL,SAAS,GAAG,OAAO;QACrB,CAAC,MAAM,IAAIpL,UAAU,KAAK,QAAQ,EAAE;UAClCoL,SAAS,GAAG,QAAQ;UACpBlnC,CAAC,IAAKojC,MAAM,GAAG,CAAE;QACnB,CAAC,MAAM;UACL8D,SAAS,GAAG,MAAM;UAClBlnC,CAAC,GAAG8J,EAAE,CAACwI,IAAI;QACb;MACF;IACF,CAAC,MAAM,IAAI0c,QAAQ,KAAK,OAAO,EAAE;MAC/B,IAAIqM,MAAM,EAAE;QACV6L,SAAS,GAAG,OAAO;QACnBlnC,CAAC,GAAG8J,EAAE,CAACwI,IAAI,GAAG0hB,OAAO;MACvB,CAAC,MAAM;QACLh0B,CAAC,GAAG8J,EAAE,CAACwI,IAAI,GAAG20B,cAAc;QAC5B,IAAInL,UAAU,KAAK,MAAM,EAAE;UACzBoL,SAAS,GAAG,MAAM;QACpB,CAAC,MAAM,IAAIpL,UAAU,KAAK,QAAQ,EAAE;UAClCoL,SAAS,GAAG,QAAQ;UACpBlnC,CAAC,IAAIojC,MAAM,GAAG,CAAC;QACjB,CAAC,MAAM;UACL8D,SAAS,GAAG,OAAO;UACnBlnC,CAAC,GAAG8J,EAAE,CAACsI,KAAK;QACd;MACF;IACF,CAAC,MAAM;MACL80B,SAAS,GAAG,OAAO;IACrB;IACA,OAAO;MAACA,SAAS;MAAElnC;IAAC,CAAC;EACvB;EACA4nC,iBAAiBA,CAAA,EAAG;IAClB,MAAM99B,EAAE,GAAG,IAAI;IACf,IAAIA,EAAE,CAAC8G,OAAO,CAACgP,KAAK,CAACyb,MAAM,EAAE;MAC3B;IACF;IACA,MAAMtyB,KAAK,GAAGe,EAAE,CAACf,KAAK;IACtB,MAAMimB,QAAQ,GAAGllB,EAAE,CAAC8G,OAAO,CAACoe,QAAQ;IACpC,IAAIA,QAAQ,KAAK,MAAM,IAAIA,QAAQ,KAAK,OAAO,EAAE;MAC/C,OAAO;QAAC7c,GAAG,EAAE,CAAC;QAAEG,IAAI,EAAExI,EAAE,CAACwI,IAAI;QAAED,MAAM,EAAEtJ,KAAK,CAACwZ,MAAM;QAAEnQ,KAAK,EAAEtI,EAAE,CAACsI;MAAK,CAAC;IACvE;IAAE,IAAI4c,QAAQ,KAAK,KAAK,IAAIA,QAAQ,KAAK,QAAQ,EAAE;MACjD,OAAO;QAAC7c,GAAG,EAAErI,EAAE,CAACqI,GAAG;QAAEG,IAAI,EAAE,CAAC;QAAED,MAAM,EAAEvI,EAAE,CAACuI,MAAM;QAAED,KAAK,EAAErJ,KAAK,CAACyZ;MAAK,CAAC;IACtE;EACF;EACAqlB,cAAcA,CAAA,EAAG;IACf,MAAM;MAACnxB,GAAG;MAAE9F,OAAO,EAAE;QAACsY;MAAe,CAAC;MAAE5W,IAAI;MAAEH,GAAG;MAAEqQ,KAAK;MAAED;IAAM,CAAC,GAAG,IAAI;IACxE,IAAI2G,eAAe,EAAE;MACnBxS,GAAG,CAACoxB,IAAI,CAAC,CAAC;MACVpxB,GAAG,CAACuS,SAAS,GAAGC,eAAe;MAC/BxS,GAAG,CAACqxB,QAAQ,CAACz1B,IAAI,EAAEH,GAAG,EAAEqQ,KAAK,EAAED,MAAM,CAAC;MACtC7L,GAAG,CAACsxB,OAAO,CAAC,CAAC;IACf;EACF;EACAvkB,oBAAoBA,CAACpS,KAAK,EAAE;IAC1B,MAAMvH,EAAE,GAAG,IAAI;IACf,MAAMoa,IAAI,GAAGpa,EAAE,CAAC8G,OAAO,CAACsT,IAAI;IAC5B,IAAI,CAACpa,EAAE,CAACk5B,UAAU,CAAC,CAAC,IAAI,CAAC9e,IAAI,CAACqI,OAAO,EAAE;MACrC,OAAO,CAAC;IACV;IACA,MAAM3M,KAAK,GAAG9V,EAAE,CAAC8V,KAAK;IACtB,MAAM/M,KAAK,GAAG+M,KAAK,CAACqoB,SAAS,CAACnpC,CAAC,IAAIA,CAAC,CAACuS,KAAK,KAAKA,KAAK,CAAC;IACrD,IAAIwB,KAAK,IAAI,CAAC,EAAE;MACd,MAAMhB,IAAI,GAAGqS,IAAI,CAAC2hB,UAAU,CAAC/7B,EAAE,CAAC8P,UAAU,CAAC/G,KAAK,CAAC,CAAC;MAClD,OAAOhB,IAAI,CAACwX,SAAS;IACvB;IACA,OAAO,CAAC;EACV;EACA6e,QAAQA,CAACjsB,SAAS,EAAE;IAClB,MAAMnS,EAAE,GAAG,IAAI;IACf,MAAMoa,IAAI,GAAGpa,EAAE,CAAC8G,OAAO,CAACsT,IAAI;IAC5B,MAAMxN,GAAG,GAAG5M,EAAE,CAAC4M,GAAG;IAClB,MAAM3N,KAAK,GAAGe,EAAE,CAACf,KAAK;IACtB,MAAM68B,UAAU,GAAG1hB,IAAI,CAAC2hB,UAAU,CAAC/7B,EAAE,CAAC8P,UAAU,CAAC,CAAC,CAAC,CAAC;IACpD,MAAMksB,SAAS,GAAG5hB,IAAI,CAACyW,UAAU,GAAGiL,UAAU,CAACtd,WAAW,GAAG,CAAC;IAC9D,MAAM9d,KAAK,GAAGV,EAAE,CAAC+1B,cAAc,KAAK/1B,EAAE,CAAC+1B,cAAc,GAAG/1B,EAAE,CAAC27B,qBAAqB,CAACxpB,SAAS,CAAC,CAAC;IAC5F,IAAI/e,CAAC,EAAE0V,IAAI;IACX,MAAMu1B,QAAQ,GAAGA,CAACC,EAAE,EAAEC,EAAE,EAAEtf,KAAK,KAAK;MAClC,IAAI,CAACA,KAAK,CAACvG,KAAK,IAAI,CAACuG,KAAK,CAAC9rB,KAAK,EAAE;QAChC;MACF;MACAyZ,GAAG,CAACoxB,IAAI,CAAC,CAAC;MACVpxB,GAAG,CAAC2S,SAAS,GAAGN,KAAK,CAACvG,KAAK;MAC3B9L,GAAG,CAACyS,WAAW,GAAGJ,KAAK,CAAC9rB,KAAK;MAC7ByZ,GAAG,CAAC4xB,WAAW,CAACvf,KAAK,CAACkS,UAAU,IAAI,EAAE,CAAC;MACvCvkB,GAAG,CAAC6xB,cAAc,GAAGxf,KAAK,CAACmS,gBAAgB;MAC3CxkB,GAAG,CAAC8xB,SAAS,CAAC,CAAC;MACf9xB,GAAG,CAAC+xB,MAAM,CAACL,EAAE,CAACpoC,CAAC,EAAEooC,EAAE,CAACloC,CAAC,CAAC;MACtBwW,GAAG,CAACgyB,MAAM,CAACL,EAAE,CAACroC,CAAC,EAAEqoC,EAAE,CAACnoC,CAAC,CAAC;MACtBwW,GAAG,CAACiyB,MAAM,CAAC,CAAC;MACZjyB,GAAG,CAACsxB,OAAO,CAAC,CAAC;IACf,CAAC;IACD,IAAI9jB,IAAI,CAACqI,OAAO,EAAE;MAChB,KAAKrvB,CAAC,GAAG,CAAC,EAAE0V,IAAI,GAAGpI,KAAK,CAACL,MAAM,EAAEjN,CAAC,GAAG0V,IAAI,EAAE,EAAE1V,CAAC,EAAE;QAC9C,MAAMwN,IAAI,GAAGF,KAAK,CAACtN,CAAC,CAAC;QACrB,IAAIgnB,IAAI,CAAC0W,eAAe,EAAE;UACxBuN,QAAQ,CACN;YAACnoC,CAAC,EAAE0K,IAAI,CAAC67B,EAAE;YAAErmC,CAAC,EAAEwK,IAAI,CAAC87B;UAAE,CAAC,EACxB;YAACxmC,CAAC,EAAE0K,IAAI,CAAC+7B,EAAE;YAAEvmC,CAAC,EAAEwK,IAAI,CAACg8B;UAAE,CAAC,EACxBh8B,IACF,CAAC;QACH;QACA,IAAIwZ,IAAI,CAAC2W,SAAS,EAAE;UAClBsN,QAAQ,CACN;YAACnoC,CAAC,EAAE0K,IAAI,CAACy7B,GAAG;YAAEjmC,CAAC,EAAEwK,IAAI,CAAC07B;UAAG,CAAC,EAC1B;YAACpmC,CAAC,EAAE0K,IAAI,CAAC27B,GAAG;YAAEnmC,CAAC,EAAEwK,IAAI,CAAC47B;UAAG,CAAC,EAC1B;YACErpC,KAAK,EAAEyN,IAAI,CAACswB,SAAS;YACrBxY,KAAK,EAAE9X,IAAI,CAACqwB,SAAS;YACrBE,UAAU,EAAEvwB,IAAI,CAACo8B,cAAc;YAC/B5L,gBAAgB,EAAExwB,IAAI,CAACq8B;UACzB,CACF,CAAC;QACH;MACF;IACF;IACA,IAAIjB,SAAS,EAAE;MACb,MAAM8C,QAAQ,GAAG1kB,IAAI,CAAC2hB,UAAU,CAAC/7B,EAAE,CAAC8P,UAAU,CAAC9P,EAAE,CAACu2B,YAAY,GAAG,CAAC,CAAC,CAAC;MACpE,MAAMwI,aAAa,GAAGD,QAAQ,CAACvf,SAAS;MACxC,MAAM4c,WAAW,GAAGn8B,EAAE,CAACw2B,YAAY;MACnC,IAAIiG,EAAE,EAAEE,EAAE,EAAED,EAAE,EAAEE,EAAE;MAClB,IAAI58B,EAAE,CAACgY,YAAY,CAAC,CAAC,EAAE;QACrBykB,EAAE,GAAGhkC,WAAW,CAACwG,KAAK,EAAEe,EAAE,CAACwI,IAAI,EAAEwzB,SAAS,CAAC,GAAGA,SAAS,GAAG,CAAC;QAC3DW,EAAE,GAAGlkC,WAAW,CAACwG,KAAK,EAAEe,EAAE,CAACsI,KAAK,EAAEy2B,aAAa,CAAC,GAAGA,aAAa,GAAG,CAAC;QACpErC,EAAE,GAAGE,EAAE,GAAGT,WAAW;MACvB,CAAC,MAAM;QACLO,EAAE,GAAGjkC,WAAW,CAACwG,KAAK,EAAEe,EAAE,CAACqI,GAAG,EAAE2zB,SAAS,CAAC,GAAGA,SAAS,GAAG,CAAC;QAC1DY,EAAE,GAAGnkC,WAAW,CAACwG,KAAK,EAAEe,EAAE,CAACuI,MAAM,EAAEw2B,aAAa,CAAC,GAAGA,aAAa,GAAG,CAAC;QACrEtC,EAAE,GAAGE,EAAE,GAAGR,WAAW;MACvB;MACAkC,QAAQ,CACN;QAACnoC,CAAC,EAAEumC,EAAE;QAAErmC,CAAC,EAAEsmC;MAAE,CAAC,EACd;QAACxmC,CAAC,EAAEymC,EAAE;QAAEvmC,CAAC,EAAEwmC;MAAE,CAAC,EACd;QAAClkB,KAAK,EAAEsjB,SAAS;QAAE7oC,KAAK,EAAE2rC,QAAQ,CAACxf;MAAW,CAAC,CAAC;IACpD;EACF;EACA0f,UAAUA,CAAC7sB,SAAS,EAAE;IACpB,MAAMnS,EAAE,GAAG,IAAI;IACf,MAAMy7B,WAAW,GAAGz7B,EAAE,CAAC8G,OAAO,CAACgP,KAAK;IACpC,IAAI,CAAC2lB,WAAW,CAAChZ,OAAO,EAAE;MACxB;IACF;IACA,MAAM7V,GAAG,GAAG5M,EAAE,CAAC4M,GAAG;IAClB,MAAMsF,IAAI,GAAGlS,EAAE,CAAC89B,iBAAiB,CAAC,CAAC;IACnC,IAAI5rB,IAAI,EAAE;MACRvd,QAAQ,CAACiY,GAAG,EAAEsF,IAAI,CAAC;IACrB;IACA,MAAMxR,KAAK,GAAGV,EAAE,CAACg2B,WAAW,KAAKh2B,EAAE,CAACg2B,WAAW,GAAGh2B,EAAE,CAACk9B,kBAAkB,CAAC/qB,SAAS,CAAC,CAAC;IACnF,IAAI/e,CAAC,EAAE0V,IAAI;IACX,KAAK1V,CAAC,GAAG,CAAC,EAAE0V,IAAI,GAAGpI,KAAK,CAACL,MAAM,EAAEjN,CAAC,GAAG0V,IAAI,EAAE,EAAE1V,CAAC,EAAE;MAC9C,MAAMwN,IAAI,GAAGF,KAAK,CAACtN,CAAC,CAAC;MACrB,MAAMynC,QAAQ,GAAGj6B,IAAI,CAACm0B,IAAI;MAC1B,MAAMljB,KAAK,GAAGjR,IAAI,CAACiR,KAAK;MACxB,IAAIzb,CAAC,GAAGwK,IAAI,CAAC08B,UAAU;MACvB3kC,UAAU,CAACiU,GAAG,EAAEiF,KAAK,EAAE,CAAC,EAAEzb,CAAC,EAAEykC,QAAQ,EAAEj6B,IAAI,CAAC;IAC9C;IACA,IAAIsR,IAAI,EAAE;MACRrd,UAAU,CAAC+X,GAAG,CAAC;IACjB;EACF;EACAqyB,SAASA,CAAA,EAAG;IACV,MAAM;MAACryB,GAAG;MAAE9F,OAAO,EAAE;QAACoe,QAAQ;QAAEnK,KAAK;QAAE/S;MAAO;IAAC,CAAC,GAAG,IAAI;IACvD,IAAI,CAAC+S,KAAK,CAAC0H,OAAO,EAAE;MAClB;IACF;IACA,MAAMsS,IAAI,GAAGl8B,MAAM,CAACkiB,KAAK,CAACga,IAAI,CAAC;IAC/B,MAAM7K,OAAO,GAAGrzB,SAAS,CAACkkB,KAAK,CAACmP,OAAO,CAAC;IACxC,MAAM6H,KAAK,GAAGhX,KAAK,CAACgX,KAAK;IACzB,IAAI5X,MAAM,GAAG4a,IAAI,CAACE,UAAU,GAAG,CAAC;IAChC,IAAI/P,QAAQ,KAAK,QAAQ,EAAE;MACzB/K,MAAM,IAAI+P,OAAO,CAAC3hB,MAAM;MACxB,IAAIhV,OAAO,CAACwnB,KAAK,CAACmE,IAAI,CAAC,EAAE;QACvB/E,MAAM,IAAI4a,IAAI,CAACE,UAAU,IAAIla,KAAK,CAACmE,IAAI,CAAC7e,MAAM,GAAG,CAAC,CAAC;MACrD;IACF,CAAC,MAAM;MACL8Z,MAAM,IAAI+P,OAAO,CAAC7hB,GAAG;IACvB;IACA,MAAM;MAACitB,MAAM;MAAEC,MAAM;MAAElY,QAAQ;MAAEpC;IAAQ,CAAC,GAAGoa,SAAS,CAAC,IAAI,EAAElb,MAAM,EAAE+K,QAAQ,EAAE6M,KAAK,CAAC;IACrFp5B,UAAU,CAACiU,GAAG,EAAEmO,KAAK,CAACmE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE6V,IAAI,EAAE;MACtC5hC,KAAK,EAAE4nB,KAAK,CAAC5nB,KAAK;MAClBkqB,QAAQ;MACRpC,QAAQ;MACRmiB,SAAS,EAAEhI,UAAU,CAACrD,KAAK,EAAE7M,QAAQ,EAAEld,OAAO,CAAC;MAC/Cu1B,YAAY,EAAE,QAAQ;MACtBM,WAAW,EAAE,CAACvI,MAAM,EAAEC,MAAM;IAC9B,CAAC,CAAC;EACJ;EACA50B,IAAIA,CAACwR,SAAS,EAAE;IACd,MAAMnS,EAAE,GAAG,IAAI;IACf,IAAI,CAACA,EAAE,CAACk5B,UAAU,CAAC,CAAC,EAAE;MACpB;IACF;IACAl5B,EAAE,CAAC+9B,cAAc,CAAC,CAAC;IACnB/9B,EAAE,CAACo+B,QAAQ,CAACjsB,SAAS,CAAC;IACtBnS,EAAE,CAACi/B,SAAS,CAAC,CAAC;IACdj/B,EAAE,CAACg/B,UAAU,CAAC7sB,SAAS,CAAC;EAC1B;EACAiY,OAAOA,CAAA,EAAG;IACR,MAAMpqB,EAAE,GAAG,IAAI;IACf,MAAM+H,IAAI,GAAG/H,EAAE,CAAC8G,OAAO;IACvB,MAAMo4B,EAAE,GAAGn3B,IAAI,CAAC+N,KAAK,IAAI/N,IAAI,CAAC+N,KAAK,CAACxf,CAAC,IAAI,CAAC;IAC1C,MAAM6oC,EAAE,GAAGp3B,IAAI,CAACqS,IAAI,IAAIrS,IAAI,CAACqS,IAAI,CAAC9jB,CAAC,IAAI,CAAC;IACxC,IAAI,CAAC0J,EAAE,CAACk5B,UAAU,CAAC,CAAC,IAAIgG,EAAE,KAAKC,EAAE,IAAIn/B,EAAE,CAACW,IAAI,KAAK60B,KAAK,CAACvgB,SAAS,CAACtU,IAAI,EAAE;MACrE,OAAO,CAAC;QACNrK,CAAC,EAAE4oC,EAAE;QACLv+B,IAAIA,CAACwR,SAAS,EAAE;UACdnS,EAAE,CAACW,IAAI,CAACwR,SAAS,CAAC;QACpB;MACF,CAAC,CAAC;IACJ;IACA,OAAO,CAAC;MACN7b,CAAC,EAAE6oC,EAAE;MACLx+B,IAAIA,CAACwR,SAAS,EAAE;QACdnS,EAAE,CAAC+9B,cAAc,CAAC,CAAC;QACnB/9B,EAAE,CAACo+B,QAAQ,CAACjsB,SAAS,CAAC;QACtBnS,EAAE,CAACi/B,SAAS,CAAC,CAAC;MAChB;IACF,CAAC,EAAE;MACD3oC,CAAC,EAAE4oC,EAAE;MACLv+B,IAAIA,CAACwR,SAAS,EAAE;QACdnS,EAAE,CAACg/B,UAAU,CAAC7sB,SAAS,CAAC;MAC1B;IACF,CAAC,CAAC;EACJ;EACAmD,uBAAuBA,CAAClW,IAAI,EAAE;IAC5B,MAAMY,EAAE,GAAG,IAAI;IACf,MAAMqV,KAAK,GAAGrV,EAAE,CAACf,KAAK,CAACulB,4BAA4B,CAAC,CAAC;IACrD,MAAM4a,MAAM,GAAGp/B,EAAE,CAACqL,IAAI,GAAG,QAAQ;IACjC,MAAMmoB,MAAM,GAAG,EAAE;IACjB,IAAIpgC,CAAC,EAAE0V,IAAI;IACX,KAAK1V,CAAC,GAAG,CAAC,EAAE0V,IAAI,GAAGuM,KAAK,CAAChV,MAAM,EAAEjN,CAAC,GAAG0V,IAAI,EAAE,EAAE1V,CAAC,EAAE;MAC9C,MAAMwW,IAAI,GAAGyL,KAAK,CAACjiB,CAAC,CAAC;MACrB,IAAIwW,IAAI,CAACw1B,MAAM,CAAC,KAAKp/B,EAAE,CAACiK,EAAE,KAAK,CAAC7K,IAAI,IAAIwK,IAAI,CAACxK,IAAI,KAAKA,IAAI,CAAC,EAAE;QAC3Do0B,MAAM,CAAC9xB,IAAI,CAACkI,IAAI,CAAC;MACnB;IACF;IACA,OAAO4pB,MAAM;EACf;EACAwH,uBAAuBA,CAACjyB,KAAK,EAAE;IAC7B,MAAMhB,IAAI,GAAG,IAAI,CAACjB,OAAO,CAACgP,KAAK,CAACimB,UAAU,CAAC,IAAI,CAACjsB,UAAU,CAAC/G,KAAK,CAAC,CAAC;IAClE,OAAOlQ,MAAM,CAACkP,IAAI,CAACgtB,IAAI,CAAC;EAC1B;AACF;AAEA,MAAMsK,aAAa,CAAC;EAClB5gC,WAAWA,CAACW,IAAI,EAAEkgC,KAAK,EAAErb,QAAQ,EAAE;IACjC,IAAI,CAAC7kB,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACkgC,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACrb,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACvjB,KAAK,GAAG0E,MAAM,CAAC0G,MAAM,CAAC,IAAI,CAAC;EAClC;EACAyzB,SAASA,CAACngC,IAAI,EAAE;IACd,OAAOgG,MAAM,CAAC6P,SAAS,CAACuqB,aAAa,CAACv/B,IAAI,CAAC,IAAI,CAACb,IAAI,CAAC6V,SAAS,EAAE7V,IAAI,CAAC6V,SAAS,CAAC;EACjF;EACAwqB,QAAQA,CAAC7+B,IAAI,EAAE;IACb,MAAMZ,EAAE,GAAG,IAAI;IACf,MAAM0/B,KAAK,GAAGt6B,MAAM,CAACu6B,cAAc,CAAC/+B,IAAI,CAAC;IACzC,IAAIg/B,WAAW;IACf,IAAIC,iBAAiB,CAACH,KAAK,CAAC,EAAE;MAC5BE,WAAW,GAAG5/B,EAAE,CAACy/B,QAAQ,CAACC,KAAK,CAAC;IAClC;IACA,MAAMh/B,KAAK,GAAGV,EAAE,CAACU,KAAK;IACtB,MAAMuJ,EAAE,GAAGrJ,IAAI,CAACqJ,EAAE;IAClB,MAAMq1B,KAAK,GAAGt/B,EAAE,CAACs/B,KAAK,GAAG,GAAG,GAAGr1B,EAAE;IACjC,IAAI,CAACA,EAAE,EAAE;MACP,MAAM,IAAIqZ,KAAK,CAAC,0BAA0B,GAAG1iB,IAAI,CAAC;IACpD;IACA,IAAIqJ,EAAE,IAAIvJ,KAAK,EAAE;MACf,OAAO4+B,KAAK;IACd;IACA5+B,KAAK,CAACuJ,EAAE,CAAC,GAAGrJ,IAAI;IAChBk/B,gBAAgB,CAACl/B,IAAI,EAAE0+B,KAAK,EAAEM,WAAW,CAAC;IAC1C,IAAI5/B,EAAE,CAACikB,QAAQ,EAAE;MACfxwB,QAAQ,CAACwwB,QAAQ,CAACrjB,IAAI,CAACqJ,EAAE,EAAErJ,IAAI,CAACzH,SAAS,CAAC;IAC5C;IACA,OAAOmmC,KAAK;EACd;EACAn+B,GAAGA,CAAC8I,EAAE,EAAE;IACN,OAAO,IAAI,CAACvJ,KAAK,CAACuJ,EAAE,CAAC;EACvB;EACA81B,UAAUA,CAACn/B,IAAI,EAAE;IACf,MAAMF,KAAK,GAAG,IAAI,CAACA,KAAK;IACxB,MAAMuJ,EAAE,GAAGrJ,IAAI,CAACqJ,EAAE;IAClB,MAAMq1B,KAAK,GAAG,IAAI,CAACA,KAAK;IACxB,IAAIr1B,EAAE,IAAIvJ,KAAK,EAAE;MACf,OAAOA,KAAK,CAACuJ,EAAE,CAAC;IAClB;IACA,IAAIq1B,KAAK,IAAIr1B,EAAE,IAAIxW,QAAQ,CAAC6rC,KAAK,CAAC,EAAE;MAClC,OAAO7rC,QAAQ,CAAC6rC,KAAK,CAAC,CAACr1B,EAAE,CAAC;MAC1B,IAAI,IAAI,CAACga,QAAQ,EAAE;QACjB,OAAO9qB,SAAS,CAAC8Q,EAAE,CAAC;MACtB;IACF;EACF;AACF;AACA,SAAS61B,gBAAgBA,CAACl/B,IAAI,EAAE0+B,KAAK,EAAEM,WAAW,EAAE;EAClD,MAAMI,YAAY,GAAG3mC,KAAK,CAAC+L,MAAM,CAAC0G,MAAM,CAAC,IAAI,CAAC,EAAE,CAC9C8zB,WAAW,GAAGnsC,QAAQ,CAAC0N,GAAG,CAACy+B,WAAW,CAAC,GAAG,CAAC,CAAC,EAC5CnsC,QAAQ,CAAC0N,GAAG,CAACm+B,KAAK,CAAC,EACnB1+B,IAAI,CAACnN,QAAQ,CACd,CAAC;EACFA,QAAQ,CAAC6N,GAAG,CAACg+B,KAAK,EAAEU,YAAY,CAAC;EACjC,IAAIp/B,IAAI,CAACivB,aAAa,EAAE;IACtBoQ,aAAa,CAACX,KAAK,EAAE1+B,IAAI,CAACivB,aAAa,CAAC;EAC1C;EACA,IAAIjvB,IAAI,CAACnH,WAAW,EAAE;IACpBhG,QAAQ,CAAC8R,QAAQ,CAAC+5B,KAAK,EAAE1+B,IAAI,CAACnH,WAAW,CAAC;EAC5C;AACF;AACA,SAASwmC,aAAaA,CAACX,KAAK,EAAEY,MAAM,EAAE;EACpC96B,MAAM,CAACC,IAAI,CAAC66B,MAAM,CAAC,CAACzgC,OAAO,CAAC0gC,QAAQ,IAAI;IACtC,MAAMC,aAAa,GAAGD,QAAQ,CAACE,KAAK,CAAC,GAAG,CAAC;IACzC,MAAMC,UAAU,GAAGF,aAAa,CAACp/B,GAAG,CAAC,CAAC;IACtC,MAAMu/B,WAAW,GAAG,CAACjB,KAAK,CAAC,CAACtsB,MAAM,CAACotB,aAAa,CAAC,CAACI,IAAI,CAAC,GAAG,CAAC;IAC3D,MAAMC,KAAK,GAAGP,MAAM,CAACC,QAAQ,CAAC,CAACE,KAAK,CAAC,GAAG,CAAC;IACzC,MAAMK,UAAU,GAAGD,KAAK,CAACz/B,GAAG,CAAC,CAAC;IAC9B,MAAM2/B,WAAW,GAAGF,KAAK,CAACD,IAAI,CAAC,GAAG,CAAC;IACnC/sC,QAAQ,CAACw+B,KAAK,CAACsO,WAAW,EAAED,UAAU,EAAEK,WAAW,EAAED,UAAU,CAAC;EAClE,CAAC,CAAC;AACJ;AACA,SAASb,iBAAiBA,CAACH,KAAK,EAAE;EAChC,OAAO,IAAI,IAAIA,KAAK,IAAI,UAAU,IAAIA,KAAK;AAC7C;AAEA,MAAMkB,QAAQ,CAAC;EACbniC,WAAWA,CAAA,EAAG;IACZ,IAAI,CAAC0kB,WAAW,GAAG,IAAIkc,aAAa,CAAC3yB,iBAAiB,EAAE,UAAU,EAAE,IAAI,CAAC;IACzE,IAAI,CAACuF,QAAQ,GAAG,IAAIotB,aAAa,CAAC9P,OAAO,EAAE,UAAU,CAAC;IACtD,IAAI,CAAC1U,OAAO,GAAG,IAAIwkB,aAAa,CAACj6B,MAAM,EAAE,SAAS,CAAC;IACnD,IAAI,CAACqG,MAAM,GAAG,IAAI4zB,aAAa,CAAC7J,KAAK,EAAE,QAAQ,CAAC;IAChD,IAAI,CAACqL,gBAAgB,GAAG,CAAC,IAAI,CAAC1d,WAAW,EAAE,IAAI,CAAC1X,MAAM,EAAE,IAAI,CAACwG,QAAQ,CAAC;EACxE;EACAtQ,GAAGA,CAAA,EAAU;IAAA,SAAAm/B,IAAA,GAAA1gC,SAAA,CAAAC,MAAA,EAANyuB,IAAI,OAAAplB,KAAA,CAAAo3B,IAAA,GAAAC,IAAA,MAAAA,IAAA,GAAAD,IAAA,EAAAC,IAAA;MAAJjS,IAAI,CAAAiS,IAAA,IAAA3gC,SAAA,CAAA2gC,IAAA;IAAA;IACT,IAAI,CAACC,KAAK,CAAC,UAAU,EAAElS,IAAI,CAAC;EAC9B;EACA1sB,MAAMA,CAAA,EAAU;IAAA,SAAA6+B,KAAA,GAAA7gC,SAAA,CAAAC,MAAA,EAANyuB,IAAI,OAAAplB,KAAA,CAAAu3B,KAAA,GAAAC,KAAA,MAAAA,KAAA,GAAAD,KAAA,EAAAC,KAAA;MAAJpS,IAAI,CAAAoS,KAAA,IAAA9gC,SAAA,CAAA8gC,KAAA;IAAA;IACZ,IAAI,CAACF,KAAK,CAAC,YAAY,EAAElS,IAAI,CAAC;EAChC;EACAqS,cAAcA,CAAA,EAAU;IAAA,SAAAC,KAAA,GAAAhhC,SAAA,CAAAC,MAAA,EAANyuB,IAAI,OAAAplB,KAAA,CAAA03B,KAAA,GAAAC,KAAA,MAAAA,KAAA,GAAAD,KAAA,EAAAC,KAAA;MAAJvS,IAAI,CAAAuS,KAAA,IAAAjhC,SAAA,CAAAihC,KAAA;IAAA;IACpB,IAAI,CAACL,KAAK,CAAC,UAAU,EAAElS,IAAI,EAAE,IAAI,CAAC3L,WAAW,CAAC;EAChD;EACAxV,WAAWA,CAAA,EAAU;IAAA,SAAA2zB,KAAA,GAAAlhC,SAAA,CAAAC,MAAA,EAANyuB,IAAI,OAAAplB,KAAA,CAAA43B,KAAA,GAAAC,KAAA,MAAAA,KAAA,GAAAD,KAAA,EAAAC,KAAA;MAAJzS,IAAI,CAAAyS,KAAA,IAAAnhC,SAAA,CAAAmhC,KAAA;IAAA;IACjB,IAAI,CAACP,KAAK,CAAC,UAAU,EAAElS,IAAI,EAAE,IAAI,CAAC7c,QAAQ,CAAC;EAC7C;EACAuvB,UAAUA,CAAA,EAAU;IAAA,SAAAC,KAAA,GAAArhC,SAAA,CAAAC,MAAA,EAANyuB,IAAI,OAAAplB,KAAA,CAAA+3B,KAAA,GAAAC,KAAA,MAAAA,KAAA,GAAAD,KAAA,EAAAC,KAAA;MAAJ5S,IAAI,CAAA4S,KAAA,IAAAthC,SAAA,CAAAshC,KAAA;IAAA;IAChB,IAAI,CAACV,KAAK,CAAC,UAAU,EAAElS,IAAI,EAAE,IAAI,CAACjU,OAAO,CAAC;EAC5C;EACA8mB,SAASA,CAAA,EAAU;IAAA,SAAAC,KAAA,GAAAxhC,SAAA,CAAAC,MAAA,EAANyuB,IAAI,OAAAplB,KAAA,CAAAk4B,KAAA,GAAAC,KAAA,MAAAA,KAAA,GAAAD,KAAA,EAAAC,KAAA;MAAJ/S,IAAI,CAAA+S,KAAA,IAAAzhC,SAAA,CAAAyhC,KAAA;IAAA;IACf,IAAI,CAACb,KAAK,CAAC,UAAU,EAAElS,IAAI,EAAE,IAAI,CAACrjB,MAAM,CAAC;EAC3C;EACAq2B,aAAaA,CAAC73B,EAAE,EAAE;IAChB,OAAO,IAAI,CAAC83B,IAAI,CAAC93B,EAAE,EAAE,IAAI,CAACkZ,WAAW,EAAE,YAAY,CAAC;EACtD;EACA6e,UAAUA,CAAC/3B,EAAE,EAAE;IACb,OAAO,IAAI,CAAC83B,IAAI,CAAC93B,EAAE,EAAE,IAAI,CAACgI,QAAQ,EAAE,SAAS,CAAC;EAChD;EACAgwB,SAASA,CAACh4B,EAAE,EAAE;IACZ,OAAO,IAAI,CAAC83B,IAAI,CAAC93B,EAAE,EAAE,IAAI,CAAC4Q,OAAO,EAAE,QAAQ,CAAC;EAC9C;EACAqnB,QAAQA,CAACj4B,EAAE,EAAE;IACX,OAAO,IAAI,CAAC83B,IAAI,CAAC93B,EAAE,EAAE,IAAI,CAACwB,MAAM,EAAE,OAAO,CAAC;EAC5C;EACA02B,iBAAiBA,CAAA,EAAU;IAAA,SAAAC,KAAA,GAAAhiC,SAAA,CAAAC,MAAA,EAANyuB,IAAI,OAAAplB,KAAA,CAAA04B,KAAA,GAAAC,KAAA,MAAAA,KAAA,GAAAD,KAAA,EAAAC,KAAA;MAAJvT,IAAI,CAAAuT,KAAA,IAAAjiC,SAAA,CAAAiiC,KAAA;IAAA;IACvB,IAAI,CAACrB,KAAK,CAAC,YAAY,EAAElS,IAAI,EAAE,IAAI,CAAC3L,WAAW,CAAC;EAClD;EACAmf,cAAcA,CAAA,EAAU;IAAA,SAAAC,KAAA,GAAAniC,SAAA,CAAAC,MAAA,EAANyuB,IAAI,OAAAplB,KAAA,CAAA64B,KAAA,GAAAC,KAAA,MAAAA,KAAA,GAAAD,KAAA,EAAAC,KAAA;MAAJ1T,IAAI,CAAA0T,KAAA,IAAApiC,SAAA,CAAAoiC,KAAA;IAAA;IACpB,IAAI,CAACxB,KAAK,CAAC,YAAY,EAAElS,IAAI,EAAE,IAAI,CAAC7c,QAAQ,CAAC;EAC/C;EACAwwB,aAAaA,CAAA,EAAU;IAAA,SAAAC,KAAA,GAAAtiC,SAAA,CAAAC,MAAA,EAANyuB,IAAI,OAAAplB,KAAA,CAAAg5B,KAAA,GAAAC,KAAA,MAAAA,KAAA,GAAAD,KAAA,EAAAC,KAAA;MAAJ7T,IAAI,CAAA6T,KAAA,IAAAviC,SAAA,CAAAuiC,KAAA;IAAA;IACnB,IAAI,CAAC3B,KAAK,CAAC,YAAY,EAAElS,IAAI,EAAE,IAAI,CAACjU,OAAO,CAAC;EAC9C;EACA+nB,YAAYA,CAAA,EAAU;IAAA,SAAAC,MAAA,GAAAziC,SAAA,CAAAC,MAAA,EAANyuB,IAAI,OAAAplB,KAAA,CAAAm5B,MAAA,GAAAC,MAAA,MAAAA,MAAA,GAAAD,MAAA,EAAAC,MAAA;MAAJhU,IAAI,CAAAgU,MAAA,IAAA1iC,SAAA,CAAA0iC,MAAA;IAAA;IAClB,IAAI,CAAC9B,KAAK,CAAC,YAAY,EAAElS,IAAI,EAAE,IAAI,CAACrjB,MAAM,CAAC;EAC7C;EACAu1B,KAAKA,CAACh8B,MAAM,EAAE8pB,IAAI,EAAEiU,aAAa,EAAE;IACjC,MAAM/iC,EAAE,GAAG,IAAI;IACf,CAAC,GAAG8uB,IAAI,CAAC,CAACrvB,OAAO,CAACujC,GAAG,IAAI;MACvB,MAAMC,GAAG,GAAGF,aAAa,IAAI/iC,EAAE,CAACkjC,mBAAmB,CAACF,GAAG,CAAC;MACxD,IAAID,aAAa,IAAIE,GAAG,CAAC1D,SAAS,CAACyD,GAAG,CAAC,IAAKC,GAAG,KAAKjjC,EAAE,CAAC6a,OAAO,IAAImoB,GAAG,CAAC/4B,EAAG,EAAE;QACzEjK,EAAE,CAACmjC,KAAK,CAACn+B,MAAM,EAAEi+B,GAAG,EAAED,GAAG,CAAC;MAC5B,CAAC,MAAM;QACLjsC,IAAI,CAACisC,GAAG,EAAEpiC,IAAI,IAAI;UAChB,MAAMwiC,OAAO,GAAGL,aAAa,IAAI/iC,EAAE,CAACkjC,mBAAmB,CAACtiC,IAAI,CAAC;UAC7DZ,EAAE,CAACmjC,KAAK,CAACn+B,MAAM,EAAEo+B,OAAO,EAAExiC,IAAI,CAAC;QACjC,CAAC,CAAC;MACJ;IACF,CAAC,CAAC;EACJ;EACAuiC,KAAKA,CAACn+B,MAAM,EAAEq+B,QAAQ,EAAEC,SAAS,EAAE;IACjC,MAAMC,WAAW,GAAGhqC,WAAW,CAACyL,MAAM,CAAC;IACvC/M,QAAQ,CAACqrC,SAAS,CAAC,QAAQ,GAAGC,WAAW,CAAC,EAAE,EAAE,EAAED,SAAS,CAAC;IAC1DD,QAAQ,CAACr+B,MAAM,CAAC,CAACs+B,SAAS,CAAC;IAC3BrrC,QAAQ,CAACqrC,SAAS,CAAC,OAAO,GAAGC,WAAW,CAAC,EAAE,EAAE,EAAED,SAAS,CAAC;EAC3D;EACAJ,mBAAmBA,CAAC9jC,IAAI,EAAE;IACxB,KAAK,IAAIhM,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACytC,gBAAgB,CAACxgC,MAAM,EAAEjN,CAAC,EAAE,EAAE;MACrD,MAAM6vC,GAAG,GAAG,IAAI,CAACpC,gBAAgB,CAACztC,CAAC,CAAC;MACpC,IAAI6vC,GAAG,CAAC1D,SAAS,CAACngC,IAAI,CAAC,EAAE;QACvB,OAAO6jC,GAAG;MACZ;IACF;IACA,OAAO,IAAI,CAACpoB,OAAO;EACrB;EACAknB,IAAIA,CAAC93B,EAAE,EAAE84B,aAAa,EAAE3jC,IAAI,EAAE;IAC5B,MAAMwB,IAAI,GAAGmiC,aAAa,CAAC5hC,GAAG,CAAC8I,EAAE,CAAC;IAClC,IAAIrJ,IAAI,KAAK7B,SAAS,EAAE;MACtB,MAAM,IAAIukB,KAAK,CAAC,GAAG,GAAGrZ,EAAE,GAAG,wBAAwB,GAAG7K,IAAI,GAAG,GAAG,CAAC;IACnE;IACA,OAAOwB,IAAI;EACb;AACF;AACA,IAAIyiC,QAAQ,GAAG,IAAIzC,QAAQ,CAAC,CAAC;AAE7B,MAAM4C,aAAa,CAAC;EAClB/kC,WAAWA,CAAA,EAAG;IACZ,IAAI,CAACglC,KAAK,GAAG,EAAE;EACjB;EACAC,MAAMA,CAACzkC,KAAK,EAAE0kC,IAAI,EAAE7U,IAAI,EAAE;IACxB,MAAM9uB,EAAE,GAAG,IAAI;IACf,IAAI2jC,IAAI,KAAK,YAAY,EAAE;MACzB3jC,EAAE,CAACyjC,KAAK,GAAGzjC,EAAE,CAAC4jC,kBAAkB,CAAC3kC,KAAK,EAAE,IAAI,CAAC;MAC7Ce,EAAE,CAAChB,OAAO,CAACgB,EAAE,CAACyjC,KAAK,EAAExkC,KAAK,EAAE,SAAS,CAAC;IACxC;IACA,MAAMxF,WAAW,GAAGuG,EAAE,CAAC/F,YAAY,CAACgF,KAAK,CAAC;IAC1C,MAAMu0B,MAAM,GAAGxzB,EAAE,CAAChB,OAAO,CAACvF,WAAW,EAAEwF,KAAK,EAAE0kC,IAAI,EAAE7U,IAAI,CAAC;IACzD,IAAI6U,IAAI,KAAK,SAAS,EAAE;MACtB3jC,EAAE,CAAChB,OAAO,CAACvF,WAAW,EAAEwF,KAAK,EAAE,MAAM,CAAC;MACtCe,EAAE,CAAChB,OAAO,CAACgB,EAAE,CAACyjC,KAAK,EAAExkC,KAAK,EAAE,WAAW,CAAC;IAC1C;IACA,OAAOu0B,MAAM;EACf;EACAx0B,OAAOA,CAACvF,WAAW,EAAEwF,KAAK,EAAE0kC,IAAI,EAAE7U,IAAI,EAAE;IACtCA,IAAI,GAAGA,IAAI,IAAI,CAAC,CAAC;IACjB,KAAK,MAAM+U,UAAU,IAAIpqC,WAAW,EAAE;MACpC,MAAMqqC,MAAM,GAAGD,UAAU,CAACC,MAAM;MAChC,MAAM9+B,MAAM,GAAG8+B,MAAM,CAACH,IAAI,CAAC;MAC3B,MAAMjc,MAAM,GAAG,CAACzoB,KAAK,EAAE6vB,IAAI,EAAE+U,UAAU,CAAC/8B,OAAO,CAAC;MAChD,IAAI7O,QAAQ,CAAC+M,MAAM,EAAE0iB,MAAM,EAAEoc,MAAM,CAAC,KAAK,KAAK,IAAIhV,IAAI,CAACiV,UAAU,EAAE;QACjE,OAAO,KAAK;MACd;IACF;IACA,OAAO,IAAI;EACb;EACAC,UAAUA,CAAA,EAAG;IACX,IAAI,CAACvvC,aAAa,CAAC,IAAI,CAAC0gB,MAAM,CAAC,EAAE;MAC/B,IAAI,CAAC8uB,SAAS,GAAG,IAAI,CAAC9uB,MAAM;MAC5B,IAAI,CAACA,MAAM,GAAGpW,SAAS;IACzB;EACF;EACA9E,YAAYA,CAACgF,KAAK,EAAE;IAClB,IAAI,IAAI,CAACkW,MAAM,EAAE;MACf,OAAO,IAAI,CAACA,MAAM;IACpB;IACA,MAAM1b,WAAW,GAAG,IAAI,CAAC0b,MAAM,GAAG,IAAI,CAACyuB,kBAAkB,CAAC3kC,KAAK,CAAC;IAChE,IAAI,CAACilC,mBAAmB,CAACjlC,KAAK,CAAC;IAC/B,OAAOxF,WAAW;EACpB;EACAmqC,kBAAkBA,CAAC3kC,KAAK,EAAE0I,GAAG,EAAE;IAC7B,MAAMxB,MAAM,GAAGlH,KAAK,IAAIA,KAAK,CAACkH,MAAM;IACpC,MAAMW,OAAO,GAAGnT,cAAc,CAACwS,MAAM,CAACW,OAAO,IAAIX,MAAM,CAACW,OAAO,CAAC+T,OAAO,EAAE,CAAC,CAAC,CAAC;IAC5E,MAAMA,OAAO,GAAGspB,UAAU,CAACh+B,MAAM,CAAC;IAClC,OAAOW,OAAO,KAAK,KAAK,IAAI,CAACa,GAAG,GAAG,EAAE,GAAGy8B,iBAAiB,CAACnlC,KAAK,EAAE4b,OAAO,EAAE/T,OAAO,EAAEa,GAAG,CAAC;EACzF;EACAu8B,mBAAmBA,CAACjlC,KAAK,EAAE;IACzB,MAAMolC,mBAAmB,GAAG,IAAI,CAACJ,SAAS,IAAI,EAAE;IAChD,MAAMxqC,WAAW,GAAG,IAAI,CAAC0b,MAAM;IAC/B,MAAM0O,IAAI,GAAGA,CAAC/wB,CAAC,EAAEQ,CAAC,KAAKR,CAAC,CAAC4Y,MAAM,CAACxV,CAAC,IAAI,CAAC5C,CAAC,CAACgxC,IAAI,CAACluC,CAAC,IAAIF,CAAC,CAAC4tC,MAAM,CAAC75B,EAAE,KAAK7T,CAAC,CAAC0tC,MAAM,CAAC75B,EAAE,CAAC,CAAC;IAC/E,IAAI,CAACjL,OAAO,CAAC6kB,IAAI,CAACwgB,mBAAmB,EAAE5qC,WAAW,CAAC,EAAEwF,KAAK,EAAE,MAAM,CAAC;IACnE,IAAI,CAACD,OAAO,CAAC6kB,IAAI,CAACpqB,WAAW,EAAE4qC,mBAAmB,CAAC,EAAEplC,KAAK,EAAE,OAAO,CAAC;EACtE;AACF;AACA,SAASklC,UAAUA,CAACh+B,MAAM,EAAE;EAC1B,MAAM0U,OAAO,GAAG,EAAE;EAClB,MAAMxV,IAAI,GAAGD,MAAM,CAACC,IAAI,CAACg+B,QAAQ,CAACxoB,OAAO,CAACna,KAAK,CAAC;EAChD,KAAK,IAAItN,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGiS,IAAI,CAAChF,MAAM,EAAEjN,CAAC,EAAE,EAAE;IACpCynB,OAAO,CAACnZ,IAAI,CAAC2hC,QAAQ,CAACpB,SAAS,CAAC58B,IAAI,CAACjS,CAAC,CAAC,CAAC,CAAC;EAC3C;EACA,MAAMmxC,KAAK,GAAGp+B,MAAM,CAAC0U,OAAO,IAAI,EAAE;EAClC,KAAK,IAAIznB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGmxC,KAAK,CAAClkC,MAAM,EAAEjN,CAAC,EAAE,EAAE;IACrC,MAAM0wC,MAAM,GAAGS,KAAK,CAACnxC,CAAC,CAAC;IACvB,IAAIynB,OAAO,CAAC9B,OAAO,CAAC+qB,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE;MAClCjpB,OAAO,CAACnZ,IAAI,CAACoiC,MAAM,CAAC;IACtB;EACF;EACA,OAAOjpB,OAAO;AAChB;AACA,SAAS2pB,OAAOA,CAAC19B,OAAO,EAAEa,GAAG,EAAE;EAC7B,IAAI,CAACA,GAAG,IAAIb,OAAO,KAAK,KAAK,EAAE;IAC7B,OAAO,IAAI;EACb;EACA,IAAIA,OAAO,KAAK,IAAI,EAAE;IACpB,OAAO,CAAC,CAAC;EACX;EACA,OAAOA,OAAO;AAChB;AACA,SAASs9B,iBAAiBA,CAACnlC,KAAK,EAAE4b,OAAO,EAAE/T,OAAO,EAAEa,GAAG,EAAE;EACvD,MAAM6rB,MAAM,GAAG,EAAE;EACjB,MAAMjhB,OAAO,GAAGtT,KAAK,CAAC6Q,UAAU,CAAC,CAAC;EAClC,KAAK,IAAI1c,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGynB,OAAO,CAACxa,MAAM,EAAEjN,CAAC,EAAE,EAAE;IACvC,MAAM0wC,MAAM,GAAGjpB,OAAO,CAACznB,CAAC,CAAC;IACzB,MAAM6W,EAAE,GAAG65B,MAAM,CAAC75B,EAAE;IACpB,MAAMlC,IAAI,GAAGy8B,OAAO,CAAC19B,OAAO,CAACmD,EAAE,CAAC,EAAEtC,GAAG,CAAC;IACtC,IAAII,IAAI,KAAK,IAAI,EAAE;MACjB;IACF;IACAyrB,MAAM,CAAC9xB,IAAI,CAAC;MACVoiC,MAAM;MACNh9B,OAAO,EAAE29B,UAAU,CAACxlC,KAAK,CAACkH,MAAM,EAAE29B,MAAM,EAAE/7B,IAAI,EAAEwK,OAAO;IACzD,CAAC,CAAC;EACJ;EACA,OAAOihB,MAAM;AACf;AACA,SAASiR,UAAUA,CAACt+B,MAAM,EAAE29B,MAAM,EAAE/7B,IAAI,EAAEwK,OAAO,EAAE;EACjD,MAAMlN,IAAI,GAAGc,MAAM,CAACu+B,eAAe,CAACZ,MAAM,CAAC;EAC3C,MAAMn0B,MAAM,GAAGxJ,MAAM,CAACyJ,eAAe,CAAC7H,IAAI,EAAE1C,IAAI,CAAC;EACjD,OAAOc,MAAM,CAAC0J,cAAc,CAACF,MAAM,EAAE4C,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE;IAACoyB,UAAU,EAAE,KAAK;IAAEC,SAAS,EAAE,KAAK;IAAEC,OAAO,EAAE;EAAI,CAAC,CAAC;AAC3G;AAEA,SAASC,YAAYA,CAAC1lC,IAAI,EAAE0H,OAAO,EAAE;EACnC,MAAMi+B,eAAe,GAAGtxC,QAAQ,CAACmb,QAAQ,CAACxP,IAAI,CAAC,IAAI,CAAC,CAAC;EACrD,MAAM4lC,cAAc,GAAG,CAACl+B,OAAO,CAAC8H,QAAQ,IAAI,CAAC,CAAC,EAAExP,IAAI,CAAC,IAAI,CAAC,CAAC;EAC3D,OAAO4lC,cAAc,CAAC32B,SAAS,IAAIvH,OAAO,CAACuH,SAAS,IAAI02B,eAAe,CAAC12B,SAAS,IAAI,GAAG;AAC1F;AACA,SAAS42B,yBAAyBA,CAACh7B,EAAE,EAAEoE,SAAS,EAAE;EAChD,IAAIhD,IAAI,GAAGpB,EAAE;EACb,IAAIA,EAAE,KAAK,SAAS,EAAE;IACpBoB,IAAI,GAAGgD,SAAS;EAClB,CAAC,MAAM,IAAIpE,EAAE,KAAK,SAAS,EAAE;IAC3BoB,IAAI,GAAGgD,SAAS,KAAK,GAAG,GAAG,GAAG,GAAG,GAAG;EACtC;EACA,OAAOhD,IAAI;AACb;AACA,SAAS65B,yBAAyBA,CAAC75B,IAAI,EAAEgD,SAAS,EAAE;EAClD,OAAOhD,IAAI,KAAKgD,SAAS,GAAG,SAAS,GAAG,SAAS;AACnD;AACA,SAAS82B,gBAAgBA,CAACjgB,QAAQ,EAAE;EAClC,IAAIA,QAAQ,KAAK,KAAK,IAAIA,QAAQ,KAAK,QAAQ,EAAE;IAC/C,OAAO,GAAG;EACZ;EACA,IAAIA,QAAQ,KAAK,MAAM,IAAIA,QAAQ,KAAK,OAAO,EAAE;IAC/C,OAAO,GAAG;EACZ;AACF;AACA,SAASkgB,aAAaA,CAACn7B,EAAE,EAAEo7B,YAAY,EAAE;EACvC,IAAIp7B,EAAE,KAAK,GAAG,IAAIA,EAAE,KAAK,GAAG,EAAE;IAC5B,OAAOA,EAAE;EACX;EACA,OAAOo7B,YAAY,CAACh6B,IAAI,IAAI85B,gBAAgB,CAACE,YAAY,CAACngB,QAAQ,CAAC,IAAIjb,EAAE,CAAC3C,MAAM,CAAC,CAAC,CAAC,CAACg+B,WAAW,CAAC,CAAC;AACnG;AACA,SAASC,gBAAgBA,CAACp/B,MAAM,EAAEW,OAAO,EAAE;EACzC,MAAM0+B,aAAa,GAAGrsC,SAAS,CAACgN,MAAM,CAAC/G,IAAI,CAAC,IAAI;IAACqM,MAAM,EAAE,CAAC;EAAC,CAAC;EAC5D,MAAMg6B,YAAY,GAAG3+B,OAAO,CAAC2E,MAAM,IAAI,CAAC,CAAC;EACzC,MAAMi6B,cAAc,GAAGZ,YAAY,CAAC3+B,MAAM,CAAC/G,IAAI,EAAE0H,OAAO,CAAC;EACzD,MAAM6+B,QAAQ,GAAGvgC,MAAM,CAAC0G,MAAM,CAAC,IAAI,CAAC;EACpC,MAAML,MAAM,GAAGrG,MAAM,CAAC0G,MAAM,CAAC,IAAI,CAAC;EAClC1G,MAAM,CAACC,IAAI,CAACogC,YAAY,CAAC,CAAChmC,OAAO,CAACwK,EAAE,IAAI;IACtC,MAAM27B,SAAS,GAAGH,YAAY,CAACx7B,EAAE,CAAC;IAClC,MAAMoB,IAAI,GAAG+5B,aAAa,CAACn7B,EAAE,EAAE27B,SAAS,CAAC;IACzC,MAAMC,SAAS,GAAGX,yBAAyB,CAAC75B,IAAI,EAAEq6B,cAAc,CAAC;IACjE,MAAMI,mBAAmB,GAAGN,aAAa,CAAC/5B,MAAM,IAAI,CAAC,CAAC;IACtDk6B,QAAQ,CAACt6B,IAAI,CAAC,GAAGs6B,QAAQ,CAACt6B,IAAI,CAAC,IAAIpB,EAAE;IACrCwB,MAAM,CAACxB,EAAE,CAAC,GAAG9P,OAAO,CAACiL,MAAM,CAAC0G,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC;MAACT;IAAI,CAAC,EAAEu6B,SAAS,EAAEE,mBAAmB,CAACz6B,IAAI,CAAC,EAAEy6B,mBAAmB,CAACD,SAAS,CAAC,CAAC,CAAC;EAC3H,CAAC,CAAC;EACF1/B,MAAM,CAACqD,IAAI,CAACoF,QAAQ,CAACnP,OAAO,CAACsM,OAAO,IAAI;IACtC,MAAM3M,IAAI,GAAG2M,OAAO,CAAC3M,IAAI,IAAI+G,MAAM,CAAC/G,IAAI;IACxC,MAAMiP,SAAS,GAAGtC,OAAO,CAACsC,SAAS,IAAIy2B,YAAY,CAAC1lC,IAAI,EAAE0H,OAAO,CAAC;IAClE,MAAMi+B,eAAe,GAAG5rC,SAAS,CAACiG,IAAI,CAAC,IAAI,CAAC,CAAC;IAC7C,MAAM0mC,mBAAmB,GAAGf,eAAe,CAACt5B,MAAM,IAAI,CAAC,CAAC;IACxDrG,MAAM,CAACC,IAAI,CAACygC,mBAAmB,CAAC,CAACrmC,OAAO,CAACsmC,SAAS,IAAI;MACpD,MAAM16B,IAAI,GAAG45B,yBAAyB,CAACc,SAAS,EAAE13B,SAAS,CAAC;MAC5D,MAAMpE,EAAE,GAAG8B,OAAO,CAACV,IAAI,GAAG,QAAQ,CAAC,IAAIs6B,QAAQ,CAACt6B,IAAI,CAAC,IAAIA,IAAI;MAC7DI,MAAM,CAACxB,EAAE,CAAC,GAAGwB,MAAM,CAACxB,EAAE,CAAC,IAAI7E,MAAM,CAAC0G,MAAM,CAAC,IAAI,CAAC;MAC9C3R,OAAO,CAACsR,MAAM,CAACxB,EAAE,CAAC,EAAE,CAAC;QAACoB;MAAI,CAAC,EAAEo6B,YAAY,CAACx7B,EAAE,CAAC,EAAE67B,mBAAmB,CAACC,SAAS,CAAC,CAAC,CAAC;IACjF,CAAC,CAAC;EACJ,CAAC,CAAC;EACF3gC,MAAM,CAACC,IAAI,CAACoG,MAAM,CAAC,CAAChM,OAAO,CAACgH,GAAG,IAAI;IACjC,MAAMoB,KAAK,GAAG4D,MAAM,CAAChF,GAAG,CAAC;IACzBtM,OAAO,CAAC0N,KAAK,EAAE,CAACpU,QAAQ,CAACgY,MAAM,CAAC5D,KAAK,CAACzI,IAAI,CAAC,EAAE3L,QAAQ,CAACoU,KAAK,CAAC,CAAC;EAC/D,CAAC,CAAC;EACF,OAAO4D,MAAM;AACf;AACA,SAASu6B,WAAWA,CAAC7/B,MAAM,EAAE;EAC3B,MAAMW,OAAO,GAAGX,MAAM,CAACW,OAAO,KAAKX,MAAM,CAACW,OAAO,GAAG,CAAC,CAAC,CAAC;EACvDA,OAAO,CAAC+T,OAAO,GAAGlnB,cAAc,CAACmT,OAAO,CAAC+T,OAAO,EAAE,CAAC,CAAC,CAAC;EACrD/T,OAAO,CAAC2E,MAAM,GAAG85B,gBAAgB,CAACp/B,MAAM,EAAEW,OAAO,CAAC;AACpD;AACA,SAASm/B,UAAUA,CAAC9/B,MAAM,EAAE;EAC1BA,MAAM,GAAGA,MAAM,IAAI,CAAC,CAAC;EACrB,MAAMqD,IAAI,GAAGrD,MAAM,CAACqD,IAAI,GAAGrD,MAAM,CAACqD,IAAI,IAAI;IAACoF,QAAQ,EAAE,EAAE;IAAE6B,MAAM,EAAE;EAAE,CAAC;EACpEjH,IAAI,CAACoF,QAAQ,GAAGpF,IAAI,CAACoF,QAAQ,IAAI,EAAE;EACnCpF,IAAI,CAACiH,MAAM,GAAGjH,IAAI,CAACiH,MAAM,IAAI,EAAE;EAC/Bu1B,WAAW,CAAC7/B,MAAM,CAAC;EACnB,OAAOA,MAAM;AACf;AACA,MAAM+/B,QAAQ,GAAG,IAAItnC,GAAG,CAAC,CAAC;AAC1B,MAAMunC,UAAU,GAAG,IAAIC,GAAG,CAAC,CAAC;AAC5B,SAASC,UAAUA,CAACzzB,QAAQ,EAAE0zB,QAAQ,EAAE;EACtC,IAAIjhC,IAAI,GAAG6gC,QAAQ,CAAC/kC,GAAG,CAACyR,QAAQ,CAAC;EACjC,IAAI,CAACvN,IAAI,EAAE;IACTA,IAAI,GAAGihC,QAAQ,CAAC,CAAC;IACjBJ,QAAQ,CAAC5kC,GAAG,CAACsR,QAAQ,EAAEvN,IAAI,CAAC;IAC5B8gC,UAAU,CAACxkC,GAAG,CAAC0D,IAAI,CAAC;EACtB;EACA,OAAOA,IAAI;AACb;AACA,MAAMkhC,UAAU,GAAGA,CAACjlC,GAAG,EAAEqW,GAAG,EAAElR,GAAG,KAAK;EACpC,MAAMsB,IAAI,GAAG9T,gBAAgB,CAAC0jB,GAAG,EAAElR,GAAG,CAAC;EACvC,IAAIsB,IAAI,KAAKhJ,SAAS,EAAE;IACtBuC,GAAG,CAACK,GAAG,CAACoG,IAAI,CAAC;EACf;AACF,CAAC;AACD,MAAMy+B,MAAM,CAAC;EACX/nC,WAAWA,CAAC0H,MAAM,EAAE;IAClB,IAAI,CAACsgC,OAAO,GAAGR,UAAU,CAAC9/B,MAAM,CAAC;IACjC,IAAI,CAACugC,WAAW,GAAG,IAAI9nC,GAAG,CAAC,CAAC;IAC5B,IAAI,CAAC+nC,cAAc,GAAG,IAAI/nC,GAAG,CAAC,CAAC;EACjC;EACA,IAAIQ,IAAIA,CAAA,EAAG;IACT,OAAO,IAAI,CAACqnC,OAAO,CAACrnC,IAAI;EAC1B;EACA,IAAIA,IAAIA,CAACA,IAAI,EAAE;IACb,IAAI,CAACqnC,OAAO,CAACrnC,IAAI,GAAGA,IAAI;EAC1B;EACA,IAAIoK,IAAIA,CAAA,EAAG;IACT,OAAO,IAAI,CAACi9B,OAAO,CAACj9B,IAAI;EAC1B;EACA,IAAIA,IAAIA,CAACA,IAAI,EAAE;IACb,IAAI,CAACi9B,OAAO,CAACj9B,IAAI,GAAGA,IAAI;EAC1B;EACA,IAAI1C,OAAOA,CAAA,EAAG;IACZ,OAAO,IAAI,CAAC2/B,OAAO,CAAC3/B,OAAO;EAC7B;EACA,IAAIA,OAAOA,CAACA,OAAO,EAAE;IACnB,IAAI,CAAC2/B,OAAO,CAAC3/B,OAAO,GAAGA,OAAO;EAChC;EACA,IAAI+T,OAAOA,CAAA,EAAG;IACZ,OAAO,IAAI,CAAC4rB,OAAO,CAAC5rB,OAAO;EAC7B;EACAtW,MAAMA,CAAA,EAAG;IACP,MAAM4B,MAAM,GAAG,IAAI,CAACsgC,OAAO;IAC3B,IAAI,CAACG,UAAU,CAAC,CAAC;IACjBZ,WAAW,CAAC7/B,MAAM,CAAC;EACrB;EACAygC,UAAUA,CAAA,EAAG;IACX,IAAI,CAACF,WAAW,CAACG,KAAK,CAAC,CAAC;IACxB,IAAI,CAACF,cAAc,CAACE,KAAK,CAAC,CAAC;EAC7B;EACAn3B,gBAAgBA,CAACo3B,WAAW,EAAE;IAC5B,OAAOT,UAAU,CAACS,WAAW,EAC3B,MAAM,CAAC,aAAA9zB,MAAA,CACO8zB,WAAW,GACvB,EAAE,CACH,CAAC,CAAC;EACP;EACAxzB,yBAAyBA,CAACwzB,WAAW,EAAEzzB,UAAU,EAAE;IACjD,OAAOgzB,UAAU,IAAArzB,MAAA,CAAI8zB,WAAW,kBAAA9zB,MAAA,CAAeK,UAAU,GACvD,MAAM,CACJ,aAAAL,MAAA,CACc8zB,WAAW,mBAAA9zB,MAAA,CAAgBK,UAAU,kBAAAL,MAAA,CAClCK,UAAU,EAC1B,EACD,aAAAL,MAAA,CACc8zB,WAAW,GACvB,EAAE,CACH,CACF,CAAC;EACN;EACAh0B,uBAAuBA,CAACg0B,WAAW,EAAEp0B,WAAW,EAAE;IAChD,OAAO2zB,UAAU,IAAArzB,MAAA,CAAI8zB,WAAW,OAAA9zB,MAAA,CAAIN,WAAW,GAC7C,MAAM,CAAC,aAAAM,MAAA,CACO8zB,WAAW,gBAAA9zB,MAAA,CAAaN,WAAW,eAAAM,MAAA,CACnC8zB,WAAW,eAAA9zB,MAAA,CACXN,WAAW,GACvB,EAAE,CACH,CAAC,CAAC;EACP;EACAgyB,eAAeA,CAACZ,MAAM,EAAE;IACtB,MAAM75B,EAAE,GAAG65B,MAAM,CAAC75B,EAAE;IACpB,MAAM7K,IAAI,GAAG,IAAI,CAACA,IAAI;IACtB,OAAOinC,UAAU,IAAArzB,MAAA,CAAI5T,IAAI,cAAA4T,MAAA,CAAW/I,EAAE,GACpC,MAAM,CAAC,YAAA+I,MAAA,CACM/I,EAAE,GACb,IAAG65B,MAAM,CAACiD,sBAAsB,IAAI,EAAE,EACvC,CAAC,CAAC;EACP;EACAC,aAAaA,CAACC,SAAS,EAAEC,UAAU,EAAE;IACnC,MAAMR,WAAW,GAAG,IAAI,CAACA,WAAW;IACpC,IAAI/zB,KAAK,GAAG+zB,WAAW,CAACvlC,GAAG,CAAC8lC,SAAS,CAAC;IACtC,IAAI,CAACt0B,KAAK,IAAIu0B,UAAU,EAAE;MACxBv0B,KAAK,GAAG,IAAI/T,GAAG,CAAC,CAAC;MACjB8nC,WAAW,CAACplC,GAAG,CAAC2lC,SAAS,EAAEt0B,KAAK,CAAC;IACnC;IACA,OAAOA,KAAK;EACd;EACA/C,eAAeA,CAACq3B,SAAS,EAAEE,QAAQ,EAAED,UAAU,EAAE;IAC/C,MAAM;MAACpgC,OAAO;MAAE1H;IAAI,CAAC,GAAG,IAAI;IAC5B,MAAMuT,KAAK,GAAG,IAAI,CAACq0B,aAAa,CAACC,SAAS,EAAEC,UAAU,CAAC;IACvD,MAAM16B,MAAM,GAAGmG,KAAK,CAACxR,GAAG,CAACgmC,QAAQ,CAAC;IAClC,IAAI36B,MAAM,EAAE;MACV,OAAOA,MAAM;IACf;IACA,MAAMmD,MAAM,GAAG,IAAIy2B,GAAG,CAAC,CAAC;IACxBe,QAAQ,CAAC1nC,OAAO,CAAC4F,IAAI,IAAI;MACvB,IAAI4hC,SAAS,EAAE;QACbt3B,MAAM,CAAChO,GAAG,CAACslC,SAAS,CAAC;QACrB5hC,IAAI,CAAC5F,OAAO,CAACgH,GAAG,IAAI8/B,UAAU,CAAC52B,MAAM,EAAEs3B,SAAS,EAAExgC,GAAG,CAAC,CAAC;MACzD;MACApB,IAAI,CAAC5F,OAAO,CAACgH,GAAG,IAAI8/B,UAAU,CAAC52B,MAAM,EAAE7I,OAAO,EAAEL,GAAG,CAAC,CAAC;MACrDpB,IAAI,CAAC5F,OAAO,CAACgH,GAAG,IAAI8/B,UAAU,CAAC52B,MAAM,EAAExW,SAAS,CAACiG,IAAI,CAAC,IAAI,CAAC,CAAC,EAAEqH,GAAG,CAAC,CAAC;MACnEpB,IAAI,CAAC5F,OAAO,CAACgH,GAAG,IAAI8/B,UAAU,CAAC52B,MAAM,EAAElc,QAAQ,EAAEgT,GAAG,CAAC,CAAC;MACtDpB,IAAI,CAAC5F,OAAO,CAACgH,GAAG,IAAI8/B,UAAU,CAAC52B,MAAM,EAAElW,WAAW,EAAEgN,GAAG,CAAC,CAAC;IAC3D,CAAC,CAAC;IACF,MAAMqgB,KAAK,GAAG,CAAC,GAAGnX,MAAM,CAAC;IACzB,IAAIw2B,UAAU,CAACvkC,GAAG,CAACulC,QAAQ,CAAC,EAAE;MAC5Bx0B,KAAK,CAACrR,GAAG,CAAC6lC,QAAQ,EAAErgB,KAAK,CAAC;IAC5B;IACA,OAAOA,KAAK;EACd;EACAsgB,iBAAiBA,CAAA,EAAG;IAClB,MAAM;MAACtgC,OAAO;MAAE1H;IAAI,CAAC,GAAG,IAAI;IAC5B,OAAO,CACL0H,OAAO,EACP3N,SAAS,CAACiG,IAAI,CAAC,IAAI,CAAC,CAAC,EACrB3L,QAAQ,CAACmb,QAAQ,CAACxP,IAAI,CAAC,IAAI,CAAC,CAAC,EAC7B;MAACA;IAAI,CAAC,EACN3L,QAAQ,EACRgG,WAAW,CACZ;EACH;EACAyZ,mBAAmBA,CAACvD,MAAM,EAAEsD,KAAK,EAAEV,OAAO,EAAmB;IAAA,IAAjBQ,QAAQ,GAAA3S,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAArB,SAAA,GAAAqB,SAAA,MAAG,CAAC,EAAE,CAAC;IACzD,MAAMozB,MAAM,GAAG;MAACvsB,OAAO,EAAE;IAAI,CAAC;IAC9B,MAAM;MAACogC,QAAQ;MAAEC;IAAW,CAAC,GAAGC,WAAW,CAAC,IAAI,CAACZ,cAAc,EAAEh3B,MAAM,EAAEoD,QAAQ,CAAC;IAClF,IAAIjM,OAAO,GAAGugC,QAAQ;IACtB,IAAIG,WAAW,CAACH,QAAQ,EAAEp0B,KAAK,CAAC,EAAE;MAChCugB,MAAM,CAACvsB,OAAO,GAAG,KAAK;MACtBsL,OAAO,GAAG5Y,UAAU,CAAC4Y,OAAO,CAAC,GAAGA,OAAO,CAAC,CAAC,GAAGA,OAAO;MACnD,MAAMk1B,WAAW,GAAG,IAAI,CAAC53B,cAAc,CAACF,MAAM,EAAE4C,OAAO,EAAE+0B,WAAW,CAAC;MACrExgC,OAAO,GAAGjN,cAAc,CAACwtC,QAAQ,EAAE90B,OAAO,EAAEk1B,WAAW,CAAC;IAC1D;IACA,KAAK,MAAMnkC,IAAI,IAAI2P,KAAK,EAAE;MACxBugB,MAAM,CAAClwB,IAAI,CAAC,GAAGwD,OAAO,CAACxD,IAAI,CAAC;IAC9B;IACA,OAAOkwB,MAAM;EACf;EACA3jB,cAAcA,CAACF,MAAM,EAAE4C,OAAO,EAAuC;IAAA,IAArCQ,QAAQ,GAAA3S,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAArB,SAAA,GAAAqB,SAAA,MAAG,CAAC,EAAE,CAAC;IAAA,IAAEsnC,kBAAkB,GAAAtnC,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAArB,SAAA;IACjE,MAAM;MAACsoC;IAAQ,CAAC,GAAGE,WAAW,CAAC,IAAI,CAACZ,cAAc,EAAEh3B,MAAM,EAAEoD,QAAQ,CAAC;IACrE,OAAO1f,QAAQ,CAACkf,OAAO,CAAC,GACpB1Y,cAAc,CAACwtC,QAAQ,EAAE90B,OAAO,EAAExT,SAAS,EAAE2oC,kBAAkB,CAAC,GAChEL,QAAQ;EACd;AACF;AACA,SAASE,WAAWA,CAACI,aAAa,EAAEh4B,MAAM,EAAEoD,QAAQ,EAAE;EACpD,IAAIJ,KAAK,GAAGg1B,aAAa,CAACxmC,GAAG,CAACwO,MAAM,CAAC;EACrC,IAAI,CAACgD,KAAK,EAAE;IACVA,KAAK,GAAG,IAAI/T,GAAG,CAAC,CAAC;IACjB+oC,aAAa,CAACrmC,GAAG,CAACqO,MAAM,EAAEgD,KAAK,CAAC;EAClC;EACA,MAAMC,QAAQ,GAAGG,QAAQ,CAACytB,IAAI,CAAC,CAAC;EAChC,IAAIh0B,MAAM,GAAGmG,KAAK,CAACxR,GAAG,CAACyR,QAAQ,CAAC;EAChC,IAAI,CAACpG,MAAM,EAAE;IACX,MAAM66B,QAAQ,GAAGttC,eAAe,CAAC4V,MAAM,EAAEoD,QAAQ,CAAC;IAClDvG,MAAM,GAAG;MACP66B,QAAQ;MACRC,WAAW,EAAEv0B,QAAQ,CAACrH,MAAM,CAAClW,CAAC,IAAI,CAACA,CAAC,CAAC8vC,WAAW,CAAC,CAAC,CAACsC,QAAQ,CAAC,OAAO,CAAC;IACtE,CAAC;IACDj1B,KAAK,CAACrR,GAAG,CAACsR,QAAQ,EAAEpG,MAAM,CAAC;EAC7B;EACA,OAAOA,MAAM;AACf;AACA,SAASg7B,WAAWA,CAAC3Y,KAAK,EAAE5b,KAAK,EAAE;EACjC,MAAM;IAAC40B,YAAY;IAAEC;EAAW,CAAC,GAAG7tC,YAAY,CAAC40B,KAAK,CAAC;EACvD,KAAK,MAAMvrB,IAAI,IAAI2P,KAAK,EAAE;IACxB,IAAK40B,YAAY,CAACvkC,IAAI,CAAC,IAAI3J,UAAU,CAACk1B,KAAK,CAACvrB,IAAI,CAAC,CAAC,IAC5CwkC,WAAW,CAACxkC,IAAI,CAAC,IAAI/P,OAAO,CAACs7B,KAAK,CAACvrB,IAAI,CAAC,CAAE,EAAE;MAChD,OAAO,IAAI;IACb;EACF;EACA,OAAO,KAAK;AACd;AAEA,IAAIykC,OAAO,GAAG,OAAO;AAErB,MAAMC,eAAe,GAAG,CAAC,KAAK,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,WAAW,CAAC;AACvE,SAASC,oBAAoBA,CAAC/iB,QAAQ,EAAE7Z,IAAI,EAAE;EAC5C,OAAO6Z,QAAQ,KAAK,KAAK,IAAIA,QAAQ,KAAK,QAAQ,IAAK8iB,eAAe,CAACjvB,OAAO,CAACmM,QAAQ,CAAC,KAAK,CAAC,CAAC,IAAI7Z,IAAI,KAAK,GAAI;AAClH;AACA,SAAS68B,aAAaA,CAACC,EAAE,EAAEC,EAAE,EAAE;EAC7B,OAAO,UAASt1C,CAAC,EAAEQ,CAAC,EAAE;IACpB,OAAOR,CAAC,CAACq1C,EAAE,CAAC,KAAK70C,CAAC,CAAC60C,EAAE,CAAC,GAClBr1C,CAAC,CAACs1C,EAAE,CAAC,GAAG90C,CAAC,CAAC80C,EAAE,CAAC,GACbt1C,CAAC,CAACq1C,EAAE,CAAC,GAAG70C,CAAC,CAAC60C,EAAE,CAAC;EACnB,CAAC;AACH;AACA,SAASE,oBAAoBA,CAAC91B,OAAO,EAAE;EACrC,MAAMtT,KAAK,GAAGsT,OAAO,CAACtT,KAAK;EAC3B,MAAMkG,gBAAgB,GAAGlG,KAAK,CAAC6H,OAAO,CAACxB,SAAS;EAChDrG,KAAK,CAAC25B,aAAa,CAAC,aAAa,CAAC;EAClC3gC,QAAQ,CAACkN,gBAAgB,IAAIA,gBAAgB,CAACmjC,UAAU,EAAE,CAAC/1B,OAAO,CAAC,EAAEtT,KAAK,CAAC;AAC7E;AACA,SAASspC,mBAAmBA,CAACh2B,OAAO,EAAE;EACpC,MAAMtT,KAAK,GAAGsT,OAAO,CAACtT,KAAK;EAC3B,MAAMkG,gBAAgB,GAAGlG,KAAK,CAAC6H,OAAO,CAACxB,SAAS;EAChDrN,QAAQ,CAACkN,gBAAgB,IAAIA,gBAAgB,CAACqjC,UAAU,EAAE,CAACj2B,OAAO,CAAC,EAAEtT,KAAK,CAAC;AAC7E;AACA,SAASwpC,cAAcA,CAAA,EAAG;EACxB,OAAO,OAAOvoC,MAAM,KAAK,WAAW,IAAI,OAAOutB,QAAQ,KAAK,WAAW;AACzE;AACA,SAASib,SAASA,CAAC9nC,IAAI,EAAE;EACvB,IAAI6nC,cAAc,CAAC,CAAC,IAAI,OAAO7nC,IAAI,KAAK,QAAQ,EAAE;IAChDA,IAAI,GAAG6sB,QAAQ,CAACkb,cAAc,CAAC/nC,IAAI,CAAC;EACtC,CAAC,MAAM,IAAIA,IAAI,IAAIA,IAAI,CAACP,MAAM,EAAE;IAC9BO,IAAI,GAAGA,IAAI,CAAC,CAAC,CAAC;EAChB;EACA,IAAIA,IAAI,IAAIA,IAAI,CAACkqB,MAAM,EAAE;IACvBlqB,IAAI,GAAGA,IAAI,CAACkqB,MAAM;EACpB;EACA,OAAOlqB,IAAI;AACb;AACA,MAAMgoC,SAAS,GAAG,CAAC,CAAC;AACpB,MAAMC,QAAQ,GAAIpiC,GAAG,IAAK;EACxB,MAAMqkB,MAAM,GAAG4d,SAAS,CAACjiC,GAAG,CAAC;EAC7B,OAAOrB,MAAM,CAACwB,MAAM,CAACgiC,SAAS,CAAC,CAACl9B,MAAM,CAAExY,CAAC,IAAKA,CAAC,CAAC43B,MAAM,KAAKA,MAAM,CAAC,CAAC9pB,GAAG,CAAC,CAAC;AAC1E,CAAC;AACD,MAAM8nC,KAAK,CAAC;EACVrqC,WAAWA,CAACmC,IAAI,EAAEuF,MAAM,EAAE;IACxB,MAAMnG,EAAE,GAAG,IAAI;IACf,IAAI,CAACmG,MAAM,GAAGA,MAAM,GAAG,IAAIqgC,MAAM,CAACrgC,MAAM,CAAC;IACzC,MAAM4iC,aAAa,GAAGL,SAAS,CAAC9nC,IAAI,CAAC;IACrC,MAAMooC,aAAa,GAAGH,QAAQ,CAACE,aAAa,CAAC;IAC7C,IAAIC,aAAa,EAAE;MACjB,MAAM,IAAI1lB,KAAK,CACb,4CAA4C,GAAG0lB,aAAa,CAAC/+B,EAAE,GAAG,IAAI,GAC1E,qDACE,CAAC;IACH;IACA,MAAMnD,OAAO,GAAGX,MAAM,CAAC0J,cAAc,CAAC1J,MAAM,CAACihC,iBAAiB,CAAC,CAAC,EAAEpnC,EAAE,CAAC8P,UAAU,CAAC,CAAC,CAAC;IAClF,IAAI,CAACm5B,QAAQ,GAAGjpC,EAAE,CAACkpC,mBAAmB,CAACH,aAAa,EAAE5iC,MAAM,CAAC;IAC7D,MAAMoM,OAAO,GAAGvS,EAAE,CAACipC,QAAQ,CAACpe,cAAc,CAACke,aAAa,EAAEjiC,OAAO,CAAC+X,WAAW,CAAC;IAC9E,MAAMiM,MAAM,GAAGvY,OAAO,IAAIA,OAAO,CAACuY,MAAM;IACxC,MAAMrS,MAAM,GAAGqS,MAAM,IAAIA,MAAM,CAACrS,MAAM;IACtC,MAAMC,KAAK,GAAGoS,MAAM,IAAIA,MAAM,CAACpS,KAAK;IACpC,IAAI,CAACzO,EAAE,GAAG5P,GAAG,CAAC,CAAC;IACf,IAAI,CAACuS,GAAG,GAAG2F,OAAO;IAClB,IAAI,CAACuY,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACpS,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACD,MAAM,GAAGA,MAAM;IACpB,IAAI,CAAC0wB,QAAQ,GAAGriC,OAAO;IACvB,IAAI,CAACsiC,YAAY,GAAG,IAAI,CAACvqB,WAAW;IACpC,IAAI,CAACuL,OAAO,GAAG,EAAE;IACjB,IAAI,CAACif,SAAS,GAAG,EAAE;IACnB,IAAI,CAACp+B,OAAO,GAAGlM,SAAS;IACxB,IAAI,CAACuoB,KAAK,GAAG,EAAE;IACf,IAAI,CAAC6G,uBAAuB,GAAGpvB,SAAS;IACxC,IAAI,CAACoT,SAAS,GAAGpT,SAAS;IAC1B,IAAI,CAAC8B,OAAO,GAAG,EAAE;IACjB,IAAI,CAACyoC,UAAU,GAAGvqC,SAAS;IAC3B,IAAI,CAACwqC,UAAU,GAAG,CAAC,CAAC;IACpB,IAAI,CAACC,eAAe,GAAG,EAAE;IACzB,IAAI,CAAC/9B,MAAM,GAAG,CAAC,CAAC;IAChB,IAAI,CAAC5D,KAAK,GAAG9I,SAAS;IACtB,IAAI,CAAC0qC,QAAQ,GAAG,IAAIjG,aAAa,CAAC,CAAC;IACnC,IAAI,CAACrU,QAAQ,GAAG,CAAC,CAAC;IAClB,IAAI,CAACua,cAAc,GAAG,CAAC,CAAC;IACxB,IAAI,CAACC,QAAQ,GAAG,KAAK;IACrB,IAAI,CAACh2B,mBAAmB,GAAG5U,SAAS;IACpC,IAAI,CAACwO,QAAQ,GAAGxO,SAAS;IACzB,IAAI,CAAC6qC,SAAS,GAAGrvC,QAAQ,CAAC,MAAM,IAAI,CAACgK,MAAM,CAAC,QAAQ,CAAC,EAAEuC,OAAO,CAAC+iC,WAAW,IAAI,CAAC,CAAC;IAChFjB,SAAS,CAAC5oC,EAAE,CAACiK,EAAE,CAAC,GAAGjK,EAAE;IACrB,IAAI,CAACuS,OAAO,IAAI,CAACuY,MAAM,EAAE;MACvBgf,OAAO,CAACC,KAAK,CAAC,mEAAmE,CAAC;MAClF;IACF;IACAznC,QAAQ,CAACf,MAAM,CAACvB,EAAE,EAAE,UAAU,EAAEqoC,oBAAoB,CAAC;IACrD/lC,QAAQ,CAACf,MAAM,CAACvB,EAAE,EAAE,UAAU,EAAEuoC,mBAAmB,CAAC;IACpDvoC,EAAE,CAACgqC,WAAW,CAAC,CAAC;IAChB,IAAIhqC,EAAE,CAAC2pC,QAAQ,EAAE;MACf3pC,EAAE,CAACuE,MAAM,CAAC,CAAC;IACb;EACF;EACA,IAAIsa,WAAWA,CAAA,EAAG;IAChB,MAAM;MAAC/X,OAAO,EAAE;QAAC+X,WAAW;QAAEorB;MAAmB,CAAC;MAAEvxB,KAAK;MAAED,MAAM;MAAE2wB;IAAY,CAAC,GAAG,IAAI;IACvF,IAAI,CAAC30C,aAAa,CAACoqB,WAAW,CAAC,EAAE;MAC/B,OAAOA,WAAW;IACpB;IACA,IAAIorB,mBAAmB,IAAIb,YAAY,EAAE;MACvC,OAAOA,YAAY;IACrB;IACA,OAAO3wB,MAAM,GAAGC,KAAK,GAAGD,MAAM,GAAG,IAAI;EACvC;EACA,IAAIjP,IAAIA,CAAA,EAAG;IACT,OAAO,IAAI,CAACrD,MAAM,CAACqD,IAAI;EACzB;EACA,IAAIA,IAAIA,CAACA,IAAI,EAAE;IACb,IAAI,CAACrD,MAAM,CAACqD,IAAI,GAAGA,IAAI;EACzB;EACA,IAAI1C,OAAOA,CAAA,EAAG;IACZ,OAAO,IAAI,CAACqiC,QAAQ;EACtB;EACA,IAAIriC,OAAOA,CAACA,OAAO,EAAE;IACnB,IAAI,CAACX,MAAM,CAACW,OAAO,GAAGA,OAAO;EAC/B;EACAkjC,WAAWA,CAAA,EAAG;IACZ,MAAMhqC,EAAE,GAAG,IAAI;IACfA,EAAE,CAAC44B,aAAa,CAAC,YAAY,CAAC;IAC9B,IAAI54B,EAAE,CAAC8G,OAAO,CAACojC,UAAU,EAAE;MACzBlqC,EAAE,CAAC6F,MAAM,CAAC,CAAC;IACb,CAAC,MAAM;MACLpL,WAAW,CAACuF,EAAE,EAAEA,EAAE,CAAC8G,OAAO,CAAConB,gBAAgB,CAAC;IAC9C;IACAluB,EAAE,CAACmqC,UAAU,CAAC,CAAC;IACfnqC,EAAE,CAAC44B,aAAa,CAAC,WAAW,CAAC;IAC7B,OAAO54B,EAAE;EACX;EACAkpC,mBAAmBA,CAACpe,MAAM,EAAE3kB,MAAM,EAAE;IAClC,IAAIA,MAAM,CAAC8iC,QAAQ,EAAE;MACnB,OAAO,IAAI9iC,MAAM,CAAC8iC,QAAQ,CAAC,CAAC;IAC9B,CAAC,MAAM,IAAI,CAACR,cAAc,CAAC,CAAC,IAAK,OAAO2B,eAAe,KAAK,WAAW,IAAItf,MAAM,YAAYsf,eAAgB,EAAE;MAC7G,OAAO,IAAI/e,aAAa,CAAC,CAAC;IAC5B;IACA,OAAO,IAAI0D,WAAW,CAAC,CAAC;EAC1B;EACA8X,KAAKA,CAAA,EAAG;IACNlsC,WAAW,CAAC,IAAI,CAACmwB,MAAM,EAAE,IAAI,CAACle,GAAG,CAAC;IAClC,OAAO,IAAI;EACb;EACA1K,IAAIA,CAAA,EAAG;IACLI,QAAQ,CAACJ,IAAI,CAAC,IAAI,CAAC;IACnB,OAAO,IAAI;EACb;EACA2D,MAAMA,CAAC6S,KAAK,EAAED,MAAM,EAAE;IACpB,IAAI,CAACnW,QAAQ,CAAC7B,OAAO,CAAC,IAAI,CAAC,EAAE;MAC3B,IAAI,CAAC4pC,OAAO,CAAC3xB,KAAK,EAAED,MAAM,CAAC;IAC7B,CAAC,MAAM;MACL,IAAI,CAAC6xB,iBAAiB,GAAG;QAAC5xB,KAAK;QAAED;MAAM,CAAC;IAC1C;EACF;EACA4xB,OAAOA,CAAC3xB,KAAK,EAAED,MAAM,EAAE;IACrB,MAAMzY,EAAE,GAAG,IAAI;IACf,MAAM8G,OAAO,GAAG9G,EAAE,CAAC8G,OAAO;IAC1B,MAAMgkB,MAAM,GAAG9qB,EAAE,CAAC8qB,MAAM;IACxB,MAAMjM,WAAW,GAAG/X,OAAO,CAACmjC,mBAAmB,IAAIjqC,EAAE,CAAC6e,WAAW;IACjE,MAAM0rB,OAAO,GAAGvqC,EAAE,CAACipC,QAAQ,CAAChyC,cAAc,CAAC6zB,MAAM,EAAEpS,KAAK,EAAED,MAAM,EAAEoG,WAAW,CAAC;IAC9E,MAAM2rB,QAAQ,GAAGxqC,EAAE,CAACmuB,uBAAuB;IAC3C,MAAMsc,QAAQ,GAAG3jC,OAAO,CAAConB,gBAAgB,IAAIluB,EAAE,CAACipC,QAAQ,CAAC9d,mBAAmB,CAAC,CAAC;IAC9E,IAAInrB,EAAE,CAAC0Y,KAAK,KAAK6xB,OAAO,CAAC7xB,KAAK,IAAI1Y,EAAE,CAACyY,MAAM,KAAK8xB,OAAO,CAAC9xB,MAAM,IAAI+xB,QAAQ,KAAKC,QAAQ,EAAE;MACvF;IACF;IACAzqC,EAAE,CAAC0Y,KAAK,GAAG6xB,OAAO,CAAC7xB,KAAK;IACxB1Y,EAAE,CAACyY,MAAM,GAAG8xB,OAAO,CAAC9xB,MAAM;IAC1BzY,EAAE,CAACopC,YAAY,GAAGppC,EAAE,CAAC6e,WAAW;IAChCpkB,WAAW,CAACuF,EAAE,EAAEyqC,QAAQ,EAAE,IAAI,CAAC;IAC/BzqC,EAAE,CAAC44B,aAAa,CAAC,QAAQ,EAAE;MAACpxB,IAAI,EAAE+iC;IAAO,CAAC,CAAC;IAC3CtyC,QAAQ,CAAC6O,OAAO,CAAC4jC,QAAQ,EAAE,CAAC1qC,EAAE,EAAEuqC,OAAO,CAAC,EAAEvqC,EAAE,CAAC;IAC7C,IAAIA,EAAE,CAAC2pC,QAAQ,EAAE;MACf,IAAI3pC,EAAE,CAAC4pC,SAAS,CAAC,CAAC,EAAE;QAClB5pC,EAAE,CAAC2qC,MAAM,CAAC,CAAC;MACb;IACF;EACF;EACAC,mBAAmBA,CAAA,EAAG;IACpB,MAAM9jC,OAAO,GAAG,IAAI,CAACA,OAAO;IAC5B,MAAM+jC,aAAa,GAAG/jC,OAAO,CAAC2E,MAAM,IAAI,CAAC,CAAC;IAC1C1U,IAAI,CAAC8zC,aAAa,EAAE,CAACC,WAAW,EAAE1L,MAAM,KAAK;MAC3C0L,WAAW,CAAC7gC,EAAE,GAAGm1B,MAAM;IACzB,CAAC,CAAC;EACJ;EACA2L,mBAAmBA,CAAA,EAAG;IACpB,MAAM/qC,EAAE,GAAG,IAAI;IACf,MAAM8G,OAAO,GAAG9G,EAAE,CAAC8G,OAAO;IAC1B,MAAMkkC,SAAS,GAAGlkC,OAAO,CAAC2E,MAAM;IAChC,MAAMA,MAAM,GAAGzL,EAAE,CAACyL,MAAM;IACxB,MAAMw/B,OAAO,GAAG7lC,MAAM,CAACC,IAAI,CAACoG,MAAM,CAAC,CAAC5J,MAAM,CAAC,CAAC8V,GAAG,EAAE1N,EAAE,KAAK;MACtD0N,GAAG,CAAC1N,EAAE,CAAC,GAAG,KAAK;MACf,OAAO0N,GAAG;IACZ,CAAC,EAAE,CAAC,CAAC,CAAC;IACN,IAAIjX,KAAK,GAAG,EAAE;IACd,IAAIsqC,SAAS,EAAE;MACbtqC,KAAK,GAAGA,KAAK,CAACsS,MAAM,CAClB5N,MAAM,CAACC,IAAI,CAAC2lC,SAAS,CAAC,CAAChsB,GAAG,CAAE/U,EAAE,IAAK;QACjC,MAAMo7B,YAAY,GAAG2F,SAAS,CAAC/gC,EAAE,CAAC;QAClC,MAAMoB,IAAI,GAAG+5B,aAAa,CAACn7B,EAAE,EAAEo7B,YAAY,CAAC;QAC5C,MAAM6F,QAAQ,GAAG7/B,IAAI,KAAK,GAAG;QAC7B,MAAM2M,YAAY,GAAG3M,IAAI,KAAK,GAAG;QACjC,OAAO;UACLvE,OAAO,EAAEu+B,YAAY;UACrB8F,SAAS,EAAED,QAAQ,GAAG,WAAW,GAAGlzB,YAAY,GAAG,QAAQ,GAAG,MAAM;UACpEozB,KAAK,EAAEF,QAAQ,GAAG,cAAc,GAAGlzB,YAAY,GAAG,UAAU,GAAG;QACjE,CAAC;MACH,CAAC,CACH,CAAC;IACH;IACAjhB,IAAI,CAAC2J,KAAK,EAAGE,IAAI,IAAK;MACpB,MAAMykC,YAAY,GAAGzkC,IAAI,CAACkG,OAAO;MACjC,MAAMmD,EAAE,GAAGo7B,YAAY,CAACp7B,EAAE;MAC1B,MAAMoB,IAAI,GAAG+5B,aAAa,CAACn7B,EAAE,EAAEo7B,YAAY,CAAC;MAC5C,MAAMgG,SAAS,GAAG13C,cAAc,CAAC0xC,YAAY,CAACjmC,IAAI,EAAEwB,IAAI,CAACwqC,KAAK,CAAC;MAC/D,IAAI/F,YAAY,CAACngB,QAAQ,KAAKnmB,SAAS,IAAIkpC,oBAAoB,CAAC5C,YAAY,CAACngB,QAAQ,EAAE7Z,IAAI,CAAC,KAAK48B,oBAAoB,CAACrnC,IAAI,CAACuqC,SAAS,CAAC,EAAE;QACrI9F,YAAY,CAACngB,QAAQ,GAAGtkB,IAAI,CAACuqC,SAAS;MACxC;MACAF,OAAO,CAAChhC,EAAE,CAAC,GAAG,IAAI;MAClB,IAAIpC,KAAK,GAAG,IAAI;MAChB,IAAIoC,EAAE,IAAIwB,MAAM,IAAIA,MAAM,CAACxB,EAAE,CAAC,CAAC7K,IAAI,KAAKisC,SAAS,EAAE;QACjDxjC,KAAK,GAAG4D,MAAM,CAACxB,EAAE,CAAC;MACpB,CAAC,MAAM;QACL,MAAMqhC,UAAU,GAAGjI,QAAQ,CAACnB,QAAQ,CAACmJ,SAAS,CAAC;QAC/CxjC,KAAK,GAAG,IAAIyjC,UAAU,CAAC;UACrBrhC,EAAE;UACF7K,IAAI,EAAEisC,SAAS;UACfz+B,GAAG,EAAE5M,EAAE,CAAC4M,GAAG;UACX3N,KAAK,EAAEe;QACT,CAAC,CAAC;QACFyL,MAAM,CAAC5D,KAAK,CAACoC,EAAE,CAAC,GAAGpC,KAAK;MAC1B;MACAA,KAAK,CAAC6uB,IAAI,CAAC2O,YAAY,EAAEv+B,OAAO,CAAC;IACnC,CAAC,CAAC;IACF/P,IAAI,CAACk0C,OAAO,EAAE,CAACM,UAAU,EAAEthC,EAAE,KAAK;MAChC,IAAI,CAACshC,UAAU,EAAE;QACf,OAAO9/B,MAAM,CAACxB,EAAE,CAAC;MACnB;IACF,CAAC,CAAC;IACFlT,IAAI,CAAC0U,MAAM,EAAG5D,KAAK,IAAK;MACtB4f,OAAO,CAACnhB,SAAS,CAACtG,EAAE,EAAE6H,KAAK,EAAEA,KAAK,CAACf,OAAO,CAAC;MAC3C2gB,OAAO,CAAC0C,MAAM,CAACnqB,EAAE,EAAE6H,KAAK,CAAC;IAC3B,CAAC,CAAC;EACJ;EACA2jC,mBAAmBA,CAAC5hC,IAAI,EAAEb,KAAK,EAAE;IAC/B,MAAMH,QAAQ,GAAG,IAAI,CAACygC,SAAS;IAC/B,MAAMoC,QAAQ,GAAG7hC,IAAI,CAACb,KAAK;IAC3B,IAAI0iC,QAAQ,KAAK1iC,KAAK,EAAE;MACtBH,QAAQ,CAAC6iC,QAAQ,CAAC,GAAG7iC,QAAQ,CAACG,KAAK,CAAC;MACpCH,QAAQ,CAACG,KAAK,CAAC,GAAGa,IAAI;MACtBA,IAAI,CAACb,KAAK,GAAGA,KAAK;IACpB;EACF;EACA2iC,eAAeA,CAAA,EAAG;IAChB,MAAM1rC,EAAE,GAAG,IAAI;IACf,MAAM4I,QAAQ,GAAG5I,EAAE,CAACqpC,SAAS;IAC7B,MAAMj1B,OAAO,GAAGpU,EAAE,CAACwJ,IAAI,CAACoF,QAAQ,CAACvO,MAAM;IACvC,MAAM8T,OAAO,GAAGvL,QAAQ,CAACvI,MAAM;IAC/B,IAAI8T,OAAO,GAAGC,OAAO,EAAE;MACrB,KAAK,IAAIhhB,CAAC,GAAGghB,OAAO,EAAEhhB,CAAC,GAAG+gB,OAAO,EAAE,EAAE/gB,CAAC,EAAE;QACtC4M,EAAE,CAAC2rC,mBAAmB,CAACv4C,CAAC,CAAC;MAC3B;MACAwV,QAAQ,CAAC+L,MAAM,CAACP,OAAO,EAAED,OAAO,GAAGC,OAAO,CAAC;IAC7C;IACApU,EAAE,CAACwpC,eAAe,GAAG5gC,QAAQ,CAACmX,KAAK,CAAC,CAAC,CAAC,CAACxK,IAAI,CAAC2yB,aAAa,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;EAC9E;EACA0D,2BAA2BA,CAAA,EAAG;IAC5B,MAAM5rC,EAAE,GAAG,IAAI;IACf,MAAM;MAACqpC,SAAS,EAAEzgC,QAAQ;MAAEY,IAAI,EAAE;QAACoF;MAAQ;IAAC,CAAC,GAAG5O,EAAE;IAClD,IAAI4I,QAAQ,CAACvI,MAAM,GAAGuO,QAAQ,CAACvO,MAAM,EAAE;MACrC,OAAOL,EAAE,CAACiL,OAAO;IACnB;IACArC,QAAQ,CAACnJ,OAAO,CAAC,CAACmK,IAAI,EAAEb,KAAK,KAAK;MAChC,IAAI6F,QAAQ,CAAClD,MAAM,CAACxV,CAAC,IAAIA,CAAC,KAAK0T,IAAI,CAACsW,QAAQ,CAAC,CAAC7f,MAAM,KAAK,CAAC,EAAE;QAC1DL,EAAE,CAAC2rC,mBAAmB,CAAC5iC,KAAK,CAAC;MAC/B;IACF,CAAC,CAAC;EACJ;EACA8iC,wBAAwBA,CAAA,EAAG;IACzB,MAAM7rC,EAAE,GAAG,IAAI;IACf,MAAM8rC,cAAc,GAAG,EAAE;IACzB,MAAMl9B,QAAQ,GAAG5O,EAAE,CAACwJ,IAAI,CAACoF,QAAQ;IACjC,IAAIxb,CAAC,EAAE0V,IAAI;IACX9I,EAAE,CAAC4rC,2BAA2B,CAAC,CAAC;IAChC,KAAKx4C,CAAC,GAAG,CAAC,EAAE0V,IAAI,GAAG8F,QAAQ,CAACvO,MAAM,EAAEjN,CAAC,GAAG0V,IAAI,EAAE1V,CAAC,EAAE,EAAE;MACjD,MAAM2Y,OAAO,GAAG6C,QAAQ,CAACxb,CAAC,CAAC;MAC3B,IAAIwW,IAAI,GAAG5J,EAAE,CAAC6O,cAAc,CAACzb,CAAC,CAAC;MAC/B,MAAMgM,IAAI,GAAG2M,OAAO,CAAC3M,IAAI,IAAIY,EAAE,CAACmG,MAAM,CAAC/G,IAAI;MAC3C,IAAIwK,IAAI,CAACxK,IAAI,IAAIwK,IAAI,CAACxK,IAAI,KAAKA,IAAI,EAAE;QACnCY,EAAE,CAAC2rC,mBAAmB,CAACv4C,CAAC,CAAC;QACzBwW,IAAI,GAAG5J,EAAE,CAAC6O,cAAc,CAACzb,CAAC,CAAC;MAC7B;MACAwW,IAAI,CAACxK,IAAI,GAAGA,IAAI;MAChBwK,IAAI,CAACyE,SAAS,GAAGtC,OAAO,CAACsC,SAAS,IAAIy2B,YAAY,CAAC1lC,IAAI,EAAEY,EAAE,CAAC8G,OAAO,CAAC;MACpE8C,IAAI,CAACmiC,KAAK,GAAGhgC,OAAO,CAACggC,KAAK,IAAI,CAAC;MAC/B/rC,EAAE,CAACwrC,mBAAmB,CAAC5hC,IAAI,EAAExW,CAAC,CAAC;MAC/BwW,IAAI,CAACiI,KAAK,GAAG,EAAE,GAAG9F,OAAO,CAAC8F,KAAK;MAC/BjI,IAAI,CAAC5D,OAAO,GAAGhG,EAAE,CAAC6c,gBAAgB,CAACzpB,CAAC,CAAC;MACrC,IAAIwW,IAAI,CAACkB,UAAU,EAAE;QACnBlB,IAAI,CAACkB,UAAU,CAAC8C,WAAW,CAACxa,CAAC,CAAC;QAC9BwW,IAAI,CAACkB,UAAU,CAAC2C,UAAU,CAAC,CAAC;MAC9B,CAAC,MAAM;QACL,MAAMu+B,eAAe,GAAG3I,QAAQ,CAACvB,aAAa,CAAC1iC,IAAI,CAAC;QACpD,MAAM;UAACgQ,kBAAkB;UAAEqD;QAAe,CAAC,GAAGhf,QAAQ,CAACmb,QAAQ,CAACxP,IAAI,CAAC;QACrEgG,MAAM,CAACqC,MAAM,CAACukC,eAAe,CAAC/2B,SAAS,EAAE;UACvCxC,eAAe,EAAE4wB,QAAQ,CAACrB,UAAU,CAACvvB,eAAe,CAAC;UACrDrD,kBAAkB,EAAEA,kBAAkB,IAAIi0B,QAAQ,CAACrB,UAAU,CAAC5yB,kBAAkB;QAClF,CAAC,CAAC;QACFxF,IAAI,CAACkB,UAAU,GAAG,IAAIkhC,eAAe,CAAChsC,EAAE,EAAE5M,CAAC,CAAC;QAC5C04C,cAAc,CAACpqC,IAAI,CAACkI,IAAI,CAACkB,UAAU,CAAC;MACtC;IACF;IACA9K,EAAE,CAAC0rC,eAAe,CAAC,CAAC;IACpB,OAAOI,cAAc;EACvB;EACAG,cAAcA,CAAA,EAAG;IACf,MAAMjsC,EAAE,GAAG,IAAI;IACfjJ,IAAI,CAACiJ,EAAE,CAACwJ,IAAI,CAACoF,QAAQ,EAAE,CAAC7C,OAAO,EAAE1C,YAAY,KAAK;MAChDrJ,EAAE,CAAC6O,cAAc,CAACxF,YAAY,CAAC,CAACyB,UAAU,CAACkE,KAAK,CAAC,CAAC;IACpD,CAAC,EAAEhP,EAAE,CAAC;EACR;EACAgP,KAAKA,CAAA,EAAG;IACN,IAAI,CAACi9B,cAAc,CAAC,CAAC;IACrB,IAAI,CAACrT,aAAa,CAAC,OAAO,CAAC;EAC7B;EACAr0B,MAAMA,CAAC6E,IAAI,EAAE;IACX,MAAMpJ,EAAE,GAAG,IAAI;IACf,MAAMmG,MAAM,GAAGnG,EAAE,CAACmG,MAAM;IACxBA,MAAM,CAAC5B,MAAM,CAAC,CAAC;IACfvE,EAAE,CAACmpC,QAAQ,GAAGhjC,MAAM,CAAC0J,cAAc,CAAC1J,MAAM,CAACihC,iBAAiB,CAAC,CAAC,EAAEpnC,EAAE,CAAC8P,UAAU,CAAC,CAAC,CAAC;IAChF/Y,IAAI,CAACiJ,EAAE,CAACyL,MAAM,EAAG5D,KAAK,IAAK;MACzB4f,OAAO,CAAC4C,SAAS,CAACrqB,EAAE,EAAE6H,KAAK,CAAC;IAC9B,CAAC,CAAC;IACF,MAAMqkC,aAAa,GAAGlsC,EAAE,CAAC2T,mBAAmB,GAAG,CAAC3T,EAAE,CAAC8G,OAAO,CAACxB,SAAS;IACpEtF,EAAE,CAAC4qC,mBAAmB,CAAC,CAAC;IACxB5qC,EAAE,CAAC+qC,mBAAmB,CAAC,CAAC;IACxB/qC,EAAE,CAACypC,QAAQ,CAACzF,UAAU,CAAC,CAAC;IACxB,IAAIhkC,EAAE,CAAC44B,aAAa,CAAC,cAAc,EAAE;MAACxvB,IAAI;MAAE26B,UAAU,EAAE;IAAI,CAAC,CAAC,KAAK,KAAK,EAAE;MACxE;IACF;IACA,MAAM+H,cAAc,GAAG9rC,EAAE,CAAC6rC,wBAAwB,CAAC,CAAC;IACpD7rC,EAAE,CAAC44B,aAAa,CAAC,sBAAsB,CAAC;IACxC,IAAIrO,UAAU,GAAG,CAAC;IAClB,KAAK,IAAIn3B,CAAC,GAAG,CAAC,EAAE0V,IAAI,GAAG9I,EAAE,CAACwJ,IAAI,CAACoF,QAAQ,CAACvO,MAAM,EAAEjN,CAAC,GAAG0V,IAAI,EAAE1V,CAAC,EAAE,EAAE;MAC7D,MAAM;QAAC0X;MAAU,CAAC,GAAG9K,EAAE,CAAC6O,cAAc,CAACzb,CAAC,CAAC;MACzC,MAAM4b,KAAK,GAAG,CAACk9B,aAAa,IAAIJ,cAAc,CAAC/yB,OAAO,CAACjO,UAAU,CAAC,KAAK,CAAC,CAAC;MACzEA,UAAU,CAACuE,qBAAqB,CAACL,KAAK,CAAC;MACvCub,UAAU,GAAG3qB,IAAI,CAACoC,GAAG,CAAC,CAAC8I,UAAU,CAAC6G,cAAc,CAAC,CAAC,EAAE4Y,UAAU,CAAC;IACjE;IACAvqB,EAAE,CAAC8lB,WAAW,GAAGyE,UAAU;IAC3BvqB,EAAE,CAACmsC,aAAa,CAAC5hB,UAAU,CAAC;IAC5B,IAAI,CAAC2hB,aAAa,EAAE;MAClBn1C,IAAI,CAAC+0C,cAAc,EAAGhhC,UAAU,IAAK;QACnCA,UAAU,CAACkE,KAAK,CAAC,CAAC;MACpB,CAAC,CAAC;IACJ;IACAhP,EAAE,CAACosC,eAAe,CAAChjC,IAAI,CAAC;IACxBpJ,EAAE,CAAC44B,aAAa,CAAC,aAAa,EAAE;MAACxvB;IAAI,CAAC,CAAC;IACvCpJ,EAAE,CAACoqB,OAAO,CAAC7U,IAAI,CAAC2yB,aAAa,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;IAC3C,IAAIloC,EAAE,CAACspC,UAAU,EAAE;MACjBtpC,EAAE,CAACqsC,aAAa,CAACrsC,EAAE,CAACspC,UAAU,EAAE,IAAI,CAAC;IACvC;IACAtpC,EAAE,CAAC2qC,MAAM,CAAC,CAAC;EACb;EACAwB,aAAaA,CAAC5hB,UAAU,EAAE;IACxB,MAAMvqB,EAAE,GAAG,IAAI;IACf,IAAIA,EAAE,CAAC44B,aAAa,CAAC,cAAc,EAAE;MAACmL,UAAU,EAAE;IAAI,CAAC,CAAC,KAAK,KAAK,EAAE;MAClE;IACF;IACAtc,OAAO,CAACljB,MAAM,CAACvE,EAAE,EAAEA,EAAE,CAAC0Y,KAAK,EAAE1Y,EAAE,CAACyY,MAAM,EAAE8R,UAAU,CAAC;IACnD,MAAMrY,IAAI,GAAGlS,EAAE,CAACmS,SAAS;IACzB,MAAMm6B,MAAM,GAAGp6B,IAAI,CAACwG,KAAK,IAAI,CAAC,IAAIxG,IAAI,CAACuG,MAAM,IAAI,CAAC;IAClDzY,EAAE,CAACoqB,OAAO,GAAG,EAAE;IACfrzB,IAAI,CAACiJ,EAAE,CAACsnB,KAAK,EAAGL,GAAG,IAAK;MACtB,IAAIqlB,MAAM,IAAIrlB,GAAG,CAAC/B,QAAQ,KAAK,WAAW,EAAE;QAC1C;MACF;MACA,IAAI+B,GAAG,CAAC3gB,SAAS,EAAE;QACjB2gB,GAAG,CAAC3gB,SAAS,CAAC,CAAC;MACjB;MACAtG,EAAE,CAACoqB,OAAO,CAAC1oB,IAAI,CAAC,GAAGulB,GAAG,CAACmD,OAAO,CAAC,CAAC,CAAC;IACnC,CAAC,EAAEpqB,EAAE,CAAC;IACNA,EAAE,CAACoqB,OAAO,CAAC3qB,OAAO,CAAC,CAACmB,IAAI,EAAEmI,KAAK,KAAK;MAClCnI,IAAI,CAAC2rC,IAAI,GAAGxjC,KAAK;IACnB,CAAC,CAAC;IACF/I,EAAE,CAAC44B,aAAa,CAAC,aAAa,CAAC;EACjC;EACAwT,eAAeA,CAAChjC,IAAI,EAAE;IACpB,MAAMpJ,EAAE,GAAG,IAAI;IACf,MAAMrG,UAAU,GAAG,OAAOyP,IAAI,KAAK,UAAU;IAC7C,IAAIpJ,EAAE,CAAC44B,aAAa,CAAC,sBAAsB,EAAE;MAACxvB,IAAI;MAAE26B,UAAU,EAAE;IAAI,CAAC,CAAC,KAAK,KAAK,EAAE;MAChF;IACF;IACA,KAAK,IAAI3wC,CAAC,GAAG,CAAC,EAAE0V,IAAI,GAAG9I,EAAE,CAACwJ,IAAI,CAACoF,QAAQ,CAACvO,MAAM,EAAEjN,CAAC,GAAG0V,IAAI,EAAE,EAAE1V,CAAC,EAAE;MAC7D4M,EAAE,CAACwsC,cAAc,CAACp5C,CAAC,EAAEuG,UAAU,GAAGyP,IAAI,CAAC;QAACC,YAAY,EAAEjW;MAAC,CAAC,CAAC,GAAGgW,IAAI,CAAC;IACnE;IACApJ,EAAE,CAAC44B,aAAa,CAAC,qBAAqB,EAAE;MAACxvB;IAAI,CAAC,CAAC;EACjD;EACAojC,cAAcA,CAACzjC,KAAK,EAAEK,IAAI,EAAE;IAC1B,MAAMpJ,EAAE,GAAG,IAAI;IACf,MAAM4J,IAAI,GAAG5J,EAAE,CAAC6O,cAAc,CAAC9F,KAAK,CAAC;IACrC,MAAM+lB,IAAI,GAAG;MAACllB,IAAI;MAAEb,KAAK;MAAEK,IAAI;MAAE26B,UAAU,EAAE;IAAI,CAAC;IAClD,IAAI/jC,EAAE,CAAC44B,aAAa,CAAC,qBAAqB,EAAE9J,IAAI,CAAC,KAAK,KAAK,EAAE;MAC3D;IACF;IACAllB,IAAI,CAACkB,UAAU,CAAC3K,OAAO,CAACiJ,IAAI,CAAC;IAC7B0lB,IAAI,CAACiV,UAAU,GAAG,KAAK;IACvB/jC,EAAE,CAAC44B,aAAa,CAAC,oBAAoB,EAAE9J,IAAI,CAAC;EAC9C;EACA6b,MAAMA,CAAA,EAAG;IACP,MAAM3qC,EAAE,GAAG,IAAI;IACf,IAAIA,EAAE,CAAC44B,aAAa,CAAC,cAAc,EAAE;MAACmL,UAAU,EAAE;IAAI,CAAC,CAAC,KAAK,KAAK,EAAE;MAClE;IACF;IACA,IAAIzhC,QAAQ,CAACV,GAAG,CAAC5B,EAAE,CAAC,EAAE;MACpB,IAAIA,EAAE,CAAC2pC,QAAQ,IAAI,CAACrnC,QAAQ,CAAC7B,OAAO,CAACT,EAAE,CAAC,EAAE;QACxCsC,QAAQ,CAACxC,KAAK,CAACE,EAAE,CAAC;MACpB;IACF,CAAC,MAAM;MACLA,EAAE,CAACW,IAAI,CAAC,CAAC;MACT0nC,oBAAoB,CAAC;QAACppC,KAAK,EAAEe;MAAE,CAAC,CAAC;IACnC;EACF;EACAW,IAAIA,CAAA,EAAG;IACL,MAAMX,EAAE,GAAG,IAAI;IACf,IAAI5M,CAAC;IACL,IAAI4M,EAAE,CAACsqC,iBAAiB,EAAE;MACxB,MAAM;QAAC5xB,KAAK;QAAED;MAAM,CAAC,GAAGzY,EAAE,CAACsqC,iBAAiB;MAC5CtqC,EAAE,CAACqqC,OAAO,CAAC3xB,KAAK,EAAED,MAAM,CAAC;MACzBzY,EAAE,CAACsqC,iBAAiB,GAAG,IAAI;IAC7B;IACAtqC,EAAE,CAAC6mC,KAAK,CAAC,CAAC;IACV,IAAI7mC,EAAE,CAAC0Y,KAAK,IAAI,CAAC,IAAI1Y,EAAE,CAACyY,MAAM,IAAI,CAAC,EAAE;MACnC;IACF;IACA,IAAIzY,EAAE,CAAC44B,aAAa,CAAC,YAAY,EAAE;MAACmL,UAAU,EAAE;IAAI,CAAC,CAAC,KAAK,KAAK,EAAE;MAChE;IACF;IACA,MAAM0I,MAAM,GAAGzsC,EAAE,CAACoqB,OAAO;IACzB,KAAKh3B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGq5C,MAAM,CAACpsC,MAAM,IAAIosC,MAAM,CAACr5C,CAAC,CAAC,CAACkD,CAAC,IAAI,CAAC,EAAE,EAAElD,CAAC,EAAE;MACtDq5C,MAAM,CAACr5C,CAAC,CAAC,CAACuN,IAAI,CAACX,EAAE,CAACmS,SAAS,CAAC;IAC9B;IACAnS,EAAE,CAAC0sC,aAAa,CAAC,CAAC;IAClB,OAAOt5C,CAAC,GAAGq5C,MAAM,CAACpsC,MAAM,EAAE,EAAEjN,CAAC,EAAE;MAC7Bq5C,MAAM,CAACr5C,CAAC,CAAC,CAACuN,IAAI,CAACX,EAAE,CAACmS,SAAS,CAAC;IAC9B;IACAnS,EAAE,CAAC44B,aAAa,CAAC,WAAW,CAAC;EAC/B;EACA/vB,sBAAsBA,CAACF,aAAa,EAAE;IACpC,MAAM3I,EAAE,GAAG,IAAI;IACf,MAAM4I,QAAQ,GAAG5I,EAAE,CAACwpC,eAAe;IACnC,MAAMhW,MAAM,GAAG,EAAE;IACjB,IAAIpgC,CAAC,EAAE0V,IAAI;IACX,KAAK1V,CAAC,GAAG,CAAC,EAAE0V,IAAI,GAAGF,QAAQ,CAACvI,MAAM,EAAEjN,CAAC,GAAG0V,IAAI,EAAE,EAAE1V,CAAC,EAAE;MACjD,MAAMwW,IAAI,GAAGhB,QAAQ,CAACxV,CAAC,CAAC;MACxB,IAAI,CAACuV,aAAa,IAAIiB,IAAI,CAAC5D,OAAO,EAAE;QAClCwtB,MAAM,CAAC9xB,IAAI,CAACkI,IAAI,CAAC;MACnB;IACF;IACA,OAAO4pB,MAAM;EACf;EACAhP,4BAA4BA,CAAA,EAAG;IAC7B,OAAO,IAAI,CAAC3b,sBAAsB,CAAC,IAAI,CAAC;EAC1C;EACA6jC,aAAaA,CAAA,EAAG;IACd,MAAM1sC,EAAE,GAAG,IAAI;IACf,IAAIA,EAAE,CAAC44B,aAAa,CAAC,oBAAoB,EAAE;MAACmL,UAAU,EAAE;IAAI,CAAC,CAAC,KAAK,KAAK,EAAE;MACxE;IACF;IACA,MAAMn7B,QAAQ,GAAG5I,EAAE,CAACwkB,4BAA4B,CAAC,CAAC;IAClD,KAAK,IAAIpxB,CAAC,GAAGwV,QAAQ,CAACvI,MAAM,GAAG,CAAC,EAAEjN,CAAC,IAAI,CAAC,EAAE,EAAEA,CAAC,EAAE;MAC7C4M,EAAE,CAAC2sC,YAAY,CAAC/jC,QAAQ,CAACxV,CAAC,CAAC,CAAC;IAC9B;IACA4M,EAAE,CAAC44B,aAAa,CAAC,mBAAmB,CAAC;EACvC;EACA+T,YAAYA,CAAC/iC,IAAI,EAAE;IACjB,MAAM5J,EAAE,GAAG,IAAI;IACf,MAAM4M,GAAG,GAAG5M,EAAE,CAAC4M,GAAG;IAClB,MAAMoF,IAAI,GAAGpI,IAAI,CAACmI,KAAK;IACvB,MAAMG,IAAI,GAAGlS,EAAE,CAACmS,SAAS;IACzB,MAAM2c,IAAI,GAAG;MACXllB,IAAI;MACJb,KAAK,EAAEa,IAAI,CAACb,KAAK;MACjBg7B,UAAU,EAAE;IACd,CAAC;IACD,IAAI/jC,EAAE,CAAC44B,aAAa,CAAC,mBAAmB,EAAE9J,IAAI,CAAC,KAAK,KAAK,EAAE;MACzD;IACF;IACAn6B,QAAQ,CAACiY,GAAG,EAAE;MACZpE,IAAI,EAAEwJ,IAAI,CAACxJ,IAAI,KAAK,KAAK,GAAG,CAAC,GAAG0J,IAAI,CAAC1J,IAAI,GAAGwJ,IAAI,CAACxJ,IAAI;MACrDF,KAAK,EAAE0J,IAAI,CAAC1J,KAAK,KAAK,KAAK,GAAGtI,EAAE,CAAC0Y,KAAK,GAAGxG,IAAI,CAAC5J,KAAK,GAAG0J,IAAI,CAAC1J,KAAK;MAChED,GAAG,EAAE2J,IAAI,CAAC3J,GAAG,KAAK,KAAK,GAAG,CAAC,GAAG6J,IAAI,CAAC7J,GAAG,GAAG2J,IAAI,CAAC3J,GAAG;MACjDE,MAAM,EAAEyJ,IAAI,CAACzJ,MAAM,KAAK,KAAK,GAAGvI,EAAE,CAACyY,MAAM,GAAGvG,IAAI,CAAC3J,MAAM,GAAGyJ,IAAI,CAACzJ;IACjE,CAAC,CAAC;IACFqB,IAAI,CAACkB,UAAU,CAACnK,IAAI,CAAC,CAAC;IACtB9L,UAAU,CAAC+X,GAAG,CAAC;IACfkiB,IAAI,CAACiV,UAAU,GAAG,KAAK;IACvB/jC,EAAE,CAAC44B,aAAa,CAAC,kBAAkB,EAAE9J,IAAI,CAAC;EAC5C;EACA8d,yBAAyBA,CAAC55C,CAAC,EAAEoW,IAAI,EAAEtC,OAAO,EAAE+e,gBAAgB,EAAE;IAC5D,MAAM7gB,MAAM,GAAGyhB,WAAW,CAACC,KAAK,CAACtd,IAAI,CAAC;IACtC,IAAI,OAAOpE,MAAM,KAAK,UAAU,EAAE;MAChC,OAAOA,MAAM,CAAC,IAAI,EAAEhS,CAAC,EAAE8T,OAAO,EAAE+e,gBAAgB,CAAC;IACnD;IACA,OAAO,EAAE;EACX;EACAhX,cAAcA,CAACxF,YAAY,EAAE;IAC3B,MAAMrJ,EAAE,GAAG,IAAI;IACf,MAAM+L,OAAO,GAAG/L,EAAE,CAACwJ,IAAI,CAACoF,QAAQ,CAACvF,YAAY,CAAC;IAC9C,MAAMT,QAAQ,GAAG5I,EAAE,CAACqpC,SAAS;IAC7B,IAAIz/B,IAAI,GAAGhB,QAAQ,CAAC8C,MAAM,CAACxV,CAAC,IAAIA,CAAC,IAAIA,CAAC,CAACgqB,QAAQ,KAAKnU,OAAO,CAAC,CAAC/K,GAAG,CAAC,CAAC;IAClE,IAAI,CAAC4I,IAAI,EAAE;MACTA,IAAI,GAAGhB,QAAQ,CAACS,YAAY,CAAC,GAAG;QAC9BjK,IAAI,EAAE,IAAI;QACVoK,IAAI,EAAE,EAAE;QACRuC,OAAO,EAAE,IAAI;QACbjB,UAAU,EAAE,IAAI;QAChB0U,MAAM,EAAE,IAAI;QACZxR,OAAO,EAAE,IAAI;QACbE,OAAO,EAAE,IAAI;QACb69B,KAAK,EAAEhgC,OAAO,IAAIA,OAAO,CAACggC,KAAK,IAAI,CAAC;QACpChjC,KAAK,EAAEM,YAAY;QACnB6W,QAAQ,EAAEnU,OAAO;QACjBM,OAAO,EAAE,EAAE;QACX8D,OAAO,EAAE;MACX,CAAC;IACH;IACA,OAAOvG,IAAI;EACb;EACAkG,UAAUA,CAAA,EAAG;IACX,OAAO,IAAI,CAACvC,QAAQ,KAAK,IAAI,CAACA,QAAQ,GAAG;MAACtO,KAAK,EAAE,IAAI;MAAEG,IAAI,EAAE;IAAO,CAAC,CAAC;EACxE;EACA2iB,sBAAsBA,CAAA,EAAG;IACvB,OAAO,IAAI,CAACyC,4BAA4B,CAAC,CAAC,CAACnkB,MAAM;EACnD;EACAwc,gBAAgBA,CAACxT,YAAY,EAAE;IAC7B,MAAM0C,OAAO,GAAG,IAAI,CAACvC,IAAI,CAACoF,QAAQ,CAACvF,YAAY,CAAC;IAChD,IAAI,CAAC0C,OAAO,EAAE;MACZ,OAAO,KAAK;IACd;IACA,MAAMnC,IAAI,GAAG,IAAI,CAACiF,cAAc,CAACxF,YAAY,CAAC;IAC9C,OAAO,OAAOO,IAAI,CAAC4V,MAAM,KAAK,SAAS,GAAG,CAAC5V,IAAI,CAAC4V,MAAM,GAAG,CAACzT,OAAO,CAACyT,MAAM;EAC1E;EACAqtB,oBAAoBA,CAACxjC,YAAY,EAAErD,OAAO,EAAE;IAC1C,MAAM4D,IAAI,GAAG,IAAI,CAACiF,cAAc,CAACxF,YAAY,CAAC;IAC9CO,IAAI,CAAC4V,MAAM,GAAG,CAACxZ,OAAO;EACxB;EACA2Z,oBAAoBA,CAAC5W,KAAK,EAAE;IAC1B,IAAI,CAAC2gC,cAAc,CAAC3gC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC2gC,cAAc,CAAC3gC,KAAK,CAAC;EAC1D;EACAyQ,iBAAiBA,CAACzQ,KAAK,EAAE;IACvB,OAAO,CAAC,IAAI,CAAC2gC,cAAc,CAAC3gC,KAAK,CAAC;EACpC;EACA+jC,wBAAwBA,CAACzjC,YAAY,EAAErD,OAAO,EAAE;IAC9C,MAAMhG,EAAE,GAAG,IAAI;IACf,MAAMoJ,IAAI,GAAGpD,OAAO,GAAG,MAAM,GAAG,MAAM;IACtC,MAAM4D,IAAI,GAAG5J,EAAE,CAAC6O,cAAc,CAACxF,YAAY,CAAC;IAC5C,MAAMnK,KAAK,GAAG0K,IAAI,CAACkB,UAAU,CAACsI,kBAAkB,CAACrU,SAAS,EAAEqK,IAAI,CAAC;IACjEpJ,EAAE,CAAC6sC,oBAAoB,CAACxjC,YAAY,EAAErD,OAAO,CAAC;IAC9C9G,KAAK,CAACqF,MAAM,CAACqF,IAAI,EAAE;MAAC5D;IAAO,CAAC,CAAC;IAC7BhG,EAAE,CAACuE,MAAM,CAAEqI,GAAG,IAAKA,GAAG,CAACvD,YAAY,KAAKA,YAAY,GAAGD,IAAI,GAAGrK,SAAS,CAAC;EAC1E;EACAkH,IAAIA,CAACoD,YAAY,EAAE;IACjB,IAAI,CAACyjC,wBAAwB,CAACzjC,YAAY,EAAE,KAAK,CAAC;EACpD;EACAvD,IAAIA,CAACuD,YAAY,EAAE;IACjB,IAAI,CAACyjC,wBAAwB,CAACzjC,YAAY,EAAE,IAAI,CAAC;EACnD;EACAsiC,mBAAmBA,CAACtiC,YAAY,EAAE;IAChC,MAAMrJ,EAAE,GAAG,IAAI;IACf,MAAM4J,IAAI,GAAG5J,EAAE,CAACqpC,SAAS,IAAIrpC,EAAE,CAACqpC,SAAS,CAAChgC,YAAY,CAAC;IACvD,IAAIO,IAAI,IAAIA,IAAI,CAACkB,UAAU,EAAE;MAC3BlB,IAAI,CAACkB,UAAU,CAACmE,QAAQ,CAAC,CAAC;MAC1B,OAAOjP,EAAE,CAACqpC,SAAS,CAAChgC,YAAY,CAAC;IACnC;EACF;EACA0jC,OAAOA,CAAA,EAAG;IACR,MAAM/sC,EAAE,GAAG,IAAI;IACf,MAAM;MAAC8qB,MAAM;MAAEle;IAAG,CAAC,GAAG5M,EAAE;IACxB,IAAI5M,CAAC,EAAE0V,IAAI;IACX9I,EAAE,CAACkC,IAAI,CAAC,CAAC;IACTI,QAAQ,CAACF,MAAM,CAACpC,EAAE,CAAC;IACnB,KAAK5M,CAAC,GAAG,CAAC,EAAE0V,IAAI,GAAG9I,EAAE,CAACwJ,IAAI,CAACoF,QAAQ,CAACvO,MAAM,EAAEjN,CAAC,GAAG0V,IAAI,EAAE,EAAE1V,CAAC,EAAE;MACzD4M,EAAE,CAAC2rC,mBAAmB,CAACv4C,CAAC,CAAC;IAC3B;IACA4M,EAAE,CAACmG,MAAM,CAACygC,UAAU,CAAC,CAAC;IACtB,IAAI9b,MAAM,EAAE;MACV9qB,EAAE,CAACgtC,YAAY,CAAC,CAAC;MACjBryC,WAAW,CAACmwB,MAAM,EAAEle,GAAG,CAAC;MACxB5M,EAAE,CAACipC,QAAQ,CAACle,cAAc,CAACne,GAAG,CAAC;MAC/B5M,EAAE,CAAC8qB,MAAM,GAAG,IAAI;MAChB9qB,EAAE,CAAC4M,GAAG,GAAG,IAAI;IACf;IACA5M,EAAE,CAAC44B,aAAa,CAAC,SAAS,CAAC;IAC3B,OAAOgQ,SAAS,CAAC5oC,EAAE,CAACiK,EAAE,CAAC;EACzB;EACAgjC,aAAaA,CAAA,EAAU;IACrB,OAAO,IAAI,CAACniB,MAAM,CAACoiB,SAAS,CAAC,GAAA9sC,SAAO,CAAC;EACvC;EACA+pC,UAAUA,CAAA,EAAG;IACX,MAAMnqC,EAAE,GAAG,IAAI;IACf,MAAMV,SAAS,GAAGU,EAAE,CAACupC,UAAU;IAC/B,MAAMN,QAAQ,GAAGjpC,EAAE,CAACipC,QAAQ;IAC5B,MAAMkE,IAAI,GAAGA,CAAC/tC,IAAI,EAAE6rB,QAAQ,KAAK;MAC/Bge,QAAQ,CAACje,gBAAgB,CAAChrB,EAAE,EAAEZ,IAAI,EAAE6rB,QAAQ,CAAC;MAC7C3rB,SAAS,CAACF,IAAI,CAAC,GAAG6rB,QAAQ;IAC5B,CAAC;IACD,MAAMmiB,OAAO,GAAGA,CAAChuC,IAAI,EAAE6rB,QAAQ,KAAK;MAClC,IAAI3rB,SAAS,CAACF,IAAI,CAAC,EAAE;QACnB6pC,QAAQ,CAAC/d,mBAAmB,CAAClrB,EAAE,EAAEZ,IAAI,EAAE6rB,QAAQ,CAAC;QAChD,OAAO3rB,SAAS,CAACF,IAAI,CAAC;MACxB;IACF,CAAC;IACD,IAAI6rB,QAAQ,GAAG,SAAAA,CAASj4B,CAAC,EAAEkD,CAAC,EAAEE,CAAC,EAAE;MAC/BpD,CAAC,CAACsoB,OAAO,GAAGplB,CAAC;MACblD,CAAC,CAACuoB,OAAO,GAAGnlB,CAAC;MACb4J,EAAE,CAACqsC,aAAa,CAACr5C,CAAC,CAAC;IACrB,CAAC;IACD+D,IAAI,CAACiJ,EAAE,CAAC8G,OAAO,CAACumC,MAAM,EAAGjuC,IAAI,IAAK+tC,IAAI,CAAC/tC,IAAI,EAAE6rB,QAAQ,CAAC,CAAC;IACvD,IAAIjrB,EAAE,CAAC8G,OAAO,CAACojC,UAAU,EAAE;MACzBjf,QAAQ,GAAGA,CAACvS,KAAK,EAAED,MAAM,KAAK;QAC5B,IAAIzY,EAAE,CAAC8qB,MAAM,EAAE;UACb9qB,EAAE,CAAC6F,MAAM,CAAC6S,KAAK,EAAED,MAAM,CAAC;QAC1B;MACF,CAAC;MACD,IAAI60B,QAAQ;MACZ,MAAM3D,QAAQ,GAAGA,CAAA,KAAM;QACrByD,OAAO,CAAC,QAAQ,EAAEzD,QAAQ,CAAC;QAC3B3pC,EAAE,CAAC2pC,QAAQ,GAAG,IAAI;QAClB3pC,EAAE,CAAC6F,MAAM,CAAC,CAAC;QACXsnC,IAAI,CAAC,QAAQ,EAAEliB,QAAQ,CAAC;QACxBkiB,IAAI,CAAC,QAAQ,EAAEG,QAAQ,CAAC;MAC1B,CAAC;MACDA,QAAQ,GAAGA,CAAA,KAAM;QACfttC,EAAE,CAAC2pC,QAAQ,GAAG,KAAK;QACnByD,OAAO,CAAC,QAAQ,EAAEniB,QAAQ,CAAC;QAC3BkiB,IAAI,CAAC,QAAQ,EAAExD,QAAQ,CAAC;MAC1B,CAAC;MACD,IAAIV,QAAQ,CAAC7d,UAAU,CAACprB,EAAE,CAAC8qB,MAAM,CAAC,EAAE;QAClC6e,QAAQ,CAAC,CAAC;MACZ,CAAC,MAAM;QACL2D,QAAQ,CAAC,CAAC;MACZ;IACF,CAAC,MAAM;MACLttC,EAAE,CAAC2pC,QAAQ,GAAG,IAAI;IACpB;EACF;EACAqD,YAAYA,CAAA,EAAG;IACb,MAAMhtC,EAAE,GAAG,IAAI;IACf,MAAMV,SAAS,GAAGU,EAAE,CAACupC,UAAU;IAC/B,IAAI,CAACjqC,SAAS,EAAE;MACd;IACF;IACA,OAAOU,EAAE,CAACupC,UAAU;IACpBxyC,IAAI,CAACuI,SAAS,EAAE,CAAC2rB,QAAQ,EAAE7rB,IAAI,KAAK;MAClCY,EAAE,CAACipC,QAAQ,CAAC/d,mBAAmB,CAAClrB,EAAE,EAAEZ,IAAI,EAAE6rB,QAAQ,CAAC;IACrD,CAAC,CAAC;EACJ;EACAsiB,gBAAgBA,CAAC7sC,KAAK,EAAE0I,IAAI,EAAEopB,OAAO,EAAE;IACrC,MAAMgb,MAAM,GAAGhb,OAAO,GAAG,KAAK,GAAG,QAAQ;IACzC,IAAI5oB,IAAI,EAAEhJ,IAAI,EAAExN,CAAC,EAAE0V,IAAI;IACvB,IAAIM,IAAI,KAAK,SAAS,EAAE;MACtBQ,IAAI,GAAG,IAAI,CAACiF,cAAc,CAACnO,KAAK,CAAC,CAAC,CAAC,CAAC2I,YAAY,CAAC;MACjDO,IAAI,CAACkB,UAAU,CAAC,GAAG,GAAG0iC,MAAM,GAAG,mBAAmB,CAAC,CAAC,CAAC;IACvD;IACA,KAAKp6C,CAAC,GAAG,CAAC,EAAE0V,IAAI,GAAGpI,KAAK,CAACL,MAAM,EAAEjN,CAAC,GAAG0V,IAAI,EAAE,EAAE1V,CAAC,EAAE;MAC9CwN,IAAI,GAAGF,KAAK,CAACtN,CAAC,CAAC;MACf,MAAM0X,UAAU,GAAGlK,IAAI,IAAI,IAAI,CAACiO,cAAc,CAACjO,IAAI,CAACyI,YAAY,CAAC,CAACyB,UAAU;MAC5E,IAAIA,UAAU,EAAE;QACdA,UAAU,CAAC0iC,MAAM,GAAG,YAAY,CAAC,CAAC5sC,IAAI,CAACqL,OAAO,EAAErL,IAAI,CAACyI,YAAY,EAAEzI,IAAI,CAACmI,KAAK,CAAC;MAChF;IACF;EACF;EACA0kC,iBAAiBA,CAAA,EAAG;IAClB,OAAO,IAAI,CAAC5sC,OAAO,IAAI,EAAE;EAC3B;EACA6sC,iBAAiBA,CAACC,cAAc,EAAE;IAChC,MAAM3tC,EAAE,GAAG,IAAI;IACf,MAAM4tC,UAAU,GAAG5tC,EAAE,CAACa,OAAO,IAAI,EAAE;IACnC,MAAMyD,MAAM,GAAGqpC,cAAc,CAAC3uB,GAAG,CAAC6uB,IAAA,IAA2B;MAAA,IAA1B;QAACxkC,YAAY;QAAEN;MAAK,CAAC,GAAA8kC,IAAA;MACtD,MAAMjkC,IAAI,GAAG5J,EAAE,CAAC6O,cAAc,CAACxF,YAAY,CAAC;MAC5C,IAAI,CAACO,IAAI,EAAE;QACT,MAAM,IAAI0Z,KAAK,CAAC,4BAA4B,GAAGja,YAAY,CAAC;MAC9D;MACA,OAAO;QACLA,YAAY;QACZ4C,OAAO,EAAErC,IAAI,CAACJ,IAAI,CAACT,KAAK,CAAC;QACzBA;MACF,CAAC;IACH,CAAC,CAAC;IACF,MAAM2Y,OAAO,GAAG,CAAC7mB,cAAc,CAACyJ,MAAM,EAAEspC,UAAU,CAAC;IACnD,IAAIlsB,OAAO,EAAE;MACX1hB,EAAE,CAACa,OAAO,GAAGyD,MAAM;MACnBtE,EAAE,CAAC8tC,kBAAkB,CAACxpC,MAAM,EAAEspC,UAAU,CAAC;IAC3C;EACF;EACAhV,aAAaA,CAAC+K,IAAI,EAAE7U,IAAI,EAAE;IACxB,OAAO,IAAI,CAAC2a,QAAQ,CAAC/F,MAAM,CAAC,IAAI,EAAEC,IAAI,EAAE7U,IAAI,CAAC;EAC/C;EACAgf,kBAAkBA,CAACxpC,MAAM,EAAEspC,UAAU,EAAEG,MAAM,EAAE;IAC7C,MAAM/tC,EAAE,GAAG,IAAI;IACf,MAAMguC,YAAY,GAAGhuC,EAAE,CAAC8G,OAAO,CAACmnC,KAAK;IACrC,MAAMpqB,IAAI,GAAGA,CAAC/wB,CAAC,EAAEQ,CAAC,KAAKR,CAAC,CAAC4Y,MAAM,CAACxV,CAAC,IAAI,CAAC5C,CAAC,CAACgxC,IAAI,CAACluC,CAAC,IAAIF,CAAC,CAACmT,YAAY,KAAKjT,CAAC,CAACiT,YAAY,IAAInT,CAAC,CAAC6S,KAAK,KAAK3S,CAAC,CAAC2S,KAAK,CAAC,CAAC;IAC5G,MAAMmlC,WAAW,GAAGrqB,IAAI,CAAC+pB,UAAU,EAAEtpC,MAAM,CAAC;IAC5C,MAAM6pC,SAAS,GAAGJ,MAAM,GAAGzpC,MAAM,GAAGuf,IAAI,CAACvf,MAAM,EAAEspC,UAAU,CAAC;IAC5D,IAAIM,WAAW,CAAC7tC,MAAM,EAAE;MACtBL,EAAE,CAACutC,gBAAgB,CAACW,WAAW,EAAEF,YAAY,CAAC5kC,IAAI,EAAE,KAAK,CAAC;IAC5D;IACA,IAAI+kC,SAAS,CAAC9tC,MAAM,IAAI2tC,YAAY,CAAC5kC,IAAI,EAAE;MACzCpJ,EAAE,CAACutC,gBAAgB,CAACY,SAAS,EAAEH,YAAY,CAAC5kC,IAAI,EAAE,IAAI,CAAC;IACzD;EACF;EACAijC,aAAaA,CAACr5C,CAAC,EAAE+6C,MAAM,EAAE;IACvB,MAAM/tC,EAAE,GAAG,IAAI;IACf,MAAM8uB,IAAI,GAAG;MAACttB,KAAK,EAAExO,CAAC;MAAE+6C,MAAM;MAAEhK,UAAU,EAAE;IAAI,CAAC;IACjD,IAAI/jC,EAAE,CAAC44B,aAAa,CAAC,aAAa,EAAE9J,IAAI,CAAC,KAAK,KAAK,EAAE;MACnD;IACF;IACA,MAAMpN,OAAO,GAAG1hB,EAAE,CAACouC,YAAY,CAACp7C,CAAC,EAAE+6C,MAAM,CAAC;IAC1Cjf,IAAI,CAACiV,UAAU,GAAG,KAAK;IACvB/jC,EAAE,CAAC44B,aAAa,CAAC,YAAY,EAAE9J,IAAI,CAAC;IACpC,IAAIpN,OAAO,IAAIoN,IAAI,CAACpN,OAAO,EAAE;MAC3B1hB,EAAE,CAAC2qC,MAAM,CAAC,CAAC;IACb;IACA,OAAO3qC,EAAE;EACX;EACAouC,YAAYA,CAACp7C,CAAC,EAAE+6C,MAAM,EAAE;IACtB,MAAM/tC,EAAE,GAAG,IAAI;IACf,MAAM;MAACa,OAAO,EAAE+sC,UAAU,GAAG,EAAE;MAAE9mC;IAAO,CAAC,GAAG9G,EAAE;IAC9C,MAAMguC,YAAY,GAAGlnC,OAAO,CAACmnC,KAAK;IAClC,MAAMpoB,gBAAgB,GAAGkoB,MAAM;IAC/B,IAAIzpC,MAAM,GAAG,EAAE;IACf,IAAIod,OAAO,GAAG,KAAK;IACnB,IAAI2sB,SAAS,GAAG,IAAI;IACpB,IAAIr7C,CAAC,CAACoM,IAAI,KAAK,UAAU,EAAE;MACzBkF,MAAM,GAAGtE,EAAE,CAAC4sC,yBAAyB,CAAC55C,CAAC,EAAEg7C,YAAY,CAAC5kC,IAAI,EAAE4kC,YAAY,EAAEnoB,gBAAgB,CAAC;MAC3FwoB,SAAS,GAAGr7C,CAAC,CAACoM,IAAI,KAAK,OAAO,GAAGY,EAAE,CAACspC,UAAU,GAAGt2C,CAAC;IACpD;IACAgN,EAAE,CAACspC,UAAU,GAAG,IAAI;IACpBrxC,QAAQ,CAAC6O,OAAO,CAACwnC,OAAO,EAAE,CAACt7C,CAAC,EAAEsR,MAAM,EAAEtE,EAAE,CAAC,EAAEA,EAAE,CAAC;IAC9C,IAAIhN,CAAC,CAACoM,IAAI,KAAK,SAAS,IAAIpM,CAAC,CAACoM,IAAI,KAAK,OAAO,IAAIpM,CAAC,CAACoM,IAAI,KAAK,aAAa,EAAE;MAC1E,IAAI3I,cAAc,CAACzD,CAAC,EAAEgN,EAAE,CAACmS,SAAS,EAAEnS,EAAE,CAAC8lB,WAAW,CAAC,EAAE;QACnD7tB,QAAQ,CAAC6O,OAAO,CAAC2Y,OAAO,EAAE,CAACzsB,CAAC,EAAEsR,MAAM,EAAEtE,EAAE,CAAC,EAAEA,EAAE,CAAC;MAChD;IACF;IACA0hB,OAAO,GAAG,CAAC7mB,cAAc,CAACyJ,MAAM,EAAEspC,UAAU,CAAC;IAC7C,IAAIlsB,OAAO,IAAIqsB,MAAM,EAAE;MACrB/tC,EAAE,CAACa,OAAO,GAAGyD,MAAM;MACnBtE,EAAE,CAAC8tC,kBAAkB,CAACxpC,MAAM,EAAEspC,UAAU,EAAEG,MAAM,CAAC;IACnD;IACA/tC,EAAE,CAACspC,UAAU,GAAG+E,SAAS;IACzB,OAAO3sB,OAAO;EAChB;AACF;AACA,MAAM6sB,iBAAiB,GAAGA,CAAA,KAAMx3C,IAAI,CAAC+xC,KAAK,CAACF,SAAS,EAAG3pC,KAAK,IAAKA,KAAK,CAACwqC,QAAQ,CAACzF,UAAU,CAAC,CAAC,CAAC;AAC7F,MAAMwK,UAAU,GAAG,IAAI;AACvBppC,MAAM,CAACqpC,gBAAgB,CAAC3F,KAAK,EAAE;EAC7Br1C,QAAQ,EAAE;IACR+6C,UAAU;IACVjnC,KAAK,EAAE9T;EACT,CAAC;EACDm1C,SAAS,EAAE;IACT4F,UAAU;IACVjnC,KAAK,EAAEqhC;EACT,CAAC;EACDzvC,SAAS,EAAE;IACTq1C,UAAU;IACVjnC,KAAK,EAAEpO;EACT,CAAC;EACDkqC,QAAQ,EAAE;IACRmL,UAAU;IACVjnC,KAAK,EAAE87B;EACT,CAAC;EACD0E,OAAO,EAAE;IACPyG,UAAU;IACVjnC,KAAK,EAAEwgC;EACT,CAAC;EACDc,QAAQ,EAAE;IACR2F,UAAU;IACVjnC,KAAK,EAAEshC;EACT,CAAC;EACDpJ,QAAQ,EAAE;IACR+O,UAAU;IACVjnC,KAAK,EAAE,SAAAA,CAAA,EAAc;MACnB87B,QAAQ,CAAC1hC,GAAG,CAAC,GAAAvB,SAAQ,CAAC;MACtBmuC,iBAAiB,CAAC,CAAC;IACrB;EACF,CAAC;EACDxO,UAAU,EAAE;IACVyO,UAAU;IACVjnC,KAAK,EAAE,SAAAA,CAAA,EAAc;MACnB87B,QAAQ,CAACjhC,MAAM,CAAC,GAAAhC,SAAQ,CAAC;MACzBmuC,iBAAiB,CAAC,CAAC;IACrB;EACF;AACF,CAAC,CAAC;AAEF,SAASG,OAAOA,CAAC9hC,GAAG,EAAEX,OAAO,EAAE;EAC7B,MAAM;IAACuP,UAAU;IAAEC,QAAQ;IAAEkzB,WAAW;IAAEz4C,CAAC;IAAEE,CAAC;IAAEqmB,WAAW;IAAED;EAAW,CAAC,GAAGvQ,OAAO;EACnF,IAAI2iC,WAAW,GAAGD,WAAW,GAAGlyB,WAAW;EAC3C7P,GAAG,CAAC8xB,SAAS,CAAC,CAAC;EACf9xB,GAAG,CAACwR,GAAG,CAACloB,CAAC,EAAEE,CAAC,EAAEqmB,WAAW,EAAEjB,UAAU,GAAGozB,WAAW,EAAEnzB,QAAQ,GAAGmzB,WAAW,CAAC;EAC5E,IAAIpyB,WAAW,GAAGmyB,WAAW,EAAE;IAC7BC,WAAW,GAAGD,WAAW,GAAGnyB,WAAW;IACvC5P,GAAG,CAACwR,GAAG,CAACloB,CAAC,EAAEE,CAAC,EAAEomB,WAAW,EAAEf,QAAQ,GAAGmzB,WAAW,EAAEpzB,UAAU,GAAGozB,WAAW,EAAE,IAAI,CAAC;EACpF,CAAC,MAAM;IACLhiC,GAAG,CAACwR,GAAG,CAACloB,CAAC,EAAEE,CAAC,EAAEu4C,WAAW,EAAElzB,QAAQ,GAAG5lB,OAAO,EAAE2lB,UAAU,GAAG3lB,OAAO,CAAC;EACtE;EACA+W,GAAG,CAACiiC,SAAS,CAAC,CAAC;EACfjiC,GAAG,CAACoF,IAAI,CAAC,CAAC;AACZ;AACA,SAAS88B,OAAOA,CAACliC,GAAG,EAAEX,OAAO,EAAE;EAC7B,MAAM;IAAC/V,CAAC;IAAEE,CAAC;IAAEolB,UAAU;IAAEC,QAAQ;IAAEkzB;EAAW,CAAC,GAAG1iC,OAAO;EACzD,MAAMwQ,WAAW,GAAG7c,IAAI,CAACoC,GAAG,CAACiK,OAAO,CAACwQ,WAAW,GAAGkyB,WAAW,EAAE,CAAC,CAAC;EAClE,MAAMnyB,WAAW,GAAGvQ,OAAO,CAACuQ,WAAW,GAAGmyB,WAAW;EACrD/hC,GAAG,CAAC8xB,SAAS,CAAC,CAAC;EACf9xB,GAAG,CAACwR,GAAG,CAACloB,CAAC,EAAEE,CAAC,EAAEqmB,WAAW,EAAEjB,UAAU,EAAEC,QAAQ,CAAC;EAChD7O,GAAG,CAACwR,GAAG,CAACloB,CAAC,EAAEE,CAAC,EAAEomB,WAAW,EAAEf,QAAQ,EAAED,UAAU,EAAE,IAAI,CAAC;EACtD5O,GAAG,CAACiiC,SAAS,CAAC,CAAC;AACjB;AACA,SAASE,OAAOA,CAACniC,GAAG,EAAEX,OAAO,EAAE;EAC7B,IAAIA,OAAO,CAAC+iC,WAAW,EAAE;IACvB/iC,OAAO,CAACwP,QAAQ,GAAGxP,OAAO,CAACuP,UAAU,GAAGjmB,GAAG;IAC3Cu5C,OAAO,CAACliC,GAAG,EAAEX,OAAO,CAAC;IACrB,KAAK,IAAI7Y,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG6Y,OAAO,CAAC+iC,WAAW,EAAE,EAAE57C,CAAC,EAAE;MAC5CwZ,GAAG,CAACqW,IAAI,CAAC,CAAC;IACZ;EACF;EACA,IAAI,CAACnK,KAAK,CAAC7M,OAAO,CAACiP,aAAa,CAAC,EAAE;IACjCjP,OAAO,CAACwP,QAAQ,GAAGxP,OAAO,CAACuP,UAAU,GAAGvP,OAAO,CAACiP,aAAa,GAAG3lB,GAAG;EACrE;EACAu5C,OAAO,CAACliC,GAAG,EAAEX,OAAO,CAAC;EACrBW,GAAG,CAACqW,IAAI,CAAC,CAAC;AACZ;AACA,SAASgsB,qBAAqBA,CAACriC,GAAG,EAAEX,OAAO,EAAEijC,KAAK,EAAE;EAClD,MAAM;IAACh5C,CAAC;IAAEE,CAAC;IAAEolB,UAAU;IAAEC,QAAQ;IAAEkzB;EAAW,CAAC,GAAG1iC,OAAO;EACzD,MAAMwQ,WAAW,GAAG7c,IAAI,CAACoC,GAAG,CAACiK,OAAO,CAACwQ,WAAW,GAAGkyB,WAAW,EAAE,CAAC,CAAC;EAClE,MAAMnyB,WAAW,GAAGvQ,OAAO,CAACuQ,WAAW,GAAGmyB,WAAW;EACrD,IAAIv7C,CAAC;EACL,IAAI87C,KAAK,EAAE;IACTjjC,OAAO,CAACwP,QAAQ,GAAGxP,OAAO,CAACuP,UAAU,GAAGjmB,GAAG;IAC3Cm5C,OAAO,CAAC9hC,GAAG,EAAEX,OAAO,CAAC;IACrBA,OAAO,CAACwP,QAAQ,GAAGA,QAAQ;IAC3B,IAAIxP,OAAO,CAACwP,QAAQ,KAAKxP,OAAO,CAACuP,UAAU,EAAE;MAC3CvP,OAAO,CAACwP,QAAQ,IAAIlmB,GAAG;MACvB0W,OAAO,CAAC+iC,WAAW,EAAE;IACvB;EACF;EACApiC,GAAG,CAAC8xB,SAAS,CAAC,CAAC;EACf9xB,GAAG,CAACwR,GAAG,CAACloB,CAAC,EAAEE,CAAC,EAAEomB,WAAW,EAAEhB,UAAU,GAAGjmB,GAAG,EAAEimB,UAAU,EAAE,IAAI,CAAC;EAC9D,KAAKpoB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG6Y,OAAO,CAAC+iC,WAAW,EAAE,EAAE57C,CAAC,EAAE;IACxCwZ,GAAG,CAACiyB,MAAM,CAAC,CAAC;EACd;EACAjyB,GAAG,CAAC8xB,SAAS,CAAC,CAAC;EACf9xB,GAAG,CAACwR,GAAG,CAACloB,CAAC,EAAEE,CAAC,EAAEqmB,WAAW,EAAEjB,UAAU,EAAEA,UAAU,GAAGjmB,GAAG,CAAC;EACxD,KAAKnC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG6Y,OAAO,CAAC+iC,WAAW,EAAE,EAAE57C,CAAC,EAAE;IACxCwZ,GAAG,CAACiyB,MAAM,CAAC,CAAC;EACd;AACF;AACA,SAAShO,UAAUA,CAACjkB,GAAG,EAAEX,OAAO,EAAE;EAChC,MAAM;IAAC/V,CAAC;IAAEE,CAAC;IAAEolB,UAAU;IAAEC,QAAQ;IAAEkzB,WAAW;IAAE7nC;EAAO,CAAC,GAAGmF,OAAO;EAClE,MAAMwQ,WAAW,GAAGxQ,OAAO,CAACwQ,WAAW;EACvC,MAAMD,WAAW,GAAGvQ,OAAO,CAACuQ,WAAW,GAAGmyB,WAAW;EACrD,MAAMO,KAAK,GAAGpoC,OAAO,CAACyX,WAAW,KAAK,OAAO;EAC7C,IAAI,CAACzX,OAAO,CAAC0X,WAAW,EAAE;IACxB;EACF;EACA,IAAI0wB,KAAK,EAAE;IACTtiC,GAAG,CAAC2S,SAAS,GAAGzY,OAAO,CAAC0X,WAAW,GAAG,CAAC;IACvC5R,GAAG,CAACuiC,QAAQ,GAAG,OAAO;EACxB,CAAC,MAAM;IACLviC,GAAG,CAAC2S,SAAS,GAAGzY,OAAO,CAAC0X,WAAW;IACnC5R,GAAG,CAACuiC,QAAQ,GAAG,OAAO;EACxB;EACA,IAAIljC,OAAO,CAAC+iC,WAAW,EAAE;IACvBC,qBAAqB,CAACriC,GAAG,EAAEX,OAAO,EAAEijC,KAAK,CAAC;EAC5C;EACA,IAAIA,KAAK,EAAE;IACTR,OAAO,CAAC9hC,GAAG,EAAEX,OAAO,CAAC;EACvB;EACAW,GAAG,CAAC8xB,SAAS,CAAC,CAAC;EACf9xB,GAAG,CAACwR,GAAG,CAACloB,CAAC,EAAEE,CAAC,EAAEqmB,WAAW,EAAEjB,UAAU,EAAEC,QAAQ,CAAC;EAChD7O,GAAG,CAACwR,GAAG,CAACloB,CAAC,EAAEE,CAAC,EAAEomB,WAAW,EAAEf,QAAQ,EAAED,UAAU,EAAE,IAAI,CAAC;EACtD5O,GAAG,CAACiiC,SAAS,CAAC,CAAC;EACfjiC,GAAG,CAACiyB,MAAM,CAAC,CAAC;AACd;AACA,MAAMuQ,UAAU,SAAS7f,OAAO,CAAC;EAC/B9wB,WAAWA,CAAC2E,GAAG,EAAE;IACf,KAAK,CAAC,CAAC;IACP,IAAI,CAAC0D,OAAO,GAAG/H,SAAS;IACxB,IAAI,CAACmc,aAAa,GAAGnc,SAAS;IAC9B,IAAI,CAACyc,UAAU,GAAGzc,SAAS;IAC3B,IAAI,CAAC0c,QAAQ,GAAG1c,SAAS;IACzB,IAAI,CAACyd,WAAW,GAAGzd,SAAS;IAC5B,IAAI,CAAC0d,WAAW,GAAG1d,SAAS;IAC5B,IAAI,CAAC4vC,WAAW,GAAG,CAAC;IACpB,IAAI,CAACK,WAAW,GAAG,CAAC;IACpB,IAAI5rC,GAAG,EAAE;MACPgC,MAAM,CAACqC,MAAM,CAAC,IAAI,EAAErE,GAAG,CAAC;IAC1B;EACF;EACA4iB,OAAOA,CAACqpB,MAAM,EAAEC,MAAM,EAAEzpB,gBAAgB,EAAE;IACxC,MAAMpL,KAAK,GAAG,IAAI,CAACgV,QAAQ,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE5J,gBAAgB,CAAC;IACzD,MAAM;MAAC5J,KAAK;MAAEoK;IAAQ,CAAC,GAAGtrB,iBAAiB,CAAC0f,KAAK,EAAE;MAACvkB,CAAC,EAAEm5C,MAAM;MAAEj5C,CAAC,EAAEk5C;IAAM,CAAC,CAAC;IAC1E,MAAM;MAAC9zB,UAAU;MAAEC,QAAQ;MAAEe,WAAW;MAAEC,WAAW;MAAEvB;IAAa,CAAC,GAAG,IAAI,CAACuU,QAAQ,CAAC,CACpF,YAAY,EACZ,UAAU,EACV,aAAa,EACb,aAAa,EACb,eAAe,CAChB,EAAE5J,gBAAgB,CAAC;IACpB,MAAM0pB,aAAa,GAAGr0B,aAAa,IAAI3lB,GAAG,IAAII,aAAa,CAACsmB,KAAK,EAAET,UAAU,EAAEC,QAAQ,CAAC;IACxF,MAAM+zB,YAAY,GAAInpB,QAAQ,IAAI7J,WAAW,IAAI6J,QAAQ,IAAI5J,WAAY;IACzE,OAAQ8yB,aAAa,IAAIC,YAAY;EACvC;EACAppB,cAAcA,CAACP,gBAAgB,EAAE;IAC/B,MAAM;MAAC3vB,CAAC;MAAEE,CAAC;MAAEolB,UAAU;MAAEC,QAAQ;MAAEe,WAAW;MAAEC;IAAW,CAAC,GAAG,IAAI,CAACgT,QAAQ,CAAC,CAC3E,GAAG,EACH,GAAG,EACH,YAAY,EACZ,UAAU,EACV,aAAa,EACb,aAAa,CACd,EAAE5J,gBAAgB,CAAC;IACpB,MAAM4pB,SAAS,GAAG,CAACj0B,UAAU,GAAGC,QAAQ,IAAI,CAAC;IAC7C,MAAMi0B,UAAU,GAAG,CAAClzB,WAAW,GAAGC,WAAW,IAAI,CAAC;IAClD,OAAO;MACLvmB,CAAC,EAAEA,CAAC,GAAG0J,IAAI,CAAC+b,GAAG,CAAC8zB,SAAS,CAAC,GAAGC,UAAU;MACvCt5C,CAAC,EAAEA,CAAC,GAAGwJ,IAAI,CAACic,GAAG,CAAC4zB,SAAS,CAAC,GAAGC;IAC/B,CAAC;EACH;EACAlgB,eAAeA,CAAC3J,gBAAgB,EAAE;IAChC,OAAO,IAAI,CAACO,cAAc,CAACP,gBAAgB,CAAC;EAC9C;EACAllB,IAAIA,CAACiM,GAAG,EAAE;IACR,MAAM5M,EAAE,GAAG,IAAI;IACf,MAAM8G,OAAO,GAAG9G,EAAE,CAAC8G,OAAO;IAC1B,MAAMqT,MAAM,GAAGrT,OAAO,CAACqT,MAAM,IAAI,CAAC;IAClCna,EAAE,CAAC2uC,WAAW,GAAI7nC,OAAO,CAACyX,WAAW,KAAK,OAAO,GAAI,IAAI,GAAG,CAAC;IAC7Dve,EAAE,CAACgvC,WAAW,GAAGpvC,IAAI,CAACiE,KAAK,CAAC7D,EAAE,CAACkb,aAAa,GAAG3lB,GAAG,CAAC;IACnD,IAAIyK,EAAE,CAACkb,aAAa,KAAK,CAAC,IAAIlb,EAAE,CAACwc,WAAW,GAAG,CAAC,IAAIxc,EAAE,CAACyc,WAAW,GAAG,CAAC,EAAE;MACtE;IACF;IACA7P,GAAG,CAACoxB,IAAI,CAAC,CAAC;IACV,IAAI7jB,MAAM,IAAIna,EAAE,CAACkb,aAAa,GAAG3lB,GAAG,EAAE;MACpC,MAAMk6C,SAAS,GAAG,CAACzvC,EAAE,CAACwb,UAAU,GAAGxb,EAAE,CAACyb,QAAQ,IAAI,CAAC;MACnD7O,GAAG,CAAC+iC,SAAS,CAAC/vC,IAAI,CAAC+b,GAAG,CAAC8zB,SAAS,CAAC,GAAGt1B,MAAM,EAAEva,IAAI,CAACic,GAAG,CAAC4zB,SAAS,CAAC,GAAGt1B,MAAM,CAAC;IAC3E;IACAvN,GAAG,CAACuS,SAAS,GAAGrY,OAAO,CAACsY,eAAe;IACvCxS,GAAG,CAACyS,WAAW,GAAGvY,OAAO,CAACwY,WAAW;IACrCyvB,OAAO,CAACniC,GAAG,EAAE5M,EAAE,CAAC;IAChB6wB,UAAU,CAACjkB,GAAG,EAAE5M,EAAE,CAAC;IACnB4M,GAAG,CAACsxB,OAAO,CAAC,CAAC;EACf;AACF;AACAkR,UAAU,CAACnlC,EAAE,GAAG,KAAK;AACrBmlC,UAAU,CAAC37C,QAAQ,GAAG;EACpB8qB,WAAW,EAAE,QAAQ;EACrBe,WAAW,EAAE,MAAM;EACnBd,WAAW,EAAE,CAAC;EACdrE,MAAM,EAAE,CAAC;EACT8B,KAAK,EAAEld;AACT,CAAC;AACDqwC,UAAU,CAACvf,aAAa,GAAG;EACzBzQ,eAAe,EAAE;AACnB,CAAC;AAED,SAASwwB,QAAQA,CAAChjC,GAAG,EAAEijC,EAAE,EAAE;EACzBjjC,GAAG,CAACkjC,OAAO,GAAGD,EAAE,CAACE,cAAc;EAC/BnjC,GAAG,CAAC4xB,WAAW,CAACqR,EAAE,CAAC1e,UAAU,CAAC;EAC9BvkB,GAAG,CAAC6xB,cAAc,GAAGoR,EAAE,CAACze,gBAAgB;EACxCxkB,GAAG,CAACuiC,QAAQ,GAAGU,EAAE,CAACG,eAAe;EACjCpjC,GAAG,CAAC2S,SAAS,GAAGswB,EAAE,CAACrxB,WAAW;EAC9B5R,GAAG,CAACyS,WAAW,GAAGwwB,EAAE,CAACvwB,WAAW;AAClC;AACA,SAASsf,MAAMA,CAAChyB,GAAG,EAAEqjC,QAAQ,EAAE5sC,MAAM,EAAE;EACrCuJ,GAAG,CAACgyB,MAAM,CAACv7B,MAAM,CAACnN,CAAC,EAAEmN,MAAM,CAACjN,CAAC,CAAC;AAChC;AACA,SAAS85C,aAAaA,CAACppC,OAAO,EAAE;EAC9B,IAAIA,OAAO,CAACqpC,OAAO,EAAE;IACnB,OAAOt0C,cAAc;EACvB;EACA,IAAIiL,OAAO,CAACspC,OAAO,EAAE;IACnB,OAAOr0C,cAAc;EACvB;EACA,OAAO6iC,MAAM;AACf;AACA,SAASyR,QAAQA,CAAC71B,MAAM,EAAE81B,OAAO,EAAE5oB,MAAM,EAAE;EACzCA,MAAM,GAAGA,MAAM,IAAI,CAAC,CAAC;EACrB,MAAMzX,KAAK,GAAGuK,MAAM,CAACna,MAAM;EAC3B,MAAMP,KAAK,GAAGF,IAAI,CAACoC,GAAG,CAAC0lB,MAAM,CAAC5nB,KAAK,IAAI,CAAC,EAAEwwC,OAAO,CAACxwC,KAAK,CAAC;EACxD,MAAMmI,GAAG,GAAGrI,IAAI,CAACC,GAAG,CAAC6nB,MAAM,CAACzf,GAAG,IAAIgI,KAAK,GAAG,CAAC,EAAEqgC,OAAO,CAACroC,GAAG,CAAC;EAC1D,OAAO;IACLgI,KAAK;IACLnQ,KAAK;IACLkE,IAAI,EAAEssC,OAAO,CAACtsC,IAAI;IAClB8E,IAAI,EAAEb,GAAG,GAAGnI,KAAK,GAAGmQ,KAAK,GAAGhI,GAAG,GAAGnI,KAAK,GAAGmI,GAAG,GAAGnI;EAClD,CAAC;AACH;AACA,SAASywC,WAAWA,CAAC3jC,GAAG,EAAEqT,IAAI,EAAEqwB,OAAO,EAAE5oB,MAAM,EAAE;EAC/C,MAAM;IAAClN,MAAM;IAAE1T;EAAO,CAAC,GAAGmZ,IAAI;EAC9B,MAAM;IAAChQ,KAAK;IAAEnQ,KAAK;IAAEkE,IAAI;IAAE8E;EAAI,CAAC,GAAGunC,QAAQ,CAAC71B,MAAM,EAAE81B,OAAO,EAAE5oB,MAAM,CAAC;EACpE,MAAM8oB,UAAU,GAAGN,aAAa,CAACppC,OAAO,CAAC;EACzC,IAAI;IAACyN,IAAI,GAAG,IAAI;IAAEvM;EAAO,CAAC,GAAG0f,MAAM,IAAI,CAAC,CAAC;EACzC,IAAIt0B,CAAC,EAAEqnB,KAAK,EAAErK,IAAI;EAClB,KAAKhd,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI0V,IAAI,EAAE,EAAE1V,CAAC,EAAE;IAC1BqnB,KAAK,GAAGD,MAAM,CAAC,CAAC1a,KAAK,IAAIkI,OAAO,GAAGc,IAAI,GAAG1V,CAAC,GAAGA,CAAC,CAAC,IAAI6c,KAAK,CAAC;IAC1D,IAAIwK,KAAK,CAACE,IAAI,EAAE;MACd;IACF,CAAC,MAAM,IAAIpG,IAAI,EAAE;MACf3H,GAAG,CAAC+xB,MAAM,CAAClkB,KAAK,CAACvkB,CAAC,EAAEukB,KAAK,CAACrkB,CAAC,CAAC;MAC5Bme,IAAI,GAAG,KAAK;IACd,CAAC,MAAM;MACLi8B,UAAU,CAAC5jC,GAAG,EAAEwD,IAAI,EAAEqK,KAAK,EAAEzS,OAAO,EAAElB,OAAO,CAACqpC,OAAO,CAAC;IACxD;IACA//B,IAAI,GAAGqK,KAAK;EACd;EACA,IAAIzW,IAAI,EAAE;IACRyW,KAAK,GAAGD,MAAM,CAAC,CAAC1a,KAAK,IAAIkI,OAAO,GAAGc,IAAI,GAAG,CAAC,CAAC,IAAImH,KAAK,CAAC;IACtDugC,UAAU,CAAC5jC,GAAG,EAAEwD,IAAI,EAAEqK,KAAK,EAAEzS,OAAO,EAAElB,OAAO,CAACqpC,OAAO,CAAC;EACxD;EACA,OAAO,CAAC,CAACnsC,IAAI;AACf;AACA,SAASysC,eAAeA,CAAC7jC,GAAG,EAAEqT,IAAI,EAAEqwB,OAAO,EAAE5oB,MAAM,EAAE;EACnD,MAAMlN,MAAM,GAAGyF,IAAI,CAACzF,MAAM;EAC1B,MAAM;IAACvK,KAAK;IAAEnQ,KAAK;IAAEgJ;EAAI,CAAC,GAAGunC,QAAQ,CAAC71B,MAAM,EAAE81B,OAAO,EAAE5oB,MAAM,CAAC;EAC9D,MAAM;IAACnT,IAAI,GAAG,IAAI;IAAEvM;EAAO,CAAC,GAAG0f,MAAM,IAAI,CAAC,CAAC;EAC3C,IAAIgpB,IAAI,GAAG,CAAC;EACZ,IAAIC,MAAM,GAAG,CAAC;EACd,IAAIv9C,CAAC,EAAEqnB,KAAK,EAAEm2B,KAAK,EAAEt0B,IAAI,EAAEF,IAAI,EAAEy0B,KAAK;EACtC,MAAMC,UAAU,GAAI/nC,KAAK,IAAK,CAACjJ,KAAK,IAAIkI,OAAO,GAAGc,IAAI,GAAGC,KAAK,GAAGA,KAAK,CAAC,IAAIkH,KAAK;EAChF,MAAM8gC,KAAK,GAAGA,CAAA,KAAM;IAClB,IAAIz0B,IAAI,KAAKF,IAAI,EAAE;MACjBxP,GAAG,CAACgyB,MAAM,CAAC8R,IAAI,EAAEt0B,IAAI,CAAC;MACtBxP,GAAG,CAACgyB,MAAM,CAAC8R,IAAI,EAAEp0B,IAAI,CAAC;MACtB1P,GAAG,CAACgyB,MAAM,CAAC8R,IAAI,EAAEG,KAAK,CAAC;IACzB;EACF,CAAC;EACD,IAAIt8B,IAAI,EAAE;IACRkG,KAAK,GAAGD,MAAM,CAACs2B,UAAU,CAAC,CAAC,CAAC,CAAC;IAC7BlkC,GAAG,CAAC+xB,MAAM,CAAClkB,KAAK,CAACvkB,CAAC,EAAEukB,KAAK,CAACrkB,CAAC,CAAC;EAC9B;EACA,KAAKhD,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI0V,IAAI,EAAE,EAAE1V,CAAC,EAAE;IAC1BqnB,KAAK,GAAGD,MAAM,CAACs2B,UAAU,CAAC19C,CAAC,CAAC,CAAC;IAC7B,IAAIqnB,KAAK,CAACE,IAAI,EAAE;MACd;IACF;IACA,MAAMzkB,CAAC,GAAGukB,KAAK,CAACvkB,CAAC;IACjB,MAAME,CAAC,GAAGqkB,KAAK,CAACrkB,CAAC;IACjB,MAAM46C,MAAM,GAAG96C,CAAC,GAAG,CAAC;IACpB,IAAI86C,MAAM,KAAKJ,KAAK,EAAE;MACpB,IAAIx6C,CAAC,GAAGkmB,IAAI,EAAE;QACZA,IAAI,GAAGlmB,CAAC;MACV,CAAC,MAAM,IAAIA,CAAC,GAAGgmB,IAAI,EAAE;QACnBA,IAAI,GAAGhmB,CAAC;MACV;MACAs6C,IAAI,GAAG,CAACC,MAAM,GAAGD,IAAI,GAAGx6C,CAAC,IAAI,EAAEy6C,MAAM;IACvC,CAAC,MAAM;MACLI,KAAK,CAAC,CAAC;MACPnkC,GAAG,CAACgyB,MAAM,CAAC1oC,CAAC,EAAEE,CAAC,CAAC;MAChBw6C,KAAK,GAAGI,MAAM;MACdL,MAAM,GAAG,CAAC;MACVr0B,IAAI,GAAGF,IAAI,GAAGhmB,CAAC;IACjB;IACAy6C,KAAK,GAAGz6C,CAAC;EACX;EACA26C,KAAK,CAAC,CAAC;AACT;AACA,SAASE,iBAAiBA,CAAChxB,IAAI,EAAE;EAC/B,MAAMlY,IAAI,GAAGkY,IAAI,CAACnZ,OAAO;EACzB,MAAMqqB,UAAU,GAAGppB,IAAI,CAACopB,UAAU,IAAIppB,IAAI,CAACopB,UAAU,CAAC9wB,MAAM;EAC5D,MAAM6wC,WAAW,GAAG,CAACjxB,IAAI,CAACK,UAAU,IAAI,CAACL,IAAI,CAAClc,KAAK,IAAI,CAACgE,IAAI,CAACqoC,OAAO,IAAI,CAACroC,IAAI,CAACooC,OAAO,IAAI,CAAChf,UAAU;EACpG,OAAO+f,WAAW,GAAGT,eAAe,GAAGF,WAAW;AACpD;AACA,SAASY,uBAAuBA,CAACrqC,OAAO,EAAE;EACxC,IAAIA,OAAO,CAACqpC,OAAO,EAAE;IACnB,OAAO50C,qBAAqB;EAC9B;EACA,IAAIuL,OAAO,CAACspC,OAAO,EAAE;IACnB,OAAO30C,oBAAoB;EAC7B;EACA,OAAOE,YAAY;AACrB;AACA,SAASy1C,mBAAmBA,CAACxkC,GAAG,EAAEqT,IAAI,EAAEngB,KAAK,EAAEmQ,KAAK,EAAE;EACpD,IAAIohC,IAAI,GAAGpxB,IAAI,CAACqxB,KAAK;EACrB,IAAI,CAACD,IAAI,EAAE;IACTA,IAAI,GAAGpxB,IAAI,CAACqxB,KAAK,GAAG,IAAIC,MAAM,CAAC,CAAC;IAChC,IAAItxB,IAAI,CAACoxB,IAAI,CAACA,IAAI,EAAEvxC,KAAK,EAAEmQ,KAAK,CAAC,EAAE;MACjCohC,IAAI,CAACxC,SAAS,CAAC,CAAC;IAClB;EACF;EACAjiC,GAAG,CAACiyB,MAAM,CAACwS,IAAI,CAAC;AAClB;AACA,SAASG,gBAAgBA,CAAC5kC,GAAG,EAAEqT,IAAI,EAAEngB,KAAK,EAAEmQ,KAAK,EAAE;EACjDrD,GAAG,CAAC8xB,SAAS,CAAC,CAAC;EACf,IAAIze,IAAI,CAACoxB,IAAI,CAACzkC,GAAG,EAAE9M,KAAK,EAAEmQ,KAAK,CAAC,EAAE;IAChCrD,GAAG,CAACiiC,SAAS,CAAC,CAAC;EACjB;EACAjiC,GAAG,CAACiyB,MAAM,CAAC,CAAC;AACd;AACA,MAAM4S,SAAS,GAAG,OAAOF,MAAM,KAAK,UAAU;AAC9C,MAAMG,UAAU,GAAGD,SAAS,GAAGL,mBAAmB,GAAGI,gBAAgB;AACrE,MAAMG,WAAW,SAASpiB,OAAO,CAAC;EAChC9wB,WAAWA,CAAC2E,GAAG,EAAE;IACf,KAAK,CAAC,CAAC;IACP,IAAI,CAACod,QAAQ,GAAG,IAAI;IACpB,IAAI,CAAC1Z,OAAO,GAAG/H,SAAS;IACxB,IAAI,CAACgF,KAAK,GAAGhF,SAAS;IACtB,IAAI,CAAC+jB,SAAS,GAAG/jB,SAAS;IAC1B,IAAI,CAACuyC,KAAK,GAAGvyC,SAAS;IACtB,IAAI,CAAC6yC,OAAO,GAAG7yC,SAAS;IACxB,IAAI,CAAC8yC,SAAS,GAAG9yC,SAAS;IAC1B,IAAI,CAACuhB,UAAU,GAAG,KAAK;IACvB,IAAI,CAACwxB,cAAc,GAAG,KAAK;IAC3B,IAAI1uC,GAAG,EAAE;MACPgC,MAAM,CAACqC,MAAM,CAAC,IAAI,EAAErE,GAAG,CAAC;IAC1B;EACF;EACA4d,mBAAmBA,CAAC7O,SAAS,EAAE;IAC7B,MAAMnS,EAAE,GAAG,IAAI;IACf,MAAM8G,OAAO,GAAG9G,EAAE,CAAC8G,OAAO;IAC1B,IAAIA,OAAO,CAACspC,OAAO,IAAI,CAACtpC,OAAO,CAACqpC,OAAO,IAAI,CAACnwC,EAAE,CAAC8xC,cAAc,EAAE;MAC7D,MAAM9tC,IAAI,GAAG8C,OAAO,CAAC2Z,QAAQ,GAAGzgB,EAAE,CAAC+D,KAAK,GAAG/D,EAAE,CAAC8iB,SAAS;MACvD7nB,0BAA0B,CAAC+E,EAAE,CAAC4xC,OAAO,EAAE9qC,OAAO,EAAEqL,SAAS,EAAEnO,IAAI,CAAC;MAChEhE,EAAE,CAAC8xC,cAAc,GAAG,IAAI;IAC1B;EACF;EACA,IAAIt3B,MAAMA,CAACA,MAAM,EAAE;IACjB,MAAMxa,EAAE,GAAG,IAAI;IACfA,EAAE,CAAC4xC,OAAO,GAAGp3B,MAAM;IACnB,OAAOxa,EAAE,CAAC6xC,SAAS;IACnB,OAAO7xC,EAAE,CAACsxC,KAAK;IACftxC,EAAE,CAAC8xC,cAAc,GAAG,KAAK;EAC3B;EACA,IAAIt3B,MAAMA,CAAA,EAAG;IACX,OAAO,IAAI,CAACo3B,OAAO;EACrB;EACA,IAAIG,QAAQA,CAAA,EAAG;IACb,OAAO,IAAI,CAACF,SAAS,KAAK,IAAI,CAACA,SAAS,GAAG12C,gBAAgB,CAAC,IAAI,CAAC,CAAC;EACpE;EACAw3B,KAAKA,CAAA,EAAG;IACN,MAAMof,QAAQ,GAAG,IAAI,CAACA,QAAQ;IAC9B,MAAMv3B,MAAM,GAAG,IAAI,CAACA,MAAM;IAC1B,OAAOu3B,QAAQ,CAAC1xC,MAAM,IAAIma,MAAM,CAACu3B,QAAQ,CAAC,CAAC,CAAC,CAACjyC,KAAK,CAAC;EACrD;EACA8Y,IAAIA,CAAA,EAAG;IACL,MAAMm5B,QAAQ,GAAG,IAAI,CAACA,QAAQ;IAC9B,MAAMv3B,MAAM,GAAG,IAAI,CAACA,MAAM;IAC1B,MAAMvK,KAAK,GAAG8hC,QAAQ,CAAC1xC,MAAM;IAC7B,OAAO4P,KAAK,IAAIuK,MAAM,CAACu3B,QAAQ,CAAC9hC,KAAK,GAAG,CAAC,CAAC,CAAChI,GAAG,CAAC;EACjD;EACA+pC,WAAWA,CAACv3B,KAAK,EAAE0lB,QAAQ,EAAE;IAC3B,MAAMngC,EAAE,GAAG,IAAI;IACf,MAAM8G,OAAO,GAAG9G,EAAE,CAAC8G,OAAO;IAC1B,MAAMS,KAAK,GAAGkT,KAAK,CAAC0lB,QAAQ,CAAC;IAC7B,MAAM3lB,MAAM,GAAGxa,EAAE,CAACwa,MAAM;IACxB,MAAMu3B,QAAQ,GAAG12C,cAAc,CAAC2E,EAAE,EAAE;MAACmgC,QAAQ;MAAErgC,KAAK,EAAEyH,KAAK;MAAEU,GAAG,EAAEV;IAAK,CAAC,CAAC;IACzE,IAAI,CAACwqC,QAAQ,CAAC1xC,MAAM,EAAE;MACpB;IACF;IACA,MAAMmzB,MAAM,GAAG,EAAE;IACjB,MAAMye,YAAY,GAAGd,uBAAuB,CAACrqC,OAAO,CAAC;IACrD,IAAI1T,CAAC,EAAE0V,IAAI;IACX,KAAK1V,CAAC,GAAG,CAAC,EAAE0V,IAAI,GAAGipC,QAAQ,CAAC1xC,MAAM,EAAEjN,CAAC,GAAG0V,IAAI,EAAE,EAAE1V,CAAC,EAAE;MACjD,MAAM;QAAC0M,KAAK;QAAEmI;MAAG,CAAC,GAAG8pC,QAAQ,CAAC3+C,CAAC,CAAC;MAChC,MAAMkrC,EAAE,GAAG9jB,MAAM,CAAC1a,KAAK,CAAC;MACxB,MAAMy+B,EAAE,GAAG/jB,MAAM,CAACvS,GAAG,CAAC;MACtB,IAAIq2B,EAAE,KAAKC,EAAE,EAAE;QACb/K,MAAM,CAAC9xB,IAAI,CAAC48B,EAAE,CAAC;QACf;MACF;MACA,MAAMtpC,CAAC,GAAG4K,IAAI,CAACgW,GAAG,CAAC,CAACrO,KAAK,GAAG+2B,EAAE,CAAC6B,QAAQ,CAAC,KAAK5B,EAAE,CAAC4B,QAAQ,CAAC,GAAG7B,EAAE,CAAC6B,QAAQ,CAAC,CAAC,CAAC;MAC1E,MAAM+R,YAAY,GAAGD,YAAY,CAAC3T,EAAE,EAAEC,EAAE,EAAEvpC,CAAC,EAAE8R,OAAO,CAACqpC,OAAO,CAAC;MAC7D+B,YAAY,CAAC/R,QAAQ,CAAC,GAAG1lB,KAAK,CAAC0lB,QAAQ,CAAC;MACxC3M,MAAM,CAAC9xB,IAAI,CAACwwC,YAAY,CAAC;IAC3B;IACA,OAAO1e,MAAM,CAACnzB,MAAM,KAAK,CAAC,GAAGmzB,MAAM,CAAC,CAAC,CAAC,GAAGA,MAAM;EACjD;EACA+c,WAAWA,CAAC3jC,GAAG,EAAE0jC,OAAO,EAAE5oB,MAAM,EAAE;IAChC,MAAMyqB,aAAa,GAAGlB,iBAAiB,CAAC,IAAI,CAAC;IAC7C,OAAOkB,aAAa,CAACvlC,GAAG,EAAE,IAAI,EAAE0jC,OAAO,EAAE5oB,MAAM,CAAC;EAClD;EACA2pB,IAAIA,CAACzkC,GAAG,EAAE9M,KAAK,EAAEmQ,KAAK,EAAE;IACtB,MAAMjQ,EAAE,GAAG,IAAI;IACf,MAAM+xC,QAAQ,GAAG/xC,EAAE,CAAC+xC,QAAQ;IAC5B,MAAMjpC,IAAI,GAAGipC,QAAQ,CAAC1xC,MAAM;IAC5B,MAAM8xC,aAAa,GAAGlB,iBAAiB,CAACjxC,EAAE,CAAC;IAC3C,IAAIgE,IAAI,GAAGhE,EAAE,CAAC+D,KAAK;IACnBjE,KAAK,GAAGA,KAAK,IAAI,CAAC;IAClBmQ,KAAK,GAAGA,KAAK,IAAKjQ,EAAE,CAACwa,MAAM,CAACna,MAAM,GAAGP,KAAM;IAC3C,KAAK,IAAI1M,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG0V,IAAI,EAAE,EAAE1V,CAAC,EAAE;MAC7B4Q,IAAI,IAAImuC,aAAa,CAACvlC,GAAG,EAAE5M,EAAE,EAAE+xC,QAAQ,CAAC3+C,CAAC,CAAC,EAAE;QAAC0M,KAAK;QAAEmI,GAAG,EAAEnI,KAAK,GAAGmQ,KAAK,GAAG;MAAC,CAAC,CAAC;IAC9E;IACA,OAAO,CAAC,CAACjM,IAAI;EACf;EACArD,IAAIA,CAACiM,GAAG,EAAEuF,SAAS,EAAErS,KAAK,EAAEmQ,KAAK,EAAE;IACjC,MAAMjQ,EAAE,GAAG,IAAI;IACf,MAAM8G,OAAO,GAAG9G,EAAE,CAAC8G,OAAO,IAAI,CAAC,CAAC;IAChC,MAAM0T,MAAM,GAAGxa,EAAE,CAACwa,MAAM,IAAI,EAAE;IAC9B,IAAI,CAACA,MAAM,CAACna,MAAM,IAAI,CAACyG,OAAO,CAAC0X,WAAW,EAAE;MAC1C;IACF;IACA5R,GAAG,CAACoxB,IAAI,CAAC,CAAC;IACV4R,QAAQ,CAAChjC,GAAG,EAAE9F,OAAO,CAAC;IACtB4qC,UAAU,CAAC9kC,GAAG,EAAE5M,EAAE,EAAEF,KAAK,EAAEmQ,KAAK,CAAC;IACjCrD,GAAG,CAACsxB,OAAO,CAAC,CAAC;IACb,IAAIl+B,EAAE,CAACwgB,QAAQ,EAAE;MACfxgB,EAAE,CAAC8xC,cAAc,GAAG,KAAK;MACzB9xC,EAAE,CAACsxC,KAAK,GAAGvyC,SAAS;IACtB;EACF;AACF;AACA4yC,WAAW,CAAC1nC,EAAE,GAAG,MAAM;AACvB0nC,WAAW,CAACl+C,QAAQ,GAAG;EACrBs8C,cAAc,EAAE,MAAM;EACtB5e,UAAU,EAAE,EAAE;EACdC,gBAAgB,EAAE,CAAC;EACnB4e,eAAe,EAAE,OAAO;EACxBxxB,WAAW,EAAE,CAAC;EACd4zB,eAAe,EAAE,IAAI;EACrBC,sBAAsB,EAAE,SAAS;EACjCpvB,IAAI,EAAE,KAAK;EACXxC,QAAQ,EAAE,KAAK;EACf0vB,OAAO,EAAE,KAAK;EACdC,OAAO,EAAE;AACX,CAAC;AACDuB,WAAW,CAAC9hB,aAAa,GAAG;EAC1BzQ,eAAe,EAAE,iBAAiB;EAClCE,WAAW,EAAE;AACf,CAAC;AACDqyB,WAAW,CAACl4C,WAAW,GAAG;EACxBiM,WAAW,EAAE,IAAI;EACjBD,UAAU,EAAGE,IAAI,IAAKA,IAAI,KAAK,YAAY,IAAIA,IAAI,KAAK;AAC1D,CAAC;AAED,SAAS2sC,SAASA,CAACvtB,EAAE,EAAEgC,GAAG,EAAE1b,IAAI,EAAEwa,gBAAgB,EAAE;EAClD,MAAM/e,OAAO,GAAGie,EAAE,CAACje,OAAO;EAC1B,MAAM;IAAC,CAACuE,IAAI,GAAG9D;EAAK,CAAC,GAAGwd,EAAE,CAAC0K,QAAQ,CAAC,CAACpkB,IAAI,CAAC,EAAEwa,gBAAgB,CAAC;EAC7D,OAAQjmB,IAAI,CAACgW,GAAG,CAACmR,GAAG,GAAGxf,KAAK,CAAC,GAAGT,OAAO,CAAC8T,MAAM,GAAG9T,OAAO,CAACyrC,SAAS;AACpE;AACA,MAAMC,YAAY,SAASjjB,OAAO,CAAC;EACjC9wB,WAAWA,CAAC2E,GAAG,EAAE;IACf,KAAK,CAAC,CAAC;IACP,IAAI,CAAC0D,OAAO,GAAG/H,SAAS;IACxB,IAAI,CAAC4b,IAAI,GAAG5b,SAAS;IACrB,IAAI,CAACmD,IAAI,GAAGnD,SAAS;IACrB,IAAIqE,GAAG,EAAE;MACPgC,MAAM,CAACqC,MAAM,CAAC,IAAI,EAAErE,GAAG,CAAC;IAC1B;EACF;EACA4iB,OAAOA,CAACysB,MAAM,EAAEC,MAAM,EAAE7sB,gBAAgB,EAAE;IACxC,MAAM/e,OAAO,GAAG,IAAI,CAACA,OAAO;IAC5B,MAAM;MAAC5Q,CAAC;MAAEE;IAAC,CAAC,GAAG,IAAI,CAACq5B,QAAQ,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE5J,gBAAgB,CAAC;IAC1D,OAASjmB,IAAI,CAAC+lB,GAAG,CAAC8sB,MAAM,GAAGv8C,CAAC,EAAE,CAAC,CAAC,GAAG0J,IAAI,CAAC+lB,GAAG,CAAC+sB,MAAM,GAAGt8C,CAAC,EAAE,CAAC,CAAC,GAAIwJ,IAAI,CAAC+lB,GAAG,CAAC7e,OAAO,CAACyrC,SAAS,GAAGzrC,OAAO,CAAC8T,MAAM,EAAE,CAAC,CAAC;EAC/G;EACA+3B,QAAQA,CAACF,MAAM,EAAE5sB,gBAAgB,EAAE;IACjC,OAAOysB,SAAS,CAAC,IAAI,EAAEG,MAAM,EAAE,GAAG,EAAE5sB,gBAAgB,CAAC;EACvD;EACA+sB,QAAQA,CAACF,MAAM,EAAE7sB,gBAAgB,EAAE;IACjC,OAAOysB,SAAS,CAAC,IAAI,EAAEI,MAAM,EAAE,GAAG,EAAE7sB,gBAAgB,CAAC;EACvD;EACAO,cAAcA,CAACP,gBAAgB,EAAE;IAC/B,MAAM;MAAC3vB,CAAC;MAAEE;IAAC,CAAC,GAAG,IAAI,CAACq5B,QAAQ,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE5J,gBAAgB,CAAC;IAC1D,OAAO;MAAC3vB,CAAC;MAAEE;IAAC,CAAC;EACf;EACAoR,IAAIA,CAACV,OAAO,EAAE;IACZA,OAAO,GAAGA,OAAO,IAAI,IAAI,CAACA,OAAO,IAAI,CAAC,CAAC;IACvC,IAAI8T,MAAM,GAAG9T,OAAO,CAAC8T,MAAM,IAAI,CAAC;IAChCA,MAAM,GAAGhb,IAAI,CAACoC,GAAG,CAAC4Y,MAAM,EAAEA,MAAM,IAAI9T,OAAO,CAAC+rC,WAAW,IAAI,CAAC,CAAC;IAC7D,MAAMr0B,WAAW,GAAG5D,MAAM,IAAI9T,OAAO,CAAC0X,WAAW,IAAI,CAAC;IACtD,OAAO,CAAC5D,MAAM,GAAG4D,WAAW,IAAI,CAAC;EACnC;EACA7d,IAAIA,CAACiM,GAAG,EAAE;IACR,MAAM5M,EAAE,GAAG,IAAI;IACf,MAAM8G,OAAO,GAAG9G,EAAE,CAAC8G,OAAO;IAC1B,IAAI9G,EAAE,CAAC2a,IAAI,IAAI7T,OAAO,CAAC8T,MAAM,GAAG,GAAG,EAAE;MACnC;IACF;IACAhO,GAAG,CAACyS,WAAW,GAAGvY,OAAO,CAACwY,WAAW;IACrC1S,GAAG,CAAC2S,SAAS,GAAGzY,OAAO,CAAC0X,WAAW;IACnC5R,GAAG,CAACuS,SAAS,GAAGrY,OAAO,CAACsY,eAAe;IACvCnjB,SAAS,CAAC2Q,GAAG,EAAE9F,OAAO,EAAE9G,EAAE,CAAC9J,CAAC,EAAE8J,EAAE,CAAC5J,CAAC,CAAC;EACrC;EACA4uB,QAAQA,CAAA,EAAG;IACT,MAAMle,OAAO,GAAG,IAAI,CAACA,OAAO,IAAI,CAAC,CAAC;IAClC,OAAOA,OAAO,CAAC8T,MAAM,GAAG9T,OAAO,CAACyrC,SAAS;EAC3C;AACF;AACAC,YAAY,CAACvoC,EAAE,GAAG,OAAO;AACzBuoC,YAAY,CAAC/+C,QAAQ,GAAG;EACtB+qB,WAAW,EAAE,CAAC;EACd+zB,SAAS,EAAE,CAAC;EACZ9zB,gBAAgB,EAAE,CAAC;EACnBo0B,WAAW,EAAE,CAAC;EACdC,UAAU,EAAE,QAAQ;EACpBl4B,MAAM,EAAE,CAAC;EACTK,QAAQ,EAAE;AACZ,CAAC;AACDu3B,YAAY,CAAC3iB,aAAa,GAAG;EAC3BzQ,eAAe,EAAE,iBAAiB;EAClCE,WAAW,EAAE;AACf,CAAC;AAED,SAASyzB,YAAYA,CAACC,GAAG,EAAEntB,gBAAgB,EAAE;EAC3C,MAAM;IAAC3vB,CAAC;IAAEE,CAAC;IAAEyhB,IAAI;IAAEa,KAAK;IAAED;EAAM,CAAC,GAAGu6B,GAAG,CAACvjB,QAAQ,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,MAAM,EAAE,OAAO,EAAE,QAAQ,CAAC,EAAE5J,gBAAgB,CAAC;EACzG,IAAIrd,IAAI,EAAEF,KAAK,EAAED,GAAG,EAAEE,MAAM,EAAE0qC,IAAI;EAClC,IAAID,GAAG,CAACj7B,UAAU,EAAE;IAClBk7B,IAAI,GAAGx6B,MAAM,GAAG,CAAC;IACjBjQ,IAAI,GAAG5I,IAAI,CAACC,GAAG,CAAC3J,CAAC,EAAE2hB,IAAI,CAAC;IACxBvP,KAAK,GAAG1I,IAAI,CAACoC,GAAG,CAAC9L,CAAC,EAAE2hB,IAAI,CAAC;IACzBxP,GAAG,GAAGjS,CAAC,GAAG68C,IAAI;IACd1qC,MAAM,GAAGnS,CAAC,GAAG68C,IAAI;EACnB,CAAC,MAAM;IACLA,IAAI,GAAGv6B,KAAK,GAAG,CAAC;IAChBlQ,IAAI,GAAGtS,CAAC,GAAG+8C,IAAI;IACf3qC,KAAK,GAAGpS,CAAC,GAAG+8C,IAAI;IAChB5qC,GAAG,GAAGzI,IAAI,CAACC,GAAG,CAACzJ,CAAC,EAAEyhB,IAAI,CAAC;IACvBtP,MAAM,GAAG3I,IAAI,CAACoC,GAAG,CAAC5L,CAAC,EAAEyhB,IAAI,CAAC;EAC5B;EACA,OAAO;IAACrP,IAAI;IAAEH,GAAG;IAAEC,KAAK;IAAEC;EAAM,CAAC;AACnC;AACA,SAAS2qC,kBAAkBA,CAACF,GAAG,EAAE;EAC/B,IAAIjf,IAAI,GAAGif,GAAG,CAAClsC,OAAO,CAACqsC,aAAa;EACpC,MAAMtuC,GAAG,GAAG,CAAC,CAAC;EACd,IAAI,CAACkvB,IAAI,EAAE;IACT,OAAOlvB,GAAG;EACZ;EACAkvB,IAAI,GAAGif,GAAG,CAACj7B,UAAU,GACjBq7B,SAAS,CAACrf,IAAI,EAAE,MAAM,EAAE,OAAO,EAAEif,GAAG,CAACn7B,IAAI,GAAGm7B,GAAG,CAAC98C,CAAC,CAAC,GAClDk9C,SAAS,CAACrf,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAEif,GAAG,CAACn7B,IAAI,GAAGm7B,GAAG,CAAC58C,CAAC,CAAC;EACtDyO,GAAG,CAACkvB,IAAI,CAAC,GAAG,IAAI;EAChB,OAAOlvB,GAAG;AACZ;AACA,SAASuuC,SAASA,CAACrf,IAAI,EAAEjhC,CAAC,EAAEQ,CAAC,EAAE0U,OAAO,EAAE;EACtC,IAAIA,OAAO,EAAE;IACX+rB,IAAI,GAAGsf,IAAI,CAACtf,IAAI,EAAEjhC,CAAC,EAAEQ,CAAC,CAAC;IACvBygC,IAAI,GAAGuf,QAAQ,CAACvf,IAAI,EAAEzgC,CAAC,EAAER,CAAC,CAAC;EAC7B,CAAC,MAAM;IACLihC,IAAI,GAAGuf,QAAQ,CAACvf,IAAI,EAAEjhC,CAAC,EAAEQ,CAAC,CAAC;EAC7B;EACA,OAAOygC,IAAI;AACb;AACA,SAASsf,IAAIA,CAACE,IAAI,EAAEnsB,EAAE,EAAEosB,EAAE,EAAE;EAC1B,OAAOD,IAAI,KAAKnsB,EAAE,GAAGosB,EAAE,GAAGD,IAAI,KAAKC,EAAE,GAAGpsB,EAAE,GAAGmsB,IAAI;AACnD;AACA,SAASD,QAAQA,CAAC5/C,CAAC,EAAEoM,KAAK,EAAEmI,GAAG,EAAE;EAC/B,OAAOvU,CAAC,KAAK,OAAO,GAAGoM,KAAK,GAAGpM,CAAC,KAAK,KAAK,GAAGuU,GAAG,GAAGvU,CAAC;AACtD;AACA,SAAS+/C,WAAWA,CAAC94B,IAAI,EAAEpT,KAAK,EAAE1H,GAAG,EAAEmC,GAAG,EAAE;EAC1C,OAAO2Y,IAAI,GAAG,CAAC,GAAG/a,IAAI,CAACoC,GAAG,CAACpC,IAAI,CAACC,GAAG,CAAC0H,KAAK,EAAEvF,GAAG,CAAC,EAAEnC,GAAG,CAAC;AACvD;AACA,SAAS6zC,gBAAgBA,CAACV,GAAG,EAAEW,IAAI,EAAEC,IAAI,EAAE;EACzC,MAAMrsC,KAAK,GAAGyrC,GAAG,CAAClsC,OAAO,CAAC0X,WAAW;EACrC,MAAM7D,IAAI,GAAGu4B,kBAAkB,CAACF,GAAG,CAAC;EACpC,MAAM59C,CAAC,GAAG+G,MAAM,CAACoL,KAAK,CAAC;EACvB,OAAO;IACLvS,CAAC,EAAEy+C,WAAW,CAAC94B,IAAI,CAACtS,GAAG,EAAEjT,CAAC,CAACiT,GAAG,EAAE,CAAC,EAAEurC,IAAI,CAAC;IACxChhD,CAAC,EAAE6gD,WAAW,CAAC94B,IAAI,CAACrS,KAAK,EAAElT,CAAC,CAACkT,KAAK,EAAE,CAAC,EAAEqrC,IAAI,CAAC;IAC5CrgD,CAAC,EAAEmgD,WAAW,CAAC94B,IAAI,CAACpS,MAAM,EAAEnT,CAAC,CAACmT,MAAM,EAAE,CAAC,EAAEqrC,IAAI,CAAC;IAC9C9/C,CAAC,EAAE2/C,WAAW,CAAC94B,IAAI,CAACnS,IAAI,EAAEpT,CAAC,CAACoT,IAAI,EAAE,CAAC,EAAEmrC,IAAI;EAC3C,CAAC;AACH;AACA,SAASE,iBAAiBA,CAACb,GAAG,EAAEW,IAAI,EAAEC,IAAI,EAAE;EAC1C,MAAMrsC,KAAK,GAAGyrC,GAAG,CAAClsC,OAAO,CAACgtC,YAAY;EACtC,MAAM1+C,CAAC,GAAGiH,aAAa,CAACkL,KAAK,CAAC;EAC9B,MAAMwsC,IAAI,GAAGn0C,IAAI,CAACC,GAAG,CAAC8zC,IAAI,EAAEC,IAAI,CAAC;EACjC,MAAMj5B,IAAI,GAAGu4B,kBAAkB,CAACF,GAAG,CAAC;EACpC,OAAO;IACLgB,OAAO,EAAEP,WAAW,CAAC94B,IAAI,CAACtS,GAAG,IAAIsS,IAAI,CAACnS,IAAI,EAAEpT,CAAC,CAAC4+C,OAAO,EAAE,CAAC,EAAED,IAAI,CAAC;IAC/DE,QAAQ,EAAER,WAAW,CAAC94B,IAAI,CAACtS,GAAG,IAAIsS,IAAI,CAACrS,KAAK,EAAElT,CAAC,CAAC6+C,QAAQ,EAAE,CAAC,EAAEF,IAAI,CAAC;IAClEG,UAAU,EAAET,WAAW,CAAC94B,IAAI,CAACpS,MAAM,IAAIoS,IAAI,CAACnS,IAAI,EAAEpT,CAAC,CAAC8+C,UAAU,EAAE,CAAC,EAAEH,IAAI,CAAC;IACxEI,WAAW,EAAEV,WAAW,CAAC94B,IAAI,CAACpS,MAAM,IAAIoS,IAAI,CAACrS,KAAK,EAAElT,CAAC,CAAC++C,WAAW,EAAE,CAAC,EAAEJ,IAAI;EAC5E,CAAC;AACH;AACA,SAASK,aAAaA,CAACpB,GAAG,EAAE;EAC1B,MAAMriB,MAAM,GAAGoiB,YAAY,CAACC,GAAG,CAAC;EAChC,MAAMt6B,KAAK,GAAGiY,MAAM,CAACroB,KAAK,GAAGqoB,MAAM,CAACnoB,IAAI;EACxC,MAAMiQ,MAAM,GAAGkY,MAAM,CAACpoB,MAAM,GAAGooB,MAAM,CAACtoB,GAAG;EACzC,MAAMwY,MAAM,GAAG6yB,gBAAgB,CAACV,GAAG,EAAEt6B,KAAK,GAAG,CAAC,EAAED,MAAM,GAAG,CAAC,CAAC;EAC3D,MAAMmC,MAAM,GAAGi5B,iBAAiB,CAACb,GAAG,EAAEt6B,KAAK,GAAG,CAAC,EAAED,MAAM,GAAG,CAAC,CAAC;EAC5D,OAAO;IACL47B,KAAK,EAAE;MACLn+C,CAAC,EAAEy6B,MAAM,CAACnoB,IAAI;MACdpS,CAAC,EAAEu6B,MAAM,CAACtoB,GAAG;MACbrS,CAAC,EAAE0iB,KAAK;MACRtkB,CAAC,EAAEqkB,MAAM;MACTmC;IACF,CAAC;IACDs0B,KAAK,EAAE;MACLh5C,CAAC,EAAEy6B,MAAM,CAACnoB,IAAI,GAAGqY,MAAM,CAAC/sB,CAAC;MACzBsC,CAAC,EAAEu6B,MAAM,CAACtoB,GAAG,GAAGwY,MAAM,CAAC7rB,CAAC;MACxBgB,CAAC,EAAE0iB,KAAK,GAAGmI,MAAM,CAAC/sB,CAAC,GAAG+sB,MAAM,CAACjuB,CAAC;MAC9BwB,CAAC,EAAEqkB,MAAM,GAAGoI,MAAM,CAAC7rB,CAAC,GAAG6rB,MAAM,CAACvtB,CAAC;MAC/BsnB,MAAM,EAAE;QACNo5B,OAAO,EAAEp0C,IAAI,CAACoC,GAAG,CAAC,CAAC,EAAE4Y,MAAM,CAACo5B,OAAO,GAAGp0C,IAAI,CAACoC,GAAG,CAAC6e,MAAM,CAAC7rB,CAAC,EAAE6rB,MAAM,CAAC/sB,CAAC,CAAC,CAAC;QACnEmgD,QAAQ,EAAEr0C,IAAI,CAACoC,GAAG,CAAC,CAAC,EAAE4Y,MAAM,CAACq5B,QAAQ,GAAGr0C,IAAI,CAACoC,GAAG,CAAC6e,MAAM,CAAC7rB,CAAC,EAAE6rB,MAAM,CAACjuB,CAAC,CAAC,CAAC;QACrEshD,UAAU,EAAEt0C,IAAI,CAACoC,GAAG,CAAC,CAAC,EAAE4Y,MAAM,CAACs5B,UAAU,GAAGt0C,IAAI,CAACoC,GAAG,CAAC6e,MAAM,CAACvtB,CAAC,EAAEutB,MAAM,CAAC/sB,CAAC,CAAC,CAAC;QACzEqgD,WAAW,EAAEv0C,IAAI,CAACoC,GAAG,CAAC,CAAC,EAAE4Y,MAAM,CAACu5B,WAAW,GAAGv0C,IAAI,CAACoC,GAAG,CAAC6e,MAAM,CAACvtB,CAAC,EAAEutB,MAAM,CAACjuB,CAAC,CAAC;MAC5E;IACF;EACF,CAAC;AACH;AACA,SAASozB,OAAOA,CAACgtB,GAAG,EAAE98C,CAAC,EAAEE,CAAC,EAAEyvB,gBAAgB,EAAE;EAC5C,MAAMyuB,KAAK,GAAGp+C,CAAC,KAAK,IAAI;EACxB,MAAMq+C,KAAK,GAAGn+C,CAAC,KAAK,IAAI;EACxB,MAAMo+C,QAAQ,GAAGF,KAAK,IAAIC,KAAK;EAC/B,MAAM5jB,MAAM,GAAGqiB,GAAG,IAAI,CAACwB,QAAQ,IAAIzB,YAAY,CAACC,GAAG,EAAEntB,gBAAgB,CAAC;EACtE,OAAO8K,MAAM,KACT2jB,KAAK,IAAIp+C,CAAC,IAAIy6B,MAAM,CAACnoB,IAAI,IAAItS,CAAC,IAAIy6B,MAAM,CAACroB,KAAK,CAAC,KAC/CisC,KAAK,IAAIn+C,CAAC,IAAIu6B,MAAM,CAACtoB,GAAG,IAAIjS,CAAC,IAAIu6B,MAAM,CAACpoB,MAAM,CAAC;AACrD;AACA,SAASksC,SAASA,CAAC75B,MAAM,EAAE;EACzB,OAAOA,MAAM,CAACo5B,OAAO,IAAIp5B,MAAM,CAACq5B,QAAQ,IAAIr5B,MAAM,CAACs5B,UAAU,IAAIt5B,MAAM,CAACu5B,WAAW;AACrF;AACA,SAASO,kBAAkBA,CAAC9nC,GAAG,EAAE+nC,IAAI,EAAE;EACrC,MAAM;IAACz+C,CAAC;IAAEE,CAAC;IAAEJ,CAAC;IAAE5B,CAAC;IAAEwmB;EAAM,CAAC,GAAG+5B,IAAI;EACjC/nC,GAAG,CAACwR,GAAG,CAACloB,CAAC,GAAG0kB,MAAM,CAACo5B,OAAO,EAAE59C,CAAC,GAAGwkB,MAAM,CAACo5B,OAAO,EAAEp5B,MAAM,CAACo5B,OAAO,EAAE,CAACn+C,OAAO,EAAEE,EAAE,EAAE,IAAI,CAAC;EACnF6W,GAAG,CAACgyB,MAAM,CAAC1oC,CAAC,EAAEE,CAAC,GAAGhC,CAAC,GAAGwmB,MAAM,CAACs5B,UAAU,CAAC;EACxCtnC,GAAG,CAACwR,GAAG,CAACloB,CAAC,GAAG0kB,MAAM,CAACs5B,UAAU,EAAE99C,CAAC,GAAGhC,CAAC,GAAGwmB,MAAM,CAACs5B,UAAU,EAAEt5B,MAAM,CAACs5B,UAAU,EAAEn+C,EAAE,EAAEF,OAAO,EAAE,IAAI,CAAC;EAC/F+W,GAAG,CAACgyB,MAAM,CAAC1oC,CAAC,GAAGF,CAAC,GAAG4kB,MAAM,CAACu5B,WAAW,EAAE/9C,CAAC,GAAGhC,CAAC,CAAC;EAC7CwY,GAAG,CAACwR,GAAG,CAACloB,CAAC,GAAGF,CAAC,GAAG4kB,MAAM,CAACu5B,WAAW,EAAE/9C,CAAC,GAAGhC,CAAC,GAAGwmB,MAAM,CAACu5B,WAAW,EAAEv5B,MAAM,CAACu5B,WAAW,EAAEt+C,OAAO,EAAE,CAAC,EAAE,IAAI,CAAC;EACrG+W,GAAG,CAACgyB,MAAM,CAAC1oC,CAAC,GAAGF,CAAC,EAAEI,CAAC,GAAGwkB,MAAM,CAACq5B,QAAQ,CAAC;EACtCrnC,GAAG,CAACwR,GAAG,CAACloB,CAAC,GAAGF,CAAC,GAAG4kB,MAAM,CAACq5B,QAAQ,EAAE79C,CAAC,GAAGwkB,MAAM,CAACq5B,QAAQ,EAAEr5B,MAAM,CAACq5B,QAAQ,EAAE,CAAC,EAAE,CAACp+C,OAAO,EAAE,IAAI,CAAC;EACzF+W,GAAG,CAACgyB,MAAM,CAAC1oC,CAAC,GAAG0kB,MAAM,CAACo5B,OAAO,EAAE59C,CAAC,CAAC;AACnC;AACA,SAASw+C,iBAAiBA,CAAChoC,GAAG,EAAE+nC,IAAI,EAAE;EACpC/nC,GAAG,CAAC+nC,IAAI,CAACA,IAAI,CAACz+C,CAAC,EAAEy+C,IAAI,CAACv+C,CAAC,EAAEu+C,IAAI,CAAC3+C,CAAC,EAAE2+C,IAAI,CAACvgD,CAAC,CAAC;AAC1C;AACA,MAAMygD,UAAU,SAAStlB,OAAO,CAAC;EAC/B9wB,WAAWA,CAAC2E,GAAG,EAAE;IACf,KAAK,CAAC,CAAC;IACP,IAAI,CAAC0D,OAAO,GAAG/H,SAAS;IACxB,IAAI,CAACgZ,UAAU,GAAGhZ,SAAS;IAC3B,IAAI,CAAC8Y,IAAI,GAAG9Y,SAAS;IACrB,IAAI,CAAC2Z,KAAK,GAAG3Z,SAAS;IACtB,IAAI,CAAC0Z,MAAM,GAAG1Z,SAAS;IACvB,IAAIqE,GAAG,EAAE;MACPgC,MAAM,CAACqC,MAAM,CAAC,IAAI,EAAErE,GAAG,CAAC;IAC1B;EACF;EACAzC,IAAIA,CAACiM,GAAG,EAAE;IACR,MAAM9F,OAAO,GAAG,IAAI,CAACA,OAAO;IAC5B,MAAM;MAACooC,KAAK;MAAEmF;IAAK,CAAC,GAAGD,aAAa,CAAC,IAAI,CAAC;IAC1C,MAAMU,WAAW,GAAGL,SAAS,CAACJ,KAAK,CAACz5B,MAAM,CAAC,GAAG85B,kBAAkB,GAAGE,iBAAiB;IACpFhoC,GAAG,CAACoxB,IAAI,CAAC,CAAC;IACV,IAAIqW,KAAK,CAACr+C,CAAC,KAAKk5C,KAAK,CAACl5C,CAAC,IAAIq+C,KAAK,CAACjgD,CAAC,KAAK86C,KAAK,CAAC96C,CAAC,EAAE;MAC9CwY,GAAG,CAAC8xB,SAAS,CAAC,CAAC;MACfoW,WAAW,CAACloC,GAAG,EAAEynC,KAAK,CAAC;MACvBznC,GAAG,CAACoF,IAAI,CAAC,CAAC;MACV8iC,WAAW,CAACloC,GAAG,EAAEsiC,KAAK,CAAC;MACvBtiC,GAAG,CAACuS,SAAS,GAAGrY,OAAO,CAACwY,WAAW;MACnC1S,GAAG,CAACqW,IAAI,CAAC,SAAS,CAAC;IACrB;IACArW,GAAG,CAAC8xB,SAAS,CAAC,CAAC;IACfoW,WAAW,CAACloC,GAAG,EAAEsiC,KAAK,CAAC;IACvBtiC,GAAG,CAACuS,SAAS,GAAGrY,OAAO,CAACsY,eAAe;IACvCxS,GAAG,CAACqW,IAAI,CAAC,CAAC;IACVrW,GAAG,CAACsxB,OAAO,CAAC,CAAC;EACf;EACAlY,OAAOA,CAACysB,MAAM,EAAEC,MAAM,EAAE7sB,gBAAgB,EAAE;IACxC,OAAOG,OAAO,CAAC,IAAI,EAAEysB,MAAM,EAAEC,MAAM,EAAE7sB,gBAAgB,CAAC;EACxD;EACA8sB,QAAQA,CAACF,MAAM,EAAE5sB,gBAAgB,EAAE;IACjC,OAAOG,OAAO,CAAC,IAAI,EAAEysB,MAAM,EAAE,IAAI,EAAE5sB,gBAAgB,CAAC;EACtD;EACA+sB,QAAQA,CAACF,MAAM,EAAE7sB,gBAAgB,EAAE;IACjC,OAAOG,OAAO,CAAC,IAAI,EAAE,IAAI,EAAE0sB,MAAM,EAAE7sB,gBAAgB,CAAC;EACtD;EACAO,cAAcA,CAACP,gBAAgB,EAAE;IAC/B,MAAM;MAAC3vB,CAAC;MAAEE,CAAC;MAAEyhB,IAAI;MAAEE;IAAU,CAAC,GAAG,IAAI,CAAC0X,QAAQ,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,MAAM,EAAE,YAAY,CAAC,EAAE5J,gBAAgB,CAAC;IAClG,OAAO;MACL3vB,CAAC,EAAE6hB,UAAU,GAAG,CAAC7hB,CAAC,GAAG2hB,IAAI,IAAI,CAAC,GAAG3hB,CAAC;MAClCE,CAAC,EAAE2hB,UAAU,GAAG3hB,CAAC,GAAG,CAACA,CAAC,GAAGyhB,IAAI,IAAI;IACnC,CAAC;EACH;EACAmN,QAAQA,CAAC3Z,IAAI,EAAE;IACb,OAAOA,IAAI,KAAK,GAAG,GAAG,IAAI,CAACqN,KAAK,GAAG,CAAC,GAAG,IAAI,CAACD,MAAM,GAAG,CAAC;EACxD;AACF;AACAo8B,UAAU,CAAC5qC,EAAE,GAAG,KAAK;AACrB4qC,UAAU,CAACphD,QAAQ,GAAG;EACpB0/C,aAAa,EAAE,OAAO;EACtB30B,WAAW,EAAE,CAAC;EACds1B,YAAY,EAAE,CAAC;EACfhB,UAAU,EAAE/zC;AACd,CAAC;AACD81C,UAAU,CAAChlB,aAAa,GAAG;EACzBzQ,eAAe,EAAE,iBAAiB;EAClCE,WAAW,EAAE;AACf,CAAC;AAED,IAAIrN,QAAQ,GAAG,aAAa7M,MAAM,CAAC+N,MAAM,CAAC;EAC1CiQ,SAAS,EAAE,IAAI;EACfgsB,UAAU,EAAEA,UAAU;EACtBuC,WAAW,EAAEA,WAAW;EACxBa,YAAY,EAAEA,YAAY;EAC1BqC,UAAU,EAAEA;AACZ,CAAC,CAAC;AAEF,SAASE,cAAcA,CAACvrC,IAAI,EAAEqe,cAAc,EAAE/gB,OAAO,EAAE;EACrD,MAAMkuC,OAAO,GAAGluC,OAAO,CAACkuC,OAAO,IAAIntB,cAAc;EACjD,MAAMotB,SAAS,GAAG,EAAE;EACpB,MAAMC,WAAW,GAAG,CAAC1rC,IAAI,CAACnJ,MAAM,GAAG,CAAC,KAAK20C,OAAO,GAAG,CAAC,CAAC;EACrD,IAAIG,YAAY,GAAG,CAAC;EACpB,IAAIriD,CAAC,GAAG,CAAC;EACT,IAAIM,CAAC,EAAEgiD,YAAY,EAAEC,OAAO,EAAEnjC,IAAI,EAAEojC,KAAK;EACzCL,SAAS,CAACE,YAAY,EAAE,CAAC,GAAG3rC,IAAI,CAAC1W,CAAC,CAAC;EACnC,KAAKM,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG4hD,OAAO,GAAG,CAAC,EAAE5hD,CAAC,EAAE,EAAE;IAChC,IAAIs9C,IAAI,GAAG,CAAC;IACZ,IAAI6E,IAAI,GAAG,CAAC;IACZ,IAAI/gD,CAAC;IACL,MAAMghD,aAAa,GAAG51C,IAAI,CAACiE,KAAK,CAAC,CAACzQ,CAAC,GAAG,CAAC,IAAI8hD,WAAW,CAAC,GAAG,CAAC;IAC3D,MAAMO,WAAW,GAAG71C,IAAI,CAACC,GAAG,CAACD,IAAI,CAACiE,KAAK,CAAC,CAACzQ,CAAC,GAAG,CAAC,IAAI8hD,WAAW,CAAC,GAAG,CAAC,EAAE1rC,IAAI,CAACnJ,MAAM,CAAC;IAChF,MAAMq1C,cAAc,GAAGD,WAAW,GAAGD,aAAa;IAClD,KAAKhhD,CAAC,GAAGghD,aAAa,EAAEhhD,CAAC,GAAGihD,WAAW,EAAEjhD,CAAC,EAAE,EAAE;MAC5Ck8C,IAAI,GAAGlnC,IAAI,CAAChV,CAAC,CAAC,CAAC0B,CAAC;MAChBq/C,IAAI,GAAG/rC,IAAI,CAAChV,CAAC,CAAC,CAAC4B,CAAC;IAClB;IACAs6C,IAAI,IAAIgF,cAAc;IACtBH,IAAI,IAAIG,cAAc;IACtB,MAAMC,SAAS,GAAG/1C,IAAI,CAACiE,KAAK,CAACzQ,CAAC,GAAG8hD,WAAW,CAAC,GAAG,CAAC;IACjD,MAAMU,OAAO,GAAGh2C,IAAI,CAACiE,KAAK,CAAC,CAACzQ,CAAC,GAAG,CAAC,IAAI8hD,WAAW,CAAC,GAAG,CAAC;IACrD,MAAM;MAACh/C,CAAC,EAAE2/C,OAAO;MAAEz/C,CAAC,EAAE0/C;IAAO,CAAC,GAAGtsC,IAAI,CAAC1W,CAAC,CAAC;IACxCuiD,OAAO,GAAGnjC,IAAI,GAAG,CAAC,CAAC;IACnB,KAAK1d,CAAC,GAAGmhD,SAAS,EAAEnhD,CAAC,GAAGohD,OAAO,EAAEphD,CAAC,EAAE,EAAE;MACpC0d,IAAI,GAAG,GAAG,GAAGtS,IAAI,CAACgW,GAAG,CACnB,CAACigC,OAAO,GAAGnF,IAAI,KAAKlnC,IAAI,CAAChV,CAAC,CAAC,CAAC4B,CAAC,GAAG0/C,OAAO,CAAC,GACxC,CAACD,OAAO,GAAGrsC,IAAI,CAAChV,CAAC,CAAC,CAAC0B,CAAC,KAAKq/C,IAAI,GAAGO,OAAO,CACzC,CAAC;MACD,IAAI5jC,IAAI,GAAGmjC,OAAO,EAAE;QAClBA,OAAO,GAAGnjC,IAAI;QACdkjC,YAAY,GAAG5rC,IAAI,CAAChV,CAAC,CAAC;QACtB8gD,KAAK,GAAG9gD,CAAC;MACX;IACF;IACAygD,SAAS,CAACE,YAAY,EAAE,CAAC,GAAGC,YAAY;IACxCtiD,CAAC,GAAGwiD,KAAK;EACX;EACAL,SAAS,CAACE,YAAY,EAAE,CAAC,GAAG3rC,IAAI,CAACA,IAAI,CAACnJ,MAAM,GAAG,CAAC,CAAC;EACjD,OAAO40C,SAAS;AAClB;AACA,SAASc,gBAAgBA,CAACvsC,IAAI,EAAEqe,cAAc,EAAE;EAC9C,IAAI6oB,IAAI,GAAG,CAAC;EACZ,IAAIC,MAAM,GAAG,CAAC;EACd,IAAIv9C,CAAC,EAAEqnB,KAAK,EAAEvkB,CAAC,EAAEE,CAAC,EAAEw6C,KAAK,EAAEoF,QAAQ,EAAEC,QAAQ,EAAEC,UAAU,EAAE55B,IAAI,EAAEF,IAAI;EACrE,MAAM64B,SAAS,GAAG,EAAE;EACpB,MAAMkB,IAAI,GAAG3sC,IAAI,CAAC,CAAC,CAAC,CAACtT,CAAC;EACtB,MAAMkgD,IAAI,GAAG5sC,IAAI,CAACA,IAAI,CAACnJ,MAAM,GAAG,CAAC,CAAC,CAACnK,CAAC;EACpC,MAAMmgD,EAAE,GAAGD,IAAI,GAAGD,IAAI;EACtB,KAAK/iD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGoW,IAAI,CAACnJ,MAAM,EAAE,EAAEjN,CAAC,EAAE;IAChCqnB,KAAK,GAAGjR,IAAI,CAACpW,CAAC,CAAC;IACf8C,CAAC,GAAG,CAACukB,KAAK,CAACvkB,CAAC,GAAGigD,IAAI,IAAIE,EAAE,GAAGxuB,cAAc;IAC1CzxB,CAAC,GAAGqkB,KAAK,CAACrkB,CAAC;IACX,MAAM46C,MAAM,GAAG96C,CAAC,GAAG,CAAC;IACpB,IAAI86C,MAAM,KAAKJ,KAAK,EAAE;MACpB,IAAIx6C,CAAC,GAAGkmB,IAAI,EAAE;QACZA,IAAI,GAAGlmB,CAAC;QACR4/C,QAAQ,GAAG5iD,CAAC;MACd,CAAC,MAAM,IAAIgD,CAAC,GAAGgmB,IAAI,EAAE;QACnBA,IAAI,GAAGhmB,CAAC;QACR6/C,QAAQ,GAAG7iD,CAAC;MACd;MACAs9C,IAAI,GAAG,CAACC,MAAM,GAAGD,IAAI,GAAGj2B,KAAK,CAACvkB,CAAC,IAAI,EAAEy6C,MAAM;IAC7C,CAAC,MAAM;MACL,MAAM2F,SAAS,GAAGljD,CAAC,GAAG,CAAC;MACvB,IAAI,CAACqB,aAAa,CAACuhD,QAAQ,CAAC,IAAI,CAACvhD,aAAa,CAACwhD,QAAQ,CAAC,EAAE;QACxD,MAAMM,kBAAkB,GAAG32C,IAAI,CAACC,GAAG,CAACm2C,QAAQ,EAAEC,QAAQ,CAAC;QACvD,MAAMO,kBAAkB,GAAG52C,IAAI,CAACoC,GAAG,CAACg0C,QAAQ,EAAEC,QAAQ,CAAC;QACvD,IAAIM,kBAAkB,KAAKL,UAAU,IAAIK,kBAAkB,KAAKD,SAAS,EAAE;UACzErB,SAAS,CAACvzC,IAAI,CAAC;YACb,GAAG8H,IAAI,CAAC+sC,kBAAkB,CAAC;YAC3BrgD,CAAC,EAAEw6C;UACL,CAAC,CAAC;QACJ;QACA,IAAI8F,kBAAkB,KAAKN,UAAU,IAAIM,kBAAkB,KAAKF,SAAS,EAAE;UACzErB,SAAS,CAACvzC,IAAI,CAAC;YACb,GAAG8H,IAAI,CAACgtC,kBAAkB,CAAC;YAC3BtgD,CAAC,EAAEw6C;UACL,CAAC,CAAC;QACJ;MACF;MACA,IAAIt9C,CAAC,GAAG,CAAC,IAAIkjD,SAAS,KAAKJ,UAAU,EAAE;QACrCjB,SAAS,CAACvzC,IAAI,CAAC8H,IAAI,CAAC8sC,SAAS,CAAC,CAAC;MACjC;MACArB,SAAS,CAACvzC,IAAI,CAAC+Y,KAAK,CAAC;MACrBm2B,KAAK,GAAGI,MAAM;MACdL,MAAM,GAAG,CAAC;MACVr0B,IAAI,GAAGF,IAAI,GAAGhmB,CAAC;MACf4/C,QAAQ,GAAGC,QAAQ,GAAGC,UAAU,GAAG9iD,CAAC;IACtC;EACF;EACA,OAAO6hD,SAAS;AAClB;AACA,IAAIwB,iBAAiB,GAAG;EACtBxsC,EAAE,EAAE,YAAY;EAChBxW,QAAQ,EAAE;IACRijD,SAAS,EAAE,SAAS;IACpBlkB,OAAO,EAAE;EACX,CAAC;EACDmkB,oBAAoB,EAAEA,CAAC13C,KAAK,EAAE6vB,IAAI,EAAEhoB,OAAO,KAAK;IAC9C,IAAI,CAACA,OAAO,CAAC0rB,OAAO,EAAE;MACpB;IACF;IACA,MAAM3K,cAAc,GAAG5oB,KAAK,CAACyZ,KAAK;IAClCzZ,KAAK,CAACuK,IAAI,CAACoF,QAAQ,CAACnP,OAAO,CAAC,CAACsM,OAAO,EAAE1C,YAAY,KAAK;MACrD,MAAM;QAAC4D,KAAK;QAAEoB;MAAS,CAAC,GAAGtC,OAAO;MAClC,MAAMnC,IAAI,GAAG3K,KAAK,CAAC4P,cAAc,CAACxF,YAAY,CAAC;MAC/C,MAAMG,IAAI,GAAGyD,KAAK,IAAIlB,OAAO,CAACvC,IAAI;MAClC,IAAIzW,OAAO,CAAC,CAACsb,SAAS,EAAEpP,KAAK,CAAC6H,OAAO,CAACuH,SAAS,CAAC,CAAC,KAAK,GAAG,EAAE;QACzD;MACF;MACA,IAAIzE,IAAI,CAACxK,IAAI,KAAK,MAAM,EAAE;QACxB;MACF;MACA,MAAMw3C,KAAK,GAAG33C,KAAK,CAACwM,MAAM,CAAC7B,IAAI,CAACoE,OAAO,CAAC;MACxC,IAAI4oC,KAAK,CAACx3C,IAAI,KAAK,QAAQ,IAAIw3C,KAAK,CAACx3C,IAAI,KAAK,MAAM,EAAE;QACpD;MACF;MACA,IAAIH,KAAK,CAAC6H,OAAO,CAACiJ,OAAO,EAAE;QACzB;MACF;MACA,IAAIvG,IAAI,CAACnJ,MAAM,IAAI,CAAC,GAAGwnB,cAAc,EAAE;QACrC;MACF;MACA,IAAIpzB,aAAa,CAACwY,KAAK,CAAC,EAAE;QACxBlB,OAAO,CAACkB,KAAK,GAAGzD,IAAI;QACpB,OAAOuC,OAAO,CAACvC,IAAI;QACnBpE,MAAM,CAACyxC,cAAc,CAAC9qC,OAAO,EAAE,MAAM,EAAE;UACrC+qC,YAAY,EAAE,IAAI;UAClBtI,UAAU,EAAE,IAAI;UAChBrtC,GAAG,EAAE,SAAAA,CAAA,EAAW;YACd,OAAO,IAAI,CAACmf,UAAU;UACxB,CAAC;UACDhf,GAAG,EAAE,SAAAA,CAAS9N,CAAC,EAAE;YACf,IAAI,CAACyZ,KAAK,GAAGzZ,CAAC;UAChB;QACF,CAAC,CAAC;MACJ;MACA,IAAIyhD,SAAS;MACb,QAAQnuC,OAAO,CAAC4vC,SAAS;QACzB,KAAK,MAAM;UACTzB,SAAS,GAAGF,cAAc,CAACvrC,IAAI,EAAEqe,cAAc,EAAE/gB,OAAO,CAAC;UACzD;QACF,KAAK,SAAS;UACZmuC,SAAS,GAAGc,gBAAgB,CAACvsC,IAAI,EAAEqe,cAAc,CAAC;UAClD;QACF;UACE,MAAM,IAAIvE,KAAK,sCAAAtQ,MAAA,CAAsClM,OAAO,CAAC4vC,SAAS,MAAG,CAAC;MAC5E;MACA3qC,OAAO,CAACuU,UAAU,GAAG20B,SAAS;IAChC,CAAC,CAAC;EACJ,CAAC;EACDlI,OAAOA,CAAC9tC,KAAK,EAAE;IACbA,KAAK,CAACuK,IAAI,CAACoF,QAAQ,CAACnP,OAAO,CAAEsM,OAAO,IAAK;MACvC,IAAIA,OAAO,CAACuU,UAAU,EAAE;QACtB,MAAM9W,IAAI,GAAGuC,OAAO,CAACkB,KAAK;QAC1B,OAAOlB,OAAO,CAACuU,UAAU;QACzB,OAAOvU,OAAO,CAACkB,KAAK;QACpB7H,MAAM,CAACyxC,cAAc,CAAC9qC,OAAO,EAAE,MAAM,EAAE;UAACxE,KAAK,EAAEiC;QAAI,CAAC,CAAC;MACvD;IACF,CAAC,CAAC;EACJ;AACF,CAAC;AAED,SAASutC,cAAcA,CAAC93C,KAAK,EAAE8J,KAAK,EAAE;EACpC,MAAMa,IAAI,GAAG3K,KAAK,CAAC4P,cAAc,CAAC9F,KAAK,CAAC;EACxC,MAAM/C,OAAO,GAAG4D,IAAI,IAAI3K,KAAK,CAAC4d,gBAAgB,CAAC9T,KAAK,CAAC;EACrD,OAAO/C,OAAO,GAAG4D,IAAI,CAACmC,OAAO,GAAG,IAAI;AACtC;AACA,SAASirC,eAAeA,CAAC/2B,IAAI,EAAE;EAC7B,MAAMnZ,OAAO,GAAGmZ,IAAI,CAACnZ,OAAO;EAC5B,MAAMmwC,UAAU,GAAGnwC,OAAO,CAACmc,IAAI;EAC/B,IAAIA,IAAI,GAAGtvB,cAAc,CAACsjD,UAAU,IAAIA,UAAU,CAAC5zC,MAAM,EAAE4zC,UAAU,CAAC;EACtE,IAAIh0B,IAAI,KAAKlkB,SAAS,EAAE;IACtBkkB,IAAI,GAAG,CAAC,CAACnc,OAAO,CAACsY,eAAe;EAClC;EACA,IAAI6D,IAAI,KAAK,KAAK,IAAIA,IAAI,KAAK,IAAI,EAAE;IACnC,OAAO,KAAK;EACd;EACA,IAAIA,IAAI,KAAK,IAAI,EAAE;IACjB,OAAO,QAAQ;EACjB;EACA,OAAOA,IAAI;AACb;AACA,SAASi0B,UAAUA,CAACj3B,IAAI,EAAElX,KAAK,EAAEkH,KAAK,EAAE;EACtC,MAAMgT,IAAI,GAAG+zB,eAAe,CAAC/2B,IAAI,CAAC;EAClC,IAAI5sB,QAAQ,CAAC4vB,IAAI,CAAC,EAAE;IAClB,OAAOnK,KAAK,CAACmK,IAAI,CAAC1b,KAAK,CAAC,GAAG,KAAK,GAAG0b,IAAI;EACzC;EACA,IAAI5f,MAAM,GAAG8zC,UAAU,CAACl0B,IAAI,CAAC;EAC7B,IAAI9uB,cAAc,CAACkP,MAAM,CAAC,IAAIzD,IAAI,CAACiE,KAAK,CAACR,MAAM,CAAC,KAAKA,MAAM,EAAE;IAC3D,IAAI4f,IAAI,CAAC,CAAC,CAAC,KAAK,GAAG,IAAIA,IAAI,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;MACtC5f,MAAM,GAAG0F,KAAK,GAAG1F,MAAM;IACzB;IACA,IAAIA,MAAM,KAAK0F,KAAK,IAAI1F,MAAM,GAAG,CAAC,IAAIA,MAAM,IAAI4M,KAAK,EAAE;MACrD,OAAO,KAAK;IACd;IACA,OAAO5M,MAAM;EACf;EACA,OAAO,CAAC,QAAQ,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC0V,OAAO,CAACkK,IAAI,CAAC,IAAI,CAAC,IAAIA,IAAI;AACvE;AACA,SAASm0B,qBAAqBA,CAACnf,MAAM,EAAE;EACrC,MAAM;IAACpwB,KAAK,GAAG,CAAC,CAAC;IAAEob;EAAI,CAAC,GAAGgV,MAAM;EACjC,IAAI50B,MAAM,GAAG,IAAI;EACjB,IAAI0U,UAAU;EACd,IAAIkL,IAAI,KAAK,OAAO,EAAE;IACpB5f,MAAM,GAAGwE,KAAK,CAACU,MAAM;EACvB,CAAC,MAAM,IAAI0a,IAAI,KAAK,KAAK,EAAE;IACzB5f,MAAM,GAAGwE,KAAK,CAACQ,GAAG;EACpB,CAAC,MAAM,IAAIhV,QAAQ,CAAC4vB,IAAI,CAAC,EAAE;IACzB5f,MAAM,GAAGwE,KAAK,CAACgO,gBAAgB,CAACoN,IAAI,CAAC1b,KAAK,CAAC;EAC7C,CAAC,MAAM,IAAIM,KAAK,CAACiQ,YAAY,EAAE;IAC7BzU,MAAM,GAAGwE,KAAK,CAACiQ,YAAY,CAAC,CAAC;EAC/B;EACA,IAAI3jB,cAAc,CAACkP,MAAM,CAAC,EAAE;IAC1B0U,UAAU,GAAGlQ,KAAK,CAACmQ,YAAY,CAAC,CAAC;IACjC,OAAO;MACL9hB,CAAC,EAAE6hB,UAAU,GAAG1U,MAAM,GAAG,IAAI;MAC7BjN,CAAC,EAAE2hB,UAAU,GAAG,IAAI,GAAG1U;IACzB,CAAC;EACH;EACA,OAAO,IAAI;AACb;AACA,MAAMg0C,SAAS,CAAC;EACd54C,WAAWA,CAACsJ,IAAI,EAAE;IAChB,IAAI,CAAC7R,CAAC,GAAG6R,IAAI,CAAC7R,CAAC;IACf,IAAI,CAACE,CAAC,GAAG2R,IAAI,CAAC3R,CAAC;IACf,IAAI,CAACwkB,MAAM,GAAG7S,IAAI,CAAC6S,MAAM;EAC3B;EACA21B,WAAWA,CAAC3jC,GAAG,EAAE+jB,MAAM,EAAE5oB,IAAI,EAAE;IAC7B,MAAM;MAAC7R,CAAC;MAAEE,CAAC;MAAEwkB;IAAM,CAAC,GAAG,IAAI;IAC3B+V,MAAM,GAAGA,MAAM,IAAI;MAAC7wB,KAAK,EAAE,CAAC;MAAEmI,GAAG,EAAE1S;IAAG,CAAC;IACvCqX,GAAG,CAACwR,GAAG,CAACloB,CAAC,EAAEE,CAAC,EAAEwkB,MAAM,EAAE+V,MAAM,CAAC1oB,GAAG,EAAE0oB,MAAM,CAAC7wB,KAAK,EAAE,IAAI,CAAC;IACrD,OAAO,CAACiI,IAAI,CAAC4oB,MAAM;EACrB;EACAqhB,WAAWA,CAACv3B,KAAK,EAAE;IACjB,MAAM;MAACvkB,CAAC;MAAEE,CAAC;MAAEwkB;IAAM,CAAC,GAAG,IAAI;IAC3B,MAAMqB,KAAK,GAAGxB,KAAK,CAACwB,KAAK;IACzB,OAAO;MACL/lB,CAAC,EAAEA,CAAC,GAAG0J,IAAI,CAAC+b,GAAG,CAACM,KAAK,CAAC,GAAGrB,MAAM;MAC/BxkB,CAAC,EAAEA,CAAC,GAAGwJ,IAAI,CAACic,GAAG,CAACI,KAAK,CAAC,GAAGrB,MAAM;MAC/BqB;IACF,CAAC;EACH;AACF;AACA,SAASq7B,uBAAuBA,CAACrf,MAAM,EAAE;EACvC,MAAM;IAACpwB,KAAK;IAAEob;EAAI,CAAC,GAAGgV,MAAM;EAC5B,MAAMnxB,OAAO,GAAGe,KAAK,CAACf,OAAO;EAC7B,MAAMzG,MAAM,GAAGwH,KAAK,CAAC6I,SAAS,CAAC,CAAC,CAACrQ,MAAM;EACvC,MAAMgD,MAAM,GAAG,EAAE;EACjB,MAAMvD,KAAK,GAAGgH,OAAO,CAACkB,OAAO,GAAGH,KAAK,CAAC7F,GAAG,GAAG6F,KAAK,CAAChI,GAAG;EACrD,MAAMoI,GAAG,GAAGnB,OAAO,CAACkB,OAAO,GAAGH,KAAK,CAAChI,GAAG,GAAGgI,KAAK,CAAC7F,GAAG;EACnD,IAAI5O,CAAC,EAAEolB,MAAM,EAAEjR,KAAK;EACpB,IAAI0b,IAAI,KAAK,OAAO,EAAE;IACpB1b,KAAK,GAAGzH,KAAK;EACf,CAAC,MAAM,IAAImjB,IAAI,KAAK,KAAK,EAAE;IACzB1b,KAAK,GAAGU,GAAG;EACb,CAAC,MAAM,IAAI5U,QAAQ,CAAC4vB,IAAI,CAAC,EAAE;IACzB1b,KAAK,GAAG0b,IAAI,CAAC1b,KAAK;EACpB,CAAC,MAAM;IACLA,KAAK,GAAGM,KAAK,CAAC2zB,YAAY,CAAC,CAAC;EAC9B;EACA,IAAI10B,OAAO,CAACsT,IAAI,CAACsI,QAAQ,EAAE;IACzBlK,MAAM,GAAG3Q,KAAK,CAACmb,wBAAwB,CAAC,CAAC,EAAEljB,KAAK,CAAC;IACjD,OAAO,IAAIu3C,SAAS,CAAC;MACnBnhD,CAAC,EAAEsiB,MAAM,CAACtiB,CAAC;MACXE,CAAC,EAAEoiB,MAAM,CAACpiB,CAAC;MACXwkB,MAAM,EAAE/S,KAAK,CAAC0a,6BAA6B,CAAChb,KAAK;IACnD,CAAC,CAAC;EACJ;EACA,KAAKnU,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGiN,MAAM,EAAE,EAAEjN,CAAC,EAAE;IAC3BiQ,MAAM,CAAC3B,IAAI,CAACmG,KAAK,CAACmb,wBAAwB,CAAC5vB,CAAC,EAAEmU,KAAK,CAAC,CAAC;EACvD;EACA,OAAOlE,MAAM;AACf;AACA,SAASk0C,eAAeA,CAACtf,MAAM,EAAE;EAC/B,MAAMpwB,KAAK,GAAGowB,MAAM,CAACpwB,KAAK,IAAI,CAAC,CAAC;EAChC,IAAIA,KAAK,CAACmb,wBAAwB,EAAE;IAClC,OAAOs0B,uBAAuB,CAACrf,MAAM,CAAC;EACxC;EACA,OAAOmf,qBAAqB,CAACnf,MAAM,CAAC;AACtC;AACA,SAASuf,kBAAkBA,CAACC,QAAQ,EAAEx3B,IAAI,EAAE;EAC1C,MAAM;IAAC/pB,CAAC,GAAG,IAAI;IAAEE,CAAC,GAAG;EAAI,CAAC,GAAGqhD,QAAQ,IAAI,CAAC,CAAC;EAC3C,MAAMC,UAAU,GAAGz3B,IAAI,CAACzF,MAAM;EAC9B,MAAMA,MAAM,GAAG,EAAE;EACjByF,IAAI,CAAC8xB,QAAQ,CAACtyC,OAAO,CAAE6wC,OAAO,IAAK;IACjC,MAAM3d,KAAK,GAAG+kB,UAAU,CAACpH,OAAO,CAACxwC,KAAK,CAAC;IACvC,MAAM8Y,IAAI,GAAG8+B,UAAU,CAACpH,OAAO,CAACroC,GAAG,CAAC;IACpC,IAAI7R,CAAC,KAAK,IAAI,EAAE;MACdokB,MAAM,CAAC9Y,IAAI,CAAC;QAACxL,CAAC,EAAEy8B,KAAK,CAACz8B,CAAC;QAAEE;MAAC,CAAC,CAAC;MAC5BokB,MAAM,CAAC9Y,IAAI,CAAC;QAACxL,CAAC,EAAE0iB,IAAI,CAAC1iB,CAAC;QAAEE;MAAC,CAAC,CAAC;IAC7B,CAAC,MAAM,IAAIF,CAAC,KAAK,IAAI,EAAE;MACrBskB,MAAM,CAAC9Y,IAAI,CAAC;QAACxL,CAAC;QAAEE,CAAC,EAAEu8B,KAAK,CAACv8B;MAAC,CAAC,CAAC;MAC5BokB,MAAM,CAAC9Y,IAAI,CAAC;QAACxL,CAAC;QAAEE,CAAC,EAAEwiB,IAAI,CAACxiB;MAAC,CAAC,CAAC;IAC7B;EACF,CAAC,CAAC;EACF,OAAOokB,MAAM;AACf;AACA,SAASm9B,cAAcA,CAAC1f,MAAM,EAAE;EAC9B,MAAM;IAACh5B,KAAK;IAAE4I,KAAK;IAAEkB,KAAK;IAAEkX;EAAI,CAAC,GAAGgY,MAAM;EAC1C,MAAMzd,MAAM,GAAG,EAAE;EACjB,MAAMu3B,QAAQ,GAAG9xB,IAAI,CAAC8xB,QAAQ;EAC9B,MAAM6F,YAAY,GAAG33B,IAAI,CAACzF,MAAM;EAChC,MAAMq9B,UAAU,GAAGC,aAAa,CAAC74C,KAAK,EAAE8J,KAAK,CAAC;EAC9C8uC,UAAU,CAACn2C,IAAI,CAACq2C,kBAAkB,CAAC;IAAC7hD,CAAC,EAAE,IAAI;IAAEE,CAAC,EAAEyR,KAAK,CAACU;EAAM,CAAC,EAAE0X,IAAI,CAAC,CAAC;EACrE,KAAK,IAAI7sB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG2+C,QAAQ,CAAC1xC,MAAM,EAAEjN,CAAC,EAAE,EAAE;IACxC,MAAMk9C,OAAO,GAAGyB,QAAQ,CAAC3+C,CAAC,CAAC;IAC3B,KAAK,IAAIoB,CAAC,GAAG87C,OAAO,CAACxwC,KAAK,EAAEtL,CAAC,IAAI87C,OAAO,CAACroC,GAAG,EAAEzT,CAAC,EAAE,EAAE;MACjDwjD,cAAc,CAACx9B,MAAM,EAAEo9B,YAAY,CAACpjD,CAAC,CAAC,EAAEqjD,UAAU,CAAC;IACrD;EACF;EACA,OAAO,IAAIlG,WAAW,CAAC;IAACn3B,MAAM;IAAE1T,OAAO,EAAE,CAAC;EAAC,CAAC,CAAC;AAC/C;AACA,MAAMmxC,2BAA2B,GAAIruC,IAAI,IAAKA,IAAI,CAACxK,IAAI,KAAK,MAAM,IAAI,CAACwK,IAAI,CAAC4V,MAAM;AAClF,SAASs4B,aAAaA,CAAC74C,KAAK,EAAE8J,KAAK,EAAE;EACnC,MAAMmvC,KAAK,GAAG,EAAE;EAChB,MAAM7iC,KAAK,GAAGpW,KAAK,CAACulB,4BAA4B,CAAC,CAAC;EAClD,KAAK,IAAIpxB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGiiB,KAAK,CAAChV,MAAM,EAAEjN,CAAC,EAAE,EAAE;IACrC,MAAMwW,IAAI,GAAGyL,KAAK,CAACjiB,CAAC,CAAC;IACrB,IAAIwW,IAAI,CAACb,KAAK,KAAKA,KAAK,EAAE;MACxB;IACF;IACA,IAAIkvC,2BAA2B,CAACruC,IAAI,CAAC,EAAE;MACrCsuC,KAAK,CAACC,OAAO,CAACvuC,IAAI,CAACmC,OAAO,CAAC;IAC7B;EACF;EACA,OAAOmsC,KAAK;AACd;AACA,SAASF,cAAcA,CAACx9B,MAAM,EAAE49B,WAAW,EAAEP,UAAU,EAAE;EACvD,MAAMQ,SAAS,GAAG,EAAE;EACpB,KAAK,IAAI7jD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGqjD,UAAU,CAACx3C,MAAM,EAAE7L,CAAC,EAAE,EAAE;IAC1C,MAAMyrB,IAAI,GAAG43B,UAAU,CAACrjD,CAAC,CAAC;IAC1B,MAAM;MAACm+B,KAAK;MAAE/Z,IAAI;MAAE6B;IAAK,CAAC,GAAG69B,SAAS,CAACr4B,IAAI,EAAEm4B,WAAW,EAAE,GAAG,CAAC;IAC9D,IAAI,CAAC39B,KAAK,IAAKkY,KAAK,IAAI/Z,IAAK,EAAE;MAC7B;IACF;IACA,IAAI+Z,KAAK,EAAE;MACT0lB,SAAS,CAACF,OAAO,CAAC19B,KAAK,CAAC;IAC1B,CAAC,MAAM;MACLD,MAAM,CAAC9Y,IAAI,CAAC+Y,KAAK,CAAC;MAClB,IAAI,CAAC7B,IAAI,EAAE;QACT;MACF;IACF;EACF;EACA4B,MAAM,CAAC9Y,IAAI,CAAC,GAAG22C,SAAS,CAAC;AAC3B;AACA,SAASC,SAASA,CAACr4B,IAAI,EAAEm4B,WAAW,EAAEjY,QAAQ,EAAE;EAC9C,MAAM1lB,KAAK,GAAGwF,IAAI,CAAC+xB,WAAW,CAACoG,WAAW,EAAEjY,QAAQ,CAAC;EACrD,IAAI,CAAC1lB,KAAK,EAAE;IACV,OAAO,CAAC,CAAC;EACX;EACA,MAAM89B,UAAU,GAAG99B,KAAK,CAAC0lB,QAAQ,CAAC;EAClC,MAAM4R,QAAQ,GAAG9xB,IAAI,CAAC8xB,QAAQ;EAC9B,MAAM2F,UAAU,GAAGz3B,IAAI,CAACzF,MAAM;EAC9B,IAAImY,KAAK,GAAG,KAAK;EACjB,IAAI/Z,IAAI,GAAG,KAAK;EAChB,KAAK,IAAIxlB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG2+C,QAAQ,CAAC1xC,MAAM,EAAEjN,CAAC,EAAE,EAAE;IACxC,MAAMk9C,OAAO,GAAGyB,QAAQ,CAAC3+C,CAAC,CAAC;IAC3B,MAAMolD,UAAU,GAAGd,UAAU,CAACpH,OAAO,CAACxwC,KAAK,CAAC,CAACqgC,QAAQ,CAAC;IACtD,MAAMsY,SAAS,GAAGf,UAAU,CAACpH,OAAO,CAACroC,GAAG,CAAC,CAACk4B,QAAQ,CAAC;IACnD,IAAIoY,UAAU,IAAIC,UAAU,IAAID,UAAU,IAAIE,SAAS,EAAE;MACvD9lB,KAAK,GAAG4lB,UAAU,KAAKC,UAAU;MACjC5/B,IAAI,GAAG2/B,UAAU,KAAKE,SAAS;MAC/B;IACF;EACF;EACA,OAAO;IAAC9lB,KAAK;IAAE/Z,IAAI;IAAE6B;EAAK,CAAC;AAC7B;AACA,SAASi+B,SAASA,CAACzgB,MAAM,EAAE;EACzB,MAAM;IAACh5B,KAAK;IAAEgkB,IAAI;IAAEhD;EAAI,CAAC,GAAGgY,MAAM;EAClC,IAAI9jC,cAAc,CAAC8uB,IAAI,CAAC,EAAE;IACxB,OAAO8zB,cAAc,CAAC93C,KAAK,EAAEgkB,IAAI,CAAC;EACpC;EACA,IAAIA,IAAI,KAAK,OAAO,EAAE;IACpB,OAAO00B,cAAc,CAAC1f,MAAM,CAAC;EAC/B;EACA,MAAMwf,QAAQ,GAAGF,eAAe,CAACtf,MAAM,CAAC;EACxC,IAAIwf,QAAQ,YAAYJ,SAAS,EAAE;IACjC,OAAOI,QAAQ;EACjB;EACA,OAAOM,kBAAkB,CAACN,QAAQ,EAAEx3B,IAAI,CAAC;AAC3C;AACA,SAAS83B,kBAAkBA,CAACN,QAAQ,EAAEx3B,IAAI,EAAE;EAC1C,IAAIzF,MAAM,GAAG,EAAE;EACf,IAAIzW,KAAK,GAAG,KAAK;EACjB,IAAIxQ,OAAO,CAACkkD,QAAQ,CAAC,EAAE;IACrB1zC,KAAK,GAAG,IAAI;IACZyW,MAAM,GAAGi9B,QAAQ;EACnB,CAAC,MAAM;IACLj9B,MAAM,GAAGg9B,kBAAkB,CAACC,QAAQ,EAAEx3B,IAAI,CAAC;EAC7C;EACA,OAAOzF,MAAM,CAACna,MAAM,GAAG,IAAIsxC,WAAW,CAAC;IACrCn3B,MAAM;IACN1T,OAAO,EAAE;MAACspC,OAAO,EAAE;IAAC,CAAC;IACrBrsC,KAAK;IACL+e,SAAS,EAAE/e;EACb,CAAC,CAAC,GAAG,IAAI;AACX;AACA,SAAS40C,aAAaA,CAACC,OAAO,EAAE7vC,KAAK,EAAE8vC,SAAS,EAAE;EAChD,MAAM5gB,MAAM,GAAG2gB,OAAO,CAAC7vC,KAAK,CAAC;EAC7B,IAAIka,IAAI,GAAGgV,MAAM,CAAChV,IAAI;EACtB,MAAM61B,OAAO,GAAG,CAAC/vC,KAAK,CAAC;EACvB,IAAI1F,MAAM;EACV,IAAI,CAACw1C,SAAS,EAAE;IACd,OAAO51B,IAAI;EACb;EACA,OAAOA,IAAI,KAAK,KAAK,IAAI61B,OAAO,CAAC//B,OAAO,CAACkK,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE;IACrD,IAAI,CAAC9uB,cAAc,CAAC8uB,IAAI,CAAC,EAAE;MACzB,OAAOA,IAAI;IACb;IACA5f,MAAM,GAAGu1C,OAAO,CAAC31B,IAAI,CAAC;IACtB,IAAI,CAAC5f,MAAM,EAAE;MACX,OAAO,KAAK;IACd;IACA,IAAIA,MAAM,CAAC2C,OAAO,EAAE;MAClB,OAAOid,IAAI;IACb;IACA61B,OAAO,CAACp3C,IAAI,CAACuhB,IAAI,CAAC;IAClBA,IAAI,GAAG5f,MAAM,CAAC4f,IAAI;EACpB;EACA,OAAO,KAAK;AACd;AACA,SAASlR,KAAKA,CAACnF,GAAG,EAAEvJ,MAAM,EAAE01C,KAAK,EAAE;EACjCnsC,GAAG,CAAC8xB,SAAS,CAAC,CAAC;EACfr7B,MAAM,CAACguC,IAAI,CAACzkC,GAAG,CAAC;EAChBA,GAAG,CAACgyB,MAAM,CAACv7B,MAAM,CAACuV,IAAI,CAAC,CAAC,CAAC1iB,CAAC,EAAE6iD,KAAK,CAAC;EAClCnsC,GAAG,CAACgyB,MAAM,CAACv7B,MAAM,CAACsvB,KAAK,CAAC,CAAC,CAACz8B,CAAC,EAAE6iD,KAAK,CAAC;EACnCnsC,GAAG,CAACiiC,SAAS,CAAC,CAAC;EACfjiC,GAAG,CAACoF,IAAI,CAAC,CAAC;AACZ;AACA,SAASgnC,SAASA,CAAC7Y,QAAQ,EAAExN,KAAK,EAAE/Z,IAAI,EAAE5U,IAAI,EAAE;EAC9C,IAAIA,IAAI,EAAE;IACR;EACF;EACA,IAAIlE,KAAK,GAAG6yB,KAAK,CAACwN,QAAQ,CAAC;EAC3B,IAAIl4B,GAAG,GAAG2Q,IAAI,CAACunB,QAAQ,CAAC;EACxB,IAAIA,QAAQ,KAAK,OAAO,EAAE;IACxBrgC,KAAK,GAAGrD,eAAe,CAACqD,KAAK,CAAC;IAC9BmI,GAAG,GAAGxL,eAAe,CAACwL,GAAG,CAAC;EAC5B;EACA,OAAO;IAACk4B,QAAQ;IAAErgC,KAAK;IAAEmI;EAAG,CAAC;AAC/B;AACA,SAASgxC,QAAQA,CAACnmD,CAAC,EAAEQ,CAAC,EAAEgQ,IAAI,EAAE5D,EAAE,EAAE;EAChC,IAAI5M,CAAC,IAAIQ,CAAC,EAAE;IACV,OAAOoM,EAAE,CAAC5M,CAAC,CAACwQ,IAAI,CAAC,EAAEhQ,CAAC,CAACgQ,IAAI,CAAC,CAAC;EAC7B;EACA,OAAOxQ,CAAC,GAAGA,CAAC,CAACwQ,IAAI,CAAC,GAAGhQ,CAAC,GAAGA,CAAC,CAACgQ,IAAI,CAAC,GAAG,CAAC;AACtC;AACA,SAASuuC,SAASA,CAAC5xB,IAAI,EAAE5c,MAAM,EAAE88B,QAAQ,EAAE;EACzC,MAAM4R,QAAQ,GAAG9xB,IAAI,CAAC8xB,QAAQ;EAC9B,MAAMv3B,MAAM,GAAGyF,IAAI,CAACzF,MAAM;EAC1B,MAAM0+B,OAAO,GAAG71C,MAAM,CAACmX,MAAM;EAC7B,MAAMimB,KAAK,GAAG,EAAE;EAChB,KAAK,IAAIrtC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG2+C,QAAQ,CAAC1xC,MAAM,EAAEjN,CAAC,EAAE,EAAE;IACxC,MAAMk9C,OAAO,GAAGyB,QAAQ,CAAC3+C,CAAC,CAAC;IAC3B,MAAMu9B,MAAM,GAAGqoB,SAAS,CAAC7Y,QAAQ,EAAE3lB,MAAM,CAAC81B,OAAO,CAACxwC,KAAK,CAAC,EAAE0a,MAAM,CAAC81B,OAAO,CAACroC,GAAG,CAAC,EAAEqoC,OAAO,CAACtsC,IAAI,CAAC;IAC5F,IAAI,CAACX,MAAM,CAAC0uC,QAAQ,EAAE;MACpBtR,KAAK,CAAC/+B,IAAI,CAAC;QACTu2B,MAAM,EAAEqY,OAAO;QACfjtC,MAAM,EAAEstB,MAAM;QACd7wB,KAAK,EAAE0a,MAAM,CAAC81B,OAAO,CAACxwC,KAAK,CAAC;QAC5BmI,GAAG,EAAEuS,MAAM,CAAC81B,OAAO,CAACroC,GAAG;MACzB,CAAC,CAAC;MACF;IACF;IACA,MAAMkxC,IAAI,GAAG99C,cAAc,CAACgI,MAAM,EAAEstB,MAAM,CAAC;IAC3C,KAAK,IAAIn8B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG2kD,IAAI,CAAC94C,MAAM,EAAE,EAAE7L,CAAC,EAAE;MACpC,MAAM4kD,GAAG,GAAGD,IAAI,CAAC3kD,CAAC,CAAC;MACnB,MAAM6kD,SAAS,GAAGL,SAAS,CAAC7Y,QAAQ,EAAE+Y,OAAO,CAACE,GAAG,CAACt5C,KAAK,CAAC,EAAEo5C,OAAO,CAACE,GAAG,CAACnxC,GAAG,CAAC,EAAEmxC,GAAG,CAACp1C,IAAI,CAAC;MACrF,MAAMs1C,WAAW,GAAG/8C,aAAa,CAAC+zC,OAAO,EAAE91B,MAAM,EAAE6+B,SAAS,CAAC;MAC7D,KAAK,IAAI3kD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG4kD,WAAW,CAACj5C,MAAM,EAAE3L,CAAC,EAAE,EAAE;QAC3C+rC,KAAK,CAAC/+B,IAAI,CAAC;UACTu2B,MAAM,EAAEqhB,WAAW,CAAC5kD,CAAC,CAAC;UACtB2O,MAAM,EAAE+1C,GAAG;UACXt5C,KAAK,EAAE;YACL,CAACqgC,QAAQ,GAAG8Y,QAAQ,CAACtoB,MAAM,EAAE0oB,SAAS,EAAE,OAAO,EAAEz5C,IAAI,CAACoC,GAAG;UAC3D,CAAC;UACDiG,GAAG,EAAE;YACH,CAACk4B,QAAQ,GAAG8Y,QAAQ,CAACtoB,MAAM,EAAE0oB,SAAS,EAAE,KAAK,EAAEz5C,IAAI,CAACC,GAAG;UACzD;QACF,CAAC,CAAC;MACJ;IACF;EACF;EACA,OAAO4gC,KAAK;AACd;AACA,SAAS8Y,UAAUA,CAAC3sC,GAAG,EAAE/E,KAAK,EAAE8oB,MAAM,EAAE;EACtC,MAAM;IAACtoB,GAAG;IAAEE;EAAM,CAAC,GAAGV,KAAK,CAAC5I,KAAK,CAACkT,SAAS;EAC3C,MAAM;IAACguB,QAAQ;IAAErgC,KAAK;IAAEmI;EAAG,CAAC,GAAG0oB,MAAM,IAAI,CAAC,CAAC;EAC3C,IAAIwP,QAAQ,KAAK,GAAG,EAAE;IACpBvzB,GAAG,CAAC8xB,SAAS,CAAC,CAAC;IACf9xB,GAAG,CAAC+nC,IAAI,CAAC70C,KAAK,EAAEuI,GAAG,EAAEJ,GAAG,GAAGnI,KAAK,EAAEyI,MAAM,GAAGF,GAAG,CAAC;IAC/CuE,GAAG,CAACoF,IAAI,CAAC,CAAC;EACZ;AACF;AACA,SAASwnC,kBAAkBA,CAAC5sC,GAAG,EAAEvJ,MAAM,EAAEoX,KAAK,EAAE0lB,QAAQ,EAAE;EACxD,MAAMsZ,iBAAiB,GAAGp2C,MAAM,CAAC2uC,WAAW,CAACv3B,KAAK,EAAE0lB,QAAQ,CAAC;EAC7D,IAAIsZ,iBAAiB,EAAE;IACrB7sC,GAAG,CAACgyB,MAAM,CAAC6a,iBAAiB,CAACvjD,CAAC,EAAEujD,iBAAiB,CAACrjD,CAAC,CAAC;EACtD;AACF;AACA,SAASsjD,KAAKA,CAAC9sC,GAAG,EAAExJ,GAAG,EAAE;EACvB,MAAM;IAAC6c,IAAI;IAAE5c,MAAM;IAAE88B,QAAQ;IAAEhtC,KAAK;IAAE0U;EAAK,CAAC,GAAGzE,GAAG;EAClD,MAAM2uC,QAAQ,GAAGF,SAAS,CAAC5xB,IAAI,EAAE5c,MAAM,EAAE88B,QAAQ,CAAC;EAClDvzB,GAAG,CAACuS,SAAS,GAAGhsB,KAAK;EACrB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAE0V,IAAI,GAAGipC,QAAQ,CAAC1xC,MAAM,EAAEjN,CAAC,GAAG0V,IAAI,EAAE,EAAE1V,CAAC,EAAE;IACrD,MAAM;MAAC6kC,MAAM,EAAE0hB,GAAG;MAAEt2C,MAAM,EAAEu2C,GAAG;MAAE95C,KAAK;MAAEmI;IAAG,CAAC,GAAG8pC,QAAQ,CAAC3+C,CAAC,CAAC;IAC1DwZ,GAAG,CAACoxB,IAAI,CAAC,CAAC;IACVub,UAAU,CAAC3sC,GAAG,EAAE/E,KAAK,EAAEmxC,SAAS,CAAC7Y,QAAQ,EAAErgC,KAAK,EAAEmI,GAAG,CAAC,CAAC;IACvD2E,GAAG,CAAC8xB,SAAS,CAAC,CAAC;IACf,MAAMmb,QAAQ,GAAG,CAAC,CAAC55B,IAAI,CAACswB,WAAW,CAAC3jC,GAAG,EAAE+sC,GAAG,CAAC;IAC7C,IAAIE,QAAQ,EAAE;MACZjtC,GAAG,CAACiiC,SAAS,CAAC,CAAC;IACjB,CAAC,MAAM;MACL2K,kBAAkB,CAAC5sC,GAAG,EAAEvJ,MAAM,EAAE4E,GAAG,EAAEk4B,QAAQ,CAAC;IAChD;IACA,MAAM2Z,UAAU,GAAG,CAAC,CAACz2C,MAAM,CAACktC,WAAW,CAAC3jC,GAAG,EAAEgtC,GAAG,EAAE;MAACrlC,IAAI,EAAEslC,QAAQ;MAAE7xC,OAAO,EAAE;IAAI,CAAC,CAAC;IAClF,MAAMhE,IAAI,GAAG61C,QAAQ,IAAIC,UAAU;IACnC,IAAI,CAAC91C,IAAI,EAAE;MACTw1C,kBAAkB,CAAC5sC,GAAG,EAAEvJ,MAAM,EAAEvD,KAAK,EAAEqgC,QAAQ,CAAC;IAClD;IACAvzB,GAAG,CAACiiC,SAAS,CAAC,CAAC;IACfjiC,GAAG,CAACqW,IAAI,CAACjf,IAAI,GAAG,SAAS,GAAG,SAAS,CAAC;IACtC4I,GAAG,CAACsxB,OAAO,CAAC,CAAC;EACf;AACF;AACA,SAAS6b,MAAMA,CAACntC,GAAG,EAAExJ,GAAG,EAAE;EACxB,MAAM;IAAC6c,IAAI;IAAE5c,MAAM;IAAE22C,KAAK;IAAE9B,KAAK;IAAEhmC,IAAI;IAAErK;EAAK,CAAC,GAAGzE,GAAG;EACrD,MAAM+8B,QAAQ,GAAGlgB,IAAI,CAAClc,KAAK,GAAG,OAAO,GAAG,GAAG;EAC3C6I,GAAG,CAACoxB,IAAI,CAAC,CAAC;EACV,IAAImC,QAAQ,KAAK,GAAG,IAAI+X,KAAK,KAAK8B,KAAK,EAAE;IACvCjoC,KAAK,CAACnF,GAAG,EAAEvJ,MAAM,EAAE6O,IAAI,CAAC7J,GAAG,CAAC;IAC5BqxC,KAAK,CAAC9sC,GAAG,EAAE;MAACqT,IAAI;MAAE5c,MAAM;MAAElQ,KAAK,EAAE6mD,KAAK;MAAEnyC,KAAK;MAAEs4B;IAAQ,CAAC,CAAC;IACzDvzB,GAAG,CAACsxB,OAAO,CAAC,CAAC;IACbtxB,GAAG,CAACoxB,IAAI,CAAC,CAAC;IACVjsB,KAAK,CAACnF,GAAG,EAAEvJ,MAAM,EAAE6O,IAAI,CAAC3J,MAAM,CAAC;EACjC;EACAmxC,KAAK,CAAC9sC,GAAG,EAAE;IAACqT,IAAI;IAAE5c,MAAM;IAAElQ,KAAK,EAAE+kD,KAAK;IAAErwC,KAAK;IAAEs4B;EAAQ,CAAC,CAAC;EACzDvzB,GAAG,CAACsxB,OAAO,CAAC,CAAC;AACf;AACA,IAAI+b,aAAa,GAAG;EAClBhwC,EAAE,EAAE,QAAQ;EACZiwC,mBAAmBA,CAACj7C,KAAK,EAAEk7C,KAAK,EAAErzC,OAAO,EAAE;IACzC,MAAMmJ,KAAK,GAAG,CAAChR,KAAK,CAACuK,IAAI,CAACoF,QAAQ,IAAI,EAAE,EAAEvO,MAAM;IAChD,MAAMw4C,SAAS,GAAG/xC,OAAO,CAAC+xC,SAAS;IACnC,MAAMD,OAAO,GAAG,EAAE;IAClB,IAAIhvC,IAAI,EAAExW,CAAC,EAAE6sB,IAAI,EAAEgY,MAAM;IACzB,KAAK7kC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG6c,KAAK,EAAE,EAAE7c,CAAC,EAAE;MAC1BwW,IAAI,GAAG3K,KAAK,CAAC4P,cAAc,CAACzb,CAAC,CAAC;MAC9B6sB,IAAI,GAAGrW,IAAI,CAACmC,OAAO;MACnBksB,MAAM,GAAG,IAAI;MACb,IAAIhY,IAAI,IAAIA,IAAI,CAACnZ,OAAO,IAAImZ,IAAI,YAAY0xB,WAAW,EAAE;QACvD1Z,MAAM,GAAG;UACPjyB,OAAO,EAAE/G,KAAK,CAAC4d,gBAAgB,CAACzpB,CAAC,CAAC;UAClC2V,KAAK,EAAE3V,CAAC;UACR6vB,IAAI,EAAEi0B,UAAU,CAACj3B,IAAI,EAAE7sB,CAAC,EAAE6c,KAAK,CAAC;UAChChR,KAAK;UACL4I,KAAK,EAAE+B,IAAI,CAACuB,MAAM;UAClB8U;QACF,CAAC;MACH;MACArW,IAAI,CAACwwC,OAAO,GAAGniB,MAAM;MACrB2gB,OAAO,CAACl3C,IAAI,CAACu2B,MAAM,CAAC;IACtB;IACA,KAAK7kC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG6c,KAAK,EAAE,EAAE7c,CAAC,EAAE;MAC1B6kC,MAAM,GAAG2gB,OAAO,CAACxlD,CAAC,CAAC;MACnB,IAAI,CAAC6kC,MAAM,IAAIA,MAAM,CAAChV,IAAI,KAAK,KAAK,EAAE;QACpC;MACF;MACAgV,MAAM,CAAChV,IAAI,GAAG01B,aAAa,CAACC,OAAO,EAAExlD,CAAC,EAAEylD,SAAS,CAAC;IACpD;EACF,CAAC;EACDwB,kBAAkBA,CAACp7C,KAAK,EAAE;IACxB,MAAM2J,QAAQ,GAAG3J,KAAK,CAACulB,4BAA4B,CAAC,CAAC;IACrD,MAAMtS,IAAI,GAAGjT,KAAK,CAACkT,SAAS;IAC5B,IAAI/e,CAAC,EAAEwW,IAAI;IACX,KAAKxW,CAAC,GAAGwV,QAAQ,CAACvI,MAAM,GAAG,CAAC,EAAEjN,CAAC,IAAI,CAAC,EAAE,EAAEA,CAAC,EAAE;MACzCwW,IAAI,GAAGhB,QAAQ,CAACxV,CAAC,CAAC,CAACgnD,OAAO;MAC1B,IAAIxwC,IAAI,EAAE;QACRA,IAAI,CAACqW,IAAI,CAACe,mBAAmB,CAAC9O,IAAI,CAAC;MACrC;IACF;EACF,CAAC;EACDooC,iBAAiBA,CAACr7C,KAAK,EAAE6vB,IAAI,EAAE;IAC7B,MAAM5c,IAAI,GAAGjT,KAAK,CAACkT,SAAS;IAC5B,MAAMvF,GAAG,GAAG3N,KAAK,CAAC2N,GAAG;IACrB,MAAMqrB,MAAM,GAAGnJ,IAAI,CAACllB,IAAI,CAACwwC,OAAO;IAChC,IAAI,CAACniB,MAAM,IAAIA,MAAM,CAAChV,IAAI,KAAK,KAAK,EAAE;MACpC;IACF;IACA,MAAM5f,MAAM,GAAGq1C,SAAS,CAACzgB,MAAM,CAAC;IAChC,MAAM;MAAChY,IAAI;MAAEpY;IAAK,CAAC,GAAGowB,MAAM;IAC5B,MAAMsiB,QAAQ,GAAGt6B,IAAI,CAACnZ,OAAO;IAC7B,MAAMmwC,UAAU,GAAGsD,QAAQ,CAACt3B,IAAI;IAChC,MAAM9vB,KAAK,GAAGonD,QAAQ,CAACn7B,eAAe;IACtC,MAAM;MAAC46B,KAAK,GAAG7mD,KAAK;MAAE+kD,KAAK,GAAG/kD;IAAK,CAAC,GAAG8jD,UAAU,IAAI,CAAC,CAAC;IACvD,IAAI5zC,MAAM,IAAI4c,IAAI,CAACzF,MAAM,CAACna,MAAM,EAAE;MAChC1L,QAAQ,CAACiY,GAAG,EAAEsF,IAAI,CAAC;MACnB6nC,MAAM,CAACntC,GAAG,EAAE;QAACqT,IAAI;QAAE5c,MAAM;QAAE22C,KAAK;QAAE9B,KAAK;QAAEhmC,IAAI;QAAErK;MAAK,CAAC,CAAC;MACtDhT,UAAU,CAAC+X,GAAG,CAAC;IACjB;EACF,CAAC;EACDnZ,QAAQ,EAAE;IACRolD,SAAS,EAAE;EACb;AACF,CAAC;AAED,MAAM2B,UAAU,GAAGA,CAACC,SAAS,EAAEC,QAAQ,KAAK;EAC1C,IAAI;IAACC,SAAS,GAAGD,QAAQ;IAAEE,QAAQ,GAAGF;EAAQ,CAAC,GAAGD,SAAS;EAC3D,IAAIA,SAAS,CAACI,aAAa,EAAE;IAC3BF,SAAS,GAAG/6C,IAAI,CAACC,GAAG,CAAC86C,SAAS,EAAED,QAAQ,CAAC;IACzCE,QAAQ,GAAGh7C,IAAI,CAACC,GAAG,CAAC+6C,QAAQ,EAAEF,QAAQ,CAAC;EACzC;EACA,OAAO;IACLE,QAAQ;IACRD,SAAS;IACTG,UAAU,EAAEl7C,IAAI,CAACoC,GAAG,CAAC04C,QAAQ,EAAEC,SAAS;EAC1C,CAAC;AACH,CAAC;AACD,MAAMI,UAAU,GAAGA,CAACjoD,CAAC,EAAEQ,CAAC,KAAKR,CAAC,KAAK,IAAI,IAAIQ,CAAC,KAAK,IAAI,IAAIR,CAAC,CAACuW,YAAY,KAAK/V,CAAC,CAAC+V,YAAY,IAAIvW,CAAC,CAACiW,KAAK,KAAKzV,CAAC,CAACyV,KAAK;AACjH,MAAMiyC,MAAM,SAASzrB,OAAO,CAAC;EAC3B9wB,WAAWA,CAAC0H,MAAM,EAAE;IAClB,KAAK,CAAC,CAAC;IACP,IAAI,CAAC80C,MAAM,GAAG,KAAK;IACnB,IAAI,CAACC,cAAc,GAAG,EAAE;IACxB,IAAI,CAACC,YAAY,GAAG,IAAI;IACxB,IAAI,CAACC,YAAY,GAAG,KAAK;IACzB,IAAI,CAACn8C,KAAK,GAAGkH,MAAM,CAAClH,KAAK;IACzB,IAAI,CAAC6H,OAAO,GAAGX,MAAM,CAACW,OAAO;IAC7B,IAAI,CAAC8F,GAAG,GAAGzG,MAAM,CAACyG,GAAG;IACrB,IAAI,CAACyuC,WAAW,GAAGt8C,SAAS;IAC5B,IAAI,CAACu8C,WAAW,GAAGv8C,SAAS;IAC5B,IAAI,CAACw8C,UAAU,GAAGx8C,SAAS;IAC3B,IAAI,CAACue,SAAS,GAAGve,SAAS;IAC1B,IAAI,CAACse,QAAQ,GAAGte,SAAS;IACzB,IAAI,CAACsJ,GAAG,GAAGtJ,SAAS;IACpB,IAAI,CAACwJ,MAAM,GAAGxJ,SAAS;IACvB,IAAI,CAACyJ,IAAI,GAAGzJ,SAAS;IACrB,IAAI,CAACuJ,KAAK,GAAGvJ,SAAS;IACtB,IAAI,CAAC0Z,MAAM,GAAG1Z,SAAS;IACvB,IAAI,CAAC2Z,KAAK,GAAG3Z,SAAS;IACtB,IAAI,CAAC02B,QAAQ,GAAG12B,SAAS;IACzB,IAAI,CAACmmB,QAAQ,GAAGnmB,SAAS;IACzB,IAAI,CAAC6f,MAAM,GAAG7f,SAAS;IACvB,IAAI,CAAC6oB,QAAQ,GAAG7oB,SAAS;EAC3B;EACAwF,MAAMA,CAAC8Y,QAAQ,EAAEC,SAAS,EAAE2Z,OAAO,EAAE;IACnC,MAAMj3B,EAAE,GAAG,IAAI;IACfA,EAAE,CAACqd,QAAQ,GAAGA,QAAQ;IACtBrd,EAAE,CAACsd,SAAS,GAAGA,SAAS;IACxBtd,EAAE,CAACy1B,QAAQ,GAAGwB,OAAO;IACrBj3B,EAAE,CAACo3B,aAAa,CAAC,CAAC;IAClBp3B,EAAE,CAACw7C,WAAW,CAAC,CAAC;IAChBx7C,EAAE,CAACm4B,GAAG,CAAC,CAAC;EACV;EACAf,aAAaA,CAAA,EAAG;IACd,MAAMp3B,EAAE,GAAG,IAAI;IACf,IAAIA,EAAE,CAACgY,YAAY,CAAC,CAAC,EAAE;MACrBhY,EAAE,CAAC0Y,KAAK,GAAG1Y,EAAE,CAACqd,QAAQ;MACtBrd,EAAE,CAACwI,IAAI,GAAG,CAAC;MACXxI,EAAE,CAACsI,KAAK,GAAGtI,EAAE,CAAC0Y,KAAK;IACrB,CAAC,MAAM;MACL1Y,EAAE,CAACyY,MAAM,GAAGzY,EAAE,CAACsd,SAAS;MACxBtd,EAAE,CAACqI,GAAG,GAAG,CAAC;MACVrI,EAAE,CAACuI,MAAM,GAAGvI,EAAE,CAACyY,MAAM;IACvB;EACF;EACA+iC,WAAWA,CAAA,EAAG;IACZ,MAAMx7C,EAAE,GAAG,IAAI;IACf,MAAMy6C,SAAS,GAAGz6C,EAAE,CAAC8G,OAAO,CAAC2J,MAAM,IAAI,CAAC,CAAC;IACzC,IAAI4qC,WAAW,GAAGpjD,QAAQ,CAACwiD,SAAS,CAAC17B,cAAc,EAAE,CAAC/e,EAAE,CAACf,KAAK,CAAC,EAAEe,EAAE,CAAC,IAAI,EAAE;IAC1E,IAAIy6C,SAAS,CAAC/uC,MAAM,EAAE;MACpB2vC,WAAW,GAAGA,WAAW,CAAC3vC,MAAM,CAAE9K,IAAI,IAAK65C,SAAS,CAAC/uC,MAAM,CAAC9K,IAAI,EAAEZ,EAAE,CAACf,KAAK,CAACuK,IAAI,CAAC,CAAC;IACnF;IACA,IAAIixC,SAAS,CAACllC,IAAI,EAAE;MAClB8lC,WAAW,GAAGA,WAAW,CAAC9lC,IAAI,CAAC,CAACziB,CAAC,EAAEQ,CAAC,KAAKmnD,SAAS,CAACllC,IAAI,CAACziB,CAAC,EAAEQ,CAAC,EAAE0M,EAAE,CAACf,KAAK,CAACuK,IAAI,CAAC,CAAC;IAC/E;IACA,IAAIxJ,EAAE,CAAC8G,OAAO,CAACkB,OAAO,EAAE;MACtBqzC,WAAW,CAACrzC,OAAO,CAAC,CAAC;IACvB;IACAhI,EAAE,CAACq7C,WAAW,GAAGA,WAAW;EAC9B;EACAljB,GAAGA,CAAA,EAAG;IACJ,MAAMn4B,EAAE,GAAG,IAAI;IACf,MAAM;MAAC8G,OAAO;MAAE8F;IAAG,CAAC,GAAG5M,EAAE;IACzB,IAAI,CAAC8G,OAAO,CAAC2b,OAAO,EAAE;MACpBziB,EAAE,CAAC0Y,KAAK,GAAG1Y,EAAE,CAACyY,MAAM,GAAG,CAAC;MACxB;IACF;IACA,MAAMgiC,SAAS,GAAG3zC,OAAO,CAAC2J,MAAM;IAChC,MAAMgrC,SAAS,GAAG5iD,MAAM,CAAC4hD,SAAS,CAAC1lB,IAAI,CAAC;IACxC,MAAM2lB,QAAQ,GAAGe,SAAS,CAACj0C,IAAI;IAC/B,MAAMoyB,WAAW,GAAG55B,EAAE,CAAC07C,mBAAmB,CAAC,CAAC;IAC5C,MAAM;MAACd,QAAQ;MAAEE;IAAU,CAAC,GAAGN,UAAU,CAACC,SAAS,EAAEC,QAAQ,CAAC;IAC9D,IAAIhiC,KAAK,EAAED,MAAM;IACjB7L,GAAG,CAACmoB,IAAI,GAAG0mB,SAAS,CAACxgB,MAAM;IAC3B,IAAIj7B,EAAE,CAACgY,YAAY,CAAC,CAAC,EAAE;MACrBU,KAAK,GAAG1Y,EAAE,CAACqd,QAAQ;MACnB5E,MAAM,GAAGzY,EAAE,CAAC27C,QAAQ,CAAC/hB,WAAW,EAAE8gB,QAAQ,EAAEE,QAAQ,EAAEE,UAAU,CAAC,GAAG,EAAE;IACxE,CAAC,MAAM;MACLriC,MAAM,GAAGzY,EAAE,CAACsd,SAAS;MACrB5E,KAAK,GAAG1Y,EAAE,CAAC47C,QAAQ,CAAChiB,WAAW,EAAE8gB,QAAQ,EAAEE,QAAQ,EAAEE,UAAU,CAAC,GAAG,EAAE;IACvE;IACA96C,EAAE,CAAC0Y,KAAK,GAAG9Y,IAAI,CAACC,GAAG,CAAC6Y,KAAK,EAAE5R,OAAO,CAACuW,QAAQ,IAAIrd,EAAE,CAACqd,QAAQ,CAAC;IAC3Drd,EAAE,CAACyY,MAAM,GAAG7Y,IAAI,CAACC,GAAG,CAAC4Y,MAAM,EAAE3R,OAAO,CAACwW,SAAS,IAAItd,EAAE,CAACsd,SAAS,CAAC;EACjE;EACAq+B,QAAQA,CAAC/hB,WAAW,EAAE8gB,QAAQ,EAAEE,QAAQ,EAAEE,UAAU,EAAE;IACpD,MAAM96C,EAAE,GAAG,IAAI;IACf,MAAM;MAAC4M,GAAG;MAAEyQ,QAAQ;MAAEvW,OAAO,EAAE;QAAC2J,MAAM,EAAE;UAACyZ;QAAO;MAAC;IAAC,CAAC,GAAGlqB,EAAE;IACxD,MAAM67C,QAAQ,GAAG77C,EAAE,CAACk7C,cAAc,GAAG,EAAE;IACvC,MAAMK,UAAU,GAAGv7C,EAAE,CAACu7C,UAAU,GAAG,CAAC,CAAC,CAAC;IACtC,MAAMtmB,UAAU,GAAG6lB,UAAU,GAAG5wB,OAAO;IACvC,IAAI4xB,WAAW,GAAGliB,WAAW;IAC7BhtB,GAAG,CAACwwB,SAAS,GAAG,MAAM;IACtBxwB,GAAG,CAAC2wB,YAAY,GAAG,QAAQ;IAC3B,IAAIwe,GAAG,GAAG,CAAC,CAAC;IACZ,IAAI1zC,GAAG,GAAG,CAAC4sB,UAAU;IACrBj1B,EAAE,CAACq7C,WAAW,CAAC57C,OAAO,CAAC,CAACigB,UAAU,EAAEtsB,CAAC,KAAK;MACxC,MAAM4oD,SAAS,GAAGpB,QAAQ,GAAIF,QAAQ,GAAG,CAAE,GAAG9tC,GAAG,CAACqvC,WAAW,CAACv8B,UAAU,CAACR,IAAI,CAAC,CAACxG,KAAK;MACpF,IAAItlB,CAAC,KAAK,CAAC,IAAImoD,UAAU,CAACA,UAAU,CAACl7C,MAAM,GAAG,CAAC,CAAC,GAAG27C,SAAS,GAAG,CAAC,GAAG9xB,OAAO,GAAG7M,QAAQ,EAAE;QACrFy+B,WAAW,IAAI7mB,UAAU;QACzBsmB,UAAU,CAACA,UAAU,CAACl7C,MAAM,IAAIjN,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;QACnDiV,GAAG,IAAI4sB,UAAU;QACjB8mB,GAAG,EAAE;MACP;MACAF,QAAQ,CAACzoD,CAAC,CAAC,GAAG;QAACoV,IAAI,EAAE,CAAC;QAAEH,GAAG;QAAE0zC,GAAG;QAAErjC,KAAK,EAAEsjC,SAAS;QAAEvjC,MAAM,EAAEqiC;MAAU,CAAC;MACvES,UAAU,CAACA,UAAU,CAACl7C,MAAM,GAAG,CAAC,CAAC,IAAI27C,SAAS,GAAG9xB,OAAO;IAC1D,CAAC,CAAC;IACF,OAAO4xB,WAAW;EACpB;EACAF,QAAQA,CAAChiB,WAAW,EAAE8gB,QAAQ,EAAEE,QAAQ,EAAEE,UAAU,EAAE;IACpD,MAAM96C,EAAE,GAAG,IAAI;IACf,MAAM;MAAC4M,GAAG;MAAE0Q,SAAS;MAAExW,OAAO,EAAE;QAAC2J,MAAM,EAAE;UAACyZ;QAAO;MAAC;IAAC,CAAC,GAAGlqB,EAAE;IACzD,MAAM67C,QAAQ,GAAG77C,EAAE,CAACk7C,cAAc,GAAG,EAAE;IACvC,MAAMI,WAAW,GAAGt7C,EAAE,CAACs7C,WAAW,GAAG,EAAE;IACvC,MAAMY,WAAW,GAAG5+B,SAAS,GAAGsc,WAAW;IAC3C,IAAIuiB,UAAU,GAAGjyB,OAAO;IACxB,IAAIkyB,eAAe,GAAG,CAAC;IACvB,IAAIC,gBAAgB,GAAG,CAAC;IACxB,IAAI7zC,IAAI,GAAG,CAAC;IACZ,IAAIH,GAAG,GAAG,CAAC;IACX,IAAIi0C,GAAG,GAAG,CAAC;IACXt8C,EAAE,CAACq7C,WAAW,CAAC57C,OAAO,CAAC,CAACigB,UAAU,EAAEtsB,CAAC,KAAK;MACxC,MAAM4oD,SAAS,GAAGpB,QAAQ,GAAIF,QAAQ,GAAG,CAAE,GAAG9tC,GAAG,CAACqvC,WAAW,CAACv8B,UAAU,CAACR,IAAI,CAAC,CAACxG,KAAK;MACpF,IAAItlB,CAAC,GAAG,CAAC,IAAIipD,gBAAgB,GAAG3B,QAAQ,GAAG,CAAC,GAAGxwB,OAAO,GAAGgyB,WAAW,EAAE;QACpEC,UAAU,IAAIC,eAAe,GAAGlyB,OAAO;QACvCoxB,WAAW,CAAC55C,IAAI,CAAC;UAACgX,KAAK,EAAE0jC,eAAe;UAAE3jC,MAAM,EAAE4jC;QAAgB,CAAC,CAAC;QACpE7zC,IAAI,IAAI4zC,eAAe,GAAGlyB,OAAO;QACjCoyB,GAAG,EAAE;QACLj0C,GAAG,GAAG,CAAC;QACP+zC,eAAe,GAAGC,gBAAgB,GAAG,CAAC;MACxC;MACAD,eAAe,GAAGx8C,IAAI,CAACoC,GAAG,CAACo6C,eAAe,EAAEJ,SAAS,CAAC;MACtDK,gBAAgB,IAAI3B,QAAQ,GAAGxwB,OAAO;MACtC2xB,QAAQ,CAACzoD,CAAC,CAAC,GAAG;QAACoV,IAAI;QAAEH,GAAG;QAAEi0C,GAAG;QAAE5jC,KAAK,EAAEsjC,SAAS;QAAEvjC,MAAM,EAAEqiC;MAAU,CAAC;MACpEzyC,GAAG,IAAIyyC,UAAU,GAAG5wB,OAAO;IAC7B,CAAC,CAAC;IACFiyB,UAAU,IAAIC,eAAe;IAC7Bd,WAAW,CAAC55C,IAAI,CAAC;MAACgX,KAAK,EAAE0jC,eAAe;MAAE3jC,MAAM,EAAE4jC;IAAgB,CAAC,CAAC;IACpE,OAAOF,UAAU;EACnB;EACAI,cAAcA,CAAA,EAAG;IACf,MAAMv8C,EAAE,GAAG,IAAI;IACf,IAAI,CAACA,EAAE,CAAC8G,OAAO,CAAC2b,OAAO,EAAE;MACvB;IACF;IACA,MAAMmX,WAAW,GAAG55B,EAAE,CAAC07C,mBAAmB,CAAC,CAAC;IAC5C,MAAM;MAACR,cAAc,EAAEW,QAAQ;MAAE/0C,OAAO,EAAE;QAACirB,KAAK;QAAEthB,MAAM,EAAE;UAACyZ;QAAO;MAAC;IAAC,CAAC,GAAGlqB,EAAE;IAC1E,IAAI,IAAI,CAACgY,YAAY,CAAC,CAAC,EAAE;MACvB,IAAI+jC,GAAG,GAAG,CAAC;MACX,IAAIvzC,IAAI,GAAGvP,cAAc,CAAC84B,KAAK,EAAE/xB,EAAE,CAACwI,IAAI,GAAG0hB,OAAO,EAAElqB,EAAE,CAACsI,KAAK,GAAGtI,EAAE,CAACu7C,UAAU,CAACQ,GAAG,CAAC,CAAC;MAClF,KAAK,MAAMS,MAAM,IAAIX,QAAQ,EAAE;QAC7B,IAAIE,GAAG,KAAKS,MAAM,CAACT,GAAG,EAAE;UACtBA,GAAG,GAAGS,MAAM,CAACT,GAAG;UAChBvzC,IAAI,GAAGvP,cAAc,CAAC84B,KAAK,EAAE/xB,EAAE,CAACwI,IAAI,GAAG0hB,OAAO,EAAElqB,EAAE,CAACsI,KAAK,GAAGtI,EAAE,CAACu7C,UAAU,CAACQ,GAAG,CAAC,CAAC;QAChF;QACAS,MAAM,CAACn0C,GAAG,IAAIrI,EAAE,CAACqI,GAAG,GAAGuxB,WAAW,GAAG1P,OAAO;QAC5CsyB,MAAM,CAACh0C,IAAI,GAAGA,IAAI;QAClBA,IAAI,IAAIg0C,MAAM,CAAC9jC,KAAK,GAAGwR,OAAO;MAChC;IACF,CAAC,MAAM;MACL,IAAIoyB,GAAG,GAAG,CAAC;MACX,IAAIj0C,GAAG,GAAGpP,cAAc,CAAC84B,KAAK,EAAE/xB,EAAE,CAACqI,GAAG,GAAGuxB,WAAW,GAAG1P,OAAO,EAAElqB,EAAE,CAACuI,MAAM,GAAGvI,EAAE,CAACs7C,WAAW,CAACgB,GAAG,CAAC,CAAC7jC,MAAM,CAAC;MACvG,KAAK,MAAM+jC,MAAM,IAAIX,QAAQ,EAAE;QAC7B,IAAIW,MAAM,CAACF,GAAG,KAAKA,GAAG,EAAE;UACtBA,GAAG,GAAGE,MAAM,CAACF,GAAG;UAChBj0C,GAAG,GAAGpP,cAAc,CAAC84B,KAAK,EAAE/xB,EAAE,CAACqI,GAAG,GAAGuxB,WAAW,GAAG1P,OAAO,EAAElqB,EAAE,CAACuI,MAAM,GAAGvI,EAAE,CAACs7C,WAAW,CAACgB,GAAG,CAAC,CAAC7jC,MAAM,CAAC;QACrG;QACA+jC,MAAM,CAACn0C,GAAG,GAAGA,GAAG;QAChBm0C,MAAM,CAACh0C,IAAI,IAAIxI,EAAE,CAACwI,IAAI,GAAG0hB,OAAO;QAChC7hB,GAAG,IAAIm0C,MAAM,CAAC/jC,MAAM,GAAGyR,OAAO;MAChC;IACF;EACF;EACAlS,YAAYA,CAAA,EAAG;IACb,OAAO,IAAI,CAAClR,OAAO,CAACoe,QAAQ,KAAK,KAAK,IAAI,IAAI,CAACpe,OAAO,CAACoe,QAAQ,KAAK,QAAQ;EAC9E;EACAvkB,IAAIA,CAAA,EAAG;IACL,MAAMX,EAAE,GAAG,IAAI;IACf,IAAIA,EAAE,CAAC8G,OAAO,CAAC2b,OAAO,EAAE;MACtB,MAAM7V,GAAG,GAAG5M,EAAE,CAAC4M,GAAG;MAClBjY,QAAQ,CAACiY,GAAG,EAAE5M,EAAE,CAAC;MACjBA,EAAE,CAACy8C,KAAK,CAAC,CAAC;MACV5nD,UAAU,CAAC+X,GAAG,CAAC;IACjB;EACF;EACA6vC,KAAKA,CAAA,EAAG;IACN,MAAMz8C,EAAE,GAAG,IAAI;IACf,MAAM;MAAC8G,OAAO,EAAEiB,IAAI;MAAEuzC,WAAW;MAAEC,UAAU;MAAE3uC;IAAG,CAAC,GAAG5M,EAAE;IACxD,MAAM;MAAC+xB,KAAK;MAAEthB,MAAM,EAAEgqC;IAAS,CAAC,GAAG1yC,IAAI;IACvC,MAAM20C,YAAY,GAAGjpD,QAAQ,CAACN,KAAK;IACnC,MAAMwpD,SAAS,GAAGhgD,aAAa,CAACoL,IAAI,CAAC60C,GAAG,EAAE58C,EAAE,CAACwI,IAAI,EAAExI,EAAE,CAAC0Y,KAAK,CAAC;IAC5D,MAAM+iC,SAAS,GAAG5iD,MAAM,CAAC4hD,SAAS,CAAC1lB,IAAI,CAAC;IACxC,MAAM;MAAC5hC,KAAK,EAAE0pD,SAAS;MAAE3yB;IAAO,CAAC,GAAGuwB,SAAS;IAC7C,MAAMC,QAAQ,GAAGe,SAAS,CAACj0C,IAAI;IAC/B,MAAMs1C,YAAY,GAAGpC,QAAQ,GAAG,CAAC;IACjC,IAAIqC,MAAM;IACV/8C,EAAE,CAACi/B,SAAS,CAAC,CAAC;IACdryB,GAAG,CAACwwB,SAAS,GAAGuf,SAAS,CAACvf,SAAS,CAAC,MAAM,CAAC;IAC3CxwB,GAAG,CAAC2wB,YAAY,GAAG,QAAQ;IAC3B3wB,GAAG,CAAC2S,SAAS,GAAG,GAAG;IACnB3S,GAAG,CAACyS,WAAW,GAAGw9B,SAAS;IAC3BjwC,GAAG,CAACuS,SAAS,GAAG09B,SAAS;IACzBjwC,GAAG,CAACmoB,IAAI,GAAG0mB,SAAS,CAACxgB,MAAM;IAC3B,MAAM;MAAC2f,QAAQ;MAAED,SAAS;MAAEG;IAAU,CAAC,GAAGN,UAAU,CAACC,SAAS,EAAEC,QAAQ,CAAC;IACzE,MAAMsC,aAAa,GAAG,SAAAA,CAAS9mD,CAAC,EAAEE,CAAC,EAAEspB,UAAU,EAAE;MAC/C,IAAI5G,KAAK,CAAC8hC,QAAQ,CAAC,IAAIA,QAAQ,IAAI,CAAC,IAAI9hC,KAAK,CAAC6hC,SAAS,CAAC,IAAIA,SAAS,GAAG,CAAC,EAAE;QACzE;MACF;MACA/tC,GAAG,CAACoxB,IAAI,CAAC,CAAC;MACV,MAAMze,SAAS,GAAG5rB,cAAc,CAAC+rB,UAAU,CAACH,SAAS,EAAE,CAAC,CAAC;MACzD3S,GAAG,CAACuS,SAAS,GAAGxrB,cAAc,CAAC+rB,UAAU,CAACP,SAAS,EAAEu9B,YAAY,CAAC;MAClE9vC,GAAG,CAACkjC,OAAO,GAAGn8C,cAAc,CAAC+rB,UAAU,CAACowB,OAAO,EAAE,MAAM,CAAC;MACxDljC,GAAG,CAAC6xB,cAAc,GAAG9qC,cAAc,CAAC+rB,UAAU,CAAC+e,cAAc,EAAE,CAAC,CAAC;MACjE7xB,GAAG,CAACuiC,QAAQ,GAAGx7C,cAAc,CAAC+rB,UAAU,CAACyvB,QAAQ,EAAE,OAAO,CAAC;MAC3DviC,GAAG,CAAC2S,SAAS,GAAGA,SAAS;MACzB3S,GAAG,CAACyS,WAAW,GAAG1rB,cAAc,CAAC+rB,UAAU,CAACL,WAAW,EAAEq9B,YAAY,CAAC;MACtE9vC,GAAG,CAAC4xB,WAAW,CAAC7qC,cAAc,CAAC+rB,UAAU,CAACu9B,QAAQ,EAAE,EAAE,CAAC,CAAC;MACxD,IAAIxC,SAAS,CAACI,aAAa,EAAE;QAC3B,MAAMqC,WAAW,GAAG;UAClBtiC,MAAM,EAAEggC,QAAQ,GAAGh7C,IAAI,CAACu9C,KAAK,GAAG,CAAC;UACjCrK,UAAU,EAAEpzB,UAAU,CAACozB,UAAU;UACjC73B,QAAQ,EAAEyE,UAAU,CAACzE,QAAQ;UAC7BuD,WAAW,EAAEe;QACf,CAAC;QACD,MAAMtB,OAAO,GAAG0+B,SAAS,CAACS,KAAK,CAAClnD,CAAC,EAAE0kD,QAAQ,GAAG,CAAC,CAAC;QAChD,MAAM18B,OAAO,GAAG9nB,CAAC,GAAG0mD,YAAY;QAChC7gD,SAAS,CAAC2Q,GAAG,EAAEswC,WAAW,EAAEj/B,OAAO,EAAEC,OAAO,CAAC;MAC/C,CAAC,MAAM;QACL,MAAMm/B,OAAO,GAAGjnD,CAAC,GAAGwJ,IAAI,CAACoC,GAAG,CAAC,CAAC04C,QAAQ,GAAGC,SAAS,IAAI,CAAC,EAAE,CAAC,CAAC;QAC3D/tC,GAAG,CAACqxB,QAAQ,CAAC0e,SAAS,CAACW,UAAU,CAACpnD,CAAC,EAAE0kD,QAAQ,CAAC,EAAEyC,OAAO,EAAEzC,QAAQ,EAAED,SAAS,CAAC;QAC7E,IAAIp7B,SAAS,KAAK,CAAC,EAAE;UACnB3S,GAAG,CAAC2wC,UAAU,CAACZ,SAAS,CAACW,UAAU,CAACpnD,CAAC,EAAE0kD,QAAQ,CAAC,EAAEyC,OAAO,EAAEzC,QAAQ,EAAED,SAAS,CAAC;QACjF;MACF;MACA/tC,GAAG,CAACsxB,OAAO,CAAC,CAAC;IACf,CAAC;IACD,MAAMsf,QAAQ,GAAG,SAAAA,CAAStnD,CAAC,EAAEE,CAAC,EAAEspB,UAAU,EAAE;MAC1C/mB,UAAU,CAACiU,GAAG,EAAE8S,UAAU,CAACR,IAAI,EAAEhpB,CAAC,EAAEE,CAAC,GAAI0kD,UAAU,GAAG,CAAE,EAAEW,SAAS,EAAE;QACnEgC,aAAa,EAAE/9B,UAAU,CAACF,MAAM;QAChC4d,SAAS,EAAE1d,UAAU,CAAC0d;MACxB,CAAC,CAAC;IACJ,CAAC;IACD,MAAMplB,YAAY,GAAGhY,EAAE,CAACgY,YAAY,CAAC,CAAC;IACtC,MAAM4hB,WAAW,GAAG,IAAI,CAAC8hB,mBAAmB,CAAC,CAAC;IAC9C,IAAI1jC,YAAY,EAAE;MAChB+kC,MAAM,GAAG;QACP7mD,CAAC,EAAE+C,cAAc,CAAC84B,KAAK,EAAE/xB,EAAE,CAACwI,IAAI,GAAG0hB,OAAO,EAAElqB,EAAE,CAACsI,KAAK,GAAGizC,UAAU,CAAC,CAAC,CAAC,CAAC;QACrEnlD,CAAC,EAAE4J,EAAE,CAACqI,GAAG,GAAG6hB,OAAO,GAAG0P,WAAW;QACjC3Z,IAAI,EAAE;MACR,CAAC;IACH,CAAC,MAAM;MACL88B,MAAM,GAAG;QACP7mD,CAAC,EAAE8J,EAAE,CAACwI,IAAI,GAAG0hB,OAAO;QACpB9zB,CAAC,EAAE6C,cAAc,CAAC84B,KAAK,EAAE/xB,EAAE,CAACqI,GAAG,GAAGuxB,WAAW,GAAG1P,OAAO,EAAElqB,EAAE,CAACuI,MAAM,GAAG+yC,WAAW,CAAC,CAAC,CAAC,CAAC7iC,MAAM,CAAC;QAC3FwH,IAAI,EAAE;MACR,CAAC;IACH;IACApjB,qBAAqB,CAACmD,EAAE,CAAC4M,GAAG,EAAE7E,IAAI,CAAC21C,aAAa,CAAC;IACjD,MAAMzoB,UAAU,GAAG6lB,UAAU,GAAG5wB,OAAO;IACvClqB,EAAE,CAACq7C,WAAW,CAAC57C,OAAO,CAAC,CAACigB,UAAU,EAAEtsB,CAAC,KAAK;MACxC,MAAMuqD,SAAS,GAAG/wC,GAAG,CAACqvC,WAAW,CAACv8B,UAAU,CAACR,IAAI,CAAC,CAACxG,KAAK;MACxD,MAAM0kB,SAAS,GAAGuf,SAAS,CAACvf,SAAS,CAAC1d,UAAU,CAAC0d,SAAS,KAAK1d,UAAU,CAAC0d,SAAS,GAAGqd,SAAS,CAACrd,SAAS,CAAC,CAAC;MAC3G,MAAM1kB,KAAK,GAAGkiC,QAAQ,GAAIF,QAAQ,GAAG,CAAE,GAAGiD,SAAS;MACnD,IAAIznD,CAAC,GAAG6mD,MAAM,CAAC7mD,CAAC;MAChB,IAAIE,CAAC,GAAG2mD,MAAM,CAAC3mD,CAAC;MAChBumD,SAAS,CAACiB,QAAQ,CAAC59C,EAAE,CAAC0Y,KAAK,CAAC;MAC5B,IAAIV,YAAY,EAAE;QAChB,IAAI5kB,CAAC,GAAG,CAAC,IAAI8C,CAAC,GAAGwiB,KAAK,GAAGwR,OAAO,GAAGlqB,EAAE,CAACsI,KAAK,EAAE;UAC3ClS,CAAC,GAAG2mD,MAAM,CAAC3mD,CAAC,IAAI6+B,UAAU;UAC1B8nB,MAAM,CAAC98B,IAAI,EAAE;UACb/pB,CAAC,GAAG6mD,MAAM,CAAC7mD,CAAC,GAAG+C,cAAc,CAAC84B,KAAK,EAAE/xB,EAAE,CAACwI,IAAI,GAAG0hB,OAAO,EAAElqB,EAAE,CAACsI,KAAK,GAAGizC,UAAU,CAACwB,MAAM,CAAC98B,IAAI,CAAC,CAAC;QAC7F;MACF,CAAC,MAAM,IAAI7sB,CAAC,GAAG,CAAC,IAAIgD,CAAC,GAAG6+B,UAAU,GAAGj1B,EAAE,CAACuI,MAAM,EAAE;QAC9CrS,CAAC,GAAG6mD,MAAM,CAAC7mD,CAAC,GAAGA,CAAC,GAAGolD,WAAW,CAACyB,MAAM,CAAC98B,IAAI,CAAC,CAACvH,KAAK,GAAGwR,OAAO;QAC3D6yB,MAAM,CAAC98B,IAAI,EAAE;QACb7pB,CAAC,GAAG2mD,MAAM,CAAC3mD,CAAC,GAAG6C,cAAc,CAAC84B,KAAK,EAAE/xB,EAAE,CAACqI,GAAG,GAAGuxB,WAAW,GAAG1P,OAAO,EAAElqB,EAAE,CAACuI,MAAM,GAAG+yC,WAAW,CAACyB,MAAM,CAAC98B,IAAI,CAAC,CAACxH,MAAM,CAAC;MACnH;MACA,MAAMolC,KAAK,GAAGlB,SAAS,CAACzmD,CAAC,CAACA,CAAC,CAAC;MAC5B8mD,aAAa,CAACa,KAAK,EAAEznD,CAAC,EAAEspB,UAAU,CAAC;MACnCxpB,CAAC,GAAG6G,MAAM,CAACqgC,SAAS,EAAElnC,CAAC,GAAG0kD,QAAQ,GAAGkC,YAAY,EAAE98C,EAAE,CAACsI,KAAK,CAAC;MAC5Dk1C,QAAQ,CAACb,SAAS,CAACzmD,CAAC,CAACA,CAAC,CAAC,EAAEE,CAAC,EAAEspB,UAAU,CAAC;MACvC,IAAI1H,YAAY,EAAE;QAChB+kC,MAAM,CAAC7mD,CAAC,IAAIwiB,KAAK,GAAGwR,OAAO;MAC7B,CAAC,MAAM;QACL6yB,MAAM,CAAC3mD,CAAC,IAAI6+B,UAAU;MACxB;IACF,CAAC,CAAC;IACFh4B,oBAAoB,CAAC+C,EAAE,CAAC4M,GAAG,EAAE7E,IAAI,CAAC21C,aAAa,CAAC;EAClD;EACAze,SAASA,CAAA,EAAG;IACV,MAAMj/B,EAAE,GAAG,IAAI;IACf,MAAM+H,IAAI,GAAG/H,EAAE,CAAC8G,OAAO;IACvB,MAAM4yB,SAAS,GAAG3xB,IAAI,CAACgT,KAAK;IAC5B,MAAM+iC,SAAS,GAAGjlD,MAAM,CAAC6gC,SAAS,CAAC3E,IAAI,CAAC;IACxC,MAAMgpB,YAAY,GAAGlnD,SAAS,CAAC6iC,SAAS,CAACxP,OAAO,CAAC;IACjD,IAAI,CAACwP,SAAS,CAACjX,OAAO,EAAE;MACtB;IACF;IACA,MAAMk6B,SAAS,GAAGhgD,aAAa,CAACoL,IAAI,CAAC60C,GAAG,EAAE58C,EAAE,CAACwI,IAAI,EAAExI,EAAE,CAAC0Y,KAAK,CAAC;IAC5D,MAAM9L,GAAG,GAAG5M,EAAE,CAAC4M,GAAG;IAClB,MAAMsY,QAAQ,GAAGwU,SAAS,CAACxU,QAAQ;IACnC,MAAM43B,YAAY,GAAGgB,SAAS,CAACt2C,IAAI,GAAG,CAAC;IACvC,MAAMw2C,0BAA0B,GAAGD,YAAY,CAAC11C,GAAG,GAAGy0C,YAAY;IAClE,IAAI1mD,CAAC;IACL,IAAIoS,IAAI,GAAGxI,EAAE,CAACwI,IAAI;IAClB,IAAI6U,QAAQ,GAAGrd,EAAE,CAAC0Y,KAAK;IACvB,IAAI,IAAI,CAACV,YAAY,CAAC,CAAC,EAAE;MACvBqF,QAAQ,GAAGzd,IAAI,CAACoC,GAAG,CAAC,GAAGhC,EAAE,CAACu7C,UAAU,CAAC;MACrCnlD,CAAC,GAAG4J,EAAE,CAACqI,GAAG,GAAG21C,0BAA0B;MACvCx1C,IAAI,GAAGvP,cAAc,CAAC8O,IAAI,CAACgqB,KAAK,EAAEvpB,IAAI,EAAExI,EAAE,CAACsI,KAAK,GAAG+U,QAAQ,CAAC;IAC9D,CAAC,MAAM;MACL,MAAMC,SAAS,GAAGtd,EAAE,CAACs7C,WAAW,CAACz5C,MAAM,CAAC,CAACC,GAAG,EAAE0F,IAAI,KAAK5H,IAAI,CAACoC,GAAG,CAACF,GAAG,EAAE0F,IAAI,CAACiR,MAAM,CAAC,EAAE,CAAC,CAAC;MACrFriB,CAAC,GAAG4nD,0BAA0B,GAAG/kD,cAAc,CAAC8O,IAAI,CAACgqB,KAAK,EAAE/xB,EAAE,CAACqI,GAAG,EAAErI,EAAE,CAACuI,MAAM,GAAG+U,SAAS,GAAGvV,IAAI,CAAC0I,MAAM,CAACyZ,OAAO,GAAGlqB,EAAE,CAAC07C,mBAAmB,CAAC,CAAC,CAAC;IAC7I;IACA,MAAMxlD,CAAC,GAAG+C,cAAc,CAACisB,QAAQ,EAAE1c,IAAI,EAAEA,IAAI,GAAG6U,QAAQ,CAAC;IACzDzQ,GAAG,CAACwwB,SAAS,GAAGuf,SAAS,CAACvf,SAAS,CAACrkC,kBAAkB,CAACmsB,QAAQ,CAAC,CAAC;IACjEtY,GAAG,CAAC2wB,YAAY,GAAG,QAAQ;IAC3B3wB,GAAG,CAACyS,WAAW,GAAGqa,SAAS,CAACvmC,KAAK;IACjCyZ,GAAG,CAACuS,SAAS,GAAGua,SAAS,CAACvmC,KAAK;IAC/ByZ,GAAG,CAACmoB,IAAI,GAAG+oB,SAAS,CAAC7iB,MAAM;IAC3BtiC,UAAU,CAACiU,GAAG,EAAE8sB,SAAS,CAACxa,IAAI,EAAEhpB,CAAC,EAAEE,CAAC,EAAE0nD,SAAS,CAAC;EAClD;EACApC,mBAAmBA,CAAA,EAAG;IACpB,MAAMhiB,SAAS,GAAG,IAAI,CAAC5yB,OAAO,CAACiU,KAAK;IACpC,MAAM+iC,SAAS,GAAGjlD,MAAM,CAAC6gC,SAAS,CAAC3E,IAAI,CAAC;IACxC,MAAMgpB,YAAY,GAAGlnD,SAAS,CAAC6iC,SAAS,CAACxP,OAAO,CAAC;IACjD,OAAOwP,SAAS,CAACjX,OAAO,GAAGq7B,SAAS,CAAC7oB,UAAU,GAAG8oB,YAAY,CAACtlC,MAAM,GAAG,CAAC;EAC3E;EACAwlC,gBAAgBA,CAAC/nD,CAAC,EAAEE,CAAC,EAAE;IACrB,MAAM4J,EAAE,GAAG,IAAI;IACf,IAAI5M,CAAC,EAAE8qD,MAAM,EAAEC,EAAE;IACjB,IAAIjoD,CAAC,IAAI8J,EAAE,CAACwI,IAAI,IAAItS,CAAC,IAAI8J,EAAE,CAACsI,KAAK,IAAIlS,CAAC,IAAI4J,EAAE,CAACqI,GAAG,IAAIjS,CAAC,IAAI4J,EAAE,CAACuI,MAAM,EAAE;MAClE41C,EAAE,GAAGn+C,EAAE,CAACk7C,cAAc;MACtB,KAAK9nD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG+qD,EAAE,CAAC99C,MAAM,EAAE,EAAEjN,CAAC,EAAE;QAC9B8qD,MAAM,GAAGC,EAAE,CAAC/qD,CAAC,CAAC;QACd,IAAI8C,CAAC,IAAIgoD,MAAM,CAAC11C,IAAI,IAAItS,CAAC,IAAIgoD,MAAM,CAAC11C,IAAI,GAAG01C,MAAM,CAACxlC,KAAK,IAAItiB,CAAC,IAAI8nD,MAAM,CAAC71C,GAAG,IAAIjS,CAAC,IAAI8nD,MAAM,CAAC71C,GAAG,GAAG61C,MAAM,CAACzlC,MAAM,EAAE;UAC7G,OAAOzY,EAAE,CAACq7C,WAAW,CAACjoD,CAAC,CAAC;QAC1B;MACF;IACF;IACA,OAAO,IAAI;EACb;EACAgrD,WAAWA,CAACprD,CAAC,EAAE;IACb,MAAMgN,EAAE,GAAG,IAAI;IACf,MAAM+H,IAAI,GAAG/H,EAAE,CAAC8G,OAAO;IACvB,IAAI,CAACu3C,UAAU,CAACrrD,CAAC,CAACoM,IAAI,EAAE2I,IAAI,CAAC,EAAE;MAC7B;IACF;IACA,MAAMu2C,WAAW,GAAGt+C,EAAE,CAACi+C,gBAAgB,CAACjrD,CAAC,CAACkD,CAAC,EAAElD,CAAC,CAACoD,CAAC,CAAC;IACjD,IAAIpD,CAAC,CAACoM,IAAI,KAAK,WAAW,EAAE;MAC1B,MAAM6wC,QAAQ,GAAGjwC,EAAE,CAACm7C,YAAY;MAChC,MAAMoD,QAAQ,GAAGxD,UAAU,CAAC9K,QAAQ,EAAEqO,WAAW,CAAC;MAClD,IAAIrO,QAAQ,IAAI,CAACsO,QAAQ,EAAE;QACzBtmD,QAAQ,CAAC8P,IAAI,CAACy2C,OAAO,EAAE,CAACxrD,CAAC,EAAEi9C,QAAQ,EAAEjwC,EAAE,CAAC,EAAEA,EAAE,CAAC;MAC/C;MACAA,EAAE,CAACm7C,YAAY,GAAGmD,WAAW;MAC7B,IAAIA,WAAW,IAAI,CAACC,QAAQ,EAAE;QAC5BtmD,QAAQ,CAAC8P,IAAI,CAACumC,OAAO,EAAE,CAACt7C,CAAC,EAAEsrD,WAAW,EAAEt+C,EAAE,CAAC,EAAEA,EAAE,CAAC;MAClD;IACF,CAAC,MAAM,IAAIs+C,WAAW,EAAE;MACtBrmD,QAAQ,CAAC8P,IAAI,CAAC0X,OAAO,EAAE,CAACzsB,CAAC,EAAEsrD,WAAW,EAAEt+C,EAAE,CAAC,EAAEA,EAAE,CAAC;IAClD;EACF;AACF;AACA,SAASq+C,UAAUA,CAACj/C,IAAI,EAAE2I,IAAI,EAAE;EAC9B,IAAI3I,IAAI,KAAK,WAAW,KAAK2I,IAAI,CAACumC,OAAO,IAAIvmC,IAAI,CAACy2C,OAAO,CAAC,EAAE;IAC1D,OAAO,IAAI;EACb;EACA,IAAIz2C,IAAI,CAAC0X,OAAO,KAAKrgB,IAAI,KAAK,OAAO,IAAIA,IAAI,KAAK,SAAS,CAAC,EAAE;IAC5D,OAAO,IAAI;EACb;EACA,OAAO,KAAK;AACd;AACA,IAAIq/C,aAAa,GAAG;EAClBx0C,EAAE,EAAE,QAAQ;EACZy0C,QAAQ,EAAE1D,MAAM;EAChBl7C,KAAKA,CAACb,KAAK,EAAEk7C,KAAK,EAAErzC,OAAO,EAAE;IAC3B,MAAMgY,MAAM,GAAG7f,KAAK,CAAC6f,MAAM,GAAG,IAAIk8B,MAAM,CAAC;MAACpuC,GAAG,EAAE3N,KAAK,CAAC2N,GAAG;MAAE9F,OAAO;MAAE7H;IAAK,CAAC,CAAC;IAC1EwoB,OAAO,CAACnhB,SAAS,CAACrH,KAAK,EAAE6f,MAAM,EAAEhY,OAAO,CAAC;IACzC2gB,OAAO,CAAC0C,MAAM,CAAClrB,KAAK,EAAE6f,MAAM,CAAC;EAC/B,CAAC;EACD5c,IAAIA,CAACjD,KAAK,EAAE;IACVwoB,OAAO,CAAC4C,SAAS,CAACprB,KAAK,EAAEA,KAAK,CAAC6f,MAAM,CAAC;IACtC,OAAO7f,KAAK,CAAC6f,MAAM;EACrB,CAAC;EACDkY,YAAYA,CAAC/3B,KAAK,EAAEk7C,KAAK,EAAErzC,OAAO,EAAE;IAClC,MAAMgY,MAAM,GAAG7f,KAAK,CAAC6f,MAAM;IAC3B2I,OAAO,CAACnhB,SAAS,CAACrH,KAAK,EAAE6f,MAAM,EAAEhY,OAAO,CAAC;IACzCgY,MAAM,CAAChY,OAAO,GAAGA,OAAO;EAC1B,CAAC;EACDuxB,WAAWA,CAACp5B,KAAK,EAAE;IACjB,MAAM6f,MAAM,GAAG7f,KAAK,CAAC6f,MAAM;IAC3BA,MAAM,CAAC08B,WAAW,CAAC,CAAC;IACpB18B,MAAM,CAACy9B,cAAc,CAAC,CAAC;EACzB,CAAC;EACDoC,UAAUA,CAAC1/C,KAAK,EAAE6vB,IAAI,EAAE;IACtB,IAAI,CAACA,IAAI,CAACif,MAAM,EAAE;MAChB9uC,KAAK,CAAC6f,MAAM,CAACs/B,WAAW,CAACtvB,IAAI,CAACttB,KAAK,CAAC;IACtC;EACF,CAAC;EACD/N,QAAQ,EAAE;IACRgvB,OAAO,EAAE,IAAI;IACbyC,QAAQ,EAAE,KAAK;IACf6M,KAAK,EAAE,QAAQ;IACfnK,QAAQ,EAAE,IAAI;IACd5f,OAAO,EAAE,KAAK;IACd4W,MAAM,EAAE,IAAI;IACZa,OAAOA,CAACzsB,CAAC,EAAE0sB,UAAU,EAAEZ,MAAM,EAAE;MAC7B,MAAM/V,KAAK,GAAG2W,UAAU,CAACrW,YAAY;MACrC,MAAMu1C,EAAE,GAAG9/B,MAAM,CAAC7f,KAAK;MACvB,IAAI2/C,EAAE,CAAC/hC,gBAAgB,CAAC9T,KAAK,CAAC,EAAE;QAC9B61C,EAAE,CAAC34C,IAAI,CAAC8C,KAAK,CAAC;QACd2W,UAAU,CAACF,MAAM,GAAG,IAAI;MAC1B,CAAC,MAAM;QACLo/B,EAAE,CAAC94C,IAAI,CAACiD,KAAK,CAAC;QACd2W,UAAU,CAACF,MAAM,GAAG,KAAK;MAC3B;IACF,CAAC;IACD8uB,OAAO,EAAE,IAAI;IACbkQ,OAAO,EAAE,IAAI;IACb/tC,MAAM,EAAE;MACNtd,KAAK,EAAGyZ,GAAG,IAAKA,GAAG,CAAC3N,KAAK,CAAC6H,OAAO,CAAC3T,KAAK;MACvCynD,QAAQ,EAAE,EAAE;MACZ1wB,OAAO,EAAE,EAAE;MACXnL,cAAcA,CAAC9f,KAAK,EAAE;QACpB,MAAM2P,QAAQ,GAAG3P,KAAK,CAACuK,IAAI,CAACoF,QAAQ;QACpC,MAAM;UAAC6B,MAAM,EAAE;YAACoqC,aAAa;YAAE/H,UAAU;YAAE1V;UAAS;QAAC,CAAC,GAAGn+B,KAAK,CAAC6f,MAAM,CAAChY,OAAO;QAC7E,OAAO7H,KAAK,CAAC4J,sBAAsB,CAAC,CAAC,CAACmW,GAAG,CAAEpV,IAAI,IAAK;UAClD,MAAMqV,KAAK,GAAGrV,IAAI,CAACkB,UAAU,CAACsH,QAAQ,CAACyoC,aAAa,GAAG,CAAC,GAAG97C,SAAS,CAAC;UACrE,MAAMyf,WAAW,GAAG3nB,SAAS,CAACooB,KAAK,CAACT,WAAW,CAAC;UAChD,OAAO;YACLU,IAAI,EAAEtQ,QAAQ,CAAChF,IAAI,CAACb,KAAK,CAAC,CAAC8I,KAAK;YAChCsN,SAAS,EAAEF,KAAK,CAACG,eAAe;YAChCI,MAAM,EAAE,CAAC5V,IAAI,CAAC5D,OAAO;YACrB8pC,OAAO,EAAE7wB,KAAK,CAAC8wB,cAAc;YAC7BkN,QAAQ,EAAEh+B,KAAK,CAACkS,UAAU;YAC1BsN,cAAc,EAAExf,KAAK,CAACmS,gBAAgB;YACtC+d,QAAQ,EAAElwB,KAAK,CAAC+wB,eAAe;YAC/BzwB,SAAS,EAAE,CAACf,WAAW,CAAC9F,KAAK,GAAG8F,WAAW,CAAC/F,MAAM,IAAI,CAAC;YACvD4G,WAAW,EAAEJ,KAAK,CAACK,WAAW;YAC9BwzB,UAAU,EAAEA,UAAU,IAAI7zB,KAAK,CAAC6zB,UAAU;YAC1C73B,QAAQ,EAAEgE,KAAK,CAAChE,QAAQ;YACxBmiB,SAAS,EAAEA,SAAS,IAAIne,KAAK,CAACme,SAAS;YACvC/zB,YAAY,EAAEO,IAAI,CAACb;UACrB,CAAC;QACH,CAAC,EAAE,IAAI,CAAC;MACV;IACF,CAAC;IACDgS,KAAK,EAAE;MACL5nB,KAAK,EAAGyZ,GAAG,IAAKA,GAAG,CAAC3N,KAAK,CAAC6H,OAAO,CAAC3T,KAAK;MACvCsvB,OAAO,EAAE,KAAK;MACdyC,QAAQ,EAAE,QAAQ;MAClBhG,IAAI,EAAE;IACR;EACF,CAAC;EACDzlB,WAAW,EAAE;IACXiM,WAAW,EAAGC,IAAI,IAAK,CAACA,IAAI,CAACusB,UAAU,CAAC,IAAI,CAAC;IAC7CzhB,MAAM,EAAE;MACN/K,WAAW,EAAGC,IAAI,IAAK,CAAC,CAAC,gBAAgB,EAAE,QAAQ,EAAE,MAAM,CAAC,CAACiiC,QAAQ,CAACjiC,IAAI;IAC5E;EACF;AACF,CAAC;AAED,MAAMk5C,KAAK,SAAStvB,OAAO,CAAC;EAC1B9wB,WAAWA,CAAC0H,MAAM,EAAE;IAClB,KAAK,CAAC,CAAC;IACP,IAAI,CAAClH,KAAK,GAAGkH,MAAM,CAAClH,KAAK;IACzB,IAAI,CAAC6H,OAAO,GAAGX,MAAM,CAACW,OAAO;IAC7B,IAAI,CAAC8F,GAAG,GAAGzG,MAAM,CAACyG,GAAG;IACrB,IAAI,CAACkyC,QAAQ,GAAG//C,SAAS;IACzB,IAAI,CAACsJ,GAAG,GAAGtJ,SAAS;IACpB,IAAI,CAACwJ,MAAM,GAAGxJ,SAAS;IACvB,IAAI,CAACyJ,IAAI,GAAGzJ,SAAS;IACrB,IAAI,CAACuJ,KAAK,GAAGvJ,SAAS;IACtB,IAAI,CAAC2Z,KAAK,GAAG3Z,SAAS;IACtB,IAAI,CAAC0Z,MAAM,GAAG1Z,SAAS;IACvB,IAAI,CAACmmB,QAAQ,GAAGnmB,SAAS;IACzB,IAAI,CAAC6f,MAAM,GAAG7f,SAAS;IACvB,IAAI,CAAC6oB,QAAQ,GAAG7oB,SAAS;EAC3B;EACAwF,MAAMA,CAAC8Y,QAAQ,EAAEC,SAAS,EAAE;IAC1B,MAAMtd,EAAE,GAAG,IAAI;IACf,MAAM+H,IAAI,GAAG/H,EAAE,CAAC8G,OAAO;IACvB9G,EAAE,CAACwI,IAAI,GAAG,CAAC;IACXxI,EAAE,CAACqI,GAAG,GAAG,CAAC;IACV,IAAI,CAACN,IAAI,CAAC0a,OAAO,EAAE;MACjBziB,EAAE,CAAC0Y,KAAK,GAAG1Y,EAAE,CAACyY,MAAM,GAAGzY,EAAE,CAACsI,KAAK,GAAGtI,EAAE,CAACuI,MAAM,GAAG,CAAC;MAC/C;IACF;IACAvI,EAAE,CAAC0Y,KAAK,GAAG1Y,EAAE,CAACsI,KAAK,GAAG+U,QAAQ;IAC9Brd,EAAE,CAACyY,MAAM,GAAGzY,EAAE,CAACuI,MAAM,GAAG+U,SAAS;IACjC,MAAM+f,SAAS,GAAG9pC,OAAO,CAACwU,IAAI,CAACmX,IAAI,CAAC,GAAGnX,IAAI,CAACmX,IAAI,CAAC7e,MAAM,GAAG,CAAC;IAC3DL,EAAE,CAAC8+C,QAAQ,GAAGjoD,SAAS,CAACkR,IAAI,CAACmiB,OAAO,CAAC;IACrC,MAAM60B,QAAQ,GAAG1hB,SAAS,GAAGxkC,MAAM,CAACkP,IAAI,CAACgtB,IAAI,CAAC,CAACE,UAAU,GAAGj1B,EAAE,CAAC8+C,QAAQ,CAACrmC,MAAM;IAC9E,IAAIzY,EAAE,CAACgY,YAAY,CAAC,CAAC,EAAE;MACrBhY,EAAE,CAACyY,MAAM,GAAGsmC,QAAQ;IACtB,CAAC,MAAM;MACL/+C,EAAE,CAAC0Y,KAAK,GAAGqmC,QAAQ;IACrB;EACF;EACA/mC,YAAYA,CAAA,EAAG;IACb,MAAM+O,GAAG,GAAG,IAAI,CAACjgB,OAAO,CAACoe,QAAQ;IACjC,OAAO6B,GAAG,KAAK,KAAK,IAAIA,GAAG,KAAK,QAAQ;EAC1C;EACAi4B,SAASA,CAAC7kC,MAAM,EAAE;IAChB,MAAM;MAAC9R,GAAG;MAAEG,IAAI;MAAED,MAAM;MAAED,KAAK;MAAExB;IAAO,CAAC,GAAG,IAAI;IAChD,MAAMirB,KAAK,GAAGjrB,OAAO,CAACirB,KAAK;IAC3B,IAAI9W,QAAQ,GAAG,CAAC;IAChB,IAAIoC,QAAQ,EAAEiY,MAAM,EAAEC,MAAM;IAC5B,IAAI,IAAI,CAACvd,YAAY,CAAC,CAAC,EAAE;MACvBsd,MAAM,GAAGr8B,cAAc,CAAC84B,KAAK,EAAEvpB,IAAI,EAAEF,KAAK,CAAC;MAC3CitB,MAAM,GAAGltB,GAAG,GAAG8R,MAAM;MACrBkD,QAAQ,GAAG/U,KAAK,GAAGE,IAAI;IACzB,CAAC,MAAM;MACL,IAAI1B,OAAO,CAACoe,QAAQ,KAAK,MAAM,EAAE;QAC/BoQ,MAAM,GAAG9sB,IAAI,GAAG2R,MAAM;QACtBob,MAAM,GAAGt8B,cAAc,CAAC84B,KAAK,EAAExpB,MAAM,EAAEF,GAAG,CAAC;QAC3C4S,QAAQ,GAAGllB,EAAE,GAAG,CAAC,GAAG;MACtB,CAAC,MAAM;QACLu/B,MAAM,GAAGhtB,KAAK,GAAG6R,MAAM;QACvBob,MAAM,GAAGt8B,cAAc,CAAC84B,KAAK,EAAE1pB,GAAG,EAAEE,MAAM,CAAC;QAC3C0S,QAAQ,GAAGllB,EAAE,GAAG,GAAG;MACrB;MACAsnB,QAAQ,GAAG9U,MAAM,GAAGF,GAAG;IACzB;IACA,OAAO;MAACitB,MAAM;MAAEC,MAAM;MAAElY,QAAQ;MAAEpC;IAAQ,CAAC;EAC7C;EACAta,IAAIA,CAAA,EAAG;IACL,MAAMX,EAAE,GAAG,IAAI;IACf,MAAM4M,GAAG,GAAG5M,EAAE,CAAC4M,GAAG;IAClB,MAAM7E,IAAI,GAAG/H,EAAE,CAAC8G,OAAO;IACvB,IAAI,CAACiB,IAAI,CAAC0a,OAAO,EAAE;MACjB;IACF;IACA,MAAMw8B,QAAQ,GAAGpmD,MAAM,CAACkP,IAAI,CAACgtB,IAAI,CAAC;IAClC,MAAME,UAAU,GAAGgqB,QAAQ,CAAChqB,UAAU;IACtC,MAAM9a,MAAM,GAAG8a,UAAU,GAAG,CAAC,GAAGj1B,EAAE,CAAC8+C,QAAQ,CAACz2C,GAAG;IAC/C,MAAM;MAACitB,MAAM;MAAEC,MAAM;MAAElY,QAAQ;MAAEpC;IAAQ,CAAC,GAAGjb,EAAE,CAACg/C,SAAS,CAAC7kC,MAAM,CAAC;IACjExhB,UAAU,CAACiU,GAAG,EAAE7E,IAAI,CAACmX,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE+/B,QAAQ,EAAE;MACzC9rD,KAAK,EAAE4U,IAAI,CAAC5U,KAAK;MACjBkqB,QAAQ;MACRpC,QAAQ;MACRmiB,SAAS,EAAErkC,kBAAkB,CAACgP,IAAI,CAACgqB,KAAK,CAAC;MACzCwL,YAAY,EAAE,QAAQ;MACtBM,WAAW,EAAE,CAACvI,MAAM,EAAEC,MAAM;IAC9B,CAAC,CAAC;EACJ;AACF;AACA,SAAS2pB,WAAWA,CAACjgD,KAAK,EAAEy6B,SAAS,EAAE;EACrC,MAAM3e,KAAK,GAAG,IAAI8jC,KAAK,CAAC;IACtBjyC,GAAG,EAAE3N,KAAK,CAAC2N,GAAG;IACd9F,OAAO,EAAE4yB,SAAS;IAClBz6B;EACF,CAAC,CAAC;EACFwoB,OAAO,CAACnhB,SAAS,CAACrH,KAAK,EAAE8b,KAAK,EAAE2e,SAAS,CAAC;EAC1CjS,OAAO,CAAC0C,MAAM,CAAClrB,KAAK,EAAE8b,KAAK,CAAC;EAC5B9b,KAAK,CAACkgD,UAAU,GAAGpkC,KAAK;AAC1B;AACA,IAAIqkC,YAAY,GAAG;EACjBn1C,EAAE,EAAE,OAAO;EACXy0C,QAAQ,EAAEG,KAAK;EACf/+C,KAAKA,CAACb,KAAK,EAAEk7C,KAAK,EAAErzC,OAAO,EAAE;IAC3Bo4C,WAAW,CAACjgD,KAAK,EAAE6H,OAAO,CAAC;EAC7B,CAAC;EACD5E,IAAIA,CAACjD,KAAK,EAAE;IACV,MAAMkgD,UAAU,GAAGlgD,KAAK,CAACkgD,UAAU;IACnC13B,OAAO,CAAC4C,SAAS,CAACprB,KAAK,EAAEkgD,UAAU,CAAC;IACpC,OAAOlgD,KAAK,CAACkgD,UAAU;EACzB,CAAC;EACDnoB,YAAYA,CAAC/3B,KAAK,EAAEk7C,KAAK,EAAErzC,OAAO,EAAE;IAClC,MAAMiU,KAAK,GAAG9b,KAAK,CAACkgD,UAAU;IAC9B13B,OAAO,CAACnhB,SAAS,CAACrH,KAAK,EAAE8b,KAAK,EAAEjU,OAAO,CAAC;IACxCiU,KAAK,CAACjU,OAAO,GAAGA,OAAO;EACzB,CAAC;EACDrT,QAAQ,EAAE;IACRs+B,KAAK,EAAE,QAAQ;IACftP,OAAO,EAAE,KAAK;IACdsS,IAAI,EAAE;MACJ9V,KAAK,EAAE;IACT,CAAC;IACD2I,QAAQ,EAAE,IAAI;IACdsC,OAAO,EAAE,EAAE;IACXhF,QAAQ,EAAE,KAAK;IACfhG,IAAI,EAAE,EAAE;IACRN,MAAM,EAAE;EACV,CAAC;EACDiR,aAAa,EAAE;IACb18B,KAAK,EAAE;EACT,CAAC;EACDsG,WAAW,EAAE;IACXiM,WAAW,EAAE,IAAI;IACjBD,UAAU,EAAE;EACd;AACF,CAAC;AAED,MAAM45C,WAAW,GAAG;EAClBC,OAAOA,CAAC5+C,KAAK,EAAE;IACb,IAAI,CAACA,KAAK,CAACL,MAAM,EAAE;MACjB,OAAO,KAAK;IACd;IACA,IAAIjN,CAAC,EAAEwgC,GAAG;IACV,IAAI19B,CAAC,GAAG,CAAC;IACT,IAAIE,CAAC,GAAG,CAAC;IACT,IAAI6Z,KAAK,GAAG,CAAC;IACb,KAAK7c,CAAC,GAAG,CAAC,EAAEwgC,GAAG,GAAGlzB,KAAK,CAACL,MAAM,EAAEjN,CAAC,GAAGwgC,GAAG,EAAE,EAAExgC,CAAC,EAAE;MAC5C,MAAM2xB,EAAE,GAAGrkB,KAAK,CAACtN,CAAC,CAAC,CAAC6Y,OAAO;MAC3B,IAAI8Y,EAAE,IAAIA,EAAE,CAAC2K,QAAQ,CAAC,CAAC,EAAE;QACvB,MAAM3I,GAAG,GAAGhC,EAAE,CAACyK,eAAe,CAAC,CAAC;QAChCt5B,CAAC,IAAI6wB,GAAG,CAAC7wB,CAAC;QACVE,CAAC,IAAI2wB,GAAG,CAAC3wB,CAAC;QACV,EAAE6Z,KAAK;MACT;IACF;IACA,OAAO;MACL/Z,CAAC,EAAEA,CAAC,GAAG+Z,KAAK;MACZ7Z,CAAC,EAAEA,CAAC,GAAG6Z;IACT,CAAC;EACH,CAAC;EACD0W,OAAOA,CAACjmB,KAAK,EAAE6+C,aAAa,EAAE;IAC5B,IAAIrpD,CAAC,GAAGqpD,aAAa,CAACrpD,CAAC;IACvB,IAAIE,CAAC,GAAGmpD,aAAa,CAACnpD,CAAC;IACvB,IAAI+vB,WAAW,GAAG9b,MAAM,CAACE,iBAAiB;IAC1C,IAAInX,CAAC,EAAEwgC,GAAG,EAAE4rB,cAAc;IAC1B,KAAKpsD,CAAC,GAAG,CAAC,EAAEwgC,GAAG,GAAGlzB,KAAK,CAACL,MAAM,EAAEjN,CAAC,GAAGwgC,GAAG,EAAE,EAAExgC,CAAC,EAAE;MAC5C,MAAM2xB,EAAE,GAAGrkB,KAAK,CAACtN,CAAC,CAAC,CAAC6Y,OAAO;MAC3B,IAAI8Y,EAAE,IAAIA,EAAE,CAAC2K,QAAQ,CAAC,CAAC,EAAE;QACvB,MAAMlX,MAAM,GAAGuM,EAAE,CAACqB,cAAc,CAAC,CAAC;QAClC,MAAM5yB,CAAC,GAAG6J,qBAAqB,CAACkiD,aAAa,EAAE/mC,MAAM,CAAC;QACtD,IAAIhlB,CAAC,GAAG2yB,WAAW,EAAE;UACnBA,WAAW,GAAG3yB,CAAC;UACfgsD,cAAc,GAAGz6B,EAAE;QACrB;MACF;IACF;IACA,IAAIy6B,cAAc,EAAE;MAClB,MAAMC,EAAE,GAAGD,cAAc,CAAChwB,eAAe,CAAC,CAAC;MAC3Ct5B,CAAC,GAAGupD,EAAE,CAACvpD,CAAC;MACRE,CAAC,GAAGqpD,EAAE,CAACrpD,CAAC;IACV;IACA,OAAO;MACLF,CAAC;MACDE;IACF,CAAC;EACH;AACF,CAAC;AACD,SAASspD,YAAYA,CAAC7nC,IAAI,EAAE8nC,MAAM,EAAE;EAClC,IAAIA,MAAM,EAAE;IACV,IAAIpsD,OAAO,CAACosD,MAAM,CAAC,EAAE;MACnBj2C,KAAK,CAACuL,SAAS,CAACvT,IAAI,CAACk+C,KAAK,CAAC/nC,IAAI,EAAE8nC,MAAM,CAAC;IAC1C,CAAC,MAAM;MACL9nC,IAAI,CAACnW,IAAI,CAACi+C,MAAM,CAAC;IACnB;EACF;EACA,OAAO9nC,IAAI;AACb;AACA,SAASgoC,aAAaA,CAACC,GAAG,EAAE;EAC1B,IAAI,CAAC,OAAOA,GAAG,KAAK,QAAQ,IAAIA,GAAG,YAAYC,MAAM,KAAKD,GAAG,CAAC/mC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE;IAChF,OAAO+mC,GAAG,CAACzf,KAAK,CAAC,IAAI,CAAC;EACxB;EACA,OAAOyf,GAAG;AACZ;AACA,SAASE,iBAAiBA,CAAC/gD,KAAK,EAAE2B,IAAI,EAAE;EACtC,MAAM;IAACqL,OAAO;IAAE5C,YAAY;IAAEN;EAAK,CAAC,GAAGnI,IAAI;EAC3C,MAAMkK,UAAU,GAAG7L,KAAK,CAAC4P,cAAc,CAACxF,YAAY,CAAC,CAACyB,UAAU;EAChE,MAAM;IAAC+G,KAAK;IAAEtK;EAAK,CAAC,GAAGuD,UAAU,CAAC8G,gBAAgB,CAAC7I,KAAK,CAAC;EACzD,OAAO;IACL9J,KAAK;IACL4S,KAAK;IACL9G,MAAM,EAAED,UAAU,CAACgG,SAAS,CAAC/H,KAAK,CAAC;IACnCoD,GAAG,EAAElN,KAAK,CAACuK,IAAI,CAACoF,QAAQ,CAACvF,YAAY,CAAC,CAACG,IAAI,CAACT,KAAK,CAAC;IAClD+W,cAAc,EAAEvY,KAAK;IACrBwE,OAAO,EAAEjB,UAAU,CAAC+C,UAAU,CAAC,CAAC;IAChC3B,SAAS,EAAEnD,KAAK;IAChBM,YAAY;IACZ4C;EACF,CAAC;AACH;AACA,SAASg0C,cAAcA,CAACnlC,OAAO,EAAEhU,OAAO,EAAE;EACxC,MAAM8F,GAAG,GAAGkO,OAAO,CAAC1U,MAAM,CAACwG,GAAG;EAC9B,MAAM;IAACszC,IAAI;IAAEC,MAAM;IAAEplC;EAAK,CAAC,GAAGD,OAAO;EACrC,MAAM;IAAC8/B,QAAQ;IAAED;EAAS,CAAC,GAAG7zC,OAAO;EACrC,MAAMs5C,QAAQ,GAAGvnD,MAAM,CAACiO,OAAO,CAACs5C,QAAQ,CAAC;EACzC,MAAMtC,SAAS,GAAGjlD,MAAM,CAACiO,OAAO,CAACg3C,SAAS,CAAC;EAC3C,MAAMuC,UAAU,GAAGxnD,MAAM,CAACiO,OAAO,CAACu5C,UAAU,CAAC;EAC7C,MAAMC,cAAc,GAAGvlC,KAAK,CAAC1a,MAAM;EACnC,MAAMkgD,eAAe,GAAGJ,MAAM,CAAC9/C,MAAM;EACrC,MAAMmgD,iBAAiB,GAAGN,IAAI,CAAC7/C,MAAM;EACrC,MAAM6pB,OAAO,GAAGrzB,SAAS,CAACiQ,OAAO,CAACojB,OAAO,CAAC;EAC1C,IAAIzR,MAAM,GAAGyR,OAAO,CAACzR,MAAM;EAC3B,IAAIC,KAAK,GAAG,CAAC;EACb,IAAI+nC,kBAAkB,GAAGP,IAAI,CAACr+C,MAAM,CAAC,CAACoO,KAAK,EAAEywC,QAAQ,KAAKzwC,KAAK,GAAGywC,QAAQ,CAACC,MAAM,CAACtgD,MAAM,GAAGqgD,QAAQ,CAAC1rB,KAAK,CAAC30B,MAAM,GAAGqgD,QAAQ,CAACE,KAAK,CAACvgD,MAAM,EAAE,CAAC,CAAC;EAC5IogD,kBAAkB,IAAI3lC,OAAO,CAAC+lC,UAAU,CAACxgD,MAAM,GAAGya,OAAO,CAACgmC,SAAS,CAACzgD,MAAM;EAC1E,IAAIigD,cAAc,EAAE;IAClB7nC,MAAM,IAAI6nC,cAAc,GAAGxC,SAAS,CAAC7oB,UAAU,GAC9C,CAACqrB,cAAc,GAAG,CAAC,IAAIx5C,OAAO,CAACi6C,YAAY,GAC3Cj6C,OAAO,CAACk6C,iBAAiB;EAC5B;EACA,IAAIP,kBAAkB,EAAE;IACtB,MAAMQ,cAAc,GAAGn6C,OAAO,CAACo6C,aAAa,GAAGthD,IAAI,CAACoC,GAAG,CAAC24C,SAAS,EAAEyF,QAAQ,CAACnrB,UAAU,CAAC,GAAGmrB,QAAQ,CAACnrB,UAAU;IAC7Gxc,MAAM,IAAI+nC,iBAAiB,GAAGS,cAAc,GAC3C,CAACR,kBAAkB,GAAGD,iBAAiB,IAAIJ,QAAQ,CAACnrB,UAAU,GAC9D,CAACwrB,kBAAkB,GAAG,CAAC,IAAI35C,OAAO,CAACq6C,WAAW;EACjD;EACA,IAAIZ,eAAe,EAAE;IACnB9nC,MAAM,IAAI3R,OAAO,CAACs6C,eAAe,GAChCb,eAAe,GAAGF,UAAU,CAACprB,UAAU,GACvC,CAACsrB,eAAe,GAAG,CAAC,IAAIz5C,OAAO,CAACu6C,aAAa;EAChD;EACA,IAAIC,YAAY,GAAG,CAAC;EACpB,MAAMC,YAAY,GAAG,SAAAA,CAASthC,IAAI,EAAE;IAClCvH,KAAK,GAAG9Y,IAAI,CAACoC,GAAG,CAAC0W,KAAK,EAAE9L,GAAG,CAACqvC,WAAW,CAACh8B,IAAI,CAAC,CAACvH,KAAK,GAAG4oC,YAAY,CAAC;EACrE,CAAC;EACD10C,GAAG,CAACoxB,IAAI,CAAC,CAAC;EACVpxB,GAAG,CAACmoB,IAAI,GAAG+oB,SAAS,CAAC7iB,MAAM;EAC3BlkC,IAAI,CAAC+jB,OAAO,CAACC,KAAK,EAAEwmC,YAAY,CAAC;EACjC30C,GAAG,CAACmoB,IAAI,GAAGqrB,QAAQ,CAACnlB,MAAM;EAC1BlkC,IAAI,CAAC+jB,OAAO,CAAC+lC,UAAU,CAAC7tC,MAAM,CAAC8H,OAAO,CAACgmC,SAAS,CAAC,EAAES,YAAY,CAAC;EAChED,YAAY,GAAGx6C,OAAO,CAACo6C,aAAa,GAAItG,QAAQ,GAAG,CAAC,GAAI,CAAC;EACzD7jD,IAAI,CAACmpD,IAAI,EAAGQ,QAAQ,IAAK;IACvB3pD,IAAI,CAAC2pD,QAAQ,CAACC,MAAM,EAAEY,YAAY,CAAC;IACnCxqD,IAAI,CAAC2pD,QAAQ,CAAC1rB,KAAK,EAAEusB,YAAY,CAAC;IAClCxqD,IAAI,CAAC2pD,QAAQ,CAACE,KAAK,EAAEW,YAAY,CAAC;EACpC,CAAC,CAAC;EACFD,YAAY,GAAG,CAAC;EAChB10C,GAAG,CAACmoB,IAAI,GAAGsrB,UAAU,CAACplB,MAAM;EAC5BlkC,IAAI,CAAC+jB,OAAO,CAACqlC,MAAM,EAAEoB,YAAY,CAAC;EAClC30C,GAAG,CAACsxB,OAAO,CAAC,CAAC;EACbxlB,KAAK,IAAIwR,OAAO,CAACxR,KAAK;EACtB,OAAO;IAACA,KAAK;IAAED;EAAM,CAAC;AACxB;AACA,SAAS+oC,eAAeA,CAACviD,KAAK,EAAEuI,IAAI,EAAE;EACpC,MAAM;IAACpR,CAAC;IAAEqiB;EAAM,CAAC,GAAGjR,IAAI;EACxB,IAAIpR,CAAC,GAAGqiB,MAAM,GAAG,CAAC,EAAE;IAClB,OAAO,KAAK;EACd,CAAC,MAAM,IAAIriB,CAAC,GAAI6I,KAAK,CAACwZ,MAAM,GAAGA,MAAM,GAAG,CAAE,EAAE;IAC1C,OAAO,QAAQ;EACjB;EACA,OAAO,QAAQ;AACjB;AACA,SAASgpC,mBAAmBA,CAACC,MAAM,EAAEziD,KAAK,EAAE6H,OAAO,EAAEU,IAAI,EAAE;EACzD,MAAM;IAACtR,CAAC;IAAEwiB;EAAK,CAAC,GAAGlR,IAAI;EACvB,MAAMm6C,KAAK,GAAG76C,OAAO,CAAC86C,SAAS,GAAG96C,OAAO,CAAC+6C,YAAY;EACtD,IAAIH,MAAM,KAAK,MAAM,IAAIxrD,CAAC,GAAGwiB,KAAK,GAAGipC,KAAK,GAAG1iD,KAAK,CAACyZ,KAAK,EAAE;IACxD,OAAO,IAAI;EACb;EACA,IAAIgpC,MAAM,KAAK,OAAO,IAAIxrD,CAAC,GAAGwiB,KAAK,GAAGipC,KAAK,GAAG,CAAC,EAAE;IAC/C,OAAO,IAAI;EACb;AACF;AACA,SAASG,eAAeA,CAAC7iD,KAAK,EAAE6H,OAAO,EAAEU,IAAI,EAAEu6C,MAAM,EAAE;EACrD,MAAM;IAAC7rD,CAAC;IAAEwiB;EAAK,CAAC,GAAGlR,IAAI;EACvB,MAAM;IAACkR,KAAK,EAAEspC,UAAU;IAAE7vC,SAAS,EAAE;MAAC3J,IAAI;MAAEF;IAAK;EAAC,CAAC,GAAGrJ,KAAK;EAC3D,IAAIyiD,MAAM,GAAG,QAAQ;EACrB,IAAIK,MAAM,KAAK,QAAQ,EAAE;IACvBL,MAAM,GAAGxrD,CAAC,IAAI,CAACsS,IAAI,GAAGF,KAAK,IAAI,CAAC,GAAG,MAAM,GAAG,OAAO;EACrD,CAAC,MAAM,IAAIpS,CAAC,IAAIwiB,KAAK,GAAG,CAAC,EAAE;IACzBgpC,MAAM,GAAG,MAAM;EACjB,CAAC,MAAM,IAAIxrD,CAAC,IAAI8rD,UAAU,GAAGtpC,KAAK,GAAG,CAAC,EAAE;IACtCgpC,MAAM,GAAG,OAAO;EAClB;EACA,IAAID,mBAAmB,CAACC,MAAM,EAAEziD,KAAK,EAAE6H,OAAO,EAAEU,IAAI,CAAC,EAAE;IACrDk6C,MAAM,GAAG,QAAQ;EACnB;EACA,OAAOA,MAAM;AACf;AACA,SAASO,kBAAkBA,CAAChjD,KAAK,EAAE6H,OAAO,EAAEU,IAAI,EAAE;EAChD,MAAMu6C,MAAM,GAAGj7C,OAAO,CAACi7C,MAAM,IAAIP,eAAe,CAACviD,KAAK,EAAEuI,IAAI,CAAC;EAC7D,OAAO;IACLk6C,MAAM,EAAE56C,OAAO,CAAC46C,MAAM,IAAII,eAAe,CAAC7iD,KAAK,EAAE6H,OAAO,EAAEU,IAAI,EAAEu6C,MAAM,CAAC;IACvEA;EACF,CAAC;AACH;AACA,SAASG,MAAMA,CAAC16C,IAAI,EAAEk6C,MAAM,EAAE;EAC5B,IAAI;IAACxrD,CAAC;IAAEwiB;EAAK,CAAC,GAAGlR,IAAI;EACrB,IAAIk6C,MAAM,KAAK,OAAO,EAAE;IACtBxrD,CAAC,IAAIwiB,KAAK;EACZ,CAAC,MAAM,IAAIgpC,MAAM,KAAK,QAAQ,EAAE;IAC9BxrD,CAAC,IAAKwiB,KAAK,GAAG,CAAE;EAClB;EACA,OAAOxiB,CAAC;AACV;AACA,SAASisD,MAAMA,CAAC36C,IAAI,EAAEu6C,MAAM,EAAEK,cAAc,EAAE;EAC5C,IAAI;IAAChsD,CAAC;IAAEqiB;EAAM,CAAC,GAAGjR,IAAI;EACtB,IAAIu6C,MAAM,KAAK,KAAK,EAAE;IACpB3rD,CAAC,IAAIgsD,cAAc;EACrB,CAAC,MAAM,IAAIL,MAAM,KAAK,QAAQ,EAAE;IAC9B3rD,CAAC,IAAIqiB,MAAM,GAAG2pC,cAAc;EAC9B,CAAC,MAAM;IACLhsD,CAAC,IAAKqiB,MAAM,GAAG,CAAE;EACnB;EACA,OAAOriB,CAAC;AACV;AACA,SAASisD,kBAAkBA,CAACv7C,OAAO,EAAEU,IAAI,EAAE86C,SAAS,EAAErjD,KAAK,EAAE;EAC3D,MAAM;IAAC2iD,SAAS;IAAEC,YAAY;IAAEU;EAAY,CAAC,GAAGz7C,OAAO;EACvD,MAAM;IAAC46C,MAAM;IAAEK;EAAM,CAAC,GAAGO,SAAS;EAClC,MAAMF,cAAc,GAAGR,SAAS,GAAGC,YAAY;EAC/C,MAAMW,gBAAgB,GAAGD,YAAY,GAAGV,YAAY;EACpD,IAAI3rD,CAAC,GAAGgsD,MAAM,CAAC16C,IAAI,EAAEk6C,MAAM,CAAC;EAC5B,MAAMtrD,CAAC,GAAG+rD,MAAM,CAAC36C,IAAI,EAAEu6C,MAAM,EAAEK,cAAc,CAAC;EAC9C,IAAIL,MAAM,KAAK,QAAQ,EAAE;IACvB,IAAIL,MAAM,KAAK,MAAM,EAAE;MACrBxrD,CAAC,IAAIksD,cAAc;IACrB,CAAC,MAAM,IAAIV,MAAM,KAAK,OAAO,EAAE;MAC7BxrD,CAAC,IAAIksD,cAAc;IACrB;EACF,CAAC,MAAM,IAAIV,MAAM,KAAK,MAAM,EAAE;IAC5BxrD,CAAC,IAAIssD,gBAAgB;EACvB,CAAC,MAAM,IAAId,MAAM,KAAK,OAAO,EAAE;IAC7BxrD,CAAC,IAAIssD,gBAAgB;EACvB;EACA,OAAO;IACLtsD,CAAC,EAAEC,WAAW,CAACD,CAAC,EAAE,CAAC,EAAE+I,KAAK,CAACyZ,KAAK,GAAGlR,IAAI,CAACkR,KAAK,CAAC;IAC9CtiB,CAAC,EAAED,WAAW,CAACC,CAAC,EAAE,CAAC,EAAE6I,KAAK,CAACwZ,MAAM,GAAGjR,IAAI,CAACiR,MAAM;EACjD,CAAC;AACH;AACA,SAASgqC,WAAWA,CAAC3nC,OAAO,EAAEiX,KAAK,EAAEjrB,OAAO,EAAE;EAC5C,MAAMojB,OAAO,GAAGrzB,SAAS,CAACiQ,OAAO,CAACojB,OAAO,CAAC;EAC1C,OAAO6H,KAAK,KAAK,QAAQ,GACrBjX,OAAO,CAAC5kB,CAAC,GAAG4kB,OAAO,CAACpC,KAAK,GAAG,CAAC,GAC7BqZ,KAAK,KAAK,OAAO,GACfjX,OAAO,CAAC5kB,CAAC,GAAG4kB,OAAO,CAACpC,KAAK,GAAGwR,OAAO,CAAC5hB,KAAK,GACzCwS,OAAO,CAAC5kB,CAAC,GAAGg0B,OAAO,CAAC1hB,IAAI;AAChC;AACA,SAASk6C,uBAAuBA,CAACzqD,QAAQ,EAAE;EACzC,OAAOynD,YAAY,CAAC,EAAE,EAAEG,aAAa,CAAC5nD,QAAQ,CAAC,CAAC;AAClD;AACA,SAAS0qD,oBAAoBA,CAAC92C,MAAM,EAAEiP,OAAO,EAAE8nC,YAAY,EAAE;EAC3D,OAAOx9C,MAAM,CAACqC,MAAM,CAACrC,MAAM,CAAC0G,MAAM,CAACD,MAAM,CAAC,EAAE;IAC1CiP,OAAO;IACP8nC,YAAY;IACZxjD,IAAI,EAAE;EACR,CAAC,CAAC;AACJ;AACA,SAASyjD,iBAAiBA,CAACxjD,SAAS,EAAEkT,OAAO,EAAE;EAC7C,MAAM0R,QAAQ,GAAG1R,OAAO,IAAIA,OAAO,CAACxG,OAAO,IAAIwG,OAAO,CAACxG,OAAO,CAAC+O,OAAO,IAAIvI,OAAO,CAACxG,OAAO,CAAC+O,OAAO,CAACzb,SAAS;EAC3G,OAAO4kB,QAAQ,GAAG5kB,SAAS,CAAC4kB,QAAQ,CAACA,QAAQ,CAAC,GAAG5kB,SAAS;AAC5D;AACA,MAAMyjD,OAAO,SAASvzB,OAAO,CAAC;EAC5B9wB,WAAWA,CAAC0H,MAAM,EAAE;IAClB,KAAK,CAAC,CAAC;IACP,IAAI,CAAC48C,OAAO,GAAG,CAAC;IAChB,IAAI,CAACliD,OAAO,GAAG,EAAE;IACjB,IAAI,CAACuF,MAAM,GAAGD,MAAM,CAACC,MAAM;IAC3B,IAAI,CAAC48C,cAAc,GAAGjkD,SAAS;IAC/B,IAAI,CAACkkD,KAAK,GAAGlkD,SAAS;IACtB,IAAI,CAACmkD,iBAAiB,GAAGnkD,SAAS;IAClC,IAAI,CAACokD,aAAa,GAAG,EAAE;IACvB,IAAI,CAACh8C,WAAW,GAAGpI,SAAS;IAC5B,IAAI,CAACwO,QAAQ,GAAGxO,SAAS;IACzB,IAAI,CAAC+H,OAAO,GAAGX,MAAM,CAACW,OAAO;IAC7B,IAAI,CAACs8C,UAAU,GAAGrkD,SAAS;IAC3B,IAAI,CAACgc,KAAK,GAAGhc,SAAS;IACtB,IAAI,CAAC8hD,UAAU,GAAG9hD,SAAS;IAC3B,IAAI,CAACmhD,IAAI,GAAGnhD,SAAS;IACrB,IAAI,CAAC+hD,SAAS,GAAG/hD,SAAS;IAC1B,IAAI,CAACohD,MAAM,GAAGphD,SAAS;IACvB,IAAI,CAAC2iD,MAAM,GAAG3iD,SAAS;IACvB,IAAI,CAACgjD,MAAM,GAAGhjD,SAAS;IACvB,IAAI,CAAC7I,CAAC,GAAG6I,SAAS;IAClB,IAAI,CAAC3I,CAAC,GAAG2I,SAAS;IAClB,IAAI,CAAC0Z,MAAM,GAAG1Z,SAAS;IACvB,IAAI,CAAC2Z,KAAK,GAAG3Z,SAAS;IACtB,IAAI,CAACskD,MAAM,GAAGtkD,SAAS;IACvB,IAAI,CAACukD,MAAM,GAAGvkD,SAAS;IACvB,IAAI,CAACwkD,WAAW,GAAGxkD,SAAS;IAC5B,IAAI,CAACykD,gBAAgB,GAAGzkD,SAAS;IACjC,IAAI,CAAC0kD,eAAe,GAAG1kD,SAAS;EAClC;EACAyO,UAAUA,CAAC1G,OAAO,EAAE;IAClB,IAAI,CAACA,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACo8C,iBAAiB,GAAGnkD,SAAS;IAClC,IAAI,CAACwO,QAAQ,GAAGxO,SAAS;EAC3B;EACAqU,kBAAkBA,CAAA,EAAG;IACnB,MAAMpT,EAAE,GAAG,IAAI;IACf,MAAMwM,MAAM,GAAGxM,EAAE,CAACkjD,iBAAiB;IACnC,IAAI12C,MAAM,EAAE;MACV,OAAOA,MAAM;IACf;IACA,MAAMvN,KAAK,GAAGe,EAAE,CAACoG,MAAM;IACvB,MAAMU,OAAO,GAAG9G,EAAE,CAAC8G,OAAO,CAACi1B,UAAU,CAAC/7B,EAAE,CAAC8P,UAAU,CAAC,CAAC,CAAC;IACtD,MAAM/H,IAAI,GAAGjB,OAAO,CAAC0rB,OAAO,IAAIvzB,KAAK,CAAC6H,OAAO,CAACxB,SAAS,IAAIwB,OAAO,CAACf,UAAU;IAC7E,MAAMA,UAAU,GAAG,IAAIG,UAAU,CAAClG,EAAE,CAACoG,MAAM,EAAE2B,IAAI,CAAC;IAClD,IAAIA,IAAI,CAACwL,UAAU,EAAE;MACnBvT,EAAE,CAACkjD,iBAAiB,GAAG99C,MAAM,CAAC+N,MAAM,CAACpN,UAAU,CAAC;IAClD;IACA,OAAOA,UAAU;EACnB;EACA+J,UAAUA,CAAA,EAAG;IACX,MAAM9P,EAAE,GAAG,IAAI;IACf,OAAOA,EAAE,CAACuN,QAAQ,KAClBvN,EAAE,CAACuN,QAAQ,GAAGo1C,oBAAoB,CAAC3iD,EAAE,CAACoG,MAAM,CAAC0J,UAAU,CAAC,CAAC,EAAE9P,EAAE,EAAEA,EAAE,CAACmjD,aAAa,CAAC,CAAC;EACnF;EACAO,QAAQA,CAACnxC,OAAO,EAAEzL,OAAO,EAAE;IACzB,MAAM9G,EAAE,GAAG,IAAI;IACf,MAAM;MAACX;IAAS,CAAC,GAAGyH,OAAO;IAC3B,MAAM68C,WAAW,GAAGtkD,SAAS,CAACskD,WAAW,CAAC/D,KAAK,CAAC5/C,EAAE,EAAE,CAACuS,OAAO,CAAC,CAAC;IAC9D,MAAMwI,KAAK,GAAG1b,SAAS,CAAC0b,KAAK,CAAC6kC,KAAK,CAAC5/C,EAAE,EAAE,CAACuS,OAAO,CAAC,CAAC;IAClD,MAAMqxC,UAAU,GAAGvkD,SAAS,CAACukD,UAAU,CAAChE,KAAK,CAAC5/C,EAAE,EAAE,CAACuS,OAAO,CAAC,CAAC;IAC5D,IAAIyiB,KAAK,GAAG,EAAE;IACdA,KAAK,GAAG0qB,YAAY,CAAC1qB,KAAK,EAAE6qB,aAAa,CAAC8D,WAAW,CAAC,CAAC;IACvD3uB,KAAK,GAAG0qB,YAAY,CAAC1qB,KAAK,EAAE6qB,aAAa,CAAC9kC,KAAK,CAAC,CAAC;IACjDia,KAAK,GAAG0qB,YAAY,CAAC1qB,KAAK,EAAE6qB,aAAa,CAAC+D,UAAU,CAAC,CAAC;IACtD,OAAO5uB,KAAK;EACd;EACA6uB,aAAaA,CAACjB,YAAY,EAAE97C,OAAO,EAAE;IACnC,OAAO47C,uBAAuB,CAAC57C,OAAO,CAACzH,SAAS,CAACwhD,UAAU,CAACjB,KAAK,CAAC,IAAI,EAAE,CAACgD,YAAY,CAAC,CAAC,CAAC;EAC1F;EACAkB,OAAOA,CAAClB,YAAY,EAAE97C,OAAO,EAAE;IAC7B,MAAM9G,EAAE,GAAG,IAAI;IACf,MAAM;MAACX;IAAS,CAAC,GAAGyH,OAAO;IAC3B,MAAMi9C,SAAS,GAAG,EAAE;IACpBhtD,IAAI,CAAC6rD,YAAY,EAAGrwC,OAAO,IAAK;MAC9B,MAAMmuC,QAAQ,GAAG;QACfC,MAAM,EAAE,EAAE;QACV3rB,KAAK,EAAE,EAAE;QACT4rB,KAAK,EAAE;MACT,CAAC;MACD,MAAMoD,MAAM,GAAGnB,iBAAiB,CAACxjD,SAAS,EAAEkT,OAAO,CAAC;MACpDmtC,YAAY,CAACgB,QAAQ,CAACC,MAAM,EAAEd,aAAa,CAACmE,MAAM,CAACC,WAAW,CAAChkD,IAAI,CAACD,EAAE,EAAEuS,OAAO,CAAC,CAAC,CAAC;MAClFmtC,YAAY,CAACgB,QAAQ,CAAC1rB,KAAK,EAAEgvB,MAAM,CAACnyC,KAAK,CAAC5R,IAAI,CAACD,EAAE,EAAEuS,OAAO,CAAC,CAAC;MAC5DmtC,YAAY,CAACgB,QAAQ,CAACE,KAAK,EAAEf,aAAa,CAACmE,MAAM,CAACE,UAAU,CAACjkD,IAAI,CAACD,EAAE,EAAEuS,OAAO,CAAC,CAAC,CAAC;MAChFwxC,SAAS,CAACriD,IAAI,CAACg/C,QAAQ,CAAC;IAC1B,CAAC,CAAC;IACF,OAAOqD,SAAS;EAClB;EACAI,YAAYA,CAACvB,YAAY,EAAE97C,OAAO,EAAE;IAClC,OAAO47C,uBAAuB,CAAC57C,OAAO,CAACzH,SAAS,CAACyhD,SAAS,CAAClB,KAAK,CAAC,IAAI,EAAE,CAACgD,YAAY,CAAC,CAAC,CAAC;EACzF;EACAwB,SAASA,CAACxB,YAAY,EAAE97C,OAAO,EAAE;IAC/B,MAAM9G,EAAE,GAAG,IAAI;IACf,MAAM;MAACX;IAAS,CAAC,GAAGyH,OAAO;IAC3B,MAAMu9C,YAAY,GAAGhlD,SAAS,CAACglD,YAAY,CAACzE,KAAK,CAAC5/C,EAAE,EAAE,CAAC4iD,YAAY,CAAC,CAAC;IACrE,MAAMzC,MAAM,GAAG9gD,SAAS,CAAC8gD,MAAM,CAACP,KAAK,CAAC5/C,EAAE,EAAE,CAAC4iD,YAAY,CAAC,CAAC;IACzD,MAAM0B,WAAW,GAAGjlD,SAAS,CAACilD,WAAW,CAAC1E,KAAK,CAAC5/C,EAAE,EAAE,CAAC4iD,YAAY,CAAC,CAAC;IACnE,IAAI5tB,KAAK,GAAG,EAAE;IACdA,KAAK,GAAG0qB,YAAY,CAAC1qB,KAAK,EAAE6qB,aAAa,CAACwE,YAAY,CAAC,CAAC;IACxDrvB,KAAK,GAAG0qB,YAAY,CAAC1qB,KAAK,EAAE6qB,aAAa,CAACM,MAAM,CAAC,CAAC;IAClDnrB,KAAK,GAAG0qB,YAAY,CAAC1qB,KAAK,EAAE6qB,aAAa,CAACyE,WAAW,CAAC,CAAC;IACvD,OAAOtvB,KAAK;EACd;EACAuvB,YAAYA,CAACz9C,OAAO,EAAE;IACpB,MAAM9G,EAAE,GAAG,IAAI;IACf,MAAMsE,MAAM,GAAGtE,EAAE,CAACa,OAAO;IACzB,MAAM2I,IAAI,GAAGxJ,EAAE,CAACoG,MAAM,CAACoD,IAAI;IAC3B,MAAM+5C,WAAW,GAAG,EAAE;IACtB,MAAMC,gBAAgB,GAAG,EAAE;IAC3B,MAAMC,eAAe,GAAG,EAAE;IAC1B,IAAIb,YAAY,GAAG,EAAE;IACrB,IAAIxvD,CAAC,EAAEwgC,GAAG;IACV,KAAKxgC,CAAC,GAAG,CAAC,EAAEwgC,GAAG,GAAGtvB,MAAM,CAACjE,MAAM,EAAEjN,CAAC,GAAGwgC,GAAG,EAAE,EAAExgC,CAAC,EAAE;MAC7CwvD,YAAY,CAAClhD,IAAI,CAACs+C,iBAAiB,CAAChgD,EAAE,CAACoG,MAAM,EAAE9B,MAAM,CAAClR,CAAC,CAAC,CAAC,CAAC;IAC5D;IACA,IAAI0T,OAAO,CAAC4E,MAAM,EAAE;MAClBk3C,YAAY,GAAGA,YAAY,CAACl3C,MAAM,CAAC,CAACO,OAAO,EAAElD,KAAK,EAAE+d,KAAK,KAAKhgB,OAAO,CAAC4E,MAAM,CAACO,OAAO,EAAElD,KAAK,EAAE+d,KAAK,EAAEtd,IAAI,CAAC,CAAC;IAC5G;IACA,IAAI1C,OAAO,CAAC09C,QAAQ,EAAE;MACpB5B,YAAY,GAAGA,YAAY,CAACrtC,IAAI,CAAC,CAACziB,CAAC,EAAEQ,CAAC,KAAKwT,OAAO,CAAC09C,QAAQ,CAAC1xD,CAAC,EAAEQ,CAAC,EAAEkW,IAAI,CAAC,CAAC;IAC1E;IACAzS,IAAI,CAAC6rD,YAAY,EAAGrwC,OAAO,IAAK;MAC9B,MAAMyxC,MAAM,GAAGnB,iBAAiB,CAAC/7C,OAAO,CAACzH,SAAS,EAAEkT,OAAO,CAAC;MAC5DgxC,WAAW,CAAC7hD,IAAI,CAACsiD,MAAM,CAACS,UAAU,CAACxkD,IAAI,CAACD,EAAE,EAAEuS,OAAO,CAAC,CAAC;MACrDixC,gBAAgB,CAAC9hD,IAAI,CAACsiD,MAAM,CAACU,eAAe,CAACzkD,IAAI,CAACD,EAAE,EAAEuS,OAAO,CAAC,CAAC;MAC/DkxC,eAAe,CAAC/hD,IAAI,CAACsiD,MAAM,CAACW,cAAc,CAAC1kD,IAAI,CAACD,EAAE,EAAEuS,OAAO,CAAC,CAAC;IAC/D,CAAC,CAAC;IACFvS,EAAE,CAACujD,WAAW,GAAGA,WAAW;IAC5BvjD,EAAE,CAACwjD,gBAAgB,GAAGA,gBAAgB;IACtCxjD,EAAE,CAACyjD,eAAe,GAAGA,eAAe;IACpCzjD,EAAE,CAACojD,UAAU,GAAGR,YAAY;IAC5B,OAAOA,YAAY;EACrB;EACAr+C,MAAMA,CAACmd,OAAO,EAAEqsB,MAAM,EAAE;IACtB,MAAM/tC,EAAE,GAAG,IAAI;IACf,MAAM8G,OAAO,GAAG9G,EAAE,CAAC8G,OAAO,CAACi1B,UAAU,CAAC/7B,EAAE,CAAC8P,UAAU,CAAC,CAAC,CAAC;IACtD,MAAMxL,MAAM,GAAGtE,EAAE,CAACa,OAAO;IACzB,IAAI+E,UAAU;IACd,IAAIg9C,YAAY,GAAG,EAAE;IACrB,IAAI,CAACt+C,MAAM,CAACjE,MAAM,EAAE;MAClB,IAAIL,EAAE,CAAC+iD,OAAO,KAAK,CAAC,EAAE;QACpBn9C,UAAU,GAAG;UACXm9C,OAAO,EAAE;QACX,CAAC;MACH;IACF,CAAC,MAAM;MACL,MAAM79B,QAAQ,GAAGm6B,WAAW,CAACv4C,OAAO,CAACoe,QAAQ,CAAC,CAACjlB,IAAI,CAACD,EAAE,EAAEsE,MAAM,EAAEtE,EAAE,CAACgjD,cAAc,CAAC;MAClFJ,YAAY,GAAG5iD,EAAE,CAACukD,YAAY,CAACz9C,OAAO,CAAC;MACvC9G,EAAE,CAAC+a,KAAK,GAAG/a,EAAE,CAAC0jD,QAAQ,CAACd,YAAY,EAAE97C,OAAO,CAAC;MAC7C9G,EAAE,CAAC6gD,UAAU,GAAG7gD,EAAE,CAAC6jD,aAAa,CAACjB,YAAY,EAAE97C,OAAO,CAAC;MACvD9G,EAAE,CAACkgD,IAAI,GAAGlgD,EAAE,CAAC8jD,OAAO,CAAClB,YAAY,EAAE97C,OAAO,CAAC;MAC3C9G,EAAE,CAAC8gD,SAAS,GAAG9gD,EAAE,CAACmkD,YAAY,CAACvB,YAAY,EAAE97C,OAAO,CAAC;MACrD9G,EAAE,CAACmgD,MAAM,GAAGngD,EAAE,CAACokD,SAAS,CAACxB,YAAY,EAAE97C,OAAO,CAAC;MAC/C,MAAMU,IAAI,GAAGxH,EAAE,CAACijD,KAAK,GAAGhD,cAAc,CAACjgD,EAAE,EAAE8G,OAAO,CAAC;MACnD,MAAM89C,eAAe,GAAGx/C,MAAM,CAACqC,MAAM,CAAC,CAAC,CAAC,EAAEyd,QAAQ,EAAE1d,IAAI,CAAC;MACzD,MAAM86C,SAAS,GAAGL,kBAAkB,CAACjiD,EAAE,CAACoG,MAAM,EAAEU,OAAO,EAAE89C,eAAe,CAAC;MACzE,MAAMC,eAAe,GAAGxC,kBAAkB,CAACv7C,OAAO,EAAE89C,eAAe,EAAEtC,SAAS,EAAEtiD,EAAE,CAACoG,MAAM,CAAC;MAC1FpG,EAAE,CAAC0hD,MAAM,GAAGY,SAAS,CAACZ,MAAM;MAC5B1hD,EAAE,CAAC+hD,MAAM,GAAGO,SAAS,CAACP,MAAM;MAC5Bn8C,UAAU,GAAG;QACXm9C,OAAO,EAAE,CAAC;QACV7sD,CAAC,EAAE2uD,eAAe,CAAC3uD,CAAC;QACpBE,CAAC,EAAEyuD,eAAe,CAACzuD,CAAC;QACpBsiB,KAAK,EAAElR,IAAI,CAACkR,KAAK;QACjBD,MAAM,EAAEjR,IAAI,CAACiR,MAAM;QACnB4qC,MAAM,EAAEn+B,QAAQ,CAAChvB,CAAC;QAClBotD,MAAM,EAAEp+B,QAAQ,CAAC9uB;MACnB,CAAC;IACH;IACA4J,EAAE,CAACmjD,aAAa,GAAGP,YAAY;IAC/B5iD,EAAE,CAACuN,QAAQ,GAAGxO,SAAS;IACvB,IAAI6G,UAAU,EAAE;MACd5F,EAAE,CAACoT,kBAAkB,CAAC,CAAC,CAAC7O,MAAM,CAACvE,EAAE,EAAE4F,UAAU,CAAC;IAChD;IACA,IAAI8b,OAAO,IAAI5a,OAAO,CAACg+C,QAAQ,EAAE;MAC/Bh+C,OAAO,CAACg+C,QAAQ,CAAC7kD,IAAI,CAACD,EAAE,EAAE;QAACf,KAAK,EAAEe,EAAE,CAACoG,MAAM;QAAE0U,OAAO,EAAE9a,EAAE;QAAE+tC;MAAM,CAAC,CAAC;IACpE;EACF;EACAgX,SAASA,CAACC,YAAY,EAAEp4C,GAAG,EAAEpF,IAAI,EAAEV,OAAO,EAAE;IAC1C,MAAMm+C,aAAa,GAAG,IAAI,CAACC,gBAAgB,CAACF,YAAY,EAAEx9C,IAAI,EAAEV,OAAO,CAAC;IACxE8F,GAAG,CAACgyB,MAAM,CAACqmB,aAAa,CAACxoB,EAAE,EAAEwoB,aAAa,CAACvoB,EAAE,CAAC;IAC9C9vB,GAAG,CAACgyB,MAAM,CAACqmB,aAAa,CAACtoB,EAAE,EAAEsoB,aAAa,CAACroB,EAAE,CAAC;IAC9ChwB,GAAG,CAACgyB,MAAM,CAACqmB,aAAa,CAACE,EAAE,EAAEF,aAAa,CAACG,EAAE,CAAC;EAChD;EACAF,gBAAgBA,CAACF,YAAY,EAAEx9C,IAAI,EAAEV,OAAO,EAAE;IAC5C,MAAM;MAAC46C,MAAM;MAAEK;IAAM,CAAC,GAAG,IAAI;IAC7B,MAAM;MAACQ,YAAY;MAAEX;IAAS,CAAC,GAAG96C,OAAO;IACzC,MAAM;MAAC5Q,CAAC,EAAEmvD,GAAG;MAAEjvD,CAAC,EAAEkvD;IAAG,CAAC,GAAGN,YAAY;IACrC,MAAM;MAACtsC,KAAK;MAAED;IAAM,CAAC,GAAGjR,IAAI;IAC5B,IAAIi1B,EAAE,EAAEE,EAAE,EAAEwoB,EAAE,EAAEzoB,EAAE,EAAEE,EAAE,EAAEwoB,EAAE;IAC1B,IAAIrD,MAAM,KAAK,QAAQ,EAAE;MACvBnlB,EAAE,GAAG0oB,GAAG,GAAI7sC,MAAM,GAAG,CAAE;MACvB,IAAIipC,MAAM,KAAK,MAAM,EAAE;QACrBjlB,EAAE,GAAG4oB,GAAG;QACR1oB,EAAE,GAAGF,EAAE,GAAGmlB,SAAS;QACnBllB,EAAE,GAAGE,EAAE,GAAGglB,SAAS;QACnBwD,EAAE,GAAGxoB,EAAE,GAAGglB,SAAS;MACrB,CAAC,MAAM;QACLnlB,EAAE,GAAG4oB,GAAG,GAAG3sC,KAAK;QAChBikB,EAAE,GAAGF,EAAE,GAAGmlB,SAAS;QACnBllB,EAAE,GAAGE,EAAE,GAAGglB,SAAS;QACnBwD,EAAE,GAAGxoB,EAAE,GAAGglB,SAAS;MACrB;MACAuD,EAAE,GAAG1oB,EAAE;IACT,CAAC,MAAM;MACL,IAAIilB,MAAM,KAAK,MAAM,EAAE;QACrB/kB,EAAE,GAAG0oB,GAAG,GAAG9C,YAAY,GAAIX,SAAU;MACvC,CAAC,MAAM,IAAIF,MAAM,KAAK,OAAO,EAAE;QAC7B/kB,EAAE,GAAG0oB,GAAG,GAAG3sC,KAAK,GAAG6pC,YAAY,GAAGX,SAAS;MAC7C,CAAC,MAAM;QACLjlB,EAAE,GAAG,IAAI,CAAC0mB,MAAM;MAClB;MACA,IAAItB,MAAM,KAAK,KAAK,EAAE;QACpBrlB,EAAE,GAAG4oB,GAAG;QACR1oB,EAAE,GAAGF,EAAE,GAAGklB,SAAS;QACnBnlB,EAAE,GAAGE,EAAE,GAAGilB,SAAS;QACnBuD,EAAE,GAAGxoB,EAAE,GAAGilB,SAAS;MACrB,CAAC,MAAM;QACLllB,EAAE,GAAG4oB,GAAG,GAAG7sC,MAAM;QACjBmkB,EAAE,GAAGF,EAAE,GAAGklB,SAAS;QACnBnlB,EAAE,GAAGE,EAAE,GAAGilB,SAAS;QACnBuD,EAAE,GAAGxoB,EAAE,GAAGilB,SAAS;MACrB;MACAwD,EAAE,GAAG1oB,EAAE;IACT;IACA,OAAO;MAACD,EAAE;MAAEE,EAAE;MAAEwoB,EAAE;MAAEzoB,EAAE;MAAEE,EAAE;MAAEwoB;IAAE,CAAC;EACjC;EACAnmB,SAASA,CAACsmB,EAAE,EAAE34C,GAAG,EAAE9F,OAAO,EAAE;IAC1B,MAAM9G,EAAE,GAAG,IAAI;IACf,MAAM+a,KAAK,GAAG/a,EAAE,CAAC+a,KAAK;IACtB,MAAM1a,MAAM,GAAG0a,KAAK,CAAC1a,MAAM;IAC3B,IAAIy9C,SAAS,EAAEiD,YAAY,EAAE3tD,CAAC;IAC9B,IAAIiN,MAAM,EAAE;MACV,MAAMs8C,SAAS,GAAGhgD,aAAa,CAACmK,OAAO,CAAC81C,GAAG,EAAE58C,EAAE,CAAC9J,CAAC,EAAE8J,EAAE,CAAC0Y,KAAK,CAAC;MAC5D6sC,EAAE,CAACrvD,CAAC,GAAGusD,WAAW,CAACziD,EAAE,EAAE8G,OAAO,CAACsuB,UAAU,EAAEtuB,OAAO,CAAC;MACnD8F,GAAG,CAACwwB,SAAS,GAAGuf,SAAS,CAACvf,SAAS,CAACt2B,OAAO,CAACsuB,UAAU,CAAC;MACvDxoB,GAAG,CAAC2wB,YAAY,GAAG,QAAQ;MAC3BugB,SAAS,GAAGjlD,MAAM,CAACiO,OAAO,CAACg3C,SAAS,CAAC;MACrCiD,YAAY,GAAGj6C,OAAO,CAACi6C,YAAY;MACnCn0C,GAAG,CAACuS,SAAS,GAAGrY,OAAO,CAAC0+C,UAAU;MAClC54C,GAAG,CAACmoB,IAAI,GAAG+oB,SAAS,CAAC7iB,MAAM;MAC3B,KAAK7nC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGiN,MAAM,EAAE,EAAEjN,CAAC,EAAE;QAC3BwZ,GAAG,CAAC4wC,QAAQ,CAACziC,KAAK,CAAC3nB,CAAC,CAAC,EAAEupD,SAAS,CAACzmD,CAAC,CAACqvD,EAAE,CAACrvD,CAAC,CAAC,EAAEqvD,EAAE,CAACnvD,CAAC,GAAG0nD,SAAS,CAAC7oB,UAAU,GAAG,CAAC,CAAC;QAC1EswB,EAAE,CAACnvD,CAAC,IAAI0nD,SAAS,CAAC7oB,UAAU,GAAG8rB,YAAY;QAC3C,IAAI3tD,CAAC,GAAG,CAAC,KAAKiN,MAAM,EAAE;UACpBklD,EAAE,CAACnvD,CAAC,IAAI0Q,OAAO,CAACk6C,iBAAiB,GAAGD,YAAY;QAClD;MACF;IACF;EACF;EACA0E,aAAaA,CAAC74C,GAAG,EAAE24C,EAAE,EAAEnyD,CAAC,EAAEupD,SAAS,EAAE71C,OAAO,EAAE;IAC5C,MAAM9G,EAAE,GAAG,IAAI;IACf,MAAMujD,WAAW,GAAGvjD,EAAE,CAACujD,WAAW,CAACnwD,CAAC,CAAC;IACrC,MAAMsxD,eAAe,GAAG1kD,EAAE,CAACwjD,gBAAgB,CAACpwD,CAAC,CAAC;IAC9C,MAAM;MAACunD,SAAS;MAAEC;IAAQ,CAAC,GAAG9zC,OAAO;IACrC,MAAMs5C,QAAQ,GAAGvnD,MAAM,CAACiO,OAAO,CAACs5C,QAAQ,CAAC;IACzC,MAAMsF,MAAM,GAAGjD,WAAW,CAACziD,EAAE,EAAE,MAAM,EAAE8G,OAAO,CAAC;IAC/C,MAAM6+C,SAAS,GAAGhJ,SAAS,CAACzmD,CAAC,CAACwvD,MAAM,CAAC;IACrC,MAAME,OAAO,GAAGjL,SAAS,GAAGyF,QAAQ,CAACnrB,UAAU,GAAG,CAACmrB,QAAQ,CAACnrB,UAAU,GAAG0lB,SAAS,IAAI,CAAC,GAAG,CAAC;IAC3F,MAAMkL,MAAM,GAAGN,EAAE,CAACnvD,CAAC,GAAGwvD,OAAO;IAC7B,IAAI9+C,OAAO,CAAC+zC,aAAa,EAAE;MACzB,MAAMqC,WAAW,GAAG;QAClBtiC,MAAM,EAAEhb,IAAI,CAACC,GAAG,CAAC+6C,QAAQ,EAAED,SAAS,CAAC,GAAG,CAAC;QACzC7H,UAAU,EAAE4R,eAAe,CAAC5R,UAAU;QACtC73B,QAAQ,EAAEypC,eAAe,CAACzpC,QAAQ;QAClCuD,WAAW,EAAE;MACf,CAAC;MACD,MAAMP,OAAO,GAAG0+B,SAAS,CAACW,UAAU,CAACqI,SAAS,EAAE/K,QAAQ,CAAC,GAAGA,QAAQ,GAAG,CAAC;MACxE,MAAM18B,OAAO,GAAG2nC,MAAM,GAAGlL,SAAS,GAAG,CAAC;MACtC/tC,GAAG,CAACyS,WAAW,GAAGvY,OAAO,CAACg/C,kBAAkB;MAC5Cl5C,GAAG,CAACuS,SAAS,GAAGrY,OAAO,CAACg/C,kBAAkB;MAC1C7pD,SAAS,CAAC2Q,GAAG,EAAEswC,WAAW,EAAEj/B,OAAO,EAAEC,OAAO,CAAC;MAC7CtR,GAAG,CAACyS,WAAW,GAAGkkC,WAAW,CAACjkC,WAAW;MACzC1S,GAAG,CAACuS,SAAS,GAAGokC,WAAW,CAACnkC,eAAe;MAC3CnjB,SAAS,CAAC2Q,GAAG,EAAEswC,WAAW,EAAEj/B,OAAO,EAAEC,OAAO,CAAC;IAC/C,CAAC,MAAM;MACLtR,GAAG,CAACuS,SAAS,GAAGrY,OAAO,CAACg/C,kBAAkB;MAC1Cl5C,GAAG,CAACqxB,QAAQ,CAAC0e,SAAS,CAACW,UAAU,CAACqI,SAAS,EAAE/K,QAAQ,CAAC,EAAEiL,MAAM,EAAEjL,QAAQ,EAAED,SAAS,CAAC;MACpF/tC,GAAG,CAAC2S,SAAS,GAAG,CAAC;MACjB3S,GAAG,CAACyS,WAAW,GAAGkkC,WAAW,CAACjkC,WAAW;MACzC1S,GAAG,CAAC2wC,UAAU,CAACZ,SAAS,CAACW,UAAU,CAACqI,SAAS,EAAE/K,QAAQ,CAAC,EAAEiL,MAAM,EAAEjL,QAAQ,EAAED,SAAS,CAAC;MACtF/tC,GAAG,CAACuS,SAAS,GAAGokC,WAAW,CAACnkC,eAAe;MAC3CxS,GAAG,CAACqxB,QAAQ,CAAC0e,SAAS,CAACW,UAAU,CAACX,SAAS,CAACS,KAAK,CAACuI,SAAS,EAAE,CAAC,CAAC,EAAE/K,QAAQ,GAAG,CAAC,CAAC,EAAEiL,MAAM,GAAG,CAAC,EAAEjL,QAAQ,GAAG,CAAC,EAAED,SAAS,GAAG,CAAC,CAAC;IAC1H;IACA/tC,GAAG,CAACuS,SAAS,GAAGnf,EAAE,CAACyjD,eAAe,CAACrwD,CAAC,CAAC;EACvC;EACA2yD,QAAQA,CAACR,EAAE,EAAE34C,GAAG,EAAE9F,OAAO,EAAE;IACzB,MAAM9G,EAAE,GAAG,IAAI;IACf,MAAM;MAACkgD;IAAI,CAAC,GAAGlgD,EAAE;IACjB,MAAM;MAACmhD,WAAW;MAAE6E,SAAS;MAAE9E,aAAa;MAAEvG,SAAS;MAAEC;IAAQ,CAAC,GAAG9zC,OAAO;IAC5E,MAAMs5C,QAAQ,GAAGvnD,MAAM,CAACiO,OAAO,CAACs5C,QAAQ,CAAC;IACzC,IAAIa,cAAc,GAAGb,QAAQ,CAACnrB,UAAU;IACxC,IAAIgxB,YAAY,GAAG,CAAC;IACpB,MAAMtJ,SAAS,GAAGhgD,aAAa,CAACmK,OAAO,CAAC81C,GAAG,EAAE58C,EAAE,CAAC9J,CAAC,EAAE8J,EAAE,CAAC0Y,KAAK,CAAC;IAC5D,MAAMwtC,cAAc,GAAG,SAAAA,CAASjmC,IAAI,EAAE;MACpCrT,GAAG,CAAC4wC,QAAQ,CAACv9B,IAAI,EAAE08B,SAAS,CAACzmD,CAAC,CAACqvD,EAAE,CAACrvD,CAAC,GAAG+vD,YAAY,CAAC,EAAEV,EAAE,CAACnvD,CAAC,GAAG6qD,cAAc,GAAG,CAAC,CAAC;MAC/EsE,EAAE,CAACnvD,CAAC,IAAI6qD,cAAc,GAAGE,WAAW;IACtC,CAAC;IACD,MAAMgF,uBAAuB,GAAGxJ,SAAS,CAACvf,SAAS,CAAC4oB,SAAS,CAAC;IAC9D,IAAItF,QAAQ,EAAE0F,SAAS,EAAEpxB,KAAK,EAAE5hC,CAAC,EAAEoB,CAAC,EAAEsU,IAAI,EAAE2b,IAAI;IAChD7X,GAAG,CAACwwB,SAAS,GAAG4oB,SAAS;IACzBp5C,GAAG,CAAC2wB,YAAY,GAAG,QAAQ;IAC3B3wB,GAAG,CAACmoB,IAAI,GAAGqrB,QAAQ,CAACnlB,MAAM;IAC1BsqB,EAAE,CAACrvD,CAAC,GAAGusD,WAAW,CAACziD,EAAE,EAAEmmD,uBAAuB,EAAEr/C,OAAO,CAAC;IACxD8F,GAAG,CAACuS,SAAS,GAAGrY,OAAO,CAACu/C,SAAS;IACjCtvD,IAAI,CAACiJ,EAAE,CAAC6gD,UAAU,EAAEqF,cAAc,CAAC;IACnCD,YAAY,GAAG/E,aAAa,IAAIiF,uBAAuB,KAAK,OAAO,GAC/DH,SAAS,KAAK,QAAQ,GAAIpL,QAAQ,GAAG,CAAC,GAAG,CAAC,GAAKA,QAAQ,GAAG,CAAE,GAC5D,CAAC;IACL,KAAKxnD,CAAC,GAAG,CAAC,EAAE0V,IAAI,GAAGo3C,IAAI,CAAC7/C,MAAM,EAAEjN,CAAC,GAAG0V,IAAI,EAAE,EAAE1V,CAAC,EAAE;MAC7CstD,QAAQ,GAAGR,IAAI,CAAC9sD,CAAC,CAAC;MAClBgzD,SAAS,GAAGpmD,EAAE,CAACyjD,eAAe,CAACrwD,CAAC,CAAC;MACjCwZ,GAAG,CAACuS,SAAS,GAAGinC,SAAS;MACzBrvD,IAAI,CAAC2pD,QAAQ,CAACC,MAAM,EAAEuF,cAAc,CAAC;MACrClxB,KAAK,GAAG0rB,QAAQ,CAAC1rB,KAAK;MACtB,IAAIksB,aAAa,IAAIlsB,KAAK,CAAC30B,MAAM,EAAE;QACjCL,EAAE,CAACylD,aAAa,CAAC74C,GAAG,EAAE24C,EAAE,EAAEnyD,CAAC,EAAEupD,SAAS,EAAE71C,OAAO,CAAC;QAChDm6C,cAAc,GAAGrhD,IAAI,CAACoC,GAAG,CAACo+C,QAAQ,CAACnrB,UAAU,EAAE0lB,SAAS,CAAC;MAC3D;MACA,KAAKnmD,CAAC,GAAG,CAAC,EAAEiwB,IAAI,GAAGuQ,KAAK,CAAC30B,MAAM,EAAE7L,CAAC,GAAGiwB,IAAI,EAAE,EAAEjwB,CAAC,EAAE;QAC9C0xD,cAAc,CAAClxB,KAAK,CAACxgC,CAAC,CAAC,CAAC;QACxBysD,cAAc,GAAGb,QAAQ,CAACnrB,UAAU;MACtC;MACAl+B,IAAI,CAAC2pD,QAAQ,CAACE,KAAK,EAAEsF,cAAc,CAAC;IACtC;IACAD,YAAY,GAAG,CAAC;IAChBhF,cAAc,GAAGb,QAAQ,CAACnrB,UAAU;IACpCl+B,IAAI,CAACiJ,EAAE,CAAC8gD,SAAS,EAAEoF,cAAc,CAAC;IAClCX,EAAE,CAACnvD,CAAC,IAAI+qD,WAAW;EACrB;EACAmF,UAAUA,CAACf,EAAE,EAAE34C,GAAG,EAAE9F,OAAO,EAAE;IAC3B,MAAM9G,EAAE,GAAG,IAAI;IACf,MAAMmgD,MAAM,GAAGngD,EAAE,CAACmgD,MAAM;IACxB,MAAM9/C,MAAM,GAAG8/C,MAAM,CAAC9/C,MAAM;IAC5B,IAAIggD,UAAU,EAAEjtD,CAAC;IACjB,IAAIiN,MAAM,EAAE;MACV,MAAMs8C,SAAS,GAAGhgD,aAAa,CAACmK,OAAO,CAAC81C,GAAG,EAAE58C,EAAE,CAAC9J,CAAC,EAAE8J,EAAE,CAAC0Y,KAAK,CAAC;MAC5D6sC,EAAE,CAACrvD,CAAC,GAAGusD,WAAW,CAACziD,EAAE,EAAE8G,OAAO,CAACy/C,WAAW,EAAEz/C,OAAO,CAAC;MACpDy+C,EAAE,CAACnvD,CAAC,IAAI0Q,OAAO,CAACs6C,eAAe;MAC/Bx0C,GAAG,CAACwwB,SAAS,GAAGuf,SAAS,CAACvf,SAAS,CAACt2B,OAAO,CAACy/C,WAAW,CAAC;MACxD35C,GAAG,CAAC2wB,YAAY,GAAG,QAAQ;MAC3B8iB,UAAU,GAAGxnD,MAAM,CAACiO,OAAO,CAACu5C,UAAU,CAAC;MACvCzzC,GAAG,CAACuS,SAAS,GAAGrY,OAAO,CAAC0/C,WAAW;MACnC55C,GAAG,CAACmoB,IAAI,GAAGsrB,UAAU,CAACplB,MAAM;MAC5B,KAAK7nC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGiN,MAAM,EAAE,EAAEjN,CAAC,EAAE;QAC3BwZ,GAAG,CAAC4wC,QAAQ,CAAC2C,MAAM,CAAC/sD,CAAC,CAAC,EAAEupD,SAAS,CAACzmD,CAAC,CAACqvD,EAAE,CAACrvD,CAAC,CAAC,EAAEqvD,EAAE,CAACnvD,CAAC,GAAGiqD,UAAU,CAACprB,UAAU,GAAG,CAAC,CAAC;QAC5EswB,EAAE,CAACnvD,CAAC,IAAIiqD,UAAU,CAACprB,UAAU,GAAGnuB,OAAO,CAACu6C,aAAa;MACvD;IACF;EACF;EACAtjB,cAAcA,CAACwnB,EAAE,EAAE34C,GAAG,EAAE65C,WAAW,EAAE3/C,OAAO,EAAE;IAC5C,MAAM;MAAC46C,MAAM;MAAEK;IAAM,CAAC,GAAG,IAAI;IAC7B,MAAM;MAAC7rD,CAAC;MAAEE;IAAC,CAAC,GAAGmvD,EAAE;IACjB,MAAM;MAAC7sC,KAAK;MAAED;IAAM,CAAC,GAAGguC,WAAW;IACnC,MAAM7rC,MAAM,GAAG9T,OAAO,CAACy7C,YAAY;IACnC31C,GAAG,CAACuS,SAAS,GAAGrY,OAAO,CAACsY,eAAe;IACvCxS,GAAG,CAACyS,WAAW,GAAGvY,OAAO,CAACwY,WAAW;IACrC1S,GAAG,CAAC2S,SAAS,GAAGzY,OAAO,CAAC0X,WAAW;IACnC5R,GAAG,CAAC8xB,SAAS,CAAC,CAAC;IACf9xB,GAAG,CAAC+xB,MAAM,CAACzoC,CAAC,GAAG0kB,MAAM,EAAExkB,CAAC,CAAC;IACzB,IAAI2rD,MAAM,KAAK,KAAK,EAAE;MACpB,IAAI,CAACgD,SAAS,CAACQ,EAAE,EAAE34C,GAAG,EAAE65C,WAAW,EAAE3/C,OAAO,CAAC;IAC/C;IACA8F,GAAG,CAACgyB,MAAM,CAAC1oC,CAAC,GAAGwiB,KAAK,GAAGkC,MAAM,EAAExkB,CAAC,CAAC;IACjCwW,GAAG,CAAC85C,gBAAgB,CAACxwD,CAAC,GAAGwiB,KAAK,EAAEtiB,CAAC,EAAEF,CAAC,GAAGwiB,KAAK,EAAEtiB,CAAC,GAAGwkB,MAAM,CAAC;IACzD,IAAImnC,MAAM,KAAK,QAAQ,IAAIL,MAAM,KAAK,OAAO,EAAE;MAC7C,IAAI,CAACqD,SAAS,CAACQ,EAAE,EAAE34C,GAAG,EAAE65C,WAAW,EAAE3/C,OAAO,CAAC;IAC/C;IACA8F,GAAG,CAACgyB,MAAM,CAAC1oC,CAAC,GAAGwiB,KAAK,EAAEtiB,CAAC,GAAGqiB,MAAM,GAAGmC,MAAM,CAAC;IAC1ChO,GAAG,CAAC85C,gBAAgB,CAACxwD,CAAC,GAAGwiB,KAAK,EAAEtiB,CAAC,GAAGqiB,MAAM,EAAEviB,CAAC,GAAGwiB,KAAK,GAAGkC,MAAM,EAAExkB,CAAC,GAAGqiB,MAAM,CAAC;IAC3E,IAAIspC,MAAM,KAAK,QAAQ,EAAE;MACvB,IAAI,CAACgD,SAAS,CAACQ,EAAE,EAAE34C,GAAG,EAAE65C,WAAW,EAAE3/C,OAAO,CAAC;IAC/C;IACA8F,GAAG,CAACgyB,MAAM,CAAC1oC,CAAC,GAAG0kB,MAAM,EAAExkB,CAAC,GAAGqiB,MAAM,CAAC;IAClC7L,GAAG,CAAC85C,gBAAgB,CAACxwD,CAAC,EAAEE,CAAC,GAAGqiB,MAAM,EAAEviB,CAAC,EAAEE,CAAC,GAAGqiB,MAAM,GAAGmC,MAAM,CAAC;IAC3D,IAAImnC,MAAM,KAAK,QAAQ,IAAIL,MAAM,KAAK,MAAM,EAAE;MAC5C,IAAI,CAACqD,SAAS,CAACQ,EAAE,EAAE34C,GAAG,EAAE65C,WAAW,EAAE3/C,OAAO,CAAC;IAC/C;IACA8F,GAAG,CAACgyB,MAAM,CAAC1oC,CAAC,EAAEE,CAAC,GAAGwkB,MAAM,CAAC;IACzBhO,GAAG,CAAC85C,gBAAgB,CAACxwD,CAAC,EAAEE,CAAC,EAAEF,CAAC,GAAG0kB,MAAM,EAAExkB,CAAC,CAAC;IACzCwW,GAAG,CAACiiC,SAAS,CAAC,CAAC;IACfjiC,GAAG,CAACqW,IAAI,CAAC,CAAC;IACV,IAAInc,OAAO,CAAC0X,WAAW,GAAG,CAAC,EAAE;MAC3B5R,GAAG,CAACiyB,MAAM,CAAC,CAAC;IACd;EACF;EACA8nB,sBAAsBA,CAAC7/C,OAAO,EAAE;IAC9B,MAAM9G,EAAE,GAAG,IAAI;IACf,MAAMf,KAAK,GAAGe,EAAE,CAACoG,MAAM;IACvB,MAAMlH,KAAK,GAAGc,EAAE,CAACmH,WAAW;IAC5B,MAAMy/C,KAAK,GAAG1nD,KAAK,IAAIA,KAAK,CAAChJ,CAAC;IAC9B,MAAM2wD,KAAK,GAAG3nD,KAAK,IAAIA,KAAK,CAAC9I,CAAC;IAC9B,IAAIwwD,KAAK,IAAIC,KAAK,EAAE;MAClB,MAAM3hC,QAAQ,GAAGm6B,WAAW,CAACv4C,OAAO,CAACoe,QAAQ,CAAC,CAACjlB,IAAI,CAACD,EAAE,EAAEA,EAAE,CAACa,OAAO,EAAEb,EAAE,CAACgjD,cAAc,CAAC;MACtF,IAAI,CAAC99B,QAAQ,EAAE;QACb;MACF;MACA,MAAM1d,IAAI,GAAGxH,EAAE,CAACijD,KAAK,GAAGhD,cAAc,CAACjgD,EAAE,EAAE8G,OAAO,CAAC;MACnD,MAAM89C,eAAe,GAAGx/C,MAAM,CAACqC,MAAM,CAAC,CAAC,CAAC,EAAEyd,QAAQ,EAAEllB,EAAE,CAACijD,KAAK,CAAC;MAC7D,MAAMX,SAAS,GAAGL,kBAAkB,CAAChjD,KAAK,EAAE6H,OAAO,EAAE89C,eAAe,CAAC;MACrE,MAAMnqC,KAAK,GAAG4nC,kBAAkB,CAACv7C,OAAO,EAAE89C,eAAe,EAAEtC,SAAS,EAAErjD,KAAK,CAAC;MAC5E,IAAI2nD,KAAK,CAACxiD,GAAG,KAAKqW,KAAK,CAACvkB,CAAC,IAAI2wD,KAAK,CAACziD,GAAG,KAAKqW,KAAK,CAACrkB,CAAC,EAAE;QAClD4J,EAAE,CAAC0hD,MAAM,GAAGY,SAAS,CAACZ,MAAM;QAC5B1hD,EAAE,CAAC+hD,MAAM,GAAGO,SAAS,CAACP,MAAM;QAC5B/hD,EAAE,CAAC0Y,KAAK,GAAGlR,IAAI,CAACkR,KAAK;QACrB1Y,EAAE,CAACyY,MAAM,GAAGjR,IAAI,CAACiR,MAAM;QACvBzY,EAAE,CAACqjD,MAAM,GAAGn+B,QAAQ,CAAChvB,CAAC;QACtB8J,EAAE,CAACsjD,MAAM,GAAGp+B,QAAQ,CAAC9uB,CAAC;QACtB4J,EAAE,CAACoT,kBAAkB,CAAC,CAAC,CAAC7O,MAAM,CAACvE,EAAE,EAAEya,KAAK,CAAC;MAC3C;IACF;EACF;EACA9Z,IAAIA,CAACiM,GAAG,EAAE;IACR,MAAM5M,EAAE,GAAG,IAAI;IACf,MAAM8G,OAAO,GAAG9G,EAAE,CAAC8G,OAAO,CAACi1B,UAAU,CAAC/7B,EAAE,CAAC8P,UAAU,CAAC,CAAC,CAAC;IACtD,IAAIizC,OAAO,GAAG/iD,EAAE,CAAC+iD,OAAO;IACxB,IAAI,CAACA,OAAO,EAAE;MACZ;IACF;IACA/iD,EAAE,CAAC2mD,sBAAsB,CAAC7/C,OAAO,CAAC;IAClC,MAAM2/C,WAAW,GAAG;MAClB/tC,KAAK,EAAE1Y,EAAE,CAAC0Y,KAAK;MACfD,MAAM,EAAEzY,EAAE,CAACyY;IACb,CAAC;IACD,MAAM8sC,EAAE,GAAG;MACTrvD,CAAC,EAAE8J,EAAE,CAAC9J,CAAC;MACPE,CAAC,EAAE4J,EAAE,CAAC5J;IACR,CAAC;IACD2sD,OAAO,GAAGnjD,IAAI,CAACgW,GAAG,CAACmtC,OAAO,CAAC,GAAG,IAAI,GAAG,CAAC,GAAGA,OAAO;IAChD,MAAM74B,OAAO,GAAGrzB,SAAS,CAACiQ,OAAO,CAACojB,OAAO,CAAC;IAC1C,MAAM48B,iBAAiB,GAAG9mD,EAAE,CAAC+a,KAAK,CAAC1a,MAAM,IAAIL,EAAE,CAAC6gD,UAAU,CAACxgD,MAAM,IAAIL,EAAE,CAACkgD,IAAI,CAAC7/C,MAAM,IAAIL,EAAE,CAAC8gD,SAAS,CAACzgD,MAAM,IAAIL,EAAE,CAACmgD,MAAM,CAAC9/C,MAAM;IAC9H,IAAIyG,OAAO,CAAC0rB,OAAO,IAAIs0B,iBAAiB,EAAE;MACxCl6C,GAAG,CAACoxB,IAAI,CAAC,CAAC;MACVpxB,GAAG,CAACm6C,WAAW,GAAGhE,OAAO;MACzB/iD,EAAE,CAAC+9B,cAAc,CAACwnB,EAAE,EAAE34C,GAAG,EAAE65C,WAAW,EAAE3/C,OAAO,CAAC;MAChDjK,qBAAqB,CAAC+P,GAAG,EAAE9F,OAAO,CAAC42C,aAAa,CAAC;MACjD6H,EAAE,CAACnvD,CAAC,IAAI8zB,OAAO,CAAC7hB,GAAG;MACnBrI,EAAE,CAACi/B,SAAS,CAACsmB,EAAE,EAAE34C,GAAG,EAAE9F,OAAO,CAAC;MAC9B9G,EAAE,CAAC+lD,QAAQ,CAACR,EAAE,EAAE34C,GAAG,EAAE9F,OAAO,CAAC;MAC7B9G,EAAE,CAACsmD,UAAU,CAACf,EAAE,EAAE34C,GAAG,EAAE9F,OAAO,CAAC;MAC/B7J,oBAAoB,CAAC2P,GAAG,EAAE9F,OAAO,CAAC42C,aAAa,CAAC;MAChD9wC,GAAG,CAACsxB,OAAO,CAAC,CAAC;IACf;EACF;EACAuP,iBAAiBA,CAAA,EAAG;IAClB,OAAO,IAAI,CAAC5sC,OAAO,IAAI,EAAE;EAC3B;EACA6sC,iBAAiBA,CAACC,cAAc,EAAE4R,aAAa,EAAE;IAC/C,MAAMv/C,EAAE,GAAG,IAAI;IACf,MAAM4tC,UAAU,GAAG5tC,EAAE,CAACa,OAAO;IAC7B,MAAMyD,MAAM,GAAGqpC,cAAc,CAAC3uB,GAAG,CAACgoC,KAAA,IAA2B;MAAA,IAA1B;QAAC39C,YAAY;QAAEN;MAAK,CAAC,GAAAi+C,KAAA;MACtD,MAAMp9C,IAAI,GAAG5J,EAAE,CAACoG,MAAM,CAACyI,cAAc,CAACxF,YAAY,CAAC;MACnD,IAAI,CAACO,IAAI,EAAE;QACT,MAAM,IAAI0Z,KAAK,CAAC,iCAAiC,GAAGja,YAAY,CAAC;MACnE;MACA,OAAO;QACLA,YAAY;QACZ4C,OAAO,EAAErC,IAAI,CAACJ,IAAI,CAACT,KAAK,CAAC;QACzBA;MACF,CAAC;IACH,CAAC,CAAC;IACF,MAAM2Y,OAAO,GAAG,CAAC7mB,cAAc,CAAC+yC,UAAU,EAAEtpC,MAAM,CAAC;IACnD,MAAM2iD,eAAe,GAAGjnD,EAAE,CAACknD,gBAAgB,CAAC5iD,MAAM,EAAEi7C,aAAa,CAAC;IAClE,IAAI79B,OAAO,IAAIulC,eAAe,EAAE;MAC9BjnD,EAAE,CAACa,OAAO,GAAGyD,MAAM;MACnBtE,EAAE,CAACgjD,cAAc,GAAGzD,aAAa;MACjCv/C,EAAE,CAACuE,MAAM,CAAC,IAAI,CAAC;IACjB;EACF;EACA65C,WAAWA,CAACprD,CAAC,EAAE+6C,MAAM,EAAE;IACrB,MAAM/tC,EAAE,GAAG,IAAI;IACf,MAAM8G,OAAO,GAAG9G,EAAE,CAAC8G,OAAO;IAC1B,MAAM8mC,UAAU,GAAG5tC,EAAE,CAACa,OAAO,IAAI,EAAE;IACnC,IAAI6gB,OAAO,GAAG,KAAK;IACnB,IAAIpd,MAAM,GAAG,EAAE;IACf,IAAItR,CAAC,CAACoM,IAAI,KAAK,UAAU,EAAE;MACzBkF,MAAM,GAAGtE,EAAE,CAACoG,MAAM,CAACwmC,yBAAyB,CAAC55C,CAAC,EAAE8T,OAAO,CAACsC,IAAI,EAAEtC,OAAO,EAAEinC,MAAM,CAAC;MAC9E,IAAIjnC,OAAO,CAACkB,OAAO,EAAE;QACnB1D,MAAM,CAAC0D,OAAO,CAAC,CAAC;MAClB;IACF;IACA,MAAMi/C,eAAe,GAAGjnD,EAAE,CAACknD,gBAAgB,CAAC5iD,MAAM,EAAEtR,CAAC,CAAC;IACtD0uB,OAAO,GAAGqsB,MAAM,IAAI,CAAClzC,cAAc,CAACyJ,MAAM,EAAEspC,UAAU,CAAC,IAAIqZ,eAAe;IAC1E,IAAIvlC,OAAO,EAAE;MACX1hB,EAAE,CAACa,OAAO,GAAGyD,MAAM;MACnB,IAAIwC,OAAO,CAAC0rB,OAAO,IAAI1rB,OAAO,CAACg+C,QAAQ,EAAE;QACvC9kD,EAAE,CAACgjD,cAAc,GAAG;UAClB9sD,CAAC,EAAElD,CAAC,CAACkD,CAAC;UACNE,CAAC,EAAEpD,CAAC,CAACoD;QACP,CAAC;QACD4J,EAAE,CAACuE,MAAM,CAAC,IAAI,EAAEwpC,MAAM,CAAC;MACzB;IACF;IACA,OAAOrsB,OAAO;EAChB;EACAwlC,gBAAgBA,CAAC5iD,MAAM,EAAEtR,CAAC,EAAE;IAC1B,MAAMgN,EAAE,GAAG,IAAI;IACf,MAAMklB,QAAQ,GAAGm6B,WAAW,CAACr/C,EAAE,CAAC8G,OAAO,CAACoe,QAAQ,CAAC,CAACjlB,IAAI,CAACD,EAAE,EAAEsE,MAAM,EAAEtR,CAAC,CAAC;IACrE,OAAOgN,EAAE,CAACqjD,MAAM,KAAKn+B,QAAQ,CAAChvB,CAAC,IAAI8J,EAAE,CAACsjD,MAAM,KAAKp+B,QAAQ,CAAC9uB,CAAC;EAC7D;AACF;AACA0sD,OAAO,CAACzD,WAAW,GAAGA,WAAW;AACjC,IAAI8H,cAAc,GAAG;EACnBl9C,EAAE,EAAE,SAAS;EACby0C,QAAQ,EAAEoE,OAAO;EACjBzD,WAAW;EACX+H,SAASA,CAACnoD,KAAK,EAAEk7C,KAAK,EAAErzC,OAAO,EAAE;IAC/B,IAAIA,OAAO,EAAE;MACX7H,KAAK,CAAC6b,OAAO,GAAG,IAAIgoC,OAAO,CAAC;QAAC18C,MAAM,EAAEnH,KAAK;QAAE6H;MAAO,CAAC,CAAC;IACvD;EACF,CAAC;EACDkwB,YAAYA,CAAC/3B,KAAK,EAAEk7C,KAAK,EAAErzC,OAAO,EAAE;IAClC,IAAI7H,KAAK,CAAC6b,OAAO,EAAE;MACjB7b,KAAK,CAAC6b,OAAO,CAACtN,UAAU,CAAC1G,OAAO,CAAC;IACnC;EACF,CAAC;EACDkI,KAAKA,CAAC/P,KAAK,EAAEk7C,KAAK,EAAErzC,OAAO,EAAE;IAC3B,IAAI7H,KAAK,CAAC6b,OAAO,EAAE;MACjB7b,KAAK,CAAC6b,OAAO,CAACtN,UAAU,CAAC1G,OAAO,CAAC;IACnC;EACF,CAAC;EACDugD,SAASA,CAACpoD,KAAK,EAAE;IACf,MAAM6b,OAAO,GAAG7b,KAAK,CAAC6b,OAAO;IAC7B,MAAMgU,IAAI,GAAG;MACXhU;IACF,CAAC;IACD,IAAI7b,KAAK,CAAC25B,aAAa,CAAC,mBAAmB,EAAE9J,IAAI,CAAC,KAAK,KAAK,EAAE;MAC5D;IACF;IACA,IAAIhU,OAAO,EAAE;MACXA,OAAO,CAACna,IAAI,CAAC1B,KAAK,CAAC2N,GAAG,CAAC;IACzB;IACA3N,KAAK,CAAC25B,aAAa,CAAC,kBAAkB,EAAE9J,IAAI,CAAC;EAC/C,CAAC;EACD6vB,UAAUA,CAAC1/C,KAAK,EAAE6vB,IAAI,EAAE;IACtB,IAAI7vB,KAAK,CAAC6b,OAAO,EAAE;MACjB,MAAM+K,gBAAgB,GAAGiJ,IAAI,CAACif,MAAM;MACpC,IAAI9uC,KAAK,CAAC6b,OAAO,CAACsjC,WAAW,CAACtvB,IAAI,CAACttB,KAAK,EAAEqkB,gBAAgB,CAAC,EAAE;QAC3DiJ,IAAI,CAACpN,OAAO,GAAG,IAAI;MACrB;IACF;EACF,CAAC;EACDjuB,QAAQ,EAAE;IACR++B,OAAO,EAAE,IAAI;IACbsyB,QAAQ,EAAE,IAAI;IACd5/B,QAAQ,EAAE,SAAS;IACnB9F,eAAe,EAAE,iBAAiB;IAClComC,UAAU,EAAE,MAAM;IAClB1H,SAAS,EAAE;MACT7+B,KAAK,EAAE;IACT,CAAC;IACD8hC,YAAY,EAAE,CAAC;IACfC,iBAAiB,EAAE,CAAC;IACpB5rB,UAAU,EAAE,MAAM;IAClBixB,SAAS,EAAE,MAAM;IACjBlF,WAAW,EAAE,CAAC;IACdf,QAAQ,EAAE,CACV,CAAC;IACD4F,SAAS,EAAE,MAAM;IACjBQ,WAAW,EAAE,MAAM;IACnBnF,aAAa,EAAE,CAAC;IAChBD,eAAe,EAAE,CAAC;IAClBf,UAAU,EAAE;MACVphC,KAAK,EAAE;IACT,CAAC;IACDsnC,WAAW,EAAE,MAAM;IACnBr8B,OAAO,EAAE,CAAC;IACV23B,YAAY,EAAE,CAAC;IACfD,SAAS,EAAE,CAAC;IACZW,YAAY,EAAE,CAAC;IACf5H,SAAS,EAAEA,CAAC/tC,GAAG,EAAE7E,IAAI,KAAKA,IAAI,CAACq4C,QAAQ,CAAC54C,IAAI;IAC5CozC,QAAQ,EAAEA,CAAChuC,GAAG,EAAE7E,IAAI,KAAKA,IAAI,CAACq4C,QAAQ,CAAC54C,IAAI;IAC3Cs+C,kBAAkB,EAAE,MAAM;IAC1B5E,aAAa,EAAE,IAAI;IACnB5hC,WAAW,EAAE,eAAe;IAC5Bd,WAAW,EAAE,CAAC;IACdlZ,SAAS,EAAE;MACT9F,QAAQ,EAAE,GAAG;MACbkE,MAAM,EAAE;IACV,CAAC;IACDqC,UAAU,EAAE;MACVd,OAAO,EAAE;QACP7F,IAAI,EAAE,QAAQ;QACdwG,UAAU,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ;MAC9D,CAAC;MACDm9C,OAAO,EAAE;QACPr/C,MAAM,EAAE,QAAQ;QAChBlE,QAAQ,EAAE;MACZ;IACF,CAAC;IACDH,SAAS,EAAE;MACTskD,WAAW,EAAExmD,IAAI;MACjB4d,KAAKA,CAAC6nC,YAAY,EAAE;QAClB,IAAIA,YAAY,CAACviD,MAAM,GAAG,CAAC,EAAE;UAC3B,MAAMO,IAAI,GAAGgiD,YAAY,CAAC,CAAC,CAAC;UAC5B,MAAMnyC,MAAM,GAAG7P,IAAI,CAAC3B,KAAK,CAACuK,IAAI,CAACiH,MAAM;UACrC,MAAM62C,UAAU,GAAG72C,MAAM,GAAGA,MAAM,CAACpQ,MAAM,GAAG,CAAC;UAC7C,IAAI,IAAI,IAAI,IAAI,CAACyG,OAAO,IAAI,IAAI,CAACA,OAAO,CAACsC,IAAI,KAAK,SAAS,EAAE;YAC3D,OAAOxI,IAAI,CAACmL,OAAO,CAAC8F,KAAK,IAAI,EAAE;UACjC,CAAC,MAAM,IAAIjR,IAAI,CAACiR,KAAK,EAAE;YACrB,OAAOjR,IAAI,CAACiR,KAAK;UACnB,CAAC,MAAM,IAAIy1C,UAAU,GAAG,CAAC,IAAI1mD,IAAI,CAACsL,SAAS,GAAGo7C,UAAU,EAAE;YACxD,OAAO72C,MAAM,CAAC7P,IAAI,CAACsL,SAAS,CAAC;UAC/B;QACF;QACA,OAAO,EAAE;MACX,CAAC;MACD03C,UAAU,EAAEzmD,IAAI;MAChB0jD,UAAU,EAAE1jD,IAAI;MAChB8mD,WAAW,EAAE9mD,IAAI;MACjB0U,KAAKA,CAAC+N,WAAW,EAAE;QACjB,IAAI,IAAI,IAAI,IAAI,CAAC9Y,OAAO,IAAI,IAAI,CAACA,OAAO,CAACsC,IAAI,KAAK,SAAS,EAAE;UAC3D,OAAOwW,WAAW,CAAC/N,KAAK,GAAG,IAAI,GAAG+N,WAAW,CAACE,cAAc,IAAIF,WAAW,CAACE,cAAc;QAC5F;QACA,IAAIjO,KAAK,GAAG+N,WAAW,CAAC7T,OAAO,CAAC8F,KAAK,IAAI,EAAE;QAC3C,IAAIA,KAAK,EAAE;UACTA,KAAK,IAAI,IAAI;QACf;QACA,MAAMtK,KAAK,GAAGqY,WAAW,CAACE,cAAc;QACxC,IAAI,CAACrrB,aAAa,CAAC8S,KAAK,CAAC,EAAE;UACzBsK,KAAK,IAAItK,KAAK;QAChB;QACA,OAAOsK,KAAK;MACd,CAAC;MACD4yC,UAAUA,CAAC7kC,WAAW,EAAE;QACtB,MAAMhW,IAAI,GAAGgW,WAAW,CAAC3gB,KAAK,CAAC4P,cAAc,CAAC+Q,WAAW,CAACvW,YAAY,CAAC;QACvE,MAAMvC,OAAO,GAAG8C,IAAI,CAACkB,UAAU,CAACsH,QAAQ,CAACwN,WAAW,CAAC1T,SAAS,CAAC;QAC/D,OAAO;UACLoT,WAAW,EAAExY,OAAO,CAACwY,WAAW;UAChCF,eAAe,EAAEtY,OAAO,CAACsY;QAC3B,CAAC;MACH,CAAC;MACDulC,cAAcA,CAAA,EAAG;QACf,OAAO,IAAI,CAAC79C,OAAO,CAACu/C,SAAS;MAC/B,CAAC;MACD3B,eAAeA,CAAC9kC,WAAW,EAAE;QAC3B,MAAMhW,IAAI,GAAGgW,WAAW,CAAC3gB,KAAK,CAAC4P,cAAc,CAAC+Q,WAAW,CAACvW,YAAY,CAAC;QACvE,MAAMvC,OAAO,GAAG8C,IAAI,CAACkB,UAAU,CAACsH,QAAQ,CAACwN,WAAW,CAAC1T,SAAS,CAAC;QAC/D,OAAO;UACL4mC,UAAU,EAAEhsC,OAAO,CAACgsC,UAAU;UAC9B73B,QAAQ,EAAEnU,OAAO,CAACmU;QACpB,CAAC;MACH,CAAC;MACDipC,UAAU,EAAE/mD,IAAI;MAChB2jD,SAAS,EAAE3jD,IAAI;MACfknD,YAAY,EAAElnD,IAAI;MAClBgjD,MAAM,EAAEhjD,IAAI;MACZmnD,WAAW,EAAEnnD;IACf;EACF,CAAC;EACD0yB,aAAa,EAAE;IACbuwB,QAAQ,EAAE,MAAM;IAChBC,UAAU,EAAE,MAAM;IAClBvC,SAAS,EAAE;EACb,CAAC;EACDrkD,WAAW,EAAE;IACXiM,WAAW,EAAGC,IAAI,IAAKA,IAAI,KAAK,QAAQ,IAAIA,IAAI,KAAK,UAAU,IAAIA,IAAI,KAAK,UAAU;IACtFF,UAAU,EAAE,KAAK;IACjBpG,SAAS,EAAE;MACTqG,WAAW,EAAE,KAAK;MAClBD,UAAU,EAAE;IACd,CAAC;IACDH,SAAS,EAAE;MACTE,SAAS,EAAE;IACb,CAAC;IACDO,UAAU,EAAE;MACVP,SAAS,EAAE;IACb;EACF,CAAC;EACDuhC,sBAAsB,EAAE,CAAC,aAAa;AACxC,CAAC;AAED,IAAIlsB,OAAO,GAAG,aAAazV,MAAM,CAAC+N,MAAM,CAAC;EACzCiQ,SAAS,EAAE,IAAI;EACfmkC,UAAU,EAAE9Q,iBAAiB;EAC7B+Q,MAAM,EAAEvN,aAAa;EACrBe,MAAM,EAAEyD,aAAa;EACrBI,KAAK,EAAEO,YAAY;EACnB0D,OAAO,EAAEqE;AACT,CAAC,CAAC;AAEF,MAAMM,WAAW,GAAGA,CAACh3C,MAAM,EAAEtE,GAAG,EAAEpD,KAAK,KAAK,OAAOoD,GAAG,KAAK,QAAQ,GAC/DsE,MAAM,CAAC/O,IAAI,CAACyK,GAAG,CAAC,GAAG,CAAC,GACpB2M,KAAK,CAAC3M,GAAG,CAAC,GAAG,IAAI,GAAGpD,KAAK;AAC7B,SAAS2+C,cAAcA,CAACj3C,MAAM,EAAEtE,GAAG,EAAEpD,KAAK,EAAE;EAC1C,MAAM4pB,KAAK,GAAGliB,MAAM,CAACsI,OAAO,CAAC5M,GAAG,CAAC;EACjC,IAAIwmB,KAAK,KAAK,CAAC,CAAC,EAAE;IAChB,OAAO80B,WAAW,CAACh3C,MAAM,EAAEtE,GAAG,EAAEpD,KAAK,CAAC;EACxC;EACA,MAAM6P,IAAI,GAAGnI,MAAM,CAACk3C,WAAW,CAACx7C,GAAG,CAAC;EACpC,OAAOwmB,KAAK,KAAK/Z,IAAI,GAAG7P,KAAK,GAAG4pB,KAAK;AACvC;AACA,MAAM0B,UAAU,GAAGA,CAACtrB,KAAK,EAAE/G,GAAG,KAAK+G,KAAK,KAAK,IAAI,GAAG,IAAI,GAAG5S,WAAW,CAACyJ,IAAI,CAACozB,KAAK,CAACjqB,KAAK,CAAC,EAAE,CAAC,EAAE/G,GAAG,CAAC;AACjG,MAAM4lD,aAAa,SAASpyB,KAAK,CAAC;EAChC/2B,WAAWA,CAAC2E,GAAG,EAAE;IACf,KAAK,CAACA,GAAG,CAAC;IACV,IAAI,CAACykD,WAAW,GAAG9oD,SAAS;IAC5B,IAAI,CAAC+oD,WAAW,GAAG,CAAC;EACtB;EACA93C,KAAKA,CAAC7D,GAAG,EAAEpD,KAAK,EAAE;IAChB,IAAItU,aAAa,CAAC0X,GAAG,CAAC,EAAE;MACtB,OAAO,IAAI;IACb;IACA,MAAMsE,MAAM,GAAG,IAAI,CAACC,SAAS,CAAC,CAAC;IAC/B3H,KAAK,GAAGg/C,QAAQ,CAACh/C,KAAK,CAAC,IAAI0H,MAAM,CAAC1H,KAAK,CAAC,KAAKoD,GAAG,GAAGpD,KAAK,GACpD2+C,cAAc,CAACj3C,MAAM,EAAEtE,GAAG,EAAExY,cAAc,CAACoV,KAAK,EAAEoD,GAAG,CAAC,CAAC;IAC3D,OAAOkoB,UAAU,CAACtrB,KAAK,EAAE0H,MAAM,CAACpQ,MAAM,GAAG,CAAC,CAAC;EAC7C;EACAk3B,mBAAmBA,CAAA,EAAG;IACpB,MAAMv3B,EAAE,GAAG,IAAI;IACf,MAAM;MAACmK,UAAU;MAAEC;IAAU,CAAC,GAAGpK,EAAE,CAACkK,aAAa,CAAC,CAAC;IACnD,IAAI;MAACrK,GAAG;MAAEmC;IAAG,CAAC,GAAGhC,EAAE,CAACoR,SAAS,CAAC,IAAI,CAAC;IACnC,IAAIpR,EAAE,CAAC8G,OAAO,CAAC6pB,MAAM,KAAK,OAAO,EAAE;MACjC,IAAI,CAACxmB,UAAU,EAAE;QACftK,GAAG,GAAG,CAAC;MACT;MACA,IAAI,CAACuK,UAAU,EAAE;QACfpI,GAAG,GAAGhC,EAAE,CAAC0Q,SAAS,CAAC,CAAC,CAACrQ,MAAM,GAAG,CAAC;MACjC;IACF;IACAL,EAAE,CAACH,GAAG,GAAGA,GAAG;IACZG,EAAE,CAACgC,GAAG,GAAGA,GAAG;EACd;EACA01B,UAAUA,CAAA,EAAG;IACX,MAAM13B,EAAE,GAAG,IAAI;IACf,MAAMH,GAAG,GAAGG,EAAE,CAACH,GAAG;IAClB,MAAMmC,GAAG,GAAGhC,EAAE,CAACgC,GAAG;IAClB,MAAMmY,MAAM,GAAGna,EAAE,CAAC8G,OAAO,CAACqT,MAAM;IAChC,MAAMrE,KAAK,GAAG,EAAE;IAChB,IAAIrF,MAAM,GAAGzQ,EAAE,CAAC0Q,SAAS,CAAC,CAAC;IAC3BD,MAAM,GAAI5Q,GAAG,KAAK,CAAC,IAAImC,GAAG,KAAKyO,MAAM,CAACpQ,MAAM,GAAG,CAAC,GAAIoQ,MAAM,GAAGA,MAAM,CAACsP,KAAK,CAAClgB,GAAG,EAAEmC,GAAG,GAAG,CAAC,CAAC;IACvFhC,EAAE,CAAC8nD,WAAW,GAAGloD,IAAI,CAACoC,GAAG,CAACyO,MAAM,CAACpQ,MAAM,IAAI8Z,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;IAC9Dna,EAAE,CAAC6nD,WAAW,GAAG7nD,EAAE,CAACH,GAAG,IAAIsa,MAAM,GAAG,GAAG,GAAG,CAAC,CAAC;IAC5C,KAAK,IAAI5S,KAAK,GAAG1H,GAAG,EAAE0H,KAAK,IAAIvF,GAAG,EAAEuF,KAAK,EAAE,EAAE;MAC3CuO,KAAK,CAACpU,IAAI,CAAC;QAAC6F;MAAK,CAAC,CAAC;IACrB;IACA,OAAOuO,KAAK;EACd;EACAhE,gBAAgBA,CAACvK,KAAK,EAAE;IACtB,MAAMvH,EAAE,GAAG,IAAI;IACf,MAAMyQ,MAAM,GAAGzQ,EAAE,CAAC0Q,SAAS,CAAC,CAAC;IAC7B,IAAInJ,KAAK,IAAI,CAAC,IAAIA,KAAK,GAAGkJ,MAAM,CAACpQ,MAAM,EAAE;MACvC,OAAOoQ,MAAM,CAAClJ,KAAK,CAAC;IACtB;IACA,OAAOA,KAAK;EACd;EACAjB,SAASA,CAAA,EAAG;IACV,MAAMtG,EAAE,GAAG,IAAI;IACf,KAAK,CAACsG,SAAS,CAAC,CAAC;IACjB,IAAI,CAACtG,EAAE,CAACgY,YAAY,CAAC,CAAC,EAAE;MACtBhY,EAAE,CAAC8kB,cAAc,GAAG,CAAC9kB,EAAE,CAAC8kB,cAAc;IACxC;EACF;EACAjP,gBAAgBA,CAACtO,KAAK,EAAE;IACtB,MAAMvH,EAAE,GAAG,IAAI;IACf,IAAI,OAAOuH,KAAK,KAAK,QAAQ,EAAE;MAC7BA,KAAK,GAAGvH,EAAE,CAACgQ,KAAK,CAACzI,KAAK,CAAC;IACzB;IACA,OAAOA,KAAK,KAAK,IAAI,GAAG4J,GAAG,GAAGnR,EAAE,CAAC0a,kBAAkB,CAAC,CAACnT,KAAK,GAAGvH,EAAE,CAAC6nD,WAAW,IAAI7nD,EAAE,CAAC8nD,WAAW,CAAC;EAChG;EACA/xC,eAAeA,CAAChN,KAAK,EAAE;IACrB,MAAM/I,EAAE,GAAG,IAAI;IACf,MAAM8V,KAAK,GAAG9V,EAAE,CAAC8V,KAAK;IACtB,IAAI/M,KAAK,GAAG,CAAC,IAAIA,KAAK,GAAG+M,KAAK,CAACzV,MAAM,GAAG,CAAC,EAAE;MACzC,OAAO,IAAI;IACb;IACA,OAAOL,EAAE,CAAC6V,gBAAgB,CAACC,KAAK,CAAC/M,KAAK,CAAC,CAACxB,KAAK,CAAC;EAChD;EACA6zB,gBAAgBA,CAACC,KAAK,EAAE;IACtB,MAAMr7B,EAAE,GAAG,IAAI;IACf,OAAOJ,IAAI,CAACozB,KAAK,CAAChzB,EAAE,CAAC6nD,WAAW,GAAG7nD,EAAE,CAACu7B,kBAAkB,CAACF,KAAK,CAAC,GAAGr7B,EAAE,CAAC8nD,WAAW,CAAC;EACnF;EACAhwC,YAAYA,CAAA,EAAG;IACb,OAAO,IAAI,CAACvP,MAAM;EACpB;AACF;AACAq/C,aAAa,CAAC39C,EAAE,GAAG,UAAU;AAC7B29C,aAAa,CAACn0D,QAAQ,GAAG;EACvBqiB,KAAK,EAAE;IACL7d,QAAQ,EAAE2vD,aAAa,CAAC3yC,SAAS,CAACnD;EACpC;AACF,CAAC;AAED,SAASk2C,eAAeA,CAACC,iBAAiB,EAAEC,SAAS,EAAE;EACrD,MAAMpyC,KAAK,GAAG,EAAE;EAChB,MAAMqyC,WAAW,GAAG,KAAK;EACzB,MAAM;IAACC,IAAI;IAAEvoD,GAAG;IAAEmC,GAAG;IAAEqmD,SAAS;IAAEp4C,KAAK;IAAEq4C;EAAQ,CAAC,GAAGL,iBAAiB;EACtE,MAAMrkC,IAAI,GAAGwkC,IAAI,IAAI,CAAC;EACtB,MAAMG,SAAS,GAAGD,QAAQ,GAAG,CAAC;EAC9B,MAAM;IAACzoD,GAAG,EAAE2oD,IAAI;IAAExmD,GAAG,EAAEymD;EAAI,CAAC,GAAGP,SAAS;EACxC,MAAM/9C,UAAU,GAAG,CAAC1V,aAAa,CAACoL,GAAG,CAAC;EACtC,MAAMuK,UAAU,GAAG,CAAC3V,aAAa,CAACuN,GAAG,CAAC;EACtC,MAAM0mD,YAAY,GAAG,CAACj0D,aAAa,CAACwb,KAAK,CAAC;EAC1C,IAAI8M,OAAO,GAAGpf,OAAO,CAAC,CAAC8qD,IAAI,GAAGD,IAAI,IAAID,SAAS,GAAG3kC,IAAI,CAAC,GAAGA,IAAI;EAC9D,IAAIhhB,MAAM,EAAE+lD,OAAO,EAAEC,OAAO,EAAEC,SAAS;EACvC,IAAI9rC,OAAO,GAAGorC,WAAW,IAAI,CAACh+C,UAAU,IAAI,CAACC,UAAU,EAAE;IACvD,OAAO,CAAC;MAAC7C,KAAK,EAAEihD;IAAI,CAAC,EAAE;MAACjhD,KAAK,EAAEkhD;IAAI,CAAC,CAAC;EACvC;EACAI,SAAS,GAAGjpD,IAAI,CAAC6zB,IAAI,CAACg1B,IAAI,GAAG1rC,OAAO,CAAC,GAAGnd,IAAI,CAACiE,KAAK,CAAC2kD,IAAI,GAAGzrC,OAAO,CAAC;EAClE,IAAI8rC,SAAS,GAAGN,SAAS,EAAE;IACzBxrC,OAAO,GAAGpf,OAAO,CAACkrD,SAAS,GAAG9rC,OAAO,GAAGwrC,SAAS,GAAG3kC,IAAI,CAAC,GAAGA,IAAI;EAClE;EACA,IAAI,CAACnvB,aAAa,CAAC4zD,SAAS,CAAC,EAAE;IAC7BzlD,MAAM,GAAGhD,IAAI,CAAC+lB,GAAG,CAAC,EAAE,EAAE0iC,SAAS,CAAC;IAChCtrC,OAAO,GAAGnd,IAAI,CAAC6zB,IAAI,CAAC1W,OAAO,GAAGna,MAAM,CAAC,GAAGA,MAAM;EAChD;EACA+lD,OAAO,GAAG/oD,IAAI,CAACiE,KAAK,CAAC2kD,IAAI,GAAGzrC,OAAO,CAAC,GAAGA,OAAO;EAC9C6rC,OAAO,GAAGhpD,IAAI,CAAC6zB,IAAI,CAACg1B,IAAI,GAAG1rC,OAAO,CAAC,GAAGA,OAAO;EAC7C,IAAI5S,UAAU,IAAIC,UAAU,IAAIg+C,IAAI,IAAIvqD,WAAW,CAAC,CAACmE,GAAG,GAAGnC,GAAG,IAAIuoD,IAAI,EAAErrC,OAAO,GAAG,IAAI,CAAC,EAAE;IACvF8rC,SAAS,GAAGjpD,IAAI,CAACC,GAAG,CAAC,CAACmC,GAAG,GAAGnC,GAAG,IAAIkd,OAAO,EAAEurC,QAAQ,CAAC;IACrDvrC,OAAO,GAAG,CAAC/a,GAAG,GAAGnC,GAAG,IAAIgpD,SAAS;IACjCF,OAAO,GAAG9oD,GAAG;IACb+oD,OAAO,GAAG5mD,GAAG;EACf,CAAC,MAAM,IAAI0mD,YAAY,EAAE;IACvBC,OAAO,GAAGx+C,UAAU,GAAGtK,GAAG,GAAG8oD,OAAO;IACpCC,OAAO,GAAGx+C,UAAU,GAAGpI,GAAG,GAAG4mD,OAAO;IACpCC,SAAS,GAAG54C,KAAK,GAAG,CAAC;IACrB8M,OAAO,GAAG,CAAC6rC,OAAO,GAAGD,OAAO,IAAIE,SAAS;EAC3C,CAAC,MAAM;IACLA,SAAS,GAAG,CAACD,OAAO,GAAGD,OAAO,IAAI5rC,OAAO;IACzC,IAAIhf,YAAY,CAAC8qD,SAAS,EAAEjpD,IAAI,CAACozB,KAAK,CAAC61B,SAAS,CAAC,EAAE9rC,OAAO,GAAG,IAAI,CAAC,EAAE;MAClE8rC,SAAS,GAAGjpD,IAAI,CAACozB,KAAK,CAAC61B,SAAS,CAAC;IACnC,CAAC,MAAM;MACLA,SAAS,GAAGjpD,IAAI,CAAC6zB,IAAI,CAACo1B,SAAS,CAAC;IAClC;EACF;EACAjmD,MAAM,GAAGhD,IAAI,CAAC+lB,GAAG,CAAC,EAAE,EAAElxB,aAAa,CAAC4zD,SAAS,CAAC,GAAGpqD,cAAc,CAAC8e,OAAO,CAAC,GAAGsrC,SAAS,CAAC;EACrFM,OAAO,GAAG/oD,IAAI,CAACozB,KAAK,CAAC21B,OAAO,GAAG/lD,MAAM,CAAC,GAAGA,MAAM;EAC/CgmD,OAAO,GAAGhpD,IAAI,CAACozB,KAAK,CAAC41B,OAAO,GAAGhmD,MAAM,CAAC,GAAGA,MAAM;EAC/C,IAAIpO,CAAC,GAAG,CAAC;EACT,IAAI2V,UAAU,EAAE;IACd2L,KAAK,CAACpU,IAAI,CAAC;MAAC6F,KAAK,EAAE1H;IAAG,CAAC,CAAC;IACxB,IAAI8oD,OAAO,GAAG9oD,GAAG,EAAE;MACjBrL,CAAC,EAAE;IACL;IACA,IAAIqJ,WAAW,CAAC+B,IAAI,CAACozB,KAAK,CAAC,CAAC21B,OAAO,GAAGn0D,CAAC,GAAGuoB,OAAO,IAAIna,MAAM,CAAC,GAAGA,MAAM,GAAG/C,GAAG,EAAEkd,OAAO,GAAG,IAAI,CAAC,EAAE;MAC5FvoB,CAAC,EAAE;IACL;EACF;EACA,OAAOA,CAAC,GAAGq0D,SAAS,EAAE,EAAEr0D,CAAC,EAAE;IACzBshB,KAAK,CAACpU,IAAI,CAAC;MAAC6F,KAAK,EAAE3H,IAAI,CAACozB,KAAK,CAAC,CAAC21B,OAAO,GAAGn0D,CAAC,GAAGuoB,OAAO,IAAIna,MAAM,CAAC,GAAGA;IAAM,CAAC,CAAC;EAC5E;EACA,IAAIwH,UAAU,EAAE;IACd,IAAIvM,WAAW,CAACiY,KAAK,CAACA,KAAK,CAACzV,MAAM,GAAG,CAAC,CAAC,CAACkH,KAAK,GAAGvF,GAAG,EAAE+a,OAAO,GAAG,IAAI,CAAC,EAAE;MACpEjH,KAAK,CAACA,KAAK,CAACzV,MAAM,GAAG,CAAC,CAAC,CAACkH,KAAK,GAAGvF,GAAG;IACrC,CAAC,MAAM;MACL8T,KAAK,CAACpU,IAAI,CAAC;QAAC6F,KAAK,EAAEvF;MAAG,CAAC,CAAC;IAC1B;EACF,CAAC,MAAM;IACL8T,KAAK,CAACpU,IAAI,CAAC;MAAC6F,KAAK,EAAEqhD;IAAO,CAAC,CAAC;EAC9B;EACA,OAAO9yC,KAAK;AACd;AACA,MAAMgzC,eAAe,SAAStzB,KAAK,CAAC;EAClC/2B,WAAWA,CAAC2E,GAAG,EAAE;IACf,KAAK,CAACA,GAAG,CAAC;IACV,IAAI,CAACtD,KAAK,GAAGf,SAAS;IACtB,IAAI,CAACkJ,GAAG,GAAGlJ,SAAS;IACpB,IAAI,CAAC8oD,WAAW,GAAG9oD,SAAS;IAC5B,IAAI,CAACgqD,SAAS,GAAGhqD,SAAS;IAC1B,IAAI,CAAC+oD,WAAW,GAAG,CAAC;EACtB;EACA93C,KAAKA,CAAC7D,GAAG,EAAEpD,KAAK,EAAE;IAChB,IAAItU,aAAa,CAAC0X,GAAG,CAAC,EAAE;MACtB,OAAO,IAAI;IACb;IACA,IAAI,CAAC,OAAOA,GAAG,KAAK,QAAQ,IAAIA,GAAG,YAAY9B,MAAM,KAAK,CAAC09C,QAAQ,CAAC,CAAC57C,GAAG,CAAC,EAAE;MACzE,OAAO,IAAI;IACb;IACA,OAAO,CAACA,GAAG;EACb;EACA68C,sBAAsBA,CAAA,EAAG;IACvB,MAAMhpD,EAAE,GAAG,IAAI;IACf,MAAM;MAACsa,WAAW;MAAEzQ;IAAO,CAAC,GAAG7J,EAAE,CAAC8G,OAAO;IACzC,MAAM;MAACqD,UAAU;MAAEC;IAAU,CAAC,GAAGpK,EAAE,CAACkK,aAAa,CAAC,CAAC;IACnD,IAAI;MAACrK,GAAG;MAAEmC;IAAG,CAAC,GAAGhC,EAAE;IACnB,MAAMipD,MAAM,GAAGv1D,CAAC,IAAKmM,GAAG,GAAGsK,UAAU,GAAGtK,GAAG,GAAGnM,CAAE;IAChD,MAAMw1D,MAAM,GAAGx1D,CAAC,IAAKsO,GAAG,GAAGoI,UAAU,GAAGpI,GAAG,GAAGtO,CAAE;IAChD,IAAI4mB,WAAW,IAAIzQ,OAAO,EAAE;MAC1B,MAAMs/C,OAAO,GAAG50D,IAAI,CAACsL,GAAG,CAAC;MACzB,MAAMupD,OAAO,GAAG70D,IAAI,CAACyN,GAAG,CAAC;MACzB,IAAImnD,OAAO,GAAG,CAAC,IAAIC,OAAO,GAAG,CAAC,EAAE;QAC9BF,MAAM,CAAC,CAAC,CAAC;MACX,CAAC,MAAM,IAAIC,OAAO,GAAG,CAAC,IAAIC,OAAO,GAAG,CAAC,EAAE;QACrCH,MAAM,CAAC,CAAC,CAAC;MACX;IACF;IACA,IAAIppD,GAAG,KAAKmC,GAAG,EAAE;MACfknD,MAAM,CAAClnD,GAAG,GAAG,CAAC,CAAC;MACf,IAAI,CAACsY,WAAW,EAAE;QAChB2uC,MAAM,CAACppD,GAAG,GAAG,CAAC,CAAC;MACjB;IACF;IACAG,EAAE,CAACH,GAAG,GAAGA,GAAG;IACZG,EAAE,CAACgC,GAAG,GAAGA,GAAG;EACd;EACAqnD,YAAYA,CAAA,EAAG;IACb,MAAMrpD,EAAE,GAAG,IAAI;IACf,MAAMmyB,QAAQ,GAAGnyB,EAAE,CAAC8G,OAAO,CAACgP,KAAK;IACjC,IAAI;MAACuc,aAAa;MAAEi3B;IAAQ,CAAC,GAAGn3B,QAAQ;IACxC,IAAIm2B,QAAQ;IACZ,IAAIgB,QAAQ,EAAE;MACZhB,QAAQ,GAAG1oD,IAAI,CAAC6zB,IAAI,CAACzzB,EAAE,CAACgC,GAAG,GAAGsnD,QAAQ,CAAC,GAAG1pD,IAAI,CAACiE,KAAK,CAAC7D,EAAE,CAACH,GAAG,GAAGypD,QAAQ,CAAC,GAAG,CAAC;IAC7E,CAAC,MAAM;MACLhB,QAAQ,GAAGtoD,EAAE,CAACupD,gBAAgB,CAAC,CAAC;MAChCl3B,aAAa,GAAGA,aAAa,IAAI,EAAE;IACrC;IACA,IAAIA,aAAa,EAAE;MACjBi2B,QAAQ,GAAG1oD,IAAI,CAACC,GAAG,CAACwyB,aAAa,EAAEi2B,QAAQ,CAAC;IAC9C;IACA,OAAOA,QAAQ;EACjB;EACAiB,gBAAgBA,CAAA,EAAG;IACjB,OAAOl/C,MAAM,CAACE,iBAAiB;EACjC;EACAmtB,UAAUA,CAAA,EAAG;IACX,MAAM13B,EAAE,GAAG,IAAI;IACf,MAAM+H,IAAI,GAAG/H,EAAE,CAAC8G,OAAO;IACvB,MAAMqrB,QAAQ,GAAGpqB,IAAI,CAAC+N,KAAK;IAC3B,IAAIwyC,QAAQ,GAAGtoD,EAAE,CAACqpD,YAAY,CAAC,CAAC;IAChCf,QAAQ,GAAG1oD,IAAI,CAACoC,GAAG,CAAC,CAAC,EAAEsmD,QAAQ,CAAC;IAChC,MAAMkB,uBAAuB,GAAG;MAC9BlB,QAAQ;MACRzoD,GAAG,EAAEkI,IAAI,CAAClI,GAAG;MACbmC,GAAG,EAAE+F,IAAI,CAAC/F,GAAG;MACbqmD,SAAS,EAAEl2B,QAAQ,CAACk2B,SAAS;MAC7BD,IAAI,EAAEj2B,QAAQ,CAACm3B,QAAQ;MACvBr5C,KAAK,EAAEkiB,QAAQ,CAACliB;IAClB,CAAC;IACD,MAAM6F,KAAK,GAAGkyC,eAAe,CAACwB,uBAAuB,EAAEjsD,SAAS,CAACyC,EAAE,EAAE+H,IAAI,CAAC6oB,KAAK,CAAC,CAAC;IACjF,IAAI7oB,IAAI,CAAC4oB,MAAM,KAAK,OAAO,EAAE;MAC3BlzB,kBAAkB,CAACqY,KAAK,EAAE9V,EAAE,EAAE,OAAO,CAAC;IACxC;IACA,IAAI+H,IAAI,CAACC,OAAO,EAAE;MAChB8N,KAAK,CAAC9N,OAAO,CAAC,CAAC;MACfhI,EAAE,CAACF,KAAK,GAAGE,EAAE,CAACgC,GAAG;MACjBhC,EAAE,CAACiI,GAAG,GAAGjI,EAAE,CAACH,GAAG;IACjB,CAAC,MAAM;MACLG,EAAE,CAACF,KAAK,GAAGE,EAAE,CAACH,GAAG;MACjBG,EAAE,CAACiI,GAAG,GAAGjI,EAAE,CAACgC,GAAG;IACjB;IACA,OAAO8T,KAAK;EACd;EACAxP,SAASA,CAAA,EAAG;IACV,MAAMtG,EAAE,GAAG,IAAI;IACf,MAAM8V,KAAK,GAAG9V,EAAE,CAAC8V,KAAK;IACtB,IAAIhW,KAAK,GAAGE,EAAE,CAACH,GAAG;IAClB,IAAIoI,GAAG,GAAGjI,EAAE,CAACgC,GAAG;IAChB,KAAK,CAACsE,SAAS,CAAC,CAAC;IACjB,IAAItG,EAAE,CAAC8G,OAAO,CAACqT,MAAM,IAAIrE,KAAK,CAACzV,MAAM,EAAE;MACrC,MAAM8Z,MAAM,GAAG,CAAClS,GAAG,GAAGnI,KAAK,IAAIF,IAAI,CAACoC,GAAG,CAAC8T,KAAK,CAACzV,MAAM,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC;MAChEP,KAAK,IAAIqa,MAAM;MACflS,GAAG,IAAIkS,MAAM;IACf;IACAna,EAAE,CAAC6nD,WAAW,GAAG/nD,KAAK;IACtBE,EAAE,CAAC+oD,SAAS,GAAG9gD,GAAG;IAClBjI,EAAE,CAAC8nD,WAAW,GAAG7/C,GAAG,GAAGnI,KAAK;EAC9B;EACAgS,gBAAgBA,CAACvK,KAAK,EAAE;IACtB,OAAO9R,YAAY,CAAC8R,KAAK,EAAE,IAAI,CAACtI,KAAK,CAAC6H,OAAO,CAACwX,MAAM,CAAC;EACvD;AACF;AAEA,MAAMmrC,WAAW,SAASX,eAAe,CAAC;EACxCvxB,mBAAmBA,CAAA,EAAG;IACpB,MAAMv3B,EAAE,GAAG,IAAI;IACf,MAAM;MAACH,GAAG;MAAEmC;IAAG,CAAC,GAAGhC,EAAE,CAACoR,SAAS,CAAC,IAAI,CAAC;IACrCpR,EAAE,CAACH,GAAG,GAAG1L,cAAc,CAAC0L,GAAG,CAAC,GAAGA,GAAG,GAAG,CAAC;IACtCG,EAAE,CAACgC,GAAG,GAAG7N,cAAc,CAAC6N,GAAG,CAAC,GAAGA,GAAG,GAAG,CAAC;IACtChC,EAAE,CAACgpD,sBAAsB,CAAC,CAAC;EAC7B;EACAO,gBAAgBA,CAAA,EAAG;IACjB,MAAMvpD,EAAE,GAAG,IAAI;IACf,IAAIA,EAAE,CAACgY,YAAY,CAAC,CAAC,EAAE;MACrB,OAAOpY,IAAI,CAAC6zB,IAAI,CAACzzB,EAAE,CAAC0Y,KAAK,GAAG,EAAE,CAAC;IACjC;IACA,MAAMmiB,QAAQ,GAAG76B,EAAE,CAACg7B,uBAAuB,CAAC,CAAC,CAAC;IAC9C,OAAOp7B,IAAI,CAAC6zB,IAAI,CAACzzB,EAAE,CAACyY,MAAM,GAAGoiB,QAAQ,CAAC5F,UAAU,CAAC;EACnD;EACApf,gBAAgBA,CAACtO,KAAK,EAAE;IACtB,OAAOA,KAAK,KAAK,IAAI,GAAG4J,GAAG,GAAG,IAAI,CAACuJ,kBAAkB,CAAC,CAACnT,KAAK,GAAG,IAAI,CAACsgD,WAAW,IAAI,IAAI,CAACC,WAAW,CAAC;EACtG;EACA1sB,gBAAgBA,CAACC,KAAK,EAAE;IACtB,OAAO,IAAI,CAACwsB,WAAW,GAAG,IAAI,CAACtsB,kBAAkB,CAACF,KAAK,CAAC,GAAG,IAAI,CAACysB,WAAW;EAC7E;AACF;AACA2B,WAAW,CAACx/C,EAAE,GAAG,QAAQ;AACzBw/C,WAAW,CAACh2D,QAAQ,GAAG;EACrBqiB,KAAK,EAAE;IACL7d,QAAQ,EAAEy4B,KAAK,CAACZ,UAAU,CAACC;EAC7B;AACF,CAAC;AAED,SAAS25B,OAAOA,CAACC,OAAO,EAAE;EACxB,MAAMllD,MAAM,GAAGklD,OAAO,GAAI/pD,IAAI,CAAC+lB,GAAG,CAAC,EAAE,EAAE/lB,IAAI,CAACiE,KAAK,CAAClM,KAAK,CAACgyD,OAAO,CAAC,CAAC,CAAE;EACnE,OAAOllD,MAAM,KAAK,CAAC;AACrB;AACA,SAASmlD,aAAaA,CAAC3B,iBAAiB,EAAEC,SAAS,EAAE;EACnD,MAAM2B,MAAM,GAAGjqD,IAAI,CAACiE,KAAK,CAAClM,KAAK,CAACuwD,SAAS,CAAClmD,GAAG,CAAC,CAAC;EAC/C,MAAM8nD,cAAc,GAAGlqD,IAAI,CAAC6zB,IAAI,CAACy0B,SAAS,CAAClmD,GAAG,GAAGpC,IAAI,CAAC+lB,GAAG,CAAC,EAAE,EAAEkkC,MAAM,CAAC,CAAC;EACtE,MAAM/zC,KAAK,GAAG,EAAE;EAChB,IAAI6zC,OAAO,GAAG5xD,eAAe,CAACkwD,iBAAiB,CAACpoD,GAAG,EAAED,IAAI,CAAC+lB,GAAG,CAAC,EAAE,EAAE/lB,IAAI,CAACiE,KAAK,CAAClM,KAAK,CAACuwD,SAAS,CAACroD,GAAG,CAAC,CAAC,CAAC,CAAC;EACpG,IAAIkqD,GAAG,GAAGnqD,IAAI,CAACiE,KAAK,CAAClM,KAAK,CAACgyD,OAAO,CAAC,CAAC;EACpC,IAAIK,WAAW,GAAGpqD,IAAI,CAACiE,KAAK,CAAC8lD,OAAO,GAAG/pD,IAAI,CAAC+lB,GAAG,CAAC,EAAE,EAAEokC,GAAG,CAAC,CAAC;EACzD,IAAI1B,SAAS,GAAG0B,GAAG,GAAG,CAAC,GAAGnqD,IAAI,CAAC+lB,GAAG,CAAC,EAAE,EAAE/lB,IAAI,CAACgW,GAAG,CAACm0C,GAAG,CAAC,CAAC,GAAG,CAAC;EACzD,GAAG;IACDj0C,KAAK,CAACpU,IAAI,CAAC;MAAC6F,KAAK,EAAEoiD,OAAO;MAAE73B,KAAK,EAAE43B,OAAO,CAACC,OAAO;IAAC,CAAC,CAAC;IACrD,EAAEK,WAAW;IACb,IAAIA,WAAW,KAAK,EAAE,EAAE;MACtBA,WAAW,GAAG,CAAC;MACf,EAAED,GAAG;MACL1B,SAAS,GAAG0B,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG1B,SAAS;IACtC;IACAsB,OAAO,GAAG/pD,IAAI,CAACozB,KAAK,CAACg3B,WAAW,GAAGpqD,IAAI,CAAC+lB,GAAG,CAAC,EAAE,EAAEokC,GAAG,CAAC,GAAG1B,SAAS,CAAC,GAAGA,SAAS;EAC/E,CAAC,QAAQ0B,GAAG,GAAGF,MAAM,IAAKE,GAAG,KAAKF,MAAM,IAAIG,WAAW,GAAGF,cAAe;EACzE,MAAMG,QAAQ,GAAGlyD,eAAe,CAACkwD,iBAAiB,CAACjmD,GAAG,EAAE2nD,OAAO,CAAC;EAChE7zC,KAAK,CAACpU,IAAI,CAAC;IAAC6F,KAAK,EAAE0iD,QAAQ;IAAEn4B,KAAK,EAAE43B,OAAO,CAACC,OAAO;EAAC,CAAC,CAAC;EACtD,OAAO7zC,KAAK;AACd;AACA,MAAMo0C,gBAAgB,SAAS10B,KAAK,CAAC;EACnC/2B,WAAWA,CAAC2E,GAAG,EAAE;IACf,KAAK,CAACA,GAAG,CAAC;IACV,IAAI,CAACtD,KAAK,GAAGf,SAAS;IACtB,IAAI,CAACkJ,GAAG,GAAGlJ,SAAS;IACpB,IAAI,CAAC8oD,WAAW,GAAG9oD,SAAS;IAC5B,IAAI,CAAC+oD,WAAW,GAAG,CAAC;EACtB;EACA93C,KAAKA,CAAC7D,GAAG,EAAEpD,KAAK,EAAE;IAChB,MAAMxB,KAAK,GAAGuhD,eAAe,CAAC7zC,SAAS,CAACjF,KAAK,CAAC4vC,KAAK,CAAC,IAAI,EAAE,CAACzzC,GAAG,EAAEpD,KAAK,CAAC,CAAC;IACvE,IAAIxB,KAAK,KAAK,CAAC,EAAE;MACf,IAAI,CAAC4iD,KAAK,GAAG,IAAI;MACjB,OAAOprD,SAAS;IAClB;IACA,OAAO5K,cAAc,CAACoT,KAAK,CAAC,IAAIA,KAAK,GAAG,CAAC,GAAGA,KAAK,GAAG,IAAI;EAC1D;EACAgwB,mBAAmBA,CAAA,EAAG;IACpB,MAAMv3B,EAAE,GAAG,IAAI;IACf,MAAM;MAACH,GAAG;MAAEmC;IAAG,CAAC,GAAGhC,EAAE,CAACoR,SAAS,CAAC,IAAI,CAAC;IACrCpR,EAAE,CAACH,GAAG,GAAG1L,cAAc,CAAC0L,GAAG,CAAC,GAAGD,IAAI,CAACoC,GAAG,CAAC,CAAC,EAAEnC,GAAG,CAAC,GAAG,IAAI;IACtDG,EAAE,CAACgC,GAAG,GAAG7N,cAAc,CAAC6N,GAAG,CAAC,GAAGpC,IAAI,CAACoC,GAAG,CAAC,CAAC,EAAEA,GAAG,CAAC,GAAG,IAAI;IACtD,IAAIhC,EAAE,CAAC8G,OAAO,CAACwT,WAAW,EAAE;MAC1Bta,EAAE,CAACmqD,KAAK,GAAG,IAAI;IACjB;IACAnqD,EAAE,CAACgpD,sBAAsB,CAAC,CAAC;EAC7B;EACAA,sBAAsBA,CAAA,EAAG;IACvB,MAAMhpD,EAAE,GAAG,IAAI;IACf,MAAM;MAACmK,UAAU;MAAEC;IAAU,CAAC,GAAGpK,EAAE,CAACkK,aAAa,CAAC,CAAC;IACnD,IAAIrK,GAAG,GAAGG,EAAE,CAACH,GAAG;IAChB,IAAImC,GAAG,GAAGhC,EAAE,CAACgC,GAAG;IAChB,MAAMinD,MAAM,GAAGv1D,CAAC,IAAKmM,GAAG,GAAGsK,UAAU,GAAGtK,GAAG,GAAGnM,CAAE;IAChD,MAAMw1D,MAAM,GAAGx1D,CAAC,IAAKsO,GAAG,GAAGoI,UAAU,GAAGpI,GAAG,GAAGtO,CAAE;IAChD,MAAMq2D,GAAG,GAAGA,CAACr2D,CAAC,EAAEkB,CAAC,KAAKgL,IAAI,CAAC+lB,GAAG,CAAC,EAAE,EAAE/lB,IAAI,CAACiE,KAAK,CAAClM,KAAK,CAACjE,CAAC,CAAC,CAAC,GAAGkB,CAAC,CAAC;IAC5D,IAAIiL,GAAG,KAAKmC,GAAG,EAAE;MACf,IAAInC,GAAG,IAAI,CAAC,EAAE;QACZopD,MAAM,CAAC,CAAC,CAAC;QACTC,MAAM,CAAC,EAAE,CAAC;MACZ,CAAC,MAAM;QACLD,MAAM,CAACc,GAAG,CAAClqD,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;QACpBqpD,MAAM,CAACa,GAAG,CAAC/nD,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;MACtB;IACF;IACA,IAAInC,GAAG,IAAI,CAAC,EAAE;MACZopD,MAAM,CAACc,GAAG,CAAC/nD,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;IACtB;IACA,IAAIA,GAAG,IAAI,CAAC,EAAE;MACZknD,MAAM,CAACa,GAAG,CAAClqD,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;IACtB;IACA,IAAIG,EAAE,CAACmqD,KAAK,IAAInqD,EAAE,CAACH,GAAG,KAAKG,EAAE,CAACs2B,aAAa,IAAIz2B,GAAG,KAAKkqD,GAAG,CAAC/pD,EAAE,CAACH,GAAG,EAAE,CAAC,CAAC,EAAE;MACrEopD,MAAM,CAACc,GAAG,CAAClqD,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;IACtB;IACAG,EAAE,CAACH,GAAG,GAAGA,GAAG;IACZG,EAAE,CAACgC,GAAG,GAAGA,GAAG;EACd;EACA01B,UAAUA,CAAA,EAAG;IACX,MAAM13B,EAAE,GAAG,IAAI;IACf,MAAM+H,IAAI,GAAG/H,EAAE,CAAC8G,OAAO;IACvB,MAAMmhD,iBAAiB,GAAG;MACxBpoD,GAAG,EAAEG,EAAE,CAACo2B,QAAQ;MAChBp0B,GAAG,EAAEhC,EAAE,CAACm2B;IACV,CAAC;IACD,MAAMrgB,KAAK,GAAG8zC,aAAa,CAAC3B,iBAAiB,EAAEjoD,EAAE,CAAC;IAClD,IAAI+H,IAAI,CAAC4oB,MAAM,KAAK,OAAO,EAAE;MAC3BlzB,kBAAkB,CAACqY,KAAK,EAAE9V,EAAE,EAAE,OAAO,CAAC;IACxC;IACA,IAAI+H,IAAI,CAACC,OAAO,EAAE;MAChB8N,KAAK,CAAC9N,OAAO,CAAC,CAAC;MACfhI,EAAE,CAACF,KAAK,GAAGE,EAAE,CAACgC,GAAG;MACjBhC,EAAE,CAACiI,GAAG,GAAGjI,EAAE,CAACH,GAAG;IACjB,CAAC,MAAM;MACLG,EAAE,CAACF,KAAK,GAAGE,EAAE,CAACH,GAAG;MACjBG,EAAE,CAACiI,GAAG,GAAGjI,EAAE,CAACgC,GAAG;IACjB;IACA,OAAO8T,KAAK;EACd;EACAhE,gBAAgBA,CAACvK,KAAK,EAAE;IACtB,OAAOA,KAAK,KAAKxI,SAAS,GAAG,GAAG,GAAGtJ,YAAY,CAAC8R,KAAK,EAAE,IAAI,CAACtI,KAAK,CAAC6H,OAAO,CAACwX,MAAM,CAAC;EACnF;EACAhY,SAASA,CAAA,EAAG;IACV,MAAMtG,EAAE,GAAG,IAAI;IACf,MAAMF,KAAK,GAAGE,EAAE,CAACH,GAAG;IACpB,KAAK,CAACyG,SAAS,CAAC,CAAC;IACjBtG,EAAE,CAAC6nD,WAAW,GAAGlwD,KAAK,CAACmI,KAAK,CAAC;IAC7BE,EAAE,CAAC8nD,WAAW,GAAGnwD,KAAK,CAACqI,EAAE,CAACgC,GAAG,CAAC,GAAGrK,KAAK,CAACmI,KAAK,CAAC;EAC/C;EACA+V,gBAAgBA,CAACtO,KAAK,EAAE;IACtB,MAAMvH,EAAE,GAAG,IAAI;IACf,IAAIuH,KAAK,KAAKxI,SAAS,IAAIwI,KAAK,KAAK,CAAC,EAAE;MACtCA,KAAK,GAAGvH,EAAE,CAACH,GAAG;IAChB;IACA,OAAOG,EAAE,CAAC0a,kBAAkB,CAACnT,KAAK,KAAKvH,EAAE,CAACH,GAAG,GACzC,CAAC,GACD,CAAClI,KAAK,CAAC4P,KAAK,CAAC,GAAGvH,EAAE,CAAC6nD,WAAW,IAAI7nD,EAAE,CAAC8nD,WAAW,CAAC;EACvD;EACA1sB,gBAAgBA,CAACC,KAAK,EAAE;IACtB,MAAMr7B,EAAE,GAAG,IAAI;IACf,MAAMs7B,OAAO,GAAGt7B,EAAE,CAACu7B,kBAAkB,CAACF,KAAK,CAAC;IAC5C,OAAOz7B,IAAI,CAAC+lB,GAAG,CAAC,EAAE,EAAE3lB,EAAE,CAAC6nD,WAAW,GAAGvsB,OAAO,GAAGt7B,EAAE,CAAC8nD,WAAW,CAAC;EAChE;AACF;AACAoC,gBAAgB,CAACjgD,EAAE,GAAG,aAAa;AACnCigD,gBAAgB,CAACz2D,QAAQ,GAAG;EAC1BqiB,KAAK,EAAE;IACL7d,QAAQ,EAAEy4B,KAAK,CAACZ,UAAU,CAACW,WAAW;IACtCqB,KAAK,EAAE;MACLU,OAAO,EAAE;IACX;EACF;AACF,CAAC;AAED,SAAS43B,qBAAqBA,CAACriD,IAAI,EAAE;EACnC,MAAMoqB,QAAQ,GAAGpqB,IAAI,CAAC+N,KAAK;EAC3B,IAAIqc,QAAQ,CAAC1P,OAAO,IAAI1a,IAAI,CAAC0a,OAAO,EAAE;IACpC,MAAMyH,OAAO,GAAGrzB,SAAS,CAACs7B,QAAQ,CAACk4B,eAAe,CAAC;IACnD,OAAO12D,cAAc,CAACw+B,QAAQ,CAAC4C,IAAI,IAAI5C,QAAQ,CAAC4C,IAAI,CAACvtB,IAAI,EAAE/T,QAAQ,CAACshC,IAAI,CAACvtB,IAAI,CAAC,GAAG0iB,OAAO,CAACzR,MAAM;EACjG;EACA,OAAO,CAAC;AACV;AACA,SAAS6xC,gBAAgBA,CAAC19C,GAAG,EAAEqoB,UAAU,EAAEpjB,KAAK,EAAE;EAChD,IAAIte,OAAO,CAACse,KAAK,CAAC,EAAE;IAClB,OAAO;MACL7b,CAAC,EAAEmI,YAAY,CAACyO,GAAG,EAAEA,GAAG,CAACmoB,IAAI,EAAEljB,KAAK,CAAC;MACrCzd,CAAC,EAAEyd,KAAK,CAACxR,MAAM,GAAG40B;IACpB,CAAC;EACH;EACA,OAAO;IACLj/B,CAAC,EAAE4W,GAAG,CAACqvC,WAAW,CAACpqC,KAAK,CAAC,CAAC6G,KAAK;IAC/BtkB,CAAC,EAAE6gC;EACL,CAAC;AACH;AACA,SAASs1B,eAAeA,CAACtuC,KAAK,EAAE8K,GAAG,EAAEvf,IAAI,EAAE3H,GAAG,EAAEmC,GAAG,EAAE;EACnD,IAAIia,KAAK,KAAKpc,GAAG,IAAIoc,KAAK,KAAKja,GAAG,EAAE;IAClC,OAAO;MACLlC,KAAK,EAAEinB,GAAG,GAAIvf,IAAI,GAAG,CAAE;MACvBS,GAAG,EAAE8e,GAAG,GAAIvf,IAAI,GAAG;IACrB,CAAC;EACH,CAAC,MAAM,IAAIyU,KAAK,GAAGpc,GAAG,IAAIoc,KAAK,GAAGja,GAAG,EAAE;IACrC,OAAO;MACLlC,KAAK,EAAEinB,GAAG,GAAGvf,IAAI;MACjBS,GAAG,EAAE8e;IACP,CAAC;EACH;EACA,OAAO;IACLjnB,KAAK,EAAEinB,GAAG;IACV9e,GAAG,EAAE8e,GAAG,GAAGvf;EACb,CAAC;AACH;AACA,SAASgjD,kBAAkBA,CAAC3iD,KAAK,EAAE;EACjC,MAAM4iD,cAAc,GAAG;IACrB32D,CAAC,EAAE,CAAC;IACJlB,CAAC,EAAEiV,KAAK,CAAC6Q,KAAK;IACd1jB,CAAC,EAAE,CAAC;IACJ1B,CAAC,EAAEuU,KAAK,CAAC4Q,MAAM,GAAG5Q,KAAK,CAAC6tB;EAC1B,CAAC;EACD,MAAMg1B,cAAc,GAAG,CAAC,CAAC;EACzB,IAAIt3D,CAAC,EAAE2rD,QAAQ,EAAEh8B,aAAa;EAC9B,MAAMoW,UAAU,GAAG,EAAE;EACrB,MAAMjP,OAAO,GAAG,EAAE;EAClB,MAAMygC,UAAU,GAAG9iD,KAAK,CAAC6I,SAAS,CAAC,CAAC,CAACrQ,MAAM;EAC3C,KAAKjN,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGu3D,UAAU,EAAEv3D,CAAC,EAAE,EAAE;IAC/B,MAAM2U,IAAI,GAAGF,KAAK,CAACf,OAAO,CAAC6b,WAAW,CAACoZ,UAAU,CAACl0B,KAAK,CAACiI,UAAU,CAAC1c,CAAC,CAAC,CAAC;IACtE82B,OAAO,CAAC92B,CAAC,CAAC,GAAG2U,IAAI,CAACmiB,OAAO;IACzBnH,aAAa,GAAGlb,KAAK,CAAC+iD,gBAAgB,CAACx3D,CAAC,EAAEyU,KAAK,CAACgjD,WAAW,GAAG3gC,OAAO,CAAC92B,CAAC,CAAC,CAAC;IACzE,MAAM03D,MAAM,GAAGjyD,MAAM,CAACkP,IAAI,CAACgtB,IAAI,CAAC;IAChCltB,KAAK,CAAC+E,GAAG,CAACmoB,IAAI,GAAG+1B,MAAM,CAAC7vB,MAAM;IAC9B8jB,QAAQ,GAAGuL,gBAAgB,CAACziD,KAAK,CAAC+E,GAAG,EAAEk+C,MAAM,CAAC71B,UAAU,EAAEptB,KAAK,CAACkjD,YAAY,CAAC33D,CAAC,CAAC,CAAC;IAChF+lC,UAAU,CAAC/lC,CAAC,CAAC,GAAG2rD,QAAQ;IACxB,MAAMjlB,YAAY,GAAGjyB,KAAK,CAACsa,aAAa,CAAC/uB,CAAC,CAAC;IAC3C,MAAM6oB,KAAK,GAAG9jB,SAAS,CAAC2hC,YAAY,CAAC;IACrC,MAAMkxB,OAAO,GAAGT,eAAe,CAACtuC,KAAK,EAAE8G,aAAa,CAAC7sB,CAAC,EAAE6oD,QAAQ,CAAC/oD,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC;IAC3E,MAAMi1D,OAAO,GAAGV,eAAe,CAACtuC,KAAK,EAAE8G,aAAa,CAAC3sB,CAAC,EAAE2oD,QAAQ,CAAC3qD,CAAC,EAAE,EAAE,EAAE,GAAG,CAAC;IAC5E,IAAI42D,OAAO,CAAClrD,KAAK,GAAG2qD,cAAc,CAAC32D,CAAC,EAAE;MACpC22D,cAAc,CAAC32D,CAAC,GAAGk3D,OAAO,CAAClrD,KAAK;MAChC4qD,cAAc,CAAC52D,CAAC,GAAGgmC,YAAY;IACjC;IACA,IAAIkxB,OAAO,CAAC/iD,GAAG,GAAGwiD,cAAc,CAAC73D,CAAC,EAAE;MAClC63D,cAAc,CAAC73D,CAAC,GAAGo4D,OAAO,CAAC/iD,GAAG;MAC9ByiD,cAAc,CAAC93D,CAAC,GAAGknC,YAAY;IACjC;IACA,IAAImxB,OAAO,CAACnrD,KAAK,GAAG2qD,cAAc,CAACz1D,CAAC,EAAE;MACpCy1D,cAAc,CAACz1D,CAAC,GAAGi2D,OAAO,CAACnrD,KAAK;MAChC4qD,cAAc,CAAC11D,CAAC,GAAG8kC,YAAY;IACjC;IACA,IAAImxB,OAAO,CAAChjD,GAAG,GAAGwiD,cAAc,CAACn3D,CAAC,EAAE;MAClCm3D,cAAc,CAACn3D,CAAC,GAAG23D,OAAO,CAAChjD,GAAG;MAC9ByiD,cAAc,CAACp3D,CAAC,GAAGwmC,YAAY;IACjC;EACF;EACAjyB,KAAK,CAACqjD,cAAc,CAACrjD,KAAK,CAACgjD,WAAW,EAAEJ,cAAc,EAAEC,cAAc,CAAC;EACvE7iD,KAAK,CAACsjD,gBAAgB,GAAG,EAAE;EAC3B,MAAMpjD,IAAI,GAAGF,KAAK,CAACf,OAAO;EAC1B,MAAMskD,kBAAkB,GAAGhB,qBAAqB,CAACriD,IAAI,CAAC;EACtD,MAAMsjD,aAAa,GAAGxjD,KAAK,CAAC0a,6BAA6B,CAACxa,IAAI,CAAC+N,KAAK,CAAC9N,OAAO,GAAGH,KAAK,CAAChI,GAAG,GAAGgI,KAAK,CAAC7F,GAAG,CAAC;EACrG,KAAK5O,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGu3D,UAAU,EAAEv3D,CAAC,EAAE,EAAE;IAC/B,MAAMk4D,KAAK,GAAIl4D,CAAC,KAAK,CAAC,GAAGg4D,kBAAkB,GAAG,CAAC,GAAG,CAAE;IACpD,MAAMG,kBAAkB,GAAG1jD,KAAK,CAAC+iD,gBAAgB,CAACx3D,CAAC,EAAEi4D,aAAa,GAAGC,KAAK,GAAGphC,OAAO,CAAC92B,CAAC,CAAC,CAAC;IACxF,MAAM6oB,KAAK,GAAG9jB,SAAS,CAAC0P,KAAK,CAACsa,aAAa,CAAC/uB,CAAC,CAAC,CAAC;IAC/C,MAAMoU,IAAI,GAAG2xB,UAAU,CAAC/lC,CAAC,CAAC;IAC1Bo4D,iCAAiC,CAACvvC,KAAK,EAAEzU,IAAI,EAAE+jD,kBAAkB,CAAC;IAClE,MAAMnuB,SAAS,GAAGquB,oBAAoB,CAACxvC,KAAK,CAAC;IAC7C,IAAIzT,IAAI;IACR,IAAI40B,SAAS,KAAK,MAAM,EAAE;MACxB50B,IAAI,GAAG+iD,kBAAkB,CAACr1D,CAAC;IAC7B,CAAC,MAAM,IAAIknC,SAAS,KAAK,QAAQ,EAAE;MACjC50B,IAAI,GAAG+iD,kBAAkB,CAACr1D,CAAC,GAAIsR,IAAI,CAACxR,CAAC,GAAG,CAAE;IAC5C,CAAC,MAAM;MACLwS,IAAI,GAAG+iD,kBAAkB,CAACr1D,CAAC,GAAGsR,IAAI,CAACxR,CAAC;IACtC;IACA,MAAMsS,KAAK,GAAGE,IAAI,GAAGhB,IAAI,CAACxR,CAAC;IAC3B6R,KAAK,CAACsjD,gBAAgB,CAAC/3D,CAAC,CAAC,GAAG;MAC1B8C,CAAC,EAAEq1D,kBAAkB,CAACr1D,CAAC;MACvBE,CAAC,EAAEm1D,kBAAkB,CAACn1D,CAAC;MACvBgnC,SAAS;MACT50B,IAAI;MACJH,GAAG,EAAEkjD,kBAAkB,CAACn1D,CAAC;MACzBkS,KAAK;MACLC,MAAM,EAAEgjD,kBAAkB,CAACn1D,CAAC,GAAGoR,IAAI,CAACpT;IACtC,CAAC;EACH;AACF;AACA,SAASq3D,oBAAoBA,CAACxvC,KAAK,EAAE;EACnC,IAAIA,KAAK,KAAK,CAAC,IAAIA,KAAK,KAAK,GAAG,EAAE;IAChC,OAAO,QAAQ;EACjB,CAAC,MAAM,IAAIA,KAAK,GAAG,GAAG,EAAE;IACtB,OAAO,MAAM;EACf;EACA,OAAO,OAAO;AAChB;AACA,SAASuvC,iCAAiCA,CAACvvC,KAAK,EAAE8iC,QAAQ,EAAE75B,QAAQ,EAAE;EACpE,IAAIjJ,KAAK,KAAK,EAAE,IAAIA,KAAK,KAAK,GAAG,EAAE;IACjCiJ,QAAQ,CAAC9uB,CAAC,IAAK2oD,QAAQ,CAAC3qD,CAAC,GAAG,CAAE;EAChC,CAAC,MAAM,IAAI6nB,KAAK,GAAG,GAAG,IAAIA,KAAK,GAAG,EAAE,EAAE;IACpCiJ,QAAQ,CAAC9uB,CAAC,IAAI2oD,QAAQ,CAAC3qD,CAAC;EAC1B;AACF;AACA,SAASs3D,eAAeA,CAAC7jD,KAAK,EAAEy/C,UAAU,EAAE;EAC1C,MAAM;IAAC16C,GAAG;IAAE9F,OAAO,EAAE;MAAC6b;IAAW;EAAC,CAAC,GAAG9a,KAAK;EAC3C,KAAK,IAAIzU,CAAC,GAAGk0D,UAAU,GAAG,CAAC,EAAEl0D,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;IACxC,MAAM0pC,WAAW,GAAGna,WAAW,CAACoZ,UAAU,CAACl0B,KAAK,CAACiI,UAAU,CAAC1c,CAAC,CAAC,CAAC;IAC/D,MAAM03D,MAAM,GAAGjyD,MAAM,CAACikC,WAAW,CAAC/H,IAAI,CAAC;IACvC,MAAM;MAAC7+B,CAAC;MAAEE,CAAC;MAAEgnC,SAAS;MAAE50B,IAAI;MAAEH,GAAG;MAAEC,KAAK;MAAEC;IAAM,CAAC,GAAGV,KAAK,CAACsjD,gBAAgB,CAAC/3D,CAAC,CAAC;IAC7E,MAAM;MAACu4D;IAAa,CAAC,GAAG7uB,WAAW;IACnC,IAAI,CAACroC,aAAa,CAACk3D,aAAa,CAAC,EAAE;MACjC,MAAMzhC,OAAO,GAAGrzB,SAAS,CAACimC,WAAW,CAACutB,eAAe,CAAC;MACtDz9C,GAAG,CAACuS,SAAS,GAAGwsC,aAAa;MAC7B/+C,GAAG,CAACqxB,QAAQ,CAACz1B,IAAI,GAAG0hB,OAAO,CAAC1hB,IAAI,EAAEH,GAAG,GAAG6hB,OAAO,CAAC7hB,GAAG,EAAEC,KAAK,GAAGE,IAAI,GAAG0hB,OAAO,CAACxR,KAAK,EAAEnQ,MAAM,GAAGF,GAAG,GAAG6hB,OAAO,CAACzR,MAAM,CAAC;IACnH;IACA9f,UAAU,CACRiU,GAAG,EACH/E,KAAK,CAACkjD,YAAY,CAAC33D,CAAC,CAAC,EACrB8C,CAAC,EACDE,CAAC,GAAI00D,MAAM,CAAC71B,UAAU,GAAG,CAAE,EAC3B61B,MAAM,EACN;MACE33D,KAAK,EAAE2pC,WAAW,CAAC3pC,KAAK;MACxBiqC,SAAS,EAAEA,SAAS;MACpBG,YAAY,EAAE;IAChB,CACF,CAAC;EACH;AACF;AACA,SAASquB,cAAcA,CAAC/jD,KAAK,EAAE+S,MAAM,EAAE8H,QAAQ,EAAE4kC,UAAU,EAAE;EAC3D,MAAM;IAAC16C;EAAG,CAAC,GAAG/E,KAAK;EACnB,IAAI6a,QAAQ,EAAE;IACZ9V,GAAG,CAACwR,GAAG,CAACvW,KAAK,CAACma,OAAO,EAAEna,KAAK,CAACoa,OAAO,EAAErH,MAAM,EAAE,CAAC,EAAErlB,GAAG,CAAC;EACvD,CAAC,MAAM;IACL,IAAIwtB,aAAa,GAAGlb,KAAK,CAAC+iD,gBAAgB,CAAC,CAAC,EAAEhwC,MAAM,CAAC;IACrDhO,GAAG,CAAC+xB,MAAM,CAAC5b,aAAa,CAAC7sB,CAAC,EAAE6sB,aAAa,CAAC3sB,CAAC,CAAC;IAC5C,KAAK,IAAIhD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGk0D,UAAU,EAAEl0D,CAAC,EAAE,EAAE;MACnC2vB,aAAa,GAAGlb,KAAK,CAAC+iD,gBAAgB,CAACx3D,CAAC,EAAEwnB,MAAM,CAAC;MACjDhO,GAAG,CAACgyB,MAAM,CAAC7b,aAAa,CAAC7sB,CAAC,EAAE6sB,aAAa,CAAC3sB,CAAC,CAAC;IAC9C;EACF;AACF;AACA,SAASy1D,cAAcA,CAAChkD,KAAK,EAAEikD,YAAY,EAAElxC,MAAM,EAAE0sC,UAAU,EAAE;EAC/D,MAAM16C,GAAG,GAAG/E,KAAK,CAAC+E,GAAG;EACrB,MAAM8V,QAAQ,GAAGopC,YAAY,CAACppC,QAAQ;EACtC,MAAM;IAACvvB,KAAK;IAAEosB;EAAS,CAAC,GAAGusC,YAAY;EACvC,IAAK,CAACppC,QAAQ,IAAI,CAAC4kC,UAAU,IAAK,CAACn0D,KAAK,IAAI,CAACosB,SAAS,IAAI3E,MAAM,GAAG,CAAC,EAAE;IACpE;EACF;EACAhO,GAAG,CAACoxB,IAAI,CAAC,CAAC;EACVpxB,GAAG,CAACyS,WAAW,GAAGlsB,KAAK;EACvByZ,GAAG,CAAC2S,SAAS,GAAGA,SAAS;EACzB3S,GAAG,CAAC4xB,WAAW,CAACstB,YAAY,CAAC36B,UAAU,CAAC;EACxCvkB,GAAG,CAAC6xB,cAAc,GAAGqtB,YAAY,CAAC16B,gBAAgB;EAClDxkB,GAAG,CAAC8xB,SAAS,CAAC,CAAC;EACfktB,cAAc,CAAC/jD,KAAK,EAAE+S,MAAM,EAAE8H,QAAQ,EAAE4kC,UAAU,CAAC;EACnD16C,GAAG,CAACiiC,SAAS,CAAC,CAAC;EACfjiC,GAAG,CAACiyB,MAAM,CAAC,CAAC;EACZjyB,GAAG,CAACsxB,OAAO,CAAC,CAAC;AACf;AACA,SAAS6tB,YAAYA,CAACC,KAAK,EAAE;EAC3B,OAAO/1D,QAAQ,CAAC+1D,KAAK,CAAC,GAAGA,KAAK,GAAG,CAAC;AACpC;AACA,MAAMC,iBAAiB,SAASnD,eAAe,CAAC;EAC9CrqD,WAAWA,CAAC2E,GAAG,EAAE;IACf,KAAK,CAACA,GAAG,CAAC;IACV,IAAI,CAAC4e,OAAO,GAAGjjB,SAAS;IACxB,IAAI,CAACkjB,OAAO,GAAGljB,SAAS;IACxB,IAAI,CAAC8rD,WAAW,GAAG9rD,SAAS;IAC5B,IAAI,CAACgsD,YAAY,GAAG,EAAE;IACtB,IAAI,CAACI,gBAAgB,GAAG,EAAE;EAC5B;EACA/zB,aAAaA,CAAA,EAAG;IACd,MAAMp3B,EAAE,GAAG,IAAI;IACfA,EAAE,CAAC0Y,KAAK,GAAG1Y,EAAE,CAACqd,QAAQ;IACtBrd,EAAE,CAACyY,MAAM,GAAGzY,EAAE,CAACsd,SAAS;IACxBtd,EAAE,CAAC01B,UAAU,GAAG00B,qBAAqB,CAACpqD,EAAE,CAAC8G,OAAO,CAAC,GAAG,CAAC;IACrD9G,EAAE,CAACgiB,OAAO,GAAGpiB,IAAI,CAACiE,KAAK,CAAC7D,EAAE,CAAC0Y,KAAK,GAAG,CAAC,CAAC;IACrC1Y,EAAE,CAACiiB,OAAO,GAAGriB,IAAI,CAACiE,KAAK,CAAC,CAAC7D,EAAE,CAACyY,MAAM,GAAGzY,EAAE,CAAC01B,UAAU,IAAI,CAAC,CAAC;IACxD11B,EAAE,CAAC6qD,WAAW,GAAGjrD,IAAI,CAACC,GAAG,CAACG,EAAE,CAACyY,MAAM,GAAGzY,EAAE,CAAC01B,UAAU,EAAE11B,EAAE,CAAC0Y,KAAK,CAAC,GAAG,CAAC;EACpE;EACA6e,mBAAmBA,CAAA,EAAG;IACpB,MAAMv3B,EAAE,GAAG,IAAI;IACf,MAAM;MAACH,GAAG;MAAEmC;IAAG,CAAC,GAAGhC,EAAE,CAACoR,SAAS,CAAC,KAAK,CAAC;IACtCpR,EAAE,CAACH,GAAG,GAAG1L,cAAc,CAAC0L,GAAG,CAAC,IAAI,CAACiZ,KAAK,CAACjZ,GAAG,CAAC,GAAGA,GAAG,GAAG,CAAC;IACrDG,EAAE,CAACgC,GAAG,GAAG7N,cAAc,CAAC6N,GAAG,CAAC,IAAI,CAAC8W,KAAK,CAAC9W,GAAG,CAAC,GAAGA,GAAG,GAAG,CAAC;IACrDhC,EAAE,CAACgpD,sBAAsB,CAAC,CAAC;EAC7B;EACAO,gBAAgBA,CAAA,EAAG;IACjB,OAAO3pD,IAAI,CAAC6zB,IAAI,CAAC,IAAI,CAACo3B,WAAW,GAAGT,qBAAqB,CAAC,IAAI,CAACtjD,OAAO,CAAC,CAAC;EAC1E;EACAgyB,kBAAkBA,CAAChjB,KAAK,EAAE;IACxB,MAAM9V,EAAE,GAAG,IAAI;IACf8oD,eAAe,CAAC7zC,SAAS,CAAC6jB,kBAAkB,CAAC74B,IAAI,CAACD,EAAE,EAAE8V,KAAK,CAAC;IAC5D9V,EAAE,CAAC+qD,YAAY,GAAG/qD,EAAE,CAAC0Q,SAAS,CAAC,CAAC,CAACsO,GAAG,CAAC,CAACzX,KAAK,EAAEwB,KAAK,KAAK;MACrD,MAAM8I,KAAK,GAAG5Z,QAAQ,CAAC+H,EAAE,CAAC8G,OAAO,CAAC6b,WAAW,CAAC1qB,QAAQ,EAAE,CAACsP,KAAK,EAAEwB,KAAK,CAAC,EAAE/I,EAAE,CAAC;MAC3E,OAAO6R,KAAK,IAAIA,KAAK,KAAK,CAAC,GAAGA,KAAK,GAAG,EAAE;IAC1C,CAAC,CAAC;EACJ;EACAsmB,GAAGA,CAAA,EAAG;IACJ,MAAMn4B,EAAE,GAAG,IAAI;IACf,MAAM+H,IAAI,GAAG/H,EAAE,CAAC8G,OAAO;IACvB,IAAIiB,IAAI,CAAC0a,OAAO,IAAI1a,IAAI,CAAC4a,WAAW,CAACF,OAAO,EAAE;MAC5C+nC,kBAAkB,CAACxqD,EAAE,CAAC;IACxB,CAAC,MAAM;MACLA,EAAE,CAACksD,cAAc,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IAC/B;EACF;EACAhB,cAAcA,CAACiB,qBAAqB,EAAE1B,cAAc,EAAEC,cAAc,EAAE;IACpE,MAAM1qD,EAAE,GAAG,IAAI;IACf,IAAIosD,mBAAmB,GAAG3B,cAAc,CAAC32D,CAAC,GAAG8L,IAAI,CAACic,GAAG,CAAC6uC,cAAc,CAAC52D,CAAC,CAAC;IACvE,IAAIu4D,oBAAoB,GAAGzsD,IAAI,CAACoC,GAAG,CAACyoD,cAAc,CAAC73D,CAAC,GAAGoN,EAAE,CAAC0Y,KAAK,EAAE,CAAC,CAAC,GAAG9Y,IAAI,CAACic,GAAG,CAAC6uC,cAAc,CAAC93D,CAAC,CAAC;IAChG,IAAI05D,kBAAkB,GAAG,CAAC7B,cAAc,CAACz1D,CAAC,GAAG4K,IAAI,CAAC+b,GAAG,CAAC+uC,cAAc,CAAC11D,CAAC,CAAC;IACvE,IAAIu3D,qBAAqB,GAAG,CAAC3sD,IAAI,CAACoC,GAAG,CAACyoD,cAAc,CAACn3D,CAAC,IAAI0M,EAAE,CAACyY,MAAM,GAAGzY,EAAE,CAAC01B,UAAU,CAAC,EAAE,CAAC,CAAC,GAAG91B,IAAI,CAAC+b,GAAG,CAAC+uC,cAAc,CAACp3D,CAAC,CAAC;IACrH84D,mBAAmB,GAAGL,YAAY,CAACK,mBAAmB,CAAC;IACvDC,oBAAoB,GAAGN,YAAY,CAACM,oBAAoB,CAAC;IACzDC,kBAAkB,GAAGP,YAAY,CAACO,kBAAkB,CAAC;IACrDC,qBAAqB,GAAGR,YAAY,CAACQ,qBAAqB,CAAC;IAC3DvsD,EAAE,CAAC6qD,WAAW,GAAGjrD,IAAI,CAACoC,GAAG,CAACmqD,qBAAqB,GAAG,CAAC,EAAEvsD,IAAI,CAACC,GAAG,CAC3DD,IAAI,CAACiE,KAAK,CAACsoD,qBAAqB,GAAG,CAACC,mBAAmB,GAAGC,oBAAoB,IAAI,CAAC,CAAC,EACpFzsD,IAAI,CAACiE,KAAK,CAACsoD,qBAAqB,GAAG,CAACG,kBAAkB,GAAGC,qBAAqB,IAAI,CAAC,CAAC,CAAC,CAAC;IACxFvsD,EAAE,CAACksD,cAAc,CAACE,mBAAmB,EAAEC,oBAAoB,EAAEC,kBAAkB,EAAEC,qBAAqB,CAAC;EACzG;EACAL,cAAcA,CAACM,YAAY,EAAEC,aAAa,EAAEC,WAAW,EAAEC,cAAc,EAAE;IACvE,MAAM3sD,EAAE,GAAG,IAAI;IACf,MAAM4sD,QAAQ,GAAG5sD,EAAE,CAAC0Y,KAAK,GAAG+zC,aAAa,GAAGzsD,EAAE,CAAC6qD,WAAW;IAC1D,MAAMgC,OAAO,GAAGL,YAAY,GAAGxsD,EAAE,CAAC6qD,WAAW;IAC7C,MAAMiC,MAAM,GAAGJ,WAAW,GAAG1sD,EAAE,CAAC6qD,WAAW;IAC3C,MAAMkC,SAAS,GAAI/sD,EAAE,CAACyY,MAAM,GAAGzY,EAAE,CAAC01B,UAAU,GAAIi3B,cAAc,GAAG3sD,EAAE,CAAC6qD,WAAW;IAC/E7qD,EAAE,CAACgiB,OAAO,GAAGpiB,IAAI,CAACiE,KAAK,CAAE,CAACgpD,OAAO,GAAGD,QAAQ,IAAI,CAAC,GAAI5sD,EAAE,CAACwI,IAAI,CAAC;IAC7DxI,EAAE,CAACiiB,OAAO,GAAGriB,IAAI,CAACiE,KAAK,CAAE,CAACipD,MAAM,GAAGC,SAAS,IAAI,CAAC,GAAI/sD,EAAE,CAACqI,GAAG,GAAGrI,EAAE,CAAC01B,UAAU,CAAC;EAC9E;EACAvT,aAAaA,CAACpZ,KAAK,EAAE;IACnB,MAAMikD,eAAe,GAAGz3D,GAAG,GAAG,IAAI,CAACmb,SAAS,CAAC,CAAC,CAACrQ,MAAM;IACrD,MAAMmb,UAAU,GAAG,IAAI,CAAC1U,OAAO,CAAC0U,UAAU,IAAI,CAAC;IAC/C,OAAO/e,eAAe,CAACsM,KAAK,GAAGikD,eAAe,GAAG/3D,SAAS,CAACumB,UAAU,CAAC,CAAC;EACzE;EACA+G,6BAA6BA,CAAChb,KAAK,EAAE;IACnC,MAAMvH,EAAE,GAAG,IAAI;IACf,IAAIvL,aAAa,CAAC8S,KAAK,CAAC,EAAE;MACxB,OAAO4J,GAAG;IACZ;IACA,MAAM87C,aAAa,GAAGjtD,EAAE,CAAC6qD,WAAW,IAAI7qD,EAAE,CAACgC,GAAG,GAAGhC,EAAE,CAACH,GAAG,CAAC;IACxD,IAAIG,EAAE,CAAC8G,OAAO,CAACkB,OAAO,EAAE;MACtB,OAAO,CAAChI,EAAE,CAACgC,GAAG,GAAGuF,KAAK,IAAI0lD,aAAa;IACzC;IACA,OAAO,CAAC1lD,KAAK,GAAGvH,EAAE,CAACH,GAAG,IAAIotD,aAAa;EACzC;EACAC,6BAA6BA,CAAC7mC,QAAQ,EAAE;IACtC,IAAI5xB,aAAa,CAAC4xB,QAAQ,CAAC,EAAE;MAC3B,OAAOlV,GAAG;IACZ;IACA,MAAMnR,EAAE,GAAG,IAAI;IACf,MAAMmtD,cAAc,GAAG9mC,QAAQ,IAAIrmB,EAAE,CAAC6qD,WAAW,IAAI7qD,EAAE,CAACgC,GAAG,GAAGhC,EAAE,CAACH,GAAG,CAAC,CAAC;IACtE,OAAOG,EAAE,CAAC8G,OAAO,CAACkB,OAAO,GAAGhI,EAAE,CAACgC,GAAG,GAAGmrD,cAAc,GAAGntD,EAAE,CAACH,GAAG,GAAGstD,cAAc;EAC/E;EACAvC,gBAAgBA,CAAC7hD,KAAK,EAAEqkD,kBAAkB,EAAE;IAC1C,MAAMptD,EAAE,GAAG,IAAI;IACf,MAAMic,KAAK,GAAGjc,EAAE,CAACmiB,aAAa,CAACpZ,KAAK,CAAC,GAAGlT,OAAO;IAC/C,OAAO;MACLK,CAAC,EAAE0J,IAAI,CAAC+b,GAAG,CAACM,KAAK,CAAC,GAAGmxC,kBAAkB,GAAGptD,EAAE,CAACgiB,OAAO;MACpD5rB,CAAC,EAAEwJ,IAAI,CAACic,GAAG,CAACI,KAAK,CAAC,GAAGmxC,kBAAkB,GAAGptD,EAAE,CAACiiB,OAAO;MACpDhG;IACF,CAAC;EACH;EACA+G,wBAAwBA,CAACja,KAAK,EAAExB,KAAK,EAAE;IACrC,OAAO,IAAI,CAACqjD,gBAAgB,CAAC7hD,KAAK,EAAE,IAAI,CAACwZ,6BAA6B,CAAChb,KAAK,CAAC,CAAC;EAChF;EACA8lD,eAAeA,CAACtkD,KAAK,EAAE;IACrB,OAAO,IAAI,CAACia,wBAAwB,CAACja,KAAK,IAAI,CAAC,EAAE,IAAI,CAACyyB,YAAY,CAAC,CAAC,CAAC;EACvE;EACA8xB,qBAAqBA,CAACvkD,KAAK,EAAE;IAC3B,MAAM;MAACP,IAAI;MAAEH,GAAG;MAAEC,KAAK;MAAEC;IAAM,CAAC,GAAG,IAAI,CAAC4iD,gBAAgB,CAACpiD,KAAK,CAAC;IAC/D,OAAO;MACLP,IAAI;MACJH,GAAG;MACHC,KAAK;MACLC;IACF,CAAC;EACH;EACAw1B,cAAcA,CAAA,EAAG;IACf,MAAM/9B,EAAE,GAAG,IAAI;IACf,MAAM;MAACof,eAAe;MAAEhF,IAAI,EAAE;QAACsI;MAAQ;IAAC,CAAC,GAAG1iB,EAAE,CAAC8G,OAAO;IACtD,IAAIsY,eAAe,EAAE;MACnB,MAAMxS,GAAG,GAAG5M,EAAE,CAAC4M,GAAG;MAClBA,GAAG,CAACoxB,IAAI,CAAC,CAAC;MACVpxB,GAAG,CAAC8xB,SAAS,CAAC,CAAC;MACfktB,cAAc,CAAC5rD,EAAE,EAAEA,EAAE,CAACuiB,6BAA6B,CAACviB,EAAE,CAAC+oD,SAAS,CAAC,EAAErmC,QAAQ,EAAE1iB,EAAE,CAAC0Q,SAAS,CAAC,CAAC,CAACrQ,MAAM,CAAC;MACnGuM,GAAG,CAACiiC,SAAS,CAAC,CAAC;MACfjiC,GAAG,CAACuS,SAAS,GAAGC,eAAe;MAC/BxS,GAAG,CAACqW,IAAI,CAAC,CAAC;MACVrW,GAAG,CAACsxB,OAAO,CAAC,CAAC;IACf;EACF;EACAE,QAAQA,CAAA,EAAG;IACT,MAAMp+B,EAAE,GAAG,IAAI;IACf,MAAM4M,GAAG,GAAG5M,EAAE,CAAC4M,GAAG;IAClB,MAAM7E,IAAI,GAAG/H,EAAE,CAAC8G,OAAO;IACvB,MAAM;MAAC0b,UAAU;MAAEpI;IAAI,CAAC,GAAGrS,IAAI;IAC/B,MAAMu/C,UAAU,GAAGtnD,EAAE,CAAC0Q,SAAS,CAAC,CAAC,CAACrQ,MAAM;IACxC,IAAIjN,CAAC,EAAE+mB,MAAM,EAAE+K,QAAQ;IACvB,IAAInd,IAAI,CAAC4a,WAAW,CAACF,OAAO,EAAE;MAC5BipC,eAAe,CAAC1rD,EAAE,EAAEsnD,UAAU,CAAC;IACjC;IACA,IAAIltC,IAAI,CAACqI,OAAO,EAAE;MAChBziB,EAAE,CAAC8V,KAAK,CAACrW,OAAO,CAAC,CAACsB,IAAI,EAAEgI,KAAK,KAAK;QAChC,IAAIA,KAAK,KAAK,CAAC,EAAE;UACfoR,MAAM,GAAGna,EAAE,CAACuiB,6BAA6B,CAACxhB,IAAI,CAACwG,KAAK,CAAC;UACrD,MAAMu1B,WAAW,GAAG1iB,IAAI,CAAC2hB,UAAU,CAAC/7B,EAAE,CAAC8P,UAAU,CAAC/G,KAAK,GAAG,CAAC,CAAC,CAAC;UAC7D8iD,cAAc,CAAC7rD,EAAE,EAAE88B,WAAW,EAAE3iB,MAAM,EAAEmtC,UAAU,CAAC;QACrD;MACF,CAAC,CAAC;IACJ;IACA,IAAI9kC,UAAU,CAACC,OAAO,EAAE;MACtB7V,GAAG,CAACoxB,IAAI,CAAC,CAAC;MACV,KAAK5qC,CAAC,GAAG4M,EAAE,CAAC0Q,SAAS,CAAC,CAAC,CAACrQ,MAAM,GAAG,CAAC,EAAEjN,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;QAC/C,MAAM0pC,WAAW,GAAGta,UAAU,CAACuZ,UAAU,CAAC/7B,EAAE,CAAC8P,UAAU,CAAC1c,CAAC,CAAC,CAAC;QAC3D,MAAM;UAACD,KAAK;UAAEosB;QAAS,CAAC,GAAGud,WAAW;QACtC,IAAI,CAACvd,SAAS,IAAI,CAACpsB,KAAK,EAAE;UACxB;QACF;QACAyZ,GAAG,CAAC2S,SAAS,GAAGA,SAAS;QACzB3S,GAAG,CAACyS,WAAW,GAAGlsB,KAAK;QACvByZ,GAAG,CAAC4xB,WAAW,CAAC1B,WAAW,CAAC3L,UAAU,CAAC;QACvCvkB,GAAG,CAAC6xB,cAAc,GAAG3B,WAAW,CAAC1L,gBAAgB;QACjDjX,MAAM,GAAGna,EAAE,CAACuiB,6BAA6B,CAACxa,IAAI,CAAC+N,KAAK,CAAC9N,OAAO,GAAGhI,EAAE,CAACH,GAAG,GAAGG,EAAE,CAACgC,GAAG,CAAC;QAC/EkjB,QAAQ,GAAGllB,EAAE,CAAC4qD,gBAAgB,CAACx3D,CAAC,EAAE+mB,MAAM,CAAC;QACzCvN,GAAG,CAAC8xB,SAAS,CAAC,CAAC;QACf9xB,GAAG,CAAC+xB,MAAM,CAAC3+B,EAAE,CAACgiB,OAAO,EAAEhiB,EAAE,CAACiiB,OAAO,CAAC;QAClCrV,GAAG,CAACgyB,MAAM,CAAC1Z,QAAQ,CAAChvB,CAAC,EAAEgvB,QAAQ,CAAC9uB,CAAC,CAAC;QAClCwW,GAAG,CAACiyB,MAAM,CAAC,CAAC;MACd;MACAjyB,GAAG,CAACsxB,OAAO,CAAC,CAAC;IACf;EACF;EACAc,UAAUA,CAAA,EAAG;IACX,MAAMh/B,EAAE,GAAG,IAAI;IACf,MAAM4M,GAAG,GAAG5M,EAAE,CAAC4M,GAAG;IAClB,MAAM7E,IAAI,GAAG/H,EAAE,CAAC8G,OAAO;IACvB,MAAMqrB,QAAQ,GAAGpqB,IAAI,CAAC+N,KAAK;IAC3B,IAAI,CAACqc,QAAQ,CAAC1P,OAAO,EAAE;MACrB;IACF;IACA,MAAMjH,UAAU,GAAGxb,EAAE,CAACmiB,aAAa,CAAC,CAAC,CAAC;IACtC,IAAIhI,MAAM,EAAEzB,KAAK;IACjB9L,GAAG,CAACoxB,IAAI,CAAC,CAAC;IACVpxB,GAAG,CAAC+iC,SAAS,CAAC3vC,EAAE,CAACgiB,OAAO,EAAEhiB,EAAE,CAACiiB,OAAO,CAAC;IACrCrV,GAAG,CAAC2gD,MAAM,CAAC/xC,UAAU,CAAC;IACtB5O,GAAG,CAACwwB,SAAS,GAAG,QAAQ;IACxBxwB,GAAG,CAAC2wB,YAAY,GAAG,QAAQ;IAC3Bv9B,EAAE,CAAC8V,KAAK,CAACrW,OAAO,CAAC,CAACsB,IAAI,EAAEgI,KAAK,KAAK;MAChC,IAAIA,KAAK,KAAK,CAAC,IAAI,CAAChB,IAAI,CAACC,OAAO,EAAE;QAChC;MACF;MACA,MAAM80B,WAAW,GAAG3K,QAAQ,CAAC4J,UAAU,CAAC/7B,EAAE,CAAC8P,UAAU,CAAC/G,KAAK,CAAC,CAAC;MAC7D,MAAM8xB,QAAQ,GAAGhiC,MAAM,CAACikC,WAAW,CAAC/H,IAAI,CAAC;MACzC5a,MAAM,GAAGna,EAAE,CAACuiB,6BAA6B,CAACviB,EAAE,CAAC8V,KAAK,CAAC/M,KAAK,CAAC,CAACxB,KAAK,CAAC;MAChE,IAAIu1B,WAAW,CAAC0wB,iBAAiB,EAAE;QACjC90C,KAAK,GAAG9L,GAAG,CAACqvC,WAAW,CAACl7C,IAAI,CAAC8Q,KAAK,CAAC,CAAC6G,KAAK;QACzC9L,GAAG,CAACuS,SAAS,GAAG2d,WAAW,CAAC6uB,aAAa;QACzC,MAAMzhC,OAAO,GAAGrzB,SAAS,CAACimC,WAAW,CAACutB,eAAe,CAAC;QACtDz9C,GAAG,CAACqxB,QAAQ,CACV,CAACvlB,KAAK,GAAG,CAAC,GAAGwR,OAAO,CAAC1hB,IAAI,EACzB,CAAC2R,MAAM,GAAG0gB,QAAQ,CAACrzB,IAAI,GAAG,CAAC,GAAG0iB,OAAO,CAAC7hB,GAAG,EACzCqQ,KAAK,GAAGwR,OAAO,CAACxR,KAAK,EACrBmiB,QAAQ,CAACrzB,IAAI,GAAG0iB,OAAO,CAACzR,MAC1B,CAAC;MACH;MACA9f,UAAU,CAACiU,GAAG,EAAE7L,IAAI,CAAC8Q,KAAK,EAAE,CAAC,EAAE,CAACsI,MAAM,EAAE0gB,QAAQ,EAAE;QAChD1nC,KAAK,EAAE2pC,WAAW,CAAC3pC;MACrB,CAAC,CAAC;IACJ,CAAC,CAAC;IACFyZ,GAAG,CAACsxB,OAAO,CAAC,CAAC;EACf;EACAe,SAASA,CAAA,EAAG,CAAC;AACf;AACAgtB,iBAAiB,CAAChiD,EAAE,GAAG,cAAc;AACrCgiD,iBAAiB,CAACx4D,QAAQ,GAAG;EAC3BgvB,OAAO,EAAE,IAAI;EACbgrC,OAAO,EAAE,IAAI;EACbvoC,QAAQ,EAAE,WAAW;EACrB1C,UAAU,EAAE;IACVC,OAAO,EAAE,IAAI;IACblD,SAAS,EAAE,CAAC;IACZ4R,UAAU,EAAE,EAAE;IACdC,gBAAgB,EAAE;EACpB,CAAC;EACDhX,IAAI,EAAE;IACJsI,QAAQ,EAAE;EACZ,CAAC;EACDlH,UAAU,EAAE,CAAC;EACb1F,KAAK,EAAE;IACL03C,iBAAiB,EAAE,IAAI;IACvB7B,aAAa,EAAE,wBAAwB;IACvCtB,eAAe,EAAE,CAAC;IAClBpyD,QAAQ,EAAEy4B,KAAK,CAACZ,UAAU,CAACC;EAC7B,CAAC;EACDpN,WAAW,EAAE;IACXgpC,aAAa,EAAE5sD,SAAS;IACxBsrD,eAAe,EAAE,CAAC;IAClB5nC,OAAO,EAAE,IAAI;IACbsS,IAAI,EAAE;MACJvtB,IAAI,EAAE;IACR,CAAC;IACDvP,QAAQA,CAAC4Z,KAAK,EAAE;MACd,OAAOA,KAAK;IACd,CAAC;IACDqY,OAAO,EAAE;EACX;AACF,CAAC;AACD+hC,iBAAiB,CAACp8B,aAAa,GAAG;EAChC,kBAAkB,EAAE,aAAa;EACjC,mBAAmB,EAAE,OAAO;EAC5B,aAAa,EAAE;AACjB,CAAC;AACDo8B,iBAAiB,CAACxyD,WAAW,GAAG;EAC9B+oB,UAAU,EAAE;IACVhd,SAAS,EAAE;EACb;AACF,CAAC;AAED,MAAMkoD,SAAS,GAAG;EAChBC,WAAW,EAAE;IAACC,MAAM,EAAE,IAAI;IAAEpmD,IAAI,EAAE,CAAC;IAAEqmD,KAAK,EAAE;EAAI,CAAC;EACjDC,MAAM,EAAE;IAACF,MAAM,EAAE,IAAI;IAAEpmD,IAAI,EAAE,IAAI;IAAEqmD,KAAK,EAAE;EAAE,CAAC;EAC7CE,MAAM,EAAE;IAACH,MAAM,EAAE,IAAI;IAAEpmD,IAAI,EAAE,KAAK;IAAEqmD,KAAK,EAAE;EAAE,CAAC;EAC9CG,IAAI,EAAE;IAACJ,MAAM,EAAE,IAAI;IAAEpmD,IAAI,EAAE,OAAO;IAAEqmD,KAAK,EAAE;EAAE,CAAC;EAC9CI,GAAG,EAAE;IAACL,MAAM,EAAE,IAAI;IAAEpmD,IAAI,EAAE,QAAQ;IAAEqmD,KAAK,EAAE;EAAE,CAAC;EAC9CK,IAAI,EAAE;IAACN,MAAM,EAAE,KAAK;IAAEpmD,IAAI,EAAE,SAAS;IAAEqmD,KAAK,EAAE;EAAC,CAAC;EAChDM,KAAK,EAAE;IAACP,MAAM,EAAE,IAAI;IAAEpmD,IAAI,EAAE,OAAO;IAAEqmD,KAAK,EAAE;EAAE,CAAC;EAC/CO,OAAO,EAAE;IAACR,MAAM,EAAE,KAAK;IAAEpmD,IAAI,EAAE,OAAO;IAAEqmD,KAAK,EAAE;EAAC,CAAC;EACjDQ,IAAI,EAAE;IAACT,MAAM,EAAE,IAAI;IAAEpmD,IAAI,EAAE;EAAQ;AACrC,CAAC;AACD,MAAM8mD,KAAK,GAAIlpD,MAAM,CAACC,IAAI,CAACqoD,SAAS,CAAE;AACtC,SAASa,MAAMA,CAACz7D,CAAC,EAAEQ,CAAC,EAAE;EACpB,OAAOR,CAAC,GAAGQ,CAAC;AACd;AACA,SAAS0c,KAAKA,CAACnI,KAAK,EAAE2mD,KAAK,EAAE;EAC3B,IAAI/5D,aAAa,CAAC+5D,KAAK,CAAC,EAAE;IACxB,OAAO,IAAI;EACb;EACA,MAAMC,OAAO,GAAG5mD,KAAK,CAAC6mD,QAAQ;EAC9B,MAAM5nD,OAAO,GAAGe,KAAK,CAACf,OAAO,CAAC6nD,IAAI;EAClC,MAAM;IAACC,MAAM;IAAE57B,KAAK;IAAE67B;EAAU,CAAC,GAAG/nD,OAAO;EAC3C,IAAIS,KAAK,GAAGinD,KAAK;EACjB,IAAI,OAAOI,MAAM,KAAK,UAAU,EAAE;IAChCrnD,KAAK,GAAGqnD,MAAM,CAACrnD,KAAK,CAAC;EACvB;EACA,IAAI,CAACpT,cAAc,CAACoT,KAAK,CAAC,EAAE;IAC1BA,KAAK,GAAG,OAAOqnD,MAAM,KAAK,QAAQ,GAC9BH,OAAO,CAACz+C,KAAK,CAACzI,KAAK,EAAEqnD,MAAM,CAAC,GAC5BH,OAAO,CAACz+C,KAAK,CAACzI,KAAK,CAAC;EAC1B;EACA,IAAIA,KAAK,KAAK,IAAI,EAAE;IAClB,OAAO,IAAI;EACb;EACA,IAAIyrB,KAAK,EAAE;IACTzrB,KAAK,GAAGyrB,KAAK,KAAK,MAAM,KAAK/8B,QAAQ,CAAC44D,UAAU,CAAC,IAAIA,UAAU,KAAK,IAAI,CAAC,GACrEJ,OAAO,CAAC3qC,OAAO,CAACvc,KAAK,EAAE,SAAS,EAAEsnD,UAAU,CAAC,GAC7CJ,OAAO,CAAC3qC,OAAO,CAACvc,KAAK,EAAEyrB,KAAK,CAAC;EACnC;EACA,OAAO,CAACzrB,KAAK;AACf;AACA,SAASunD,yBAAyBA,CAACC,OAAO,EAAElvD,GAAG,EAAEmC,GAAG,EAAEgtD,QAAQ,EAAE;EAC9D,MAAMlmD,IAAI,GAAGwlD,KAAK,CAACjuD,MAAM;EACzB,KAAK,IAAIjN,CAAC,GAAGk7D,KAAK,CAACv1C,OAAO,CAACg2C,OAAO,CAAC,EAAE37D,CAAC,GAAG0V,IAAI,GAAG,CAAC,EAAE,EAAE1V,CAAC,EAAE;IACtD,MAAM67D,QAAQ,GAAGvB,SAAS,CAACY,KAAK,CAACl7D,CAAC,CAAC,CAAC;IACpC,MAAMwP,MAAM,GAAGqsD,QAAQ,CAACpB,KAAK,GAAGoB,QAAQ,CAACpB,KAAK,GAAGxjD,MAAM,CAAC6kD,gBAAgB;IACxE,IAAID,QAAQ,CAACrB,MAAM,IAAIhuD,IAAI,CAAC6zB,IAAI,CAAC,CAACzxB,GAAG,GAAGnC,GAAG,KAAK+C,MAAM,GAAGqsD,QAAQ,CAACznD,IAAI,CAAC,CAAC,IAAIwnD,QAAQ,EAAE;MACpF,OAAOV,KAAK,CAACl7D,CAAC,CAAC;IACjB;EACF;EACA,OAAOk7D,KAAK,CAACxlD,IAAI,GAAG,CAAC,CAAC;AACxB;AACA,SAASqmD,0BAA0BA,CAACtnD,KAAK,EAAEmxB,QAAQ,EAAE+1B,OAAO,EAAElvD,GAAG,EAAEmC,GAAG,EAAE;EACtE,KAAK,IAAI5O,CAAC,GAAGk7D,KAAK,CAACjuD,MAAM,GAAG,CAAC,EAAEjN,CAAC,IAAIk7D,KAAK,CAACv1C,OAAO,CAACg2C,OAAO,CAAC,EAAE37D,CAAC,EAAE,EAAE;IAC/D,MAAMwwB,IAAI,GAAG0qC,KAAK,CAACl7D,CAAC,CAAC;IACrB,IAAIs6D,SAAS,CAAC9pC,IAAI,CAAC,CAACgqC,MAAM,IAAI/lD,KAAK,CAAC6mD,QAAQ,CAAC7qC,IAAI,CAAC7hB,GAAG,EAAEnC,GAAG,EAAE+jB,IAAI,CAAC,IAAIoV,QAAQ,GAAG,CAAC,EAAE;MACjF,OAAOpV,IAAI;IACb;EACF;EACA,OAAO0qC,KAAK,CAACS,OAAO,GAAGT,KAAK,CAACv1C,OAAO,CAACg2C,OAAO,CAAC,GAAG,CAAC,CAAC;AACpD;AACA,SAASK,kBAAkBA,CAACxrC,IAAI,EAAE;EAChC,KAAK,IAAIxwB,CAAC,GAAGk7D,KAAK,CAACv1C,OAAO,CAAC6K,IAAI,CAAC,GAAG,CAAC,EAAE9a,IAAI,GAAGwlD,KAAK,CAACjuD,MAAM,EAAEjN,CAAC,GAAG0V,IAAI,EAAE,EAAE1V,CAAC,EAAE;IACxE,IAAIs6D,SAAS,CAACY,KAAK,CAACl7D,CAAC,CAAC,CAAC,CAACw6D,MAAM,EAAE;MAC9B,OAAOU,KAAK,CAACl7D,CAAC,CAAC;IACjB;EACF;AACF;AACA,SAASi8D,OAAOA,CAACv5C,KAAK,EAAE64C,IAAI,EAAEW,UAAU,EAAE;EACxC,IAAI,CAACA,UAAU,EAAE;IACfx5C,KAAK,CAAC64C,IAAI,CAAC,GAAG,IAAI;EACpB,CAAC,MAAM,IAAIW,UAAU,CAACjvD,MAAM,EAAE;IAC5B,MAAM;MAAC6gB,EAAE;MAAEC;IAAE,CAAC,GAAG5iB,OAAO,CAAC+wD,UAAU,EAAEX,IAAI,CAAC;IAC1C,MAAMjrC,SAAS,GAAG4rC,UAAU,CAACpuC,EAAE,CAAC,IAAIytC,IAAI,GAAGW,UAAU,CAACpuC,EAAE,CAAC,GAAGouC,UAAU,CAACnuC,EAAE,CAAC;IAC1ErL,KAAK,CAAC4N,SAAS,CAAC,GAAG,IAAI;EACzB;AACF;AACA,SAAS6rC,aAAaA,CAAC1nD,KAAK,EAAEiO,KAAK,EAAEkJ,GAAG,EAAEwwC,SAAS,EAAE;EACnD,MAAMf,OAAO,GAAG5mD,KAAK,CAAC6mD,QAAQ;EAC9B,MAAM/7B,KAAK,GAAG,CAAC87B,OAAO,CAAC3qC,OAAO,CAAChO,KAAK,CAAC,CAAC,CAAC,CAACvO,KAAK,EAAEioD,SAAS,CAAC;EACzD,MAAM52C,IAAI,GAAG9C,KAAK,CAACA,KAAK,CAACzV,MAAM,GAAG,CAAC,CAAC,CAACkH,KAAK;EAC1C,IAAIuqB,KAAK,EAAE/oB,KAAK;EAChB,KAAK+oB,KAAK,GAAGa,KAAK,EAAEb,KAAK,IAAIlZ,IAAI,EAAEkZ,KAAK,GAAG,CAAC28B,OAAO,CAAC9sD,GAAG,CAACmwB,KAAK,EAAE,CAAC,EAAE09B,SAAS,CAAC,EAAE;IAC5EzmD,KAAK,GAAGiW,GAAG,CAAC8S,KAAK,CAAC;IAClB,IAAI/oB,KAAK,IAAI,CAAC,EAAE;MACd+M,KAAK,CAAC/M,KAAK,CAAC,CAAC+oB,KAAK,GAAG,IAAI;IAC3B;EACF;EACA,OAAOhc,KAAK;AACd;AACA,SAAS25C,mBAAmBA,CAAC5nD,KAAK,EAAEjB,MAAM,EAAE4oD,SAAS,EAAE;EACrD,MAAM15C,KAAK,GAAG,EAAE;EAChB,MAAMkJ,GAAG,GAAG,CAAC,CAAC;EACd,MAAMlW,IAAI,GAAGlC,MAAM,CAACvG,MAAM;EAC1B,IAAIjN,CAAC,EAAEmU,KAAK;EACZ,KAAKnU,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG0V,IAAI,EAAE,EAAE1V,CAAC,EAAE;IACzBmU,KAAK,GAAGX,MAAM,CAACxT,CAAC,CAAC;IACjB4rB,GAAG,CAACzX,KAAK,CAAC,GAAGnU,CAAC;IACd0iB,KAAK,CAACpU,IAAI,CAAC;MACT6F,KAAK;MACLuqB,KAAK,EAAE;IACT,CAAC,CAAC;EACJ;EACA,OAAQhpB,IAAI,KAAK,CAAC,IAAI,CAAC0mD,SAAS,GAAI15C,KAAK,GAAGy5C,aAAa,CAAC1nD,KAAK,EAAEiO,KAAK,EAAEkJ,GAAG,EAAEwwC,SAAS,CAAC;AACzF;AACA,MAAME,SAAS,SAASl6B,KAAK,CAAC;EAC5B/2B,WAAWA,CAAC4I,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAAC8N,MAAM,GAAG;MACZ3L,IAAI,EAAE,EAAE;MACRiH,MAAM,EAAE,EAAE;MACV9I,GAAG,EAAE;IACP,CAAC;IACD,IAAI,CAACgoD,KAAK,GAAG,KAAK;IAClB,IAAI,CAACC,UAAU,GAAG7wD,SAAS;IAC3B,IAAI,CAAC8wD,QAAQ,GAAG,CAAC,CAAC;IAClB,IAAI,CAACC,WAAW,GAAG,KAAK;EAC1B;EACAp5B,IAAIA,CAACsU,SAAS,EAAEjjC,IAAI,EAAE;IACpB,MAAM4mD,IAAI,GAAG3jB,SAAS,CAAC2jB,IAAI,KAAK3jB,SAAS,CAAC2jB,IAAI,GAAG,CAAC,CAAC,CAAC;IACpD,MAAMF,OAAO,GAAG,IAAI,CAACC,QAAQ,GAAG,IAAIvqC,QAAQ,CAACC,KAAK,CAAC4mB,SAAS,CAAC7mB,QAAQ,CAAChlB,IAAI,CAAC;IAC3EhF,OAAO,CAACw0D,IAAI,CAACoB,cAAc,EAAEtB,OAAO,CAACjrC,OAAO,CAAC,CAAC,CAAC;IAC/C,KAAK,CAACkT,IAAI,CAACsU,SAAS,CAAC;IACrB,IAAI,CAAC8kB,WAAW,GAAG/nD,IAAI,CAACioD,UAAU;EACpC;EACAhgD,KAAKA,CAAC7D,GAAG,EAAEpD,KAAK,EAAE;IAChB,IAAIoD,GAAG,KAAKpN,SAAS,EAAE;MACrB,OAAO,IAAI;IACb;IACA,OAAOiR,KAAK,CAAC,IAAI,EAAE7D,GAAG,CAAC;EACzB;EACAue,YAAYA,CAAA,EAAG;IACb,KAAK,CAACA,YAAY,CAAC,CAAC;IACpB,IAAI,CAACvV,MAAM,GAAG;MACZ3L,IAAI,EAAE,EAAE;MACRiH,MAAM,EAAE,EAAE;MACV9I,GAAG,EAAE;IACP,CAAC;EACH;EACA4vB,mBAAmBA,CAAA,EAAG;IACpB,MAAMv3B,EAAE,GAAG,IAAI;IACf,MAAM8G,OAAO,GAAG9G,EAAE,CAAC8G,OAAO;IAC1B,MAAM2nD,OAAO,GAAGzuD,EAAE,CAAC0uD,QAAQ;IAC3B,MAAM9qC,IAAI,GAAG9c,OAAO,CAAC6nD,IAAI,CAAC/qC,IAAI,IAAI,KAAK;IACvC,IAAI;MAAC/jB,GAAG;MAAEmC,GAAG;MAAEmI,UAAU;MAAEC;IAAU,CAAC,GAAGpK,EAAE,CAACkK,aAAa,CAAC,CAAC;IAC3D,SAAS+lD,YAAYA,CAACt/B,MAAM,EAAE;MAC5B,IAAI,CAACxmB,UAAU,IAAI,CAAC2O,KAAK,CAAC6X,MAAM,CAAC9wB,GAAG,CAAC,EAAE;QACrCA,GAAG,GAAGD,IAAI,CAACC,GAAG,CAACA,GAAG,EAAE8wB,MAAM,CAAC9wB,GAAG,CAAC;MACjC;MACA,IAAI,CAACuK,UAAU,IAAI,CAAC0O,KAAK,CAAC6X,MAAM,CAAC3uB,GAAG,CAAC,EAAE;QACrCA,GAAG,GAAGpC,IAAI,CAACoC,GAAG,CAACA,GAAG,EAAE2uB,MAAM,CAAC3uB,GAAG,CAAC;MACjC;IACF;IACA,IAAI,CAACmI,UAAU,IAAI,CAACC,UAAU,EAAE;MAC9B6lD,YAAY,CAACjwD,EAAE,CAACkwD,eAAe,CAAC,CAAC,CAAC;MAClC,IAAIppD,OAAO,CAAC6pB,MAAM,KAAK,OAAO,IAAI7pB,OAAO,CAACgP,KAAK,CAACmiB,MAAM,KAAK,QAAQ,EAAE;QACnEg4B,YAAY,CAACjwD,EAAE,CAACoR,SAAS,CAAC,KAAK,CAAC,CAAC;MACnC;IACF;IACAvR,GAAG,GAAG1L,cAAc,CAAC0L,GAAG,CAAC,IAAI,CAACiZ,KAAK,CAACjZ,GAAG,CAAC,GAAGA,GAAG,GAAG,CAAC4uD,OAAO,CAAC3qC,OAAO,CAACxjB,IAAI,CAACC,GAAG,CAAC,CAAC,EAAEqjB,IAAI,CAAC;IACnF5hB,GAAG,GAAG7N,cAAc,CAAC6N,GAAG,CAAC,IAAI,CAAC8W,KAAK,CAAC9W,GAAG,CAAC,GAAGA,GAAG,GAAG,CAACysD,OAAO,CAACzqC,KAAK,CAAC1jB,IAAI,CAACC,GAAG,CAAC,CAAC,EAAEqjB,IAAI,CAAC,GAAG,CAAC;IACrF5jB,EAAE,CAACH,GAAG,GAAGD,IAAI,CAACC,GAAG,CAACA,GAAG,EAAEmC,GAAG,GAAG,CAAC,CAAC;IAC/BhC,EAAE,CAACgC,GAAG,GAAGpC,IAAI,CAACoC,GAAG,CAACnC,GAAG,GAAG,CAAC,EAAEmC,GAAG,CAAC;EACjC;EACAkuD,eAAeA,CAAA,EAAG;IAChB,MAAM17C,GAAG,GAAG,IAAI,CAAC27C,kBAAkB,CAAC,CAAC;IACrC,IAAItwD,GAAG,GAAGwK,MAAM,CAACE,iBAAiB;IAClC,IAAIvI,GAAG,GAAGqI,MAAM,CAACC,iBAAiB;IAClC,IAAIkK,GAAG,CAACnU,MAAM,EAAE;MACdR,GAAG,GAAG2U,GAAG,CAAC,CAAC,CAAC;MACZxS,GAAG,GAAGwS,GAAG,CAACA,GAAG,CAACnU,MAAM,GAAG,CAAC,CAAC;IAC3B;IACA,OAAO;MAACR,GAAG;MAAEmC;IAAG,CAAC;EACnB;EACA01B,UAAUA,CAAA,EAAG;IACX,MAAM13B,EAAE,GAAG,IAAI;IACf,MAAM8G,OAAO,GAAG9G,EAAE,CAAC8G,OAAO;IAC1B,MAAMspD,QAAQ,GAAGtpD,OAAO,CAAC6nD,IAAI;IAC7B,MAAMx8B,QAAQ,GAAGrrB,OAAO,CAACgP,KAAK;IAC9B,MAAMw5C,UAAU,GAAGn9B,QAAQ,CAAC8F,MAAM,KAAK,QAAQ,GAAGj4B,EAAE,CAACmwD,kBAAkB,CAAC,CAAC,GAAGnwD,EAAE,CAACqwD,SAAS,CAAC,CAAC;IAC1F,IAAIvpD,OAAO,CAAC6pB,MAAM,KAAK,OAAO,IAAI2+B,UAAU,CAACjvD,MAAM,EAAE;MACnDL,EAAE,CAACH,GAAG,GAAGG,EAAE,CAACo2B,QAAQ,IAAIk5B,UAAU,CAAC,CAAC,CAAC;MACrCtvD,EAAE,CAACgC,GAAG,GAAGhC,EAAE,CAACm2B,QAAQ,IAAIm5B,UAAU,CAACA,UAAU,CAACjvD,MAAM,GAAG,CAAC,CAAC;IAC3D;IACA,MAAMR,GAAG,GAAGG,EAAE,CAACH,GAAG;IAClB,MAAMmC,GAAG,GAAGhC,EAAE,CAACgC,GAAG;IAClB,MAAM8T,KAAK,GAAGzX,cAAc,CAACixD,UAAU,EAAEzvD,GAAG,EAAEmC,GAAG,CAAC;IAClDhC,EAAE,CAAC2vD,KAAK,GAAGS,QAAQ,CAACxsC,IAAI,KAAKuO,QAAQ,CAACT,QAAQ,GAC1Co9B,yBAAyB,CAACsB,QAAQ,CAACrB,OAAO,EAAE/uD,EAAE,CAACH,GAAG,EAAEG,EAAE,CAACgC,GAAG,EAAEhC,EAAE,CAACswD,iBAAiB,CAACzwD,GAAG,CAAC,CAAC,GACtFsvD,0BAA0B,CAACnvD,EAAE,EAAE8V,KAAK,CAACzV,MAAM,EAAE+vD,QAAQ,CAACrB,OAAO,EAAE/uD,EAAE,CAACH,GAAG,EAAEG,EAAE,CAACgC,GAAG,CAAC,CAAC;IACnFhC,EAAE,CAAC4vD,UAAU,GAAG,CAACz9B,QAAQ,CAACL,KAAK,CAACU,OAAO,IAAIxyB,EAAE,CAAC2vD,KAAK,KAAK,MAAM,GAAG5wD,SAAS,GACtEqwD,kBAAkB,CAACpvD,EAAE,CAAC2vD,KAAK,CAAC;IAChC3vD,EAAE,CAACuwD,WAAW,CAACjB,UAAU,CAAC;IAC1B,IAAIxoD,OAAO,CAACkB,OAAO,EAAE;MACnB8N,KAAK,CAAC9N,OAAO,CAAC,CAAC;IACjB;IACA,OAAOynD,mBAAmB,CAACzvD,EAAE,EAAE8V,KAAK,EAAE9V,EAAE,CAAC4vD,UAAU,CAAC;EACtD;EACAW,WAAWA,CAACjB,UAAU,EAAE;IACtB,MAAMtvD,EAAE,GAAG,IAAI;IACf,IAAIF,KAAK,GAAG,CAAC;IACb,IAAImI,GAAG,GAAG,CAAC;IACX,IAAI0qB,KAAK,EAAE/Z,IAAI;IACf,IAAI5Y,EAAE,CAAC8G,OAAO,CAACqT,MAAM,IAAIm1C,UAAU,CAACjvD,MAAM,EAAE;MAC1CsyB,KAAK,GAAG3yB,EAAE,CAACwwD,kBAAkB,CAAClB,UAAU,CAAC,CAAC,CAAC,CAAC;MAC5C,IAAIA,UAAU,CAACjvD,MAAM,KAAK,CAAC,EAAE;QAC3BP,KAAK,GAAG,CAAC,GAAG6yB,KAAK;MACnB,CAAC,MAAM;QACL7yB,KAAK,GAAG,CAACE,EAAE,CAACwwD,kBAAkB,CAAClB,UAAU,CAAC,CAAC,CAAC,CAAC,GAAG38B,KAAK,IAAI,CAAC;MAC5D;MACA/Z,IAAI,GAAG5Y,EAAE,CAACwwD,kBAAkB,CAAClB,UAAU,CAACA,UAAU,CAACjvD,MAAM,GAAG,CAAC,CAAC,CAAC;MAC/D,IAAIivD,UAAU,CAACjvD,MAAM,KAAK,CAAC,EAAE;QAC3B4H,GAAG,GAAG2Q,IAAI;MACZ,CAAC,MAAM;QACL3Q,GAAG,GAAG,CAAC2Q,IAAI,GAAG5Y,EAAE,CAACwwD,kBAAkB,CAAClB,UAAU,CAACA,UAAU,CAACjvD,MAAM,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC;MAC7E;IACF;IACA,MAAMowD,KAAK,GAAGnB,UAAU,CAACjvD,MAAM,GAAG,CAAC,GAAG,GAAG,GAAG,IAAI;IAChDP,KAAK,GAAG3J,WAAW,CAAC2J,KAAK,EAAE,CAAC,EAAE2wD,KAAK,CAAC;IACpCxoD,GAAG,GAAG9R,WAAW,CAAC8R,GAAG,EAAE,CAAC,EAAEwoD,KAAK,CAAC;IAChCzwD,EAAE,CAAC6vD,QAAQ,GAAG;MAAC/vD,KAAK;MAAEmI,GAAG;MAAErF,MAAM,EAAE,CAAC,IAAI9C,KAAK,GAAG,CAAC,GAAGmI,GAAG;IAAC,CAAC;EAC3D;EACAooD,SAASA,CAAA,EAAG;IACV,MAAMrwD,EAAE,GAAG,IAAI;IACf,MAAMyuD,OAAO,GAAGzuD,EAAE,CAAC0uD,QAAQ;IAC3B,MAAM7uD,GAAG,GAAGG,EAAE,CAACH,GAAG;IAClB,MAAMmC,GAAG,GAAGhC,EAAE,CAACgC,GAAG;IAClB,MAAM8E,OAAO,GAAG9G,EAAE,CAAC8G,OAAO;IAC1B,MAAMspD,QAAQ,GAAGtpD,OAAO,CAAC6nD,IAAI;IAC7B,MAAM98B,KAAK,GAAGu+B,QAAQ,CAACxsC,IAAI,IAAIkrC,yBAAyB,CAACsB,QAAQ,CAACrB,OAAO,EAAElvD,GAAG,EAAEmC,GAAG,EAAEhC,EAAE,CAACswD,iBAAiB,CAACzwD,GAAG,CAAC,CAAC;IAC/G,MAAMypD,QAAQ,GAAG31D,cAAc,CAACy8D,QAAQ,CAAC9G,QAAQ,EAAE,CAAC,CAAC;IACrD,MAAMvlC,OAAO,GAAG8N,KAAK,KAAK,MAAM,GAAGu+B,QAAQ,CAACvB,UAAU,GAAG,KAAK;IAC9D,MAAM6B,UAAU,GAAGz6D,QAAQ,CAAC8tB,OAAO,CAAC,IAAIA,OAAO,KAAK,IAAI;IACxD,MAAMjO,KAAK,GAAG,CAAC,CAAC;IAChB,IAAI6c,KAAK,GAAG9yB,GAAG;IACf,IAAI8uD,IAAI,EAAE1+C,KAAK;IACf,IAAIygD,UAAU,EAAE;MACd/9B,KAAK,GAAG,CAAC87B,OAAO,CAAC3qC,OAAO,CAAC6O,KAAK,EAAE,SAAS,EAAE5O,OAAO,CAAC;IACrD;IACA4O,KAAK,GAAG,CAAC87B,OAAO,CAAC3qC,OAAO,CAAC6O,KAAK,EAAE+9B,UAAU,GAAG,KAAK,GAAG7+B,KAAK,CAAC;IAC3D,IAAI48B,OAAO,CAAC5qC,IAAI,CAAC7hB,GAAG,EAAEnC,GAAG,EAAEgyB,KAAK,CAAC,GAAG,MAAM,GAAGy3B,QAAQ,EAAE;MACrD,MAAM,IAAIhmC,KAAK,CAACzjB,GAAG,GAAG,OAAO,GAAGmC,GAAG,GAAG,sCAAsC,GAAGsnD,QAAQ,GAAG,GAAG,GAAGz3B,KAAK,CAAC;IACxG;IACA,MAAMy9B,UAAU,GAAGxoD,OAAO,CAACgP,KAAK,CAACmiB,MAAM,KAAK,MAAM,IAAIj4B,EAAE,CAAC2wD,iBAAiB,CAAC,CAAC;IAC5E,KAAKhC,IAAI,GAAGh8B,KAAK,EAAE1iB,KAAK,GAAG,CAAC,EAAE0+C,IAAI,GAAG3sD,GAAG,EAAE2sD,IAAI,GAAG,CAACF,OAAO,CAAC9sD,GAAG,CAACgtD,IAAI,EAAErF,QAAQ,EAAEz3B,KAAK,CAAC,EAAE5hB,KAAK,EAAE,EAAE;MAC7Fo/C,OAAO,CAACv5C,KAAK,EAAE64C,IAAI,EAAEW,UAAU,CAAC;IAClC;IACA,IAAIX,IAAI,KAAK3sD,GAAG,IAAI8E,OAAO,CAAC6pB,MAAM,KAAK,OAAO,IAAI1gB,KAAK,KAAK,CAAC,EAAE;MAC7Do/C,OAAO,CAACv5C,KAAK,EAAE64C,IAAI,EAAEW,UAAU,CAAC;IAClC;IACA,OAAOlqD,MAAM,CAACC,IAAI,CAACyQ,KAAK,CAAC,CAACP,IAAI,CAAC,CAACziB,CAAC,EAAEQ,CAAC,KAAKR,CAAC,GAAGQ,CAAC,CAAC,CAAC0rB,GAAG,CAAC9oB,CAAC,IAAI,CAACA,CAAC,CAAC;EAC9D;EACA4b,gBAAgBA,CAACvK,KAAK,EAAE;IACtB,MAAMvH,EAAE,GAAG,IAAI;IACf,MAAMyuD,OAAO,GAAGzuD,EAAE,CAAC0uD,QAAQ;IAC3B,MAAM0B,QAAQ,GAAGpwD,EAAE,CAAC8G,OAAO,CAAC6nD,IAAI;IAChC,IAAIyB,QAAQ,CAACQ,aAAa,EAAE;MAC1B,OAAOnC,OAAO,CAAChrC,MAAM,CAAClc,KAAK,EAAE6oD,QAAQ,CAACQ,aAAa,CAAC;IACtD;IACA,OAAOnC,OAAO,CAAChrC,MAAM,CAAClc,KAAK,EAAE6oD,QAAQ,CAACL,cAAc,CAACc,QAAQ,CAAC;EAChE;EACAC,mBAAmBA,CAACnC,IAAI,EAAE5lD,KAAK,EAAE+M,KAAK,EAAE2N,MAAM,EAAE;IAC9C,MAAMzjB,EAAE,GAAG,IAAI;IACf,MAAM8G,OAAO,GAAG9G,EAAE,CAAC8G,OAAO;IAC1B,MAAM0c,OAAO,GAAG1c,OAAO,CAAC6nD,IAAI,CAACoB,cAAc;IAC3C,MAAMnsC,IAAI,GAAG5jB,EAAE,CAAC2vD,KAAK;IACrB,MAAMH,SAAS,GAAGxvD,EAAE,CAAC4vD,UAAU;IAC/B,MAAMmB,WAAW,GAAGntC,IAAI,IAAIJ,OAAO,CAACI,IAAI,CAAC;IACzC,MAAMotC,WAAW,GAAGxB,SAAS,IAAIhsC,OAAO,CAACgsC,SAAS,CAAC;IACnD,MAAMzuD,IAAI,GAAG+U,KAAK,CAAC/M,KAAK,CAAC;IACzB,MAAM+oB,KAAK,GAAG09B,SAAS,IAAIwB,WAAW,IAAIjwD,IAAI,IAAIA,IAAI,CAAC+wB,KAAK;IAC5D,MAAMjgB,KAAK,GAAG7R,EAAE,CAAC0uD,QAAQ,CAACjrC,MAAM,CAACkrC,IAAI,EAAElrC,MAAM,KAAKqO,KAAK,GAAGk/B,WAAW,GAAGD,WAAW,CAAC,CAAC;IACrF,MAAME,SAAS,GAAGnqD,OAAO,CAACgP,KAAK,CAAC7d,QAAQ;IACxC,OAAOg5D,SAAS,GAAGA,SAAS,CAACp/C,KAAK,EAAE9I,KAAK,EAAE+M,KAAK,CAAC,GAAGjE,KAAK;EAC3D;EACAinB,kBAAkBA,CAAChjB,KAAK,EAAE;IACxB,IAAI1iB,CAAC,EAAE0V,IAAI,EAAE/H,IAAI;IACjB,KAAK3N,CAAC,GAAG,CAAC,EAAE0V,IAAI,GAAGgN,KAAK,CAACzV,MAAM,EAAEjN,CAAC,GAAG0V,IAAI,EAAE,EAAE1V,CAAC,EAAE;MAC9C2N,IAAI,GAAG+U,KAAK,CAAC1iB,CAAC,CAAC;MACf2N,IAAI,CAAC8Q,KAAK,GAAG,IAAI,CAACi/C,mBAAmB,CAAC/vD,IAAI,CAACwG,KAAK,EAAEnU,CAAC,EAAE0iB,KAAK,CAAC;IAC7D;EACF;EACA06C,kBAAkBA,CAACjpD,KAAK,EAAE;IACxB,MAAMvH,EAAE,GAAG,IAAI;IACf,OAAOuH,KAAK,KAAK,IAAI,GAAG4J,GAAG,GAAG,CAAC5J,KAAK,GAAGvH,EAAE,CAACH,GAAG,KAAKG,EAAE,CAACgC,GAAG,GAAGhC,EAAE,CAACH,GAAG,CAAC;EACpE;EACAgW,gBAAgBA,CAACtO,KAAK,EAAE;IACtB,MAAMvH,EAAE,GAAG,IAAI;IACf,MAAMkxD,OAAO,GAAGlxD,EAAE,CAAC6vD,QAAQ;IAC3B,MAAM9oC,GAAG,GAAG/mB,EAAE,CAACwwD,kBAAkB,CAACjpD,KAAK,CAAC;IACxC,OAAOvH,EAAE,CAAC0a,kBAAkB,CAAC,CAACw2C,OAAO,CAACpxD,KAAK,GAAGinB,GAAG,IAAImqC,OAAO,CAACtuD,MAAM,CAAC;EACtE;EACAw4B,gBAAgBA,CAACC,KAAK,EAAE;IACtB,MAAMr7B,EAAE,GAAG,IAAI;IACf,MAAMkxD,OAAO,GAAGlxD,EAAE,CAAC6vD,QAAQ;IAC3B,MAAM9oC,GAAG,GAAG/mB,EAAE,CAACu7B,kBAAkB,CAACF,KAAK,CAAC,GAAG61B,OAAO,CAACtuD,MAAM,GAAGsuD,OAAO,CAACjpD,GAAG;IACvE,OAAOjI,EAAE,CAACH,GAAG,GAAGknB,GAAG,IAAI/mB,EAAE,CAACgC,GAAG,GAAGhC,EAAE,CAACH,GAAG,CAAC;EACzC;EACAsxD,aAAaA,CAACt/C,KAAK,EAAE;IACnB,MAAM7R,EAAE,GAAG,IAAI;IACf,MAAMoxD,SAAS,GAAGpxD,EAAE,CAAC8G,OAAO,CAACgP,KAAK;IAClC,MAAMu7C,cAAc,GAAGrxD,EAAE,CAAC4M,GAAG,CAACqvC,WAAW,CAACpqC,KAAK,CAAC,CAAC6G,KAAK;IACtD,MAAMuD,KAAK,GAAGhnB,SAAS,CAAC+K,EAAE,CAACgY,YAAY,CAAC,CAAC,GAAGo5C,SAAS,CAAC9/B,WAAW,GAAG8/B,SAAS,CAAC//B,WAAW,CAAC;IAC1F,MAAMigC,WAAW,GAAG1xD,IAAI,CAAC+b,GAAG,CAACM,KAAK,CAAC;IACnC,MAAMs1C,WAAW,GAAG3xD,IAAI,CAACic,GAAG,CAACI,KAAK,CAAC;IACnC,MAAMu1C,YAAY,GAAGxxD,EAAE,CAACg7B,uBAAuB,CAAC,CAAC,CAAC,CAACxzB,IAAI;IACvD,OAAO;MACLxR,CAAC,EAAGq7D,cAAc,GAAGC,WAAW,GAAKE,YAAY,GAAGD,WAAY;MAChEn9D,CAAC,EAAGi9D,cAAc,GAAGE,WAAW,GAAKC,YAAY,GAAGF;IACtD,CAAC;EACH;EACAhB,iBAAiBA,CAACmB,WAAW,EAAE;IAC7B,MAAMzxD,EAAE,GAAG,IAAI;IACf,MAAMowD,QAAQ,GAAGpwD,EAAE,CAAC8G,OAAO,CAAC6nD,IAAI;IAChC,MAAMoB,cAAc,GAAGK,QAAQ,CAACL,cAAc;IAC9C,MAAMtsC,MAAM,GAAGssC,cAAc,CAACK,QAAQ,CAACxsC,IAAI,CAAC,IAAImsC,cAAc,CAACpC,WAAW;IAC1E,MAAM+D,YAAY,GAAG1xD,EAAE,CAAC8wD,mBAAmB,CAACW,WAAW,EAAE,CAAC,EAAEhC,mBAAmB,CAACzvD,EAAE,EAAE,CAACyxD,WAAW,CAAC,EAAEzxD,EAAE,CAAC4vD,UAAU,CAAC,EAAEnsC,MAAM,CAAC;IAC1H,MAAMjc,IAAI,GAAGxH,EAAE,CAACmxD,aAAa,CAACO,YAAY,CAAC;IAC3C,MAAM1C,QAAQ,GAAGpvD,IAAI,CAACiE,KAAK,CAAC7D,EAAE,CAACgY,YAAY,CAAC,CAAC,GAAGhY,EAAE,CAAC0Y,KAAK,GAAGlR,IAAI,CAACxR,CAAC,GAAGgK,EAAE,CAACyY,MAAM,GAAGjR,IAAI,CAACpT,CAAC,CAAC,GAAG,CAAC;IAC3F,OAAO46D,QAAQ,GAAG,CAAC,GAAGA,QAAQ,GAAG,CAAC;EACpC;EACA2B,iBAAiBA,CAAA,EAAG;IAClB,MAAM3wD,EAAE,GAAG,IAAI;IACf,IAAIsvD,UAAU,GAAGtvD,EAAE,CAACmV,MAAM,CAAC3L,IAAI,IAAI,EAAE;IACrC,IAAIpW,CAAC,EAAE0V,IAAI;IACX,IAAIwmD,UAAU,CAACjvD,MAAM,EAAE;MACrB,OAAOivD,UAAU;IACnB;IACA,MAAMj6C,KAAK,GAAGrV,EAAE,CAACsV,uBAAuB,CAAC,CAAC;IAC1C,IAAItV,EAAE,CAAC8vD,WAAW,IAAIz6C,KAAK,CAAChV,MAAM,EAAE;MAClC,OAAQL,EAAE,CAACmV,MAAM,CAAC3L,IAAI,GAAG6L,KAAK,CAAC,CAAC,CAAC,CAACvK,UAAU,CAAC4G,kBAAkB,CAAC1R,EAAE,CAAC;IACrE;IACA,KAAK5M,CAAC,GAAG,CAAC,EAAE0V,IAAI,GAAGuM,KAAK,CAAChV,MAAM,EAAEjN,CAAC,GAAG0V,IAAI,EAAE,EAAE1V,CAAC,EAAE;MAC9Ck8D,UAAU,GAAGA,UAAU,CAACt8C,MAAM,CAACqC,KAAK,CAACjiB,CAAC,CAAC,CAAC0X,UAAU,CAAC4G,kBAAkB,CAAC1R,EAAE,CAAC,CAAC;IAC5E;IACA,OAAQA,EAAE,CAACmV,MAAM,CAAC3L,IAAI,GAAGxJ,EAAE,CAAC2xD,SAAS,CAACrC,UAAU,CAAC;EACnD;EACAa,kBAAkBA,CAAA,EAAG;IACnB,MAAMnwD,EAAE,GAAG,IAAI;IACf,MAAMsvD,UAAU,GAAGtvD,EAAE,CAACmV,MAAM,CAAC1E,MAAM,IAAI,EAAE;IACzC,IAAIrd,CAAC,EAAE0V,IAAI;IACX,IAAIwmD,UAAU,CAACjvD,MAAM,EAAE;MACrB,OAAOivD,UAAU;IACnB;IACA,MAAM7+C,MAAM,GAAGzQ,EAAE,CAAC0Q,SAAS,CAAC,CAAC;IAC7B,KAAKtd,CAAC,GAAG,CAAC,EAAE0V,IAAI,GAAG2H,MAAM,CAACpQ,MAAM,EAAEjN,CAAC,GAAG0V,IAAI,EAAE,EAAE1V,CAAC,EAAE;MAC/Ck8D,UAAU,CAAC5tD,IAAI,CAACsO,KAAK,CAAChQ,EAAE,EAAEyQ,MAAM,CAACrd,CAAC,CAAC,CAAC,CAAC;IACvC;IACA,OAAQ4M,EAAE,CAACmV,MAAM,CAAC1E,MAAM,GAAGzQ,EAAE,CAAC8vD,WAAW,GAAGR,UAAU,GAAGtvD,EAAE,CAAC2xD,SAAS,CAACrC,UAAU,CAAC;EACnF;EACAqC,SAASA,CAAC/qD,MAAM,EAAE;IAChB,OAAO7R,YAAY,CAAC6R,MAAM,CAAC2O,IAAI,CAACg5C,MAAM,CAAC,CAAC;EAC1C;AACF;AACAmB,SAAS,CAACzlD,EAAE,GAAG,MAAM;AACrBylD,SAAS,CAACj8D,QAAQ,GAAG;EACnBk9B,MAAM,EAAE,MAAM;EACdxM,QAAQ,EAAE,CAAC,CAAC;EACZwqC,IAAI,EAAE;IACJC,MAAM,EAAE,KAAK;IACbhrC,IAAI,EAAE,KAAK;IACXoP,KAAK,EAAE,KAAK;IACZ67B,UAAU,EAAE,KAAK;IACjBE,OAAO,EAAE,aAAa;IACtBgB,cAAc,EAAE,CAAC;EACnB,CAAC;EACDj6C,KAAK,EAAE;IACLmiB,MAAM,EAAE,MAAM;IACdnG,KAAK,EAAE;MACLU,OAAO,EAAE;IACX;EACF;AACF,CAAC;AAED,SAASwf,WAAWA,CAAC4f,KAAK,EAAE/4C,GAAG,EAAE7Q,OAAO,EAAE;EACxC,IAAI6pD,UAAU,EAAEC,UAAU,EAAEC,UAAU,EAAEC,UAAU;EAClD,IAAIhqD,OAAO,EAAE;IACX6pD,UAAU,GAAGjyD,IAAI,CAACiE,KAAK,CAACgV,GAAG,CAAC;IAC5Bi5C,UAAU,GAAGlyD,IAAI,CAAC6zB,IAAI,CAAC5a,GAAG,CAAC;IAC3Bk5C,UAAU,GAAGH,KAAK,CAACC,UAAU,CAAC;IAC9BG,UAAU,GAAGJ,KAAK,CAACE,UAAU,CAAC;EAChC,CAAC,MAAM;IACL,MAAMt+B,MAAM,GAAGj1B,OAAO,CAACqzD,KAAK,EAAE/4C,GAAG,CAAC;IAClCk5C,UAAU,GAAGv+B,MAAM,CAACtS,EAAE;IACtB8wC,UAAU,GAAGx+B,MAAM,CAACrS,EAAE;IACtB0wC,UAAU,GAAGD,KAAK,CAACG,UAAU,CAAC;IAC9BD,UAAU,GAAGF,KAAK,CAACI,UAAU,CAAC;EAChC;EACA,MAAMC,IAAI,GAAGH,UAAU,GAAGD,UAAU;EACpC,OAAOI,IAAI,GAAGF,UAAU,GAAG,CAACC,UAAU,GAAGD,UAAU,KAAKl5C,GAAG,GAAGg5C,UAAU,CAAC,GAAGI,IAAI,GAAGF,UAAU;AAC/F;AACA,MAAMG,eAAe,SAASxC,SAAS,CAAC;EACtCjxD,WAAWA,CAAC4I,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAAC8qD,MAAM,GAAG,EAAE;IAChB,IAAI,CAACC,SAAS,GAAGrzD,SAAS;EAC5B;EACAwxD,WAAWA,CAAA,EAAG;IACZ,MAAMvwD,EAAE,GAAG,IAAI;IACf,MAAMsvD,UAAU,GAAGtvD,EAAE,CAACqyD,sBAAsB,CAAC,CAAC;IAC9CryD,EAAE,CAACmyD,MAAM,GAAGnyD,EAAE,CAACsyD,gBAAgB,CAAChD,UAAU,CAAC;IAC3CtvD,EAAE,CAACoyD,SAAS,GAAGpyD,EAAE,CAACmyD,MAAM,CAAC9xD,MAAM,GAAG,CAAC;IACnC,KAAK,CAACkwD,WAAW,CAACjB,UAAU,CAAC;EAC/B;EACAgD,gBAAgBA,CAAChD,UAAU,EAAE;IAC3B,MAAMtvD,EAAE,GAAG,IAAI;IACf,MAAM;MAACH,GAAG;MAAEmC;IAAG,CAAC,GAAGhC,EAAE;IACrB,IAAI,CAACsvD,UAAU,CAACjvD,MAAM,EAAE;MACtB,OAAO,CACL;QAACsuD,IAAI,EAAE9uD,GAAG;QAAEknB,GAAG,EAAE;MAAC,CAAC,EACnB;QAAC4nC,IAAI,EAAE3sD,GAAG;QAAE+kB,GAAG,EAAE;MAAC,CAAC,CACpB;IACH;IACA,MAAMrmB,KAAK,GAAG,CAACb,GAAG,CAAC;IACnB,IAAIzM,CAAC,EAAE0V,IAAI,EAAE4M,IAAI;IACjB,KAAKtiB,CAAC,GAAG,CAAC,EAAE0V,IAAI,GAAGwmD,UAAU,CAACjvD,MAAM,EAAEjN,CAAC,GAAG0V,IAAI,EAAE,EAAE1V,CAAC,EAAE;MACnDsiB,IAAI,GAAG45C,UAAU,CAACl8D,CAAC,CAAC;MACpB,IAAIsiB,IAAI,GAAG7V,GAAG,IAAI6V,IAAI,GAAG1T,GAAG,EAAE;QAC5BtB,KAAK,CAACgB,IAAI,CAACgU,IAAI,CAAC;MAClB;IACF;IACAhV,KAAK,CAACgB,IAAI,CAACM,GAAG,CAAC;IACf,OAAOtB,KAAK;EACd;EACA2xD,sBAAsBA,CAAA,EAAG;IACvB,MAAMryD,EAAE,GAAG,IAAI;IACf,IAAIsvD,UAAU,GAAGtvD,EAAE,CAACmV,MAAM,CAACxN,GAAG,IAAI,EAAE;IACpC,IAAI2nD,UAAU,CAACjvD,MAAM,EAAE;MACrB,OAAOivD,UAAU;IACnB;IACA,MAAM9lD,IAAI,GAAGxJ,EAAE,CAAC2wD,iBAAiB,CAAC,CAAC;IACnC,MAAM9+C,KAAK,GAAG7R,EAAE,CAACmwD,kBAAkB,CAAC,CAAC;IACrC,IAAI3mD,IAAI,CAACnJ,MAAM,IAAIwR,KAAK,CAACxR,MAAM,EAAE;MAC/BivD,UAAU,GAAGtvD,EAAE,CAAC2xD,SAAS,CAACnoD,IAAI,CAACwJ,MAAM,CAACnB,KAAK,CAAC,CAAC;IAC/C,CAAC,MAAM;MACLy9C,UAAU,GAAG9lD,IAAI,CAACnJ,MAAM,GAAGmJ,IAAI,GAAGqI,KAAK;IACzC;IACAy9C,UAAU,GAAGtvD,EAAE,CAACmV,MAAM,CAACxN,GAAG,GAAG2nD,UAAU;IACvC,OAAOA,UAAU;EACnB;EACAz5C,gBAAgBA,CAACtO,KAAK,EAAEwB,KAAK,EAAE;IAC7B,MAAM/I,EAAE,GAAG,IAAI;IACf,MAAMkxD,OAAO,GAAGlxD,EAAE,CAAC6vD,QAAQ;IAC3B,MAAM9oC,GAAG,GAAG/mB,EAAE,CAAC8vD,WAAW,IAAI9vD,EAAE,CAACoyD,SAAS,GAAG,CAAC,IAAI,CAAC39D,aAAa,CAACsU,KAAK,CAAC,GACnEA,KAAK,GAAG/I,EAAE,CAACoyD,SAAS,GAAGpyD,EAAE,CAACwwD,kBAAkB,CAACjpD,KAAK,CAAC;IACvD,OAAOvH,EAAE,CAAC0a,kBAAkB,CAAC,CAACw2C,OAAO,CAACpxD,KAAK,GAAGinB,GAAG,IAAImqC,OAAO,CAACtuD,MAAM,CAAC;EACtE;EACA4tD,kBAAkBA,CAACjpD,KAAK,EAAE;IACxB,OAAOyqC,WAAW,CAAC,IAAI,CAACmgB,MAAM,EAAE5qD,KAAK,CAAC,GAAG,IAAI,CAAC6qD,SAAS;EACzD;EACAh3B,gBAAgBA,CAACC,KAAK,EAAE;IACtB,MAAMr7B,EAAE,GAAG,IAAI;IACf,MAAMkxD,OAAO,GAAGlxD,EAAE,CAAC6vD,QAAQ;IAC3B,MAAMv0B,OAAO,GAAGt7B,EAAE,CAACu7B,kBAAkB,CAACF,KAAK,CAAC,GAAG61B,OAAO,CAACtuD,MAAM,GAAGsuD,OAAO,CAACjpD,GAAG;IAC3E,OAAO+pC,WAAW,CAAChyC,EAAE,CAACmyD,MAAM,EAAE72B,OAAO,GAAG,IAAI,CAAC82B,SAAS,EAAE,IAAI,CAAC;EAC/D;AACF;AACAF,eAAe,CAACjoD,EAAE,GAAG,YAAY;AACjCioD,eAAe,CAACz+D,QAAQ,GAAGi8D,SAAS,CAACj8D,QAAQ;AAE7C,IAAIgY,MAAM,GAAG,aAAarG,MAAM,CAAC+N,MAAM,CAAC;EACxCiQ,SAAS,EAAE,IAAI;EACfwkC,aAAa,EAAEA,aAAa;EAC5B6B,WAAW,EAAEA,WAAW;EACxBS,gBAAgB,EAAEA,gBAAgB;EAClC+B,iBAAiB,EAAEA,iBAAiB;EACpCyD,SAAS,EAAEA,SAAS;EACpBwC,eAAe,EAAEA;AACjB,CAAC,CAAC;AAEF,MAAMK,aAAa,GAAG,CACpBpvC,WAAW,EACXlR,QAAQ,EACR4I,OAAO,EACPpP,MAAM,CACP;AAED,SAAStI,SAAS,EAAE+C,UAAU,EAAEkpC,UAAU,EAAE53B,aAAa,EAAEq9B,UAAU,EAAEjqB,YAAY,EAAES,aAAa,EAAE9Q,gBAAgB,EAAEqtC,aAAa,EAAE9e,KAAK,EAAEp8B,iBAAiB,EAAE+pC,iBAAiB,IAAI8Q,UAAU,EAAEx4B,WAAW,EAAExS,kBAAkB,EAAEgT,OAAO,EAAE0qB,aAAa,IAAIuN,MAAM,EAAE/gC,WAAW,EAAEg4B,aAAa,IAAIzD,MAAM,EAAEh7B,cAAc,EAAE2xB,WAAW,EAAE8X,WAAW,EAAES,gBAAgB,EAAEtnC,aAAa,EAAE4vB,YAAY,EAAE7wB,mBAAmB,EAAEkB,eAAe,EAAEopC,iBAAiB,EAAEz2B,KAAK,EAAEtS,iBAAiB,EAAEwN,KAAK,EAAEg/B,SAAS,EAAEwC,eAAe,EAAE9S,YAAY,IAAIP,KAAK,EAAEsI,cAAc,IAAIrE,OAAO,EAAE3+B,QAAQ,IAAIquC,SAAS,EAAElwD,QAAQ,EAAE6gB,WAAW,EAAElR,QAAQ,EAAEwV,OAAO,EAAE5M,OAAO,EAAE03C,aAAa,EAAElvB,QAAQ,EAAE53B,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}