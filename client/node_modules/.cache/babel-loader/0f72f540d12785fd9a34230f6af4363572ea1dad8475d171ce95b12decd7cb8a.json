{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\nvar _sister = require('sister');\nvar _sister2 = _interopRequireDefault(_sister);\nvar _loadYouTubeIframeApi = require('./loadYouTubeIframeApi');\nvar _loadYouTubeIframeApi2 = _interopRequireDefault(_loadYouTubeIframeApi);\nvar _YouTubePlayer = require('./YouTubePlayer');\nvar _YouTubePlayer2 = _interopRequireDefault(_YouTubePlayer);\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\n/**\r\n * @typedef YT.Player\r\n * @see https://developers.google.com/youtube/iframe_api_reference\r\n * */\n\n/**\r\n * @see https://developers.google.com/youtube/iframe_api_reference#Loading_a_Video_Player\r\n */\nvar youtubeIframeAPI = void 0;\n\n/**\r\n * A factory function used to produce an instance of YT.Player and queue function calls and proxy events of the resulting object.\r\n *\r\n * @param maybeElementId Either An existing YT.Player instance,\r\n * the DOM element or the id of the HTML element where the API will insert an <iframe>.\r\n * @param options See `options` (Ignored when using an existing YT.Player instance).\r\n * @param strictState A flag designating whether or not to wait for\r\n * an acceptable state when calling supported functions. Default: `false`.\r\n * See `FunctionStateMap.js` for supported functions and acceptable states.\r\n */\n\nexports.default = function (maybeElementId) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var strictState = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var emitter = (0, _sister2.default)();\n  if (!youtubeIframeAPI) {\n    youtubeIframeAPI = (0, _loadYouTubeIframeApi2.default)(emitter);\n  }\n  if (options.events) {\n    throw new Error('Event handlers cannot be overwritten.');\n  }\n  if (typeof maybeElementId === 'string' && !document.getElementById(maybeElementId)) {\n    throw new Error('Element \"' + maybeElementId + '\" does not exist.');\n  }\n  options.events = _YouTubePlayer2.default.proxyEvents(emitter);\n  var playerAPIReady = new Promise(function (resolve) {\n    if ((typeof maybeElementId === 'undefined' ? 'undefined' : _typeof(maybeElementId)) === 'object' && maybeElementId.playVideo instanceof Function) {\n      var player = maybeElementId;\n      resolve(player);\n    } else {\n      // asume maybeElementId can be rendered inside\n      // eslint-disable-next-line promise/catch-or-return\n      youtubeIframeAPI.then(function (YT) {\n        // eslint-disable-line promise/prefer-await-to-then\n        var player = new YT.Player(maybeElementId, options);\n        emitter.on('ready', function () {\n          resolve(player);\n        });\n        return null;\n      });\n    }\n  });\n  var playerApi = _YouTubePlayer2.default.promisifyPlayer(playerAPIReady, strictState);\n  playerApi.on = emitter.on;\n  playerApi.off = emitter.off;\n  return playerApi;\n};\nmodule.exports = exports['default'];","map":{"version":3,"names":["Object","defineProperty","exports","value","_typeof","Symbol","iterator","obj","constructor","prototype","_sister","require","_sister2","_interopRequireDefault","_loadYouTubeIframeApi","_loadYouTubeIframeApi2","_YouTubePlayer","_YouTubePlayer2","__esModule","default","youtubeIframeAPI","maybeElementId","options","arguments","length","undefined","strictState","emitter","events","Error","document","getElementById","proxyEvents","playerAPIReady","Promise","resolve","playVideo","Function","player","then","YT","Player","on","playerApi","promisifyPlayer","off","module"],"sources":["C:/Users/user/Desktop/mcdonald-ec2/client/node_modules/youtube-player/dist/index.js"],"sourcesContent":["'use strict';\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\n\r\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\r\n\r\nvar _sister = require('sister');\r\n\r\nvar _sister2 = _interopRequireDefault(_sister);\r\n\r\nvar _loadYouTubeIframeApi = require('./loadYouTubeIframeApi');\r\n\r\nvar _loadYouTubeIframeApi2 = _interopRequireDefault(_loadYouTubeIframeApi);\r\n\r\nvar _YouTubePlayer = require('./YouTubePlayer');\r\n\r\nvar _YouTubePlayer2 = _interopRequireDefault(_YouTubePlayer);\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\r\n\r\n/**\r\n * @typedef YT.Player\r\n * @see https://developers.google.com/youtube/iframe_api_reference\r\n * */\r\n\r\n/**\r\n * @see https://developers.google.com/youtube/iframe_api_reference#Loading_a_Video_Player\r\n */\r\nvar youtubeIframeAPI = void 0;\r\n\r\n/**\r\n * A factory function used to produce an instance of YT.Player and queue function calls and proxy events of the resulting object.\r\n *\r\n * @param maybeElementId Either An existing YT.Player instance,\r\n * the DOM element or the id of the HTML element where the API will insert an <iframe>.\r\n * @param options See `options` (Ignored when using an existing YT.Player instance).\r\n * @param strictState A flag designating whether or not to wait for\r\n * an acceptable state when calling supported functions. Default: `false`.\r\n * See `FunctionStateMap.js` for supported functions and acceptable states.\r\n */\r\n\r\nexports.default = function (maybeElementId) {\r\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\r\n  var strictState = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\r\n\r\n  var emitter = (0, _sister2.default)();\r\n\r\n  if (!youtubeIframeAPI) {\r\n    youtubeIframeAPI = (0, _loadYouTubeIframeApi2.default)(emitter);\r\n  }\r\n\r\n  if (options.events) {\r\n    throw new Error('Event handlers cannot be overwritten.');\r\n  }\r\n\r\n  if (typeof maybeElementId === 'string' && !document.getElementById(maybeElementId)) {\r\n    throw new Error('Element \"' + maybeElementId + '\" does not exist.');\r\n  }\r\n\r\n  options.events = _YouTubePlayer2.default.proxyEvents(emitter);\r\n\r\n  var playerAPIReady = new Promise(function (resolve) {\r\n    if ((typeof maybeElementId === 'undefined' ? 'undefined' : _typeof(maybeElementId)) === 'object' && maybeElementId.playVideo instanceof Function) {\r\n      var player = maybeElementId;\r\n\r\n      resolve(player);\r\n    } else {\r\n      // asume maybeElementId can be rendered inside\r\n      // eslint-disable-next-line promise/catch-or-return\r\n      youtubeIframeAPI.then(function (YT) {\r\n        // eslint-disable-line promise/prefer-await-to-then\r\n        var player = new YT.Player(maybeElementId, options);\r\n\r\n        emitter.on('ready', function () {\r\n          resolve(player);\r\n        });\r\n\r\n        return null;\r\n      });\r\n    }\r\n  });\r\n\r\n  var playerApi = _YouTubePlayer2.default.promisifyPlayer(playerAPIReady, strictState);\r\n\r\n  playerApi.on = emitter.on;\r\n  playerApi.off = emitter.off;\r\n\r\n  return playerApi;\r\n};\r\n\r\nmodule.exports = exports['default'];"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}