{"ast":null,"code":"import React,{useState}from\"react\";import{Dialog,DialogTitle,DialogContent,DialogActions,Button,TextField}from\"@mui/material\";import{Upload}from\"antd\";import{API_URL}from\"../../../../config/contansts\";import axios from\"axios\";// import axios from \"axios\";\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const ANewsModal=_ref=>{let{props}=_ref;const{content_img_url}=props.editedData;const[contentImageUrl,setContentImageUrl]=useState(\"\");const onChangeContentImage=info=>{// 파일이 업로드 중일 때\nconsole.log(\"new\",info.file);if(info.file.status===\"uploading\"){console.log(\"업로드중\");return;}// 파일이 업로드 완료 되었을 때\nif(info.file.status===\"done\"){console.log(\"성공\");const response=info.file.response;const imageUrl=response.imageUrl;// 받은 이미지경로를 imageUrl에 넣어줌\nsetContentImageUrl(imageUrl);}};const handleUpdate=()=>{const updatedData={...props.editedData};updatedData['content_img_url']=contentImageUrl?contentImageUrl:content_img_url;console.log(updatedData);axios.patch(\"\".concat(API_URL,\"/api/whats-new/\").concat(props.selectedItem.id),updatedData).then(response=>{console.log('Update:',response.data);props.setAxiosResult(prevResult=>{const updatedResult=prevResult.map(item=>item.id===props.selectedItem.id?updatedData:item);return updatedResult;});props.setOpenModal(false);}).catch(error=>{console.error('error:',error);});setContentImageUrl(\"\");};const handleCreate=()=>{const{id,read_count,created_at,...dataWithoutId}=props.editedData;dataWithoutId['content_img_url']=contentImageUrl;console.log(dataWithoutId);if(contentImageUrl&&dataWithoutId.title&&dataWithoutId.seq){axios.post(\"\".concat(API_URL,\"/api/whats-new\"),dataWithoutId).then(response=>{console.log('Create:',response.data);props.setAxiosResult(prevResult=>[...prevResult,response.data]);props.setOpenModal(false);}).catch(error=>{console.error('Error:',error);});setContentImageUrl(\"\");}else{alert(\"전부 입력\");}};// console.log(props.editedData);\nreturn/*#__PURE__*/_jsxs(Dialog,{open:props.openModal,onClose:props.handleModalClose,children:[/*#__PURE__*/_jsx(DialogTitle,{children:props.selectedItem?\"수정\":\"추가하기\"}),/*#__PURE__*/_jsxs(DialogContent,{children:[props.selectedItem&&/*#__PURE__*/_jsx(TextField,{label:\"ID\",name:\"id\",value:props.editedData.id,onChange:props.handleInputChange,fullWidth:true,margin:\"normal\",disabled:true}),/*#__PURE__*/_jsx(TextField,{label:\"Subcategory_id\",name:\"sub_category_id\",value:props.editedData.sub_category_id,onChange:props.handleInputChange,fullWidth:true,margin:\"normal\",disabled:true}),/*#__PURE__*/_jsx(TextField,{label:\"Title\",name:\"title\",value:props.editedData.title,onChange:props.handleInputChange,fullWidth:true,margin:\"normal\"}),/*#__PURE__*/_jsx(Upload,{name:\"image\",action:\"\".concat(API_URL,\"/api/image\"),listType:\"picture\",showUploadList:false,onChange:onChangeContentImage,children:contentImageUrl?/*#__PURE__*/_jsxs(\"p\",{children:[\"\\uC5C5\\uB85C\\uB4DC\\uB41C \\uC774\\uBBF8\\uC9C0: \",contentImageUrl]}):/*#__PURE__*/_jsxs(\"div\",{id:\"upload-img-placeholder\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fa-regular fa-file-image\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"span\",{children:\"\\uD074\\uB9AD\\uD558\\uAC70\\uB098 \\uB4DC\\uB798\\uADF8\\uD558\\uC5EC \\uC5C5\\uB85C\\uB4DC\\uD558\\uC138\\uC694.\"})]})}),/*#__PURE__*/_jsx(TextField,{label:\"\\uC21C\\uC11C\",name:\"seq\",value:props.editedData.seq,onChange:props.handleInputChange,fullWidth:true,margin:\"normal\"})]}),/*#__PURE__*/_jsxs(DialogActions,{children:[/*#__PURE__*/_jsx(Button,{onClick:()=>{setContentImageUrl(\"\");props.handleModalClose();},children:\"\\uCDE8\\uC18C\"}),/*#__PURE__*/_jsx(Button,{onClick:props.selectedItem?handleUpdate:handleCreate,color:\"primary\",children:props.selectedItem?\"수정\":\"등록\"})]})]});};export default ANewsModal;","map":{"version":3,"names":["React","useState","Dialog","DialogTitle","DialogContent","DialogActions","Button","TextField","Upload","API_URL","axios","jsx","_jsx","jsxs","_jsxs","ANewsModal","_ref","props","content_img_url","editedData","contentImageUrl","setContentImageUrl","onChangeContentImage","info","console","log","file","status","response","imageUrl","handleUpdate","updatedData","patch","concat","selectedItem","id","then","data","setAxiosResult","prevResult","updatedResult","map","item","setOpenModal","catch","error","handleCreate","read_count","created_at","dataWithoutId","title","seq","post","alert","open","openModal","onClose","handleModalClose","children","label","name","value","onChange","handleInputChange","fullWidth","margin","disabled","sub_category_id","action","listType","showUploadList","className","onClick","color"],"sources":["C:/Users/user/Desktop/mcdonald-ec2/client/src/Admin/page/AWhatsNew/ANews/ANewsModal.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Button,\r\n  TextField,\r\n} from \"@mui/material\";\r\nimport {Upload} from \"antd\";\r\nimport { API_URL } from \"../../../../config/contansts\";\r\nimport axios from \"axios\";\r\n// import axios from \"axios\";\r\n\r\nconst ANewsModal = ({props}) => {\r\n  const { content_img_url } = props.editedData;\r\n  const [contentImageUrl, setContentImageUrl] = useState(\"\");\r\n\r\n  const onChangeContentImage = (info) => {\r\n    // 파일이 업로드 중일 때\r\n    console.log(\"new\", info.file);\r\n    if (info.file.status === \"uploading\") {\r\n      console.log(\"업로드중\");\r\n      return;\r\n    }\r\n    // 파일이 업로드 완료 되었을 때\r\n    if (info.file.status === \"done\") {\r\n      console.log(\"성공\");\r\n      const response = info.file.response;\r\n      const imageUrl = response.imageUrl;\r\n      // 받은 이미지경로를 imageUrl에 넣어줌\r\n      setContentImageUrl(imageUrl);\r\n    }\r\n  };\r\n\r\n  const handleUpdate = () => {\r\n      const updatedData = { ...props.editedData };\r\n      updatedData['content_img_url'] = contentImageUrl ? contentImageUrl : content_img_url;\r\n      console.log(updatedData);\r\n      axios\r\n        .patch(`${API_URL}/api/whats-new/${props.selectedItem.id}`, updatedData)\r\n        .then((response) => {\r\n          console.log('Update:', response.data);\r\n          props.setAxiosResult((prevResult) => {\r\n            const updatedResult = prevResult.map((item) =>\r\n              item.id === props.selectedItem.id ? updatedData : item\r\n            );\r\n            return updatedResult;\r\n          });\r\n          props.setOpenModal(false);\r\n        })\r\n        .catch((error) => {\r\n          console.error('error:', error);\r\n        });\r\n        setContentImageUrl(\"\");\r\n    }\r\n\r\n    const handleCreate = () => {\r\n      const { id, read_count, created_at, ...dataWithoutId } = props.editedData;\r\n      dataWithoutId['content_img_url'] = contentImageUrl;\r\n      console.log(dataWithoutId);\r\n  \r\n      if ( contentImageUrl && dataWithoutId.title && dataWithoutId.seq) {\r\n        axios\r\n        .post(`${API_URL}/api/whats-new`, dataWithoutId)\r\n        .then((response) => {\r\n          console.log('Create:', response.data);\r\n          props.setAxiosResult((prevResult) => [...prevResult, response.data]);\r\n          props.setOpenModal(false);\r\n        })\r\n        .catch((error) => {\r\n          console.error('Error:', error);\r\n        });\r\n        setContentImageUrl(\"\");\r\n      }else{\r\n        alert(\"전부 입력\");\r\n      }\r\n    };\r\n\r\n  // console.log(props.editedData);\r\n  return(\r\n    <Dialog open={props.openModal} onClose={props.handleModalClose}>\r\n      <DialogTitle>{props.selectedItem ? \"수정\" : \"추가하기\"}</DialogTitle>\r\n      <DialogContent>\r\n        {props.selectedItem && (\r\n          <TextField\r\n            label=\"ID\"\r\n            name=\"id\"\r\n            value={props.editedData.id}\r\n            onChange={props.handleInputChange}\r\n            fullWidth\r\n            margin=\"normal\"\r\n            disabled\r\n          />\r\n        )}\r\n        <TextField\r\n          label=\"Subcategory_id\"\r\n          name=\"sub_category_id\"\r\n          value={props.editedData.sub_category_id}\r\n          onChange={props.handleInputChange}\r\n          fullWidth\r\n          margin=\"normal\"\r\n          disabled\r\n        />\r\n        <TextField\r\n          label=\"Title\"\r\n          name=\"title\"\r\n          value={props.editedData.title}\r\n          onChange={props.handleInputChange}\r\n          fullWidth\r\n          margin=\"normal\"\r\n        />\r\n        <Upload\r\n          name=\"image\"\r\n          action={`${API_URL}/api/image`}\r\n          listType=\"picture\"\r\n          showUploadList={false}\r\n          onChange={onChangeContentImage}\r\n        >\r\n          {contentImageUrl ? (\r\n            <p>업로드된 이미지: {contentImageUrl}</p>\r\n            ) : (\r\n            <div id=\"upload-img-placeholder\">\r\n              <i className=\"fa-regular fa-file-image\"></i>\r\n              <br />\r\n              <span>클릭하거나 드래그하여 업로드하세요.</span>\r\n            </div>\r\n          )}\r\n        </Upload>\r\n        <TextField\r\n          label=\"순서\"\r\n          name=\"seq\"\r\n          value={props.editedData.seq}\r\n          onChange={props.handleInputChange}\r\n          fullWidth\r\n          margin=\"normal\"\r\n        />\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={() => {\r\n          setContentImageUrl(\"\");\r\n          props.handleModalClose();\r\n        }}>\r\n          취소\r\n        </Button>\r\n        <Button onClick={props.selectedItem ? handleUpdate : handleCreate} color=\"primary\">\r\n          {props.selectedItem ? \"수정\" : \"등록\"}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n}\r\n\r\nexport default ANewsModal;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}