{"ast":null,"code":"import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"id\", \"prefixCls\", \"className\", \"showSearch\", \"tagRender\", \"direction\", \"omitDomProps\", \"displayValues\", \"onDisplayValuesChange\", \"emptyOptions\", \"notFoundContent\", \"onClear\", \"mode\", \"disabled\", \"loading\", \"getInputElement\", \"getRawInputElement\", \"open\", \"defaultOpen\", \"onDropdownVisibleChange\", \"activeValue\", \"onActiveValueChange\", \"activeDescendantId\", \"searchValue\", \"autoClearSearchValue\", \"onSearch\", \"onSearchSplit\", \"tokenSeparators\", \"allowClear\", \"suffixIcon\", \"clearIcon\", \"OptionList\", \"animation\", \"transitionName\", \"dropdownStyle\", \"dropdownClassName\", \"dropdownMatchSelectWidth\", \"dropdownRender\", \"dropdownAlign\", \"placement\", \"builtinPlacements\", \"getPopupContainer\", \"showAction\", \"onFocus\", \"onBlur\", \"onKeyUp\", \"onKeyDown\", \"onMouseDown\"];\nimport classNames from 'classnames';\nimport useLayoutEffect from \"rc-util/es/hooks/useLayoutEffect\";\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport isMobile from \"rc-util/es/isMobile\";\nimport KeyCode from \"rc-util/es/KeyCode\";\nimport { useComposeRef } from \"rc-util/es/ref\";\nimport * as React from 'react';\nimport { useAllowClear } from \"./hooks/useAllowClear\";\nimport { BaseSelectContext } from \"./hooks/useBaseProps\";\nimport useDelayReset from \"./hooks/useDelayReset\";\nimport useLock from \"./hooks/useLock\";\nimport useSelectTriggerControl from \"./hooks/useSelectTriggerControl\";\nimport Selector from \"./Selector\";\nimport SelectTrigger from \"./SelectTrigger\";\nimport TransBtn from \"./TransBtn\";\nimport { getSeparatedContent } from \"./utils/valueUtil\";\nvar DEFAULT_OMIT_PROPS = ['value', 'onChange', 'removeIcon', 'placeholder', 'autoFocus', 'maxTagCount', 'maxTagTextLength', 'maxTagPlaceholder', 'choiceTransitionName', 'onInputKeyDown', 'onPopupScroll', 'tabIndex'];\nexport function isMultiple(mode) {\n  return mode === 'tags' || mode === 'multiple';\n}\nvar BaseSelect = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _customizeRawInputEle, _classNames2;\n  var id = props.id,\n    prefixCls = props.prefixCls,\n    className = props.className,\n    showSearch = props.showSearch,\n    tagRender = props.tagRender,\n    direction = props.direction,\n    omitDomProps = props.omitDomProps,\n    displayValues = props.displayValues,\n    onDisplayValuesChange = props.onDisplayValuesChange,\n    emptyOptions = props.emptyOptions,\n    _props$notFoundConten = props.notFoundContent,\n    notFoundContent = _props$notFoundConten === void 0 ? 'Not Found' : _props$notFoundConten,\n    onClear = props.onClear,\n    mode = props.mode,\n    disabled = props.disabled,\n    loading = props.loading,\n    getInputElement = props.getInputElement,\n    getRawInputElement = props.getRawInputElement,\n    open = props.open,\n    defaultOpen = props.defaultOpen,\n    onDropdownVisibleChange = props.onDropdownVisibleChange,\n    activeValue = props.activeValue,\n    onActiveValueChange = props.onActiveValueChange,\n    activeDescendantId = props.activeDescendantId,\n    searchValue = props.searchValue,\n    autoClearSearchValue = props.autoClearSearchValue,\n    onSearch = props.onSearch,\n    onSearchSplit = props.onSearchSplit,\n    tokenSeparators = props.tokenSeparators,\n    allowClear = props.allowClear,\n    suffixIcon = props.suffixIcon,\n    clearIcon = props.clearIcon,\n    OptionList = props.OptionList,\n    animation = props.animation,\n    transitionName = props.transitionName,\n    dropdownStyle = props.dropdownStyle,\n    dropdownClassName = props.dropdownClassName,\n    dropdownMatchSelectWidth = props.dropdownMatchSelectWidth,\n    dropdownRender = props.dropdownRender,\n    dropdownAlign = props.dropdownAlign,\n    placement = props.placement,\n    builtinPlacements = props.builtinPlacements,\n    getPopupContainer = props.getPopupContainer,\n    _props$showAction = props.showAction,\n    showAction = _props$showAction === void 0 ? [] : _props$showAction,\n    onFocus = props.onFocus,\n    onBlur = props.onBlur,\n    onKeyUp = props.onKeyUp,\n    onKeyDown = props.onKeyDown,\n    onMouseDown = props.onMouseDown,\n    restProps = _objectWithoutProperties(props, _excluded);\n\n  // ============================== MISC ==============================\n  var multiple = isMultiple(mode);\n  var mergedShowSearch = (showSearch !== undefined ? showSearch : multiple) || mode === 'combobox';\n  var domProps = _objectSpread({}, restProps);\n  DEFAULT_OMIT_PROPS.forEach(function (propName) {\n    delete domProps[propName];\n  });\n  omitDomProps === null || omitDomProps === void 0 || omitDomProps.forEach(function (propName) {\n    delete domProps[propName];\n  });\n\n  // ============================= Mobile =============================\n  var _React$useState = React.useState(false),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    mobile = _React$useState2[0],\n    setMobile = _React$useState2[1];\n  React.useEffect(function () {\n    // Only update on the client side\n    setMobile(isMobile());\n  }, []);\n\n  // ============================== Refs ==============================\n  var containerRef = React.useRef(null);\n  var selectorDomRef = React.useRef(null);\n  var triggerRef = React.useRef(null);\n  var selectorRef = React.useRef(null);\n  var listRef = React.useRef(null);\n  var blurRef = React.useRef(false);\n\n  /** Used for component focused management */\n  var _useDelayReset = useDelayReset(),\n    _useDelayReset2 = _slicedToArray(_useDelayReset, 3),\n    mockFocused = _useDelayReset2[0],\n    setMockFocused = _useDelayReset2[1],\n    cancelSetMockFocused = _useDelayReset2[2];\n\n  // =========================== Imperative ===========================\n  React.useImperativeHandle(ref, function () {\n    var _selectorRef$current, _selectorRef$current2;\n    return {\n      focus: (_selectorRef$current = selectorRef.current) === null || _selectorRef$current === void 0 ? void 0 : _selectorRef$current.focus,\n      blur: (_selectorRef$current2 = selectorRef.current) === null || _selectorRef$current2 === void 0 ? void 0 : _selectorRef$current2.blur,\n      scrollTo: function scrollTo(arg) {\n        var _listRef$current;\n        return (_listRef$current = listRef.current) === null || _listRef$current === void 0 ? void 0 : _listRef$current.scrollTo(arg);\n      }\n    };\n  });\n\n  // ========================== Search Value ==========================\n  var mergedSearchValue = React.useMemo(function () {\n    var _displayValues$;\n    if (mode !== 'combobox') {\n      return searchValue;\n    }\n    var val = (_displayValues$ = displayValues[0]) === null || _displayValues$ === void 0 ? void 0 : _displayValues$.value;\n    return typeof val === 'string' || typeof val === 'number' ? String(val) : '';\n  }, [searchValue, mode, displayValues]);\n\n  // ========================== Custom Input ==========================\n  // Only works in `combobox`\n  var customizeInputElement = mode === 'combobox' && typeof getInputElement === 'function' && getInputElement() || null;\n\n  // Used for customize replacement for `rc-cascader`\n  var customizeRawInputElement = typeof getRawInputElement === 'function' && getRawInputElement();\n  var customizeRawInputRef = useComposeRef(selectorDomRef, customizeRawInputElement === null || customizeRawInputElement === void 0 || (_customizeRawInputEle = customizeRawInputElement.props) === null || _customizeRawInputEle === void 0 ? void 0 : _customizeRawInputEle.ref);\n\n  // ============================== Open ==============================\n  // SSR not support Portal which means we need delay `open` for the first time render\n  var _React$useState3 = React.useState(false),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    rendered = _React$useState4[0],\n    setRendered = _React$useState4[1];\n  useLayoutEffect(function () {\n    setRendered(true);\n  }, []);\n  var _useMergedState = useMergedState(false, {\n      defaultValue: defaultOpen,\n      value: open\n    }),\n    _useMergedState2 = _slicedToArray(_useMergedState, 2),\n    innerOpen = _useMergedState2[0],\n    setInnerOpen = _useMergedState2[1];\n  var mergedOpen = rendered ? innerOpen : false;\n\n  // Not trigger `open` in `combobox` when `notFoundContent` is empty\n  var emptyListContent = !notFoundContent && emptyOptions;\n  if (disabled || emptyListContent && mergedOpen && mode === 'combobox') {\n    mergedOpen = false;\n  }\n  var triggerOpen = emptyListContent ? false : mergedOpen;\n  var onToggleOpen = React.useCallback(function (newOpen) {\n    var nextOpen = newOpen !== undefined ? newOpen : !mergedOpen;\n    if (!disabled) {\n      setInnerOpen(nextOpen);\n      if (mergedOpen !== nextOpen) {\n        onDropdownVisibleChange === null || onDropdownVisibleChange === void 0 || onDropdownVisibleChange(nextOpen);\n      }\n    }\n  }, [disabled, mergedOpen, setInnerOpen, onDropdownVisibleChange]);\n\n  // ============================= Search =============================\n  var tokenWithEnter = React.useMemo(function () {\n    return (tokenSeparators || []).some(function (tokenSeparator) {\n      return ['\\n', '\\r\\n'].includes(tokenSeparator);\n    });\n  }, [tokenSeparators]);\n  var onInternalSearch = function onInternalSearch(searchText, fromTyping, isCompositing) {\n    var ret = true;\n    var newSearchText = searchText;\n    onActiveValueChange === null || onActiveValueChange === void 0 || onActiveValueChange(null);\n\n    // Check if match the `tokenSeparators`\n    var patchLabels = isCompositing ? null : getSeparatedContent(searchText, tokenSeparators);\n\n    // Ignore combobox since it's not split-able\n    if (mode !== 'combobox' && patchLabels) {\n      newSearchText = '';\n      onSearchSplit === null || onSearchSplit === void 0 || onSearchSplit(patchLabels);\n\n      // Should close when paste finish\n      onToggleOpen(false);\n\n      // Tell Selector that break next actions\n      ret = false;\n    }\n    if (onSearch && mergedSearchValue !== newSearchText) {\n      onSearch(newSearchText, {\n        source: fromTyping ? 'typing' : 'effect'\n      });\n    }\n    return ret;\n  };\n\n  // Only triggered when menu is closed & mode is tags\n  // If menu is open, OptionList will take charge\n  // If mode isn't tags, press enter is not meaningful when you can't see any option\n  var onInternalSearchSubmit = function onInternalSearchSubmit(searchText) {\n    // prevent empty tags from appearing when you click the Enter button\n    if (!searchText || !searchText.trim()) {\n      return;\n    }\n    onSearch(searchText, {\n      source: 'submit'\n    });\n  };\n\n  // Close will clean up single mode search text\n  React.useEffect(function () {\n    if (!mergedOpen && !multiple && mode !== 'combobox') {\n      onInternalSearch('', false, false);\n    }\n  }, [mergedOpen]);\n\n  // ============================ Disabled ============================\n  // Close dropdown & remove focus state when disabled change\n  React.useEffect(function () {\n    if (innerOpen && disabled) {\n      setInnerOpen(false);\n    }\n\n    // After onBlur is triggered, the focused does not need to be reset\n    if (disabled && !blurRef.current) {\n      setMockFocused(false);\n    }\n  }, [disabled]);\n\n  // ============================ Keyboard ============================\n  /**\r\n   * We record input value here to check if can press to clean up by backspace\r\n   * - null: Key is not down, this is reset by key up\r\n   * - true: Search text is empty when first time backspace down\r\n   * - false: Search text is not empty when first time backspace down\r\n   */\n  var _useLock = useLock(),\n    _useLock2 = _slicedToArray(_useLock, 2),\n    getClearLock = _useLock2[0],\n    setClearLock = _useLock2[1];\n\n  // KeyDown\n  var onInternalKeyDown = function onInternalKeyDown(event) {\n    var clearLock = getClearLock();\n    var which = event.which;\n    if (which === KeyCode.ENTER) {\n      // Do not submit form when type in the input\n      if (mode !== 'combobox') {\n        event.preventDefault();\n      }\n\n      // We only manage open state here, close logic should handle by list component\n      if (!mergedOpen) {\n        onToggleOpen(true);\n      }\n    }\n    setClearLock(!!mergedSearchValue);\n\n    // Remove value by `backspace`\n    if (which === KeyCode.BACKSPACE && !clearLock && multiple && !mergedSearchValue && displayValues.length) {\n      var cloneDisplayValues = _toConsumableArray(displayValues);\n      var removedDisplayValue = null;\n      for (var i = cloneDisplayValues.length - 1; i >= 0; i -= 1) {\n        var current = cloneDisplayValues[i];\n        if (!current.disabled) {\n          cloneDisplayValues.splice(i, 1);\n          removedDisplayValue = current;\n          break;\n        }\n      }\n      if (removedDisplayValue) {\n        onDisplayValuesChange(cloneDisplayValues, {\n          type: 'remove',\n          values: [removedDisplayValue]\n        });\n      }\n    }\n    for (var _len = arguments.length, rest = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      rest[_key - 1] = arguments[_key];\n    }\n    if (mergedOpen && listRef.current) {\n      var _listRef$current2;\n      (_listRef$current2 = listRef.current).onKeyDown.apply(_listRef$current2, [event].concat(rest));\n    }\n    onKeyDown === null || onKeyDown === void 0 || onKeyDown.apply(void 0, [event].concat(rest));\n  };\n\n  // KeyUp\n  var onInternalKeyUp = function onInternalKeyUp(event) {\n    for (var _len2 = arguments.length, rest = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      rest[_key2 - 1] = arguments[_key2];\n    }\n    if (mergedOpen && listRef.current) {\n      var _listRef$current3;\n      (_listRef$current3 = listRef.current).onKeyUp.apply(_listRef$current3, [event].concat(rest));\n    }\n    onKeyUp === null || onKeyUp === void 0 || onKeyUp.apply(void 0, [event].concat(rest));\n  };\n\n  // ============================ Selector ============================\n  var onSelectorRemove = function onSelectorRemove(val) {\n    var newValues = displayValues.filter(function (i) {\n      return i !== val;\n    });\n    onDisplayValuesChange(newValues, {\n      type: 'remove',\n      values: [val]\n    });\n  };\n\n  // ========================== Focus / Blur ==========================\n  /** Record real focus status */\n  var focusRef = React.useRef(false);\n  var onContainerFocus = function onContainerFocus() {\n    setMockFocused(true);\n    if (!disabled) {\n      if (onFocus && !focusRef.current) {\n        onFocus.apply(void 0, arguments);\n      }\n\n      // `showAction` should handle `focus` if set\n      if (showAction.includes('focus')) {\n        onToggleOpen(true);\n      }\n    }\n    focusRef.current = true;\n  };\n  var onContainerBlur = function onContainerBlur() {\n    blurRef.current = true;\n    setMockFocused(false, function () {\n      focusRef.current = false;\n      blurRef.current = false;\n      onToggleOpen(false);\n    });\n    if (disabled) {\n      return;\n    }\n    if (mergedSearchValue) {\n      // `tags` mode should move `searchValue` into values\n      if (mode === 'tags') {\n        onSearch(mergedSearchValue, {\n          source: 'submit'\n        });\n      } else if (mode === 'multiple') {\n        // `multiple` mode only clean the search value but not trigger event\n        onSearch('', {\n          source: 'blur'\n        });\n      }\n    }\n    if (onBlur) {\n      onBlur.apply(void 0, arguments);\n    }\n  };\n\n  // Give focus back of Select\n  var activeTimeoutIds = [];\n  React.useEffect(function () {\n    return function () {\n      activeTimeoutIds.forEach(function (timeoutId) {\n        return clearTimeout(timeoutId);\n      });\n      activeTimeoutIds.splice(0, activeTimeoutIds.length);\n    };\n  }, []);\n  var onInternalMouseDown = function onInternalMouseDown(event) {\n    var _triggerRef$current;\n    var target = event.target;\n    var popupElement = (_triggerRef$current = triggerRef.current) === null || _triggerRef$current === void 0 ? void 0 : _triggerRef$current.getPopupElement();\n\n    // We should give focus back to selector if clicked item is not focusable\n    if (popupElement && popupElement.contains(target)) {\n      var timeoutId = setTimeout(function () {\n        var index = activeTimeoutIds.indexOf(timeoutId);\n        if (index !== -1) {\n          activeTimeoutIds.splice(index, 1);\n        }\n        cancelSetMockFocused();\n        if (!mobile && !popupElement.contains(document.activeElement)) {\n          var _selectorRef$current3;\n          (_selectorRef$current3 = selectorRef.current) === null || _selectorRef$current3 === void 0 || _selectorRef$current3.focus();\n        }\n      });\n      activeTimeoutIds.push(timeoutId);\n    }\n    for (var _len3 = arguments.length, restArgs = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n      restArgs[_key3 - 1] = arguments[_key3];\n    }\n    onMouseDown === null || onMouseDown === void 0 || onMouseDown.apply(void 0, [event].concat(restArgs));\n  };\n\n  // ============================ Dropdown ============================\n  var _React$useState5 = React.useState({}),\n    _React$useState6 = _slicedToArray(_React$useState5, 2),\n    forceUpdate = _React$useState6[1];\n  // We need force update here since popup dom is render async\n  function onPopupMouseEnter() {\n    forceUpdate({});\n  }\n\n  // Used for raw custom input trigger\n  var onTriggerVisibleChange;\n  if (customizeRawInputElement) {\n    onTriggerVisibleChange = function onTriggerVisibleChange(newOpen) {\n      onToggleOpen(newOpen);\n    };\n  }\n\n  // Close when click on non-select element\n  useSelectTriggerControl(function () {\n    var _triggerRef$current2;\n    return [containerRef.current, (_triggerRef$current2 = triggerRef.current) === null || _triggerRef$current2 === void 0 ? void 0 : _triggerRef$current2.getPopupElement()];\n  }, triggerOpen, onToggleOpen, !!customizeRawInputElement);\n\n  // ============================ Context =============================\n  var baseSelectContext = React.useMemo(function () {\n    return _objectSpread(_objectSpread({}, props), {}, {\n      notFoundContent: notFoundContent,\n      open: mergedOpen,\n      triggerOpen: triggerOpen,\n      id: id,\n      showSearch: mergedShowSearch,\n      multiple: multiple,\n      toggleOpen: onToggleOpen\n    });\n  }, [props, notFoundContent, triggerOpen, mergedOpen, id, mergedShowSearch, multiple, onToggleOpen]);\n\n  // ==================================================================\n  // ==                            Render                            ==\n  // ==================================================================\n\n  // ============================= Arrow ==============================\n  var showSuffixIcon = !!suffixIcon || loading;\n  var arrowNode;\n  if (showSuffixIcon) {\n    arrowNode = /*#__PURE__*/React.createElement(TransBtn, {\n      className: classNames(\"\".concat(prefixCls, \"-arrow\"), _defineProperty({}, \"\".concat(prefixCls, \"-arrow-loading\"), loading)),\n      customizeIcon: suffixIcon,\n      customizeIconProps: {\n        loading: loading,\n        searchValue: mergedSearchValue,\n        open: mergedOpen,\n        focused: mockFocused,\n        showSearch: mergedShowSearch\n      }\n    });\n  }\n\n  // ============================= Clear ==============================\n  var onClearMouseDown = function onClearMouseDown() {\n    var _selectorRef$current4;\n    onClear === null || onClear === void 0 || onClear();\n    (_selectorRef$current4 = selectorRef.current) === null || _selectorRef$current4 === void 0 || _selectorRef$current4.focus();\n    onDisplayValuesChange([], {\n      type: 'clear',\n      values: displayValues\n    });\n    onInternalSearch('', false, false);\n  };\n  var _useAllowClear = useAllowClear(prefixCls, onClearMouseDown, displayValues, allowClear, clearIcon, disabled, mergedSearchValue, mode),\n    mergedAllowClear = _useAllowClear.allowClear,\n    clearNode = _useAllowClear.clearIcon;\n\n  // =========================== OptionList ===========================\n  var optionList = /*#__PURE__*/React.createElement(OptionList, {\n    ref: listRef\n  });\n\n  // ============================= Select =============================\n  var mergedClassName = classNames(prefixCls, className, (_classNames2 = {}, _defineProperty(_classNames2, \"\".concat(prefixCls, \"-focused\"), mockFocused), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-multiple\"), multiple), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-single\"), !multiple), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-allow-clear\"), allowClear), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-show-arrow\"), showSuffixIcon), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-disabled\"), disabled), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-loading\"), loading), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-open\"), mergedOpen), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-customize-input\"), customizeInputElement), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-show-search\"), mergedShowSearch), _classNames2));\n\n  // >>> Selector\n  var selectorNode = /*#__PURE__*/React.createElement(SelectTrigger, {\n    ref: triggerRef,\n    disabled: disabled,\n    prefixCls: prefixCls,\n    visible: triggerOpen,\n    popupElement: optionList,\n    animation: animation,\n    transitionName: transitionName,\n    dropdownStyle: dropdownStyle,\n    dropdownClassName: dropdownClassName,\n    direction: direction,\n    dropdownMatchSelectWidth: dropdownMatchSelectWidth,\n    dropdownRender: dropdownRender,\n    dropdownAlign: dropdownAlign,\n    placement: placement,\n    builtinPlacements: builtinPlacements,\n    getPopupContainer: getPopupContainer,\n    empty: emptyOptions,\n    getTriggerDOMNode: function getTriggerDOMNode() {\n      return selectorDomRef.current;\n    },\n    onPopupVisibleChange: onTriggerVisibleChange,\n    onPopupMouseEnter: onPopupMouseEnter\n  }, customizeRawInputElement ? /*#__PURE__*/React.cloneElement(customizeRawInputElement, {\n    ref: customizeRawInputRef\n  }) : /*#__PURE__*/React.createElement(Selector, _extends({}, props, {\n    domRef: selectorDomRef,\n    prefixCls: prefixCls,\n    inputElement: customizeInputElement,\n    ref: selectorRef,\n    id: id,\n    showSearch: mergedShowSearch,\n    autoClearSearchValue: autoClearSearchValue,\n    mode: mode,\n    activeDescendantId: activeDescendantId,\n    tagRender: tagRender,\n    values: displayValues,\n    open: mergedOpen,\n    onToggleOpen: onToggleOpen,\n    activeValue: activeValue,\n    searchValue: mergedSearchValue,\n    onSearch: onInternalSearch,\n    onSearchSubmit: onInternalSearchSubmit,\n    onRemove: onSelectorRemove,\n    tokenWithEnter: tokenWithEnter\n  })));\n\n  // >>> Render\n  var renderNode;\n\n  // Render raw\n  if (customizeRawInputElement) {\n    renderNode = selectorNode;\n  } else {\n    renderNode = /*#__PURE__*/React.createElement(\"div\", _extends({\n      className: mergedClassName\n    }, domProps, {\n      ref: containerRef,\n      onMouseDown: onInternalMouseDown,\n      onKeyDown: onInternalKeyDown,\n      onKeyUp: onInternalKeyUp,\n      onFocus: onContainerFocus,\n      onBlur: onContainerBlur\n    }), mockFocused && !mergedOpen && /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        width: 0,\n        height: 0,\n        position: 'absolute',\n        overflow: 'hidden',\n        opacity: 0\n      },\n      \"aria-live\": \"polite\"\n    }, \"\".concat(displayValues.map(function (_ref) {\n      var label = _ref.label,\n        value = _ref.value;\n      return ['number', 'string'].includes(_typeof(label)) ? label : value;\n    }).join(', '))), selectorNode, arrowNode, mergedAllowClear && clearNode);\n  }\n  return /*#__PURE__*/React.createElement(BaseSelectContext.Provider, {\n    value: baseSelectContext\n  }, renderNode);\n});\n\n// Set display name for dev\nif (process.env.NODE_ENV !== 'production') {\n  BaseSelect.displayName = 'BaseSelect';\n}\nexport default BaseSelect;","map":{"version":3,"names":["_typeof","_extends","_defineProperty","_toConsumableArray","_slicedToArray","_objectSpread","_objectWithoutProperties","_excluded","classNames","useLayoutEffect","useMergedState","isMobile","KeyCode","useComposeRef","React","useAllowClear","BaseSelectContext","useDelayReset","useLock","useSelectTriggerControl","Selector","SelectTrigger","TransBtn","getSeparatedContent","DEFAULT_OMIT_PROPS","isMultiple","mode","BaseSelect","forwardRef","props","ref","_customizeRawInputEle","_classNames2","id","prefixCls","className","showSearch","tagRender","direction","omitDomProps","displayValues","onDisplayValuesChange","emptyOptions","_props$notFoundConten","notFoundContent","onClear","disabled","loading","getInputElement","getRawInputElement","open","defaultOpen","onDropdownVisibleChange","activeValue","onActiveValueChange","activeDescendantId","searchValue","autoClearSearchValue","onSearch","onSearchSplit","tokenSeparators","allowClear","suffixIcon","clearIcon","OptionList","animation","transitionName","dropdownStyle","dropdownClassName","dropdownMatchSelectWidth","dropdownRender","dropdownAlign","placement","builtinPlacements","getPopupContainer","_props$showAction","showAction","onFocus","onBlur","onKeyUp","onKeyDown","onMouseDown","restProps","multiple","mergedShowSearch","undefined","domProps","forEach","propName","_React$useState","useState","_React$useState2","mobile","setMobile","useEffect","containerRef","useRef","selectorDomRef","triggerRef","selectorRef","listRef","blurRef","_useDelayReset","_useDelayReset2","mockFocused","setMockFocused","cancelSetMockFocused","useImperativeHandle","_selectorRef$current","_selectorRef$current2","focus","current","blur","scrollTo","arg","_listRef$current","mergedSearchValue","useMemo","_displayValues$","val","value","String","customizeInputElement","customizeRawInputElement","customizeRawInputRef","_React$useState3","_React$useState4","rendered","setRendered","_useMergedState","defaultValue","_useMergedState2","innerOpen","setInnerOpen","mergedOpen","emptyListContent","triggerOpen","onToggleOpen","useCallback","newOpen","nextOpen","tokenWithEnter","some","tokenSeparator","includes","onInternalSearch","searchText","fromTyping","isCompositing","ret","newSearchText","patchLabels","source","onInternalSearchSubmit","trim","_useLock","_useLock2","getClearLock","setClearLock","onInternalKeyDown","event","clearLock","which","ENTER","preventDefault","BACKSPACE","length","cloneDisplayValues","removedDisplayValue","i","splice","type","values","_len","arguments","rest","Array","_key","_listRef$current2","apply","concat","onInternalKeyUp","_len2","_key2","_listRef$current3","onSelectorRemove","newValues","filter","focusRef","onContainerFocus","onContainerBlur","activeTimeoutIds","timeoutId","clearTimeout","onInternalMouseDown","_triggerRef$current","target","popupElement","getPopupElement","contains","setTimeout","index","indexOf","document","activeElement","_selectorRef$current3","push","_len3","restArgs","_key3","_React$useState5","_React$useState6","forceUpdate","onPopupMouseEnter","onTriggerVisibleChange","_triggerRef$current2","baseSelectContext","toggleOpen","showSuffixIcon","arrowNode","createElement","customizeIcon","customizeIconProps","focused","onClearMouseDown","_selectorRef$current4","_useAllowClear","mergedAllowClear","clearNode","optionList","mergedClassName","selectorNode","visible","empty","getTriggerDOMNode","onPopupVisibleChange","cloneElement","domRef","inputElement","onSearchSubmit","onRemove","renderNode","style","width","height","position","overflow","opacity","map","_ref","label","join","Provider","process","env","NODE_ENV","displayName"],"sources":["C:/Users/user/Desktop/mcdonald-ec2/client/node_modules/rc-select/es/BaseSelect.js"],"sourcesContent":["import _typeof from \"@babel/runtime/helpers/esm/typeof\";\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\r\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\r\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\r\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\r\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\r\nvar _excluded = [\"id\", \"prefixCls\", \"className\", \"showSearch\", \"tagRender\", \"direction\", \"omitDomProps\", \"displayValues\", \"onDisplayValuesChange\", \"emptyOptions\", \"notFoundContent\", \"onClear\", \"mode\", \"disabled\", \"loading\", \"getInputElement\", \"getRawInputElement\", \"open\", \"defaultOpen\", \"onDropdownVisibleChange\", \"activeValue\", \"onActiveValueChange\", \"activeDescendantId\", \"searchValue\", \"autoClearSearchValue\", \"onSearch\", \"onSearchSplit\", \"tokenSeparators\", \"allowClear\", \"suffixIcon\", \"clearIcon\", \"OptionList\", \"animation\", \"transitionName\", \"dropdownStyle\", \"dropdownClassName\", \"dropdownMatchSelectWidth\", \"dropdownRender\", \"dropdownAlign\", \"placement\", \"builtinPlacements\", \"getPopupContainer\", \"showAction\", \"onFocus\", \"onBlur\", \"onKeyUp\", \"onKeyDown\", \"onMouseDown\"];\r\nimport classNames from 'classnames';\r\nimport useLayoutEffect from \"rc-util/es/hooks/useLayoutEffect\";\r\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\r\nimport isMobile from \"rc-util/es/isMobile\";\r\nimport KeyCode from \"rc-util/es/KeyCode\";\r\nimport { useComposeRef } from \"rc-util/es/ref\";\r\nimport * as React from 'react';\r\nimport { useAllowClear } from \"./hooks/useAllowClear\";\r\nimport { BaseSelectContext } from \"./hooks/useBaseProps\";\r\nimport useDelayReset from \"./hooks/useDelayReset\";\r\nimport useLock from \"./hooks/useLock\";\r\nimport useSelectTriggerControl from \"./hooks/useSelectTriggerControl\";\r\nimport Selector from \"./Selector\";\r\nimport SelectTrigger from \"./SelectTrigger\";\r\nimport TransBtn from \"./TransBtn\";\r\nimport { getSeparatedContent } from \"./utils/valueUtil\";\r\nvar DEFAULT_OMIT_PROPS = ['value', 'onChange', 'removeIcon', 'placeholder', 'autoFocus', 'maxTagCount', 'maxTagTextLength', 'maxTagPlaceholder', 'choiceTransitionName', 'onInputKeyDown', 'onPopupScroll', 'tabIndex'];\r\nexport function isMultiple(mode) {\r\n  return mode === 'tags' || mode === 'multiple';\r\n}\r\nvar BaseSelect = /*#__PURE__*/React.forwardRef(function (props, ref) {\r\n  var _customizeRawInputEle, _classNames2;\r\n  var id = props.id,\r\n    prefixCls = props.prefixCls,\r\n    className = props.className,\r\n    showSearch = props.showSearch,\r\n    tagRender = props.tagRender,\r\n    direction = props.direction,\r\n    omitDomProps = props.omitDomProps,\r\n    displayValues = props.displayValues,\r\n    onDisplayValuesChange = props.onDisplayValuesChange,\r\n    emptyOptions = props.emptyOptions,\r\n    _props$notFoundConten = props.notFoundContent,\r\n    notFoundContent = _props$notFoundConten === void 0 ? 'Not Found' : _props$notFoundConten,\r\n    onClear = props.onClear,\r\n    mode = props.mode,\r\n    disabled = props.disabled,\r\n    loading = props.loading,\r\n    getInputElement = props.getInputElement,\r\n    getRawInputElement = props.getRawInputElement,\r\n    open = props.open,\r\n    defaultOpen = props.defaultOpen,\r\n    onDropdownVisibleChange = props.onDropdownVisibleChange,\r\n    activeValue = props.activeValue,\r\n    onActiveValueChange = props.onActiveValueChange,\r\n    activeDescendantId = props.activeDescendantId,\r\n    searchValue = props.searchValue,\r\n    autoClearSearchValue = props.autoClearSearchValue,\r\n    onSearch = props.onSearch,\r\n    onSearchSplit = props.onSearchSplit,\r\n    tokenSeparators = props.tokenSeparators,\r\n    allowClear = props.allowClear,\r\n    suffixIcon = props.suffixIcon,\r\n    clearIcon = props.clearIcon,\r\n    OptionList = props.OptionList,\r\n    animation = props.animation,\r\n    transitionName = props.transitionName,\r\n    dropdownStyle = props.dropdownStyle,\r\n    dropdownClassName = props.dropdownClassName,\r\n    dropdownMatchSelectWidth = props.dropdownMatchSelectWidth,\r\n    dropdownRender = props.dropdownRender,\r\n    dropdownAlign = props.dropdownAlign,\r\n    placement = props.placement,\r\n    builtinPlacements = props.builtinPlacements,\r\n    getPopupContainer = props.getPopupContainer,\r\n    _props$showAction = props.showAction,\r\n    showAction = _props$showAction === void 0 ? [] : _props$showAction,\r\n    onFocus = props.onFocus,\r\n    onBlur = props.onBlur,\r\n    onKeyUp = props.onKeyUp,\r\n    onKeyDown = props.onKeyDown,\r\n    onMouseDown = props.onMouseDown,\r\n    restProps = _objectWithoutProperties(props, _excluded);\r\n\r\n  // ============================== MISC ==============================\r\n  var multiple = isMultiple(mode);\r\n  var mergedShowSearch = (showSearch !== undefined ? showSearch : multiple) || mode === 'combobox';\r\n  var domProps = _objectSpread({}, restProps);\r\n  DEFAULT_OMIT_PROPS.forEach(function (propName) {\r\n    delete domProps[propName];\r\n  });\r\n  omitDomProps === null || omitDomProps === void 0 || omitDomProps.forEach(function (propName) {\r\n    delete domProps[propName];\r\n  });\r\n\r\n  // ============================= Mobile =============================\r\n  var _React$useState = React.useState(false),\r\n    _React$useState2 = _slicedToArray(_React$useState, 2),\r\n    mobile = _React$useState2[0],\r\n    setMobile = _React$useState2[1];\r\n  React.useEffect(function () {\r\n    // Only update on the client side\r\n    setMobile(isMobile());\r\n  }, []);\r\n\r\n  // ============================== Refs ==============================\r\n  var containerRef = React.useRef(null);\r\n  var selectorDomRef = React.useRef(null);\r\n  var triggerRef = React.useRef(null);\r\n  var selectorRef = React.useRef(null);\r\n  var listRef = React.useRef(null);\r\n  var blurRef = React.useRef(false);\r\n\r\n  /** Used for component focused management */\r\n  var _useDelayReset = useDelayReset(),\r\n    _useDelayReset2 = _slicedToArray(_useDelayReset, 3),\r\n    mockFocused = _useDelayReset2[0],\r\n    setMockFocused = _useDelayReset2[1],\r\n    cancelSetMockFocused = _useDelayReset2[2];\r\n\r\n  // =========================== Imperative ===========================\r\n  React.useImperativeHandle(ref, function () {\r\n    var _selectorRef$current, _selectorRef$current2;\r\n    return {\r\n      focus: (_selectorRef$current = selectorRef.current) === null || _selectorRef$current === void 0 ? void 0 : _selectorRef$current.focus,\r\n      blur: (_selectorRef$current2 = selectorRef.current) === null || _selectorRef$current2 === void 0 ? void 0 : _selectorRef$current2.blur,\r\n      scrollTo: function scrollTo(arg) {\r\n        var _listRef$current;\r\n        return (_listRef$current = listRef.current) === null || _listRef$current === void 0 ? void 0 : _listRef$current.scrollTo(arg);\r\n      }\r\n    };\r\n  });\r\n\r\n  // ========================== Search Value ==========================\r\n  var mergedSearchValue = React.useMemo(function () {\r\n    var _displayValues$;\r\n    if (mode !== 'combobox') {\r\n      return searchValue;\r\n    }\r\n    var val = (_displayValues$ = displayValues[0]) === null || _displayValues$ === void 0 ? void 0 : _displayValues$.value;\r\n    return typeof val === 'string' || typeof val === 'number' ? String(val) : '';\r\n  }, [searchValue, mode, displayValues]);\r\n\r\n  // ========================== Custom Input ==========================\r\n  // Only works in `combobox`\r\n  var customizeInputElement = mode === 'combobox' && typeof getInputElement === 'function' && getInputElement() || null;\r\n\r\n  // Used for customize replacement for `rc-cascader`\r\n  var customizeRawInputElement = typeof getRawInputElement === 'function' && getRawInputElement();\r\n  var customizeRawInputRef = useComposeRef(selectorDomRef, customizeRawInputElement === null || customizeRawInputElement === void 0 || (_customizeRawInputEle = customizeRawInputElement.props) === null || _customizeRawInputEle === void 0 ? void 0 : _customizeRawInputEle.ref);\r\n\r\n  // ============================== Open ==============================\r\n  // SSR not support Portal which means we need delay `open` for the first time render\r\n  var _React$useState3 = React.useState(false),\r\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\r\n    rendered = _React$useState4[0],\r\n    setRendered = _React$useState4[1];\r\n  useLayoutEffect(function () {\r\n    setRendered(true);\r\n  }, []);\r\n  var _useMergedState = useMergedState(false, {\r\n      defaultValue: defaultOpen,\r\n      value: open\r\n    }),\r\n    _useMergedState2 = _slicedToArray(_useMergedState, 2),\r\n    innerOpen = _useMergedState2[0],\r\n    setInnerOpen = _useMergedState2[1];\r\n  var mergedOpen = rendered ? innerOpen : false;\r\n\r\n  // Not trigger `open` in `combobox` when `notFoundContent` is empty\r\n  var emptyListContent = !notFoundContent && emptyOptions;\r\n  if (disabled || emptyListContent && mergedOpen && mode === 'combobox') {\r\n    mergedOpen = false;\r\n  }\r\n  var triggerOpen = emptyListContent ? false : mergedOpen;\r\n  var onToggleOpen = React.useCallback(function (newOpen) {\r\n    var nextOpen = newOpen !== undefined ? newOpen : !mergedOpen;\r\n    if (!disabled) {\r\n      setInnerOpen(nextOpen);\r\n      if (mergedOpen !== nextOpen) {\r\n        onDropdownVisibleChange === null || onDropdownVisibleChange === void 0 || onDropdownVisibleChange(nextOpen);\r\n      }\r\n    }\r\n  }, [disabled, mergedOpen, setInnerOpen, onDropdownVisibleChange]);\r\n\r\n  // ============================= Search =============================\r\n  var tokenWithEnter = React.useMemo(function () {\r\n    return (tokenSeparators || []).some(function (tokenSeparator) {\r\n      return ['\\n', '\\r\\n'].includes(tokenSeparator);\r\n    });\r\n  }, [tokenSeparators]);\r\n  var onInternalSearch = function onInternalSearch(searchText, fromTyping, isCompositing) {\r\n    var ret = true;\r\n    var newSearchText = searchText;\r\n    onActiveValueChange === null || onActiveValueChange === void 0 || onActiveValueChange(null);\r\n\r\n    // Check if match the `tokenSeparators`\r\n    var patchLabels = isCompositing ? null : getSeparatedContent(searchText, tokenSeparators);\r\n\r\n    // Ignore combobox since it's not split-able\r\n    if (mode !== 'combobox' && patchLabels) {\r\n      newSearchText = '';\r\n      onSearchSplit === null || onSearchSplit === void 0 || onSearchSplit(patchLabels);\r\n\r\n      // Should close when paste finish\r\n      onToggleOpen(false);\r\n\r\n      // Tell Selector that break next actions\r\n      ret = false;\r\n    }\r\n    if (onSearch && mergedSearchValue !== newSearchText) {\r\n      onSearch(newSearchText, {\r\n        source: fromTyping ? 'typing' : 'effect'\r\n      });\r\n    }\r\n    return ret;\r\n  };\r\n\r\n  // Only triggered when menu is closed & mode is tags\r\n  // If menu is open, OptionList will take charge\r\n  // If mode isn't tags, press enter is not meaningful when you can't see any option\r\n  var onInternalSearchSubmit = function onInternalSearchSubmit(searchText) {\r\n    // prevent empty tags from appearing when you click the Enter button\r\n    if (!searchText || !searchText.trim()) {\r\n      return;\r\n    }\r\n    onSearch(searchText, {\r\n      source: 'submit'\r\n    });\r\n  };\r\n\r\n  // Close will clean up single mode search text\r\n  React.useEffect(function () {\r\n    if (!mergedOpen && !multiple && mode !== 'combobox') {\r\n      onInternalSearch('', false, false);\r\n    }\r\n  }, [mergedOpen]);\r\n\r\n  // ============================ Disabled ============================\r\n  // Close dropdown & remove focus state when disabled change\r\n  React.useEffect(function () {\r\n    if (innerOpen && disabled) {\r\n      setInnerOpen(false);\r\n    }\r\n\r\n    // After onBlur is triggered, the focused does not need to be reset\r\n    if (disabled && !blurRef.current) {\r\n      setMockFocused(false);\r\n    }\r\n  }, [disabled]);\r\n\r\n  // ============================ Keyboard ============================\r\n  /**\r\n   * We record input value here to check if can press to clean up by backspace\r\n   * - null: Key is not down, this is reset by key up\r\n   * - true: Search text is empty when first time backspace down\r\n   * - false: Search text is not empty when first time backspace down\r\n   */\r\n  var _useLock = useLock(),\r\n    _useLock2 = _slicedToArray(_useLock, 2),\r\n    getClearLock = _useLock2[0],\r\n    setClearLock = _useLock2[1];\r\n\r\n  // KeyDown\r\n  var onInternalKeyDown = function onInternalKeyDown(event) {\r\n    var clearLock = getClearLock();\r\n    var which = event.which;\r\n    if (which === KeyCode.ENTER) {\r\n      // Do not submit form when type in the input\r\n      if (mode !== 'combobox') {\r\n        event.preventDefault();\r\n      }\r\n\r\n      // We only manage open state here, close logic should handle by list component\r\n      if (!mergedOpen) {\r\n        onToggleOpen(true);\r\n      }\r\n    }\r\n    setClearLock(!!mergedSearchValue);\r\n\r\n    // Remove value by `backspace`\r\n    if (which === KeyCode.BACKSPACE && !clearLock && multiple && !mergedSearchValue && displayValues.length) {\r\n      var cloneDisplayValues = _toConsumableArray(displayValues);\r\n      var removedDisplayValue = null;\r\n      for (var i = cloneDisplayValues.length - 1; i >= 0; i -= 1) {\r\n        var current = cloneDisplayValues[i];\r\n        if (!current.disabled) {\r\n          cloneDisplayValues.splice(i, 1);\r\n          removedDisplayValue = current;\r\n          break;\r\n        }\r\n      }\r\n      if (removedDisplayValue) {\r\n        onDisplayValuesChange(cloneDisplayValues, {\r\n          type: 'remove',\r\n          values: [removedDisplayValue]\r\n        });\r\n      }\r\n    }\r\n    for (var _len = arguments.length, rest = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\r\n      rest[_key - 1] = arguments[_key];\r\n    }\r\n    if (mergedOpen && listRef.current) {\r\n      var _listRef$current2;\r\n      (_listRef$current2 = listRef.current).onKeyDown.apply(_listRef$current2, [event].concat(rest));\r\n    }\r\n    onKeyDown === null || onKeyDown === void 0 || onKeyDown.apply(void 0, [event].concat(rest));\r\n  };\r\n\r\n  // KeyUp\r\n  var onInternalKeyUp = function onInternalKeyUp(event) {\r\n    for (var _len2 = arguments.length, rest = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\r\n      rest[_key2 - 1] = arguments[_key2];\r\n    }\r\n    if (mergedOpen && listRef.current) {\r\n      var _listRef$current3;\r\n      (_listRef$current3 = listRef.current).onKeyUp.apply(_listRef$current3, [event].concat(rest));\r\n    }\r\n    onKeyUp === null || onKeyUp === void 0 || onKeyUp.apply(void 0, [event].concat(rest));\r\n  };\r\n\r\n  // ============================ Selector ============================\r\n  var onSelectorRemove = function onSelectorRemove(val) {\r\n    var newValues = displayValues.filter(function (i) {\r\n      return i !== val;\r\n    });\r\n    onDisplayValuesChange(newValues, {\r\n      type: 'remove',\r\n      values: [val]\r\n    });\r\n  };\r\n\r\n  // ========================== Focus / Blur ==========================\r\n  /** Record real focus status */\r\n  var focusRef = React.useRef(false);\r\n  var onContainerFocus = function onContainerFocus() {\r\n    setMockFocused(true);\r\n    if (!disabled) {\r\n      if (onFocus && !focusRef.current) {\r\n        onFocus.apply(void 0, arguments);\r\n      }\r\n\r\n      // `showAction` should handle `focus` if set\r\n      if (showAction.includes('focus')) {\r\n        onToggleOpen(true);\r\n      }\r\n    }\r\n    focusRef.current = true;\r\n  };\r\n  var onContainerBlur = function onContainerBlur() {\r\n    blurRef.current = true;\r\n    setMockFocused(false, function () {\r\n      focusRef.current = false;\r\n      blurRef.current = false;\r\n      onToggleOpen(false);\r\n    });\r\n    if (disabled) {\r\n      return;\r\n    }\r\n    if (mergedSearchValue) {\r\n      // `tags` mode should move `searchValue` into values\r\n      if (mode === 'tags') {\r\n        onSearch(mergedSearchValue, {\r\n          source: 'submit'\r\n        });\r\n      } else if (mode === 'multiple') {\r\n        // `multiple` mode only clean the search value but not trigger event\r\n        onSearch('', {\r\n          source: 'blur'\r\n        });\r\n      }\r\n    }\r\n    if (onBlur) {\r\n      onBlur.apply(void 0, arguments);\r\n    }\r\n  };\r\n\r\n  // Give focus back of Select\r\n  var activeTimeoutIds = [];\r\n  React.useEffect(function () {\r\n    return function () {\r\n      activeTimeoutIds.forEach(function (timeoutId) {\r\n        return clearTimeout(timeoutId);\r\n      });\r\n      activeTimeoutIds.splice(0, activeTimeoutIds.length);\r\n    };\r\n  }, []);\r\n  var onInternalMouseDown = function onInternalMouseDown(event) {\r\n    var _triggerRef$current;\r\n    var target = event.target;\r\n    var popupElement = (_triggerRef$current = triggerRef.current) === null || _triggerRef$current === void 0 ? void 0 : _triggerRef$current.getPopupElement();\r\n\r\n    // We should give focus back to selector if clicked item is not focusable\r\n    if (popupElement && popupElement.contains(target)) {\r\n      var timeoutId = setTimeout(function () {\r\n        var index = activeTimeoutIds.indexOf(timeoutId);\r\n        if (index !== -1) {\r\n          activeTimeoutIds.splice(index, 1);\r\n        }\r\n        cancelSetMockFocused();\r\n        if (!mobile && !popupElement.contains(document.activeElement)) {\r\n          var _selectorRef$current3;\r\n          (_selectorRef$current3 = selectorRef.current) === null || _selectorRef$current3 === void 0 || _selectorRef$current3.focus();\r\n        }\r\n      });\r\n      activeTimeoutIds.push(timeoutId);\r\n    }\r\n    for (var _len3 = arguments.length, restArgs = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\r\n      restArgs[_key3 - 1] = arguments[_key3];\r\n    }\r\n    onMouseDown === null || onMouseDown === void 0 || onMouseDown.apply(void 0, [event].concat(restArgs));\r\n  };\r\n\r\n  // ============================ Dropdown ============================\r\n  var _React$useState5 = React.useState({}),\r\n    _React$useState6 = _slicedToArray(_React$useState5, 2),\r\n    forceUpdate = _React$useState6[1];\r\n  // We need force update here since popup dom is render async\r\n  function onPopupMouseEnter() {\r\n    forceUpdate({});\r\n  }\r\n\r\n  // Used for raw custom input trigger\r\n  var onTriggerVisibleChange;\r\n  if (customizeRawInputElement) {\r\n    onTriggerVisibleChange = function onTriggerVisibleChange(newOpen) {\r\n      onToggleOpen(newOpen);\r\n    };\r\n  }\r\n\r\n  // Close when click on non-select element\r\n  useSelectTriggerControl(function () {\r\n    var _triggerRef$current2;\r\n    return [containerRef.current, (_triggerRef$current2 = triggerRef.current) === null || _triggerRef$current2 === void 0 ? void 0 : _triggerRef$current2.getPopupElement()];\r\n  }, triggerOpen, onToggleOpen, !!customizeRawInputElement);\r\n\r\n  // ============================ Context =============================\r\n  var baseSelectContext = React.useMemo(function () {\r\n    return _objectSpread(_objectSpread({}, props), {}, {\r\n      notFoundContent: notFoundContent,\r\n      open: mergedOpen,\r\n      triggerOpen: triggerOpen,\r\n      id: id,\r\n      showSearch: mergedShowSearch,\r\n      multiple: multiple,\r\n      toggleOpen: onToggleOpen\r\n    });\r\n  }, [props, notFoundContent, triggerOpen, mergedOpen, id, mergedShowSearch, multiple, onToggleOpen]);\r\n\r\n  // ==================================================================\r\n  // ==                            Render                            ==\r\n  // ==================================================================\r\n\r\n  // ============================= Arrow ==============================\r\n  var showSuffixIcon = !!suffixIcon || loading;\r\n  var arrowNode;\r\n  if (showSuffixIcon) {\r\n    arrowNode = /*#__PURE__*/React.createElement(TransBtn, {\r\n      className: classNames(\"\".concat(prefixCls, \"-arrow\"), _defineProperty({}, \"\".concat(prefixCls, \"-arrow-loading\"), loading)),\r\n      customizeIcon: suffixIcon,\r\n      customizeIconProps: {\r\n        loading: loading,\r\n        searchValue: mergedSearchValue,\r\n        open: mergedOpen,\r\n        focused: mockFocused,\r\n        showSearch: mergedShowSearch\r\n      }\r\n    });\r\n  }\r\n\r\n  // ============================= Clear ==============================\r\n  var onClearMouseDown = function onClearMouseDown() {\r\n    var _selectorRef$current4;\r\n    onClear === null || onClear === void 0 || onClear();\r\n    (_selectorRef$current4 = selectorRef.current) === null || _selectorRef$current4 === void 0 || _selectorRef$current4.focus();\r\n    onDisplayValuesChange([], {\r\n      type: 'clear',\r\n      values: displayValues\r\n    });\r\n    onInternalSearch('', false, false);\r\n  };\r\n  var _useAllowClear = useAllowClear(prefixCls, onClearMouseDown, displayValues, allowClear, clearIcon, disabled, mergedSearchValue, mode),\r\n    mergedAllowClear = _useAllowClear.allowClear,\r\n    clearNode = _useAllowClear.clearIcon;\r\n\r\n  // =========================== OptionList ===========================\r\n  var optionList = /*#__PURE__*/React.createElement(OptionList, {\r\n    ref: listRef\r\n  });\r\n\r\n  // ============================= Select =============================\r\n  var mergedClassName = classNames(prefixCls, className, (_classNames2 = {}, _defineProperty(_classNames2, \"\".concat(prefixCls, \"-focused\"), mockFocused), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-multiple\"), multiple), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-single\"), !multiple), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-allow-clear\"), allowClear), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-show-arrow\"), showSuffixIcon), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-disabled\"), disabled), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-loading\"), loading), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-open\"), mergedOpen), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-customize-input\"), customizeInputElement), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-show-search\"), mergedShowSearch), _classNames2));\r\n\r\n  // >>> Selector\r\n  var selectorNode = /*#__PURE__*/React.createElement(SelectTrigger, {\r\n    ref: triggerRef,\r\n    disabled: disabled,\r\n    prefixCls: prefixCls,\r\n    visible: triggerOpen,\r\n    popupElement: optionList,\r\n    animation: animation,\r\n    transitionName: transitionName,\r\n    dropdownStyle: dropdownStyle,\r\n    dropdownClassName: dropdownClassName,\r\n    direction: direction,\r\n    dropdownMatchSelectWidth: dropdownMatchSelectWidth,\r\n    dropdownRender: dropdownRender,\r\n    dropdownAlign: dropdownAlign,\r\n    placement: placement,\r\n    builtinPlacements: builtinPlacements,\r\n    getPopupContainer: getPopupContainer,\r\n    empty: emptyOptions,\r\n    getTriggerDOMNode: function getTriggerDOMNode() {\r\n      return selectorDomRef.current;\r\n    },\r\n    onPopupVisibleChange: onTriggerVisibleChange,\r\n    onPopupMouseEnter: onPopupMouseEnter\r\n  }, customizeRawInputElement ? /*#__PURE__*/React.cloneElement(customizeRawInputElement, {\r\n    ref: customizeRawInputRef\r\n  }) : /*#__PURE__*/React.createElement(Selector, _extends({}, props, {\r\n    domRef: selectorDomRef,\r\n    prefixCls: prefixCls,\r\n    inputElement: customizeInputElement,\r\n    ref: selectorRef,\r\n    id: id,\r\n    showSearch: mergedShowSearch,\r\n    autoClearSearchValue: autoClearSearchValue,\r\n    mode: mode,\r\n    activeDescendantId: activeDescendantId,\r\n    tagRender: tagRender,\r\n    values: displayValues,\r\n    open: mergedOpen,\r\n    onToggleOpen: onToggleOpen,\r\n    activeValue: activeValue,\r\n    searchValue: mergedSearchValue,\r\n    onSearch: onInternalSearch,\r\n    onSearchSubmit: onInternalSearchSubmit,\r\n    onRemove: onSelectorRemove,\r\n    tokenWithEnter: tokenWithEnter\r\n  })));\r\n\r\n  // >>> Render\r\n  var renderNode;\r\n\r\n  // Render raw\r\n  if (customizeRawInputElement) {\r\n    renderNode = selectorNode;\r\n  } else {\r\n    renderNode = /*#__PURE__*/React.createElement(\"div\", _extends({\r\n      className: mergedClassName\r\n    }, domProps, {\r\n      ref: containerRef,\r\n      onMouseDown: onInternalMouseDown,\r\n      onKeyDown: onInternalKeyDown,\r\n      onKeyUp: onInternalKeyUp,\r\n      onFocus: onContainerFocus,\r\n      onBlur: onContainerBlur\r\n    }), mockFocused && !mergedOpen && /*#__PURE__*/React.createElement(\"span\", {\r\n      style: {\r\n        width: 0,\r\n        height: 0,\r\n        position: 'absolute',\r\n        overflow: 'hidden',\r\n        opacity: 0\r\n      },\r\n      \"aria-live\": \"polite\"\r\n    }, \"\".concat(displayValues.map(function (_ref) {\r\n      var label = _ref.label,\r\n        value = _ref.value;\r\n      return ['number', 'string'].includes(_typeof(label)) ? label : value;\r\n    }).join(', '))), selectorNode, arrowNode, mergedAllowClear && clearNode);\r\n  }\r\n  return /*#__PURE__*/React.createElement(BaseSelectContext.Provider, {\r\n    value: baseSelectContext\r\n  }, renderNode);\r\n});\r\n\r\n// Set display name for dev\r\nif (process.env.NODE_ENV !== 'production') {\r\n  BaseSelect.displayName = 'BaseSelect';\r\n}\r\nexport default BaseSelect;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}