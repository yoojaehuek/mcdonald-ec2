{"ast":null,"code":"import { unit } from '@ant-design/cssinjs';\nimport { getStyle as getCheckboxStyle } from '../../checkbox/style';\nimport { genStyleHooks, mergeToken } from '../../theme/internal';\nimport { genTreeStyle, initComponentToken } from '../../tree/style';\n// =============================== Base ===============================\nconst genBaseStyle = token => {\n  const {\n    componentCls,\n    treePrefixCls,\n    colorBgElevated\n  } = token;\n  const treeCls = \".\".concat(treePrefixCls);\n  return [\n  // ======================================================\n  // ==                     Dropdown                     ==\n  // ======================================================\n  {\n    [\"\".concat(componentCls, \"-dropdown\")]: [{\n      padding: \"\".concat(unit(token.paddingXS), \" \").concat(unit(token.calc(token.paddingXS).div(2).equal()))\n    },\n    // ====================== Tree ======================\n    genTreeStyle(treePrefixCls, mergeToken(token, {\n      colorBgContainer: colorBgElevated\n    })), {\n      [treeCls]: {\n        borderRadius: 0,\n        [\"\".concat(treeCls, \"-list-holder-inner\")]: {\n          alignItems: 'stretch',\n          [\"\".concat(treeCls, \"-treenode\")]: {\n            [\"\".concat(treeCls, \"-node-content-wrapper\")]: {\n              flex: 'auto'\n            }\n          }\n        }\n      }\n    },\n    // ==================== Checkbox ====================\n    getCheckboxStyle(\"\".concat(treePrefixCls, \"-checkbox\"), token),\n    // ====================== RTL =======================\n    {\n      '&-rtl': {\n        direction: 'rtl',\n        [\"\".concat(treeCls, \"-switcher\").concat(treeCls, \"-switcher_close\")]: {\n          [\"\".concat(treeCls, \"-switcher-icon svg\")]: {\n            transform: 'rotate(90deg)'\n          }\n        }\n      }\n    }]\n  }];\n};\nexport const prepareComponentToken = initComponentToken;\n// ============================== Export ==============================\nexport default function useTreeSelectStyle(prefixCls, treePrefixCls, rootCls) {\n  return genStyleHooks('TreeSelect', token => {\n    const treeSelectToken = mergeToken(token, {\n      treePrefixCls\n    });\n    return [genBaseStyle(treeSelectToken)];\n  }, initComponentToken)(prefixCls, rootCls);\n}","map":{"version":3,"names":["unit","getStyle","getCheckboxStyle","genStyleHooks","mergeToken","genTreeStyle","initComponentToken","genBaseStyle","token","componentCls","treePrefixCls","colorBgElevated","treeCls","concat","padding","paddingXS","calc","div","equal","colorBgContainer","borderRadius","alignItems","flex","direction","transform","prepareComponentToken","useTreeSelectStyle","prefixCls","rootCls","treeSelectToken"],"sources":["C:/Users/user/Desktop/mcdonald-ec2/client/node_modules/antd/es/tree-select/style/index.js"],"sourcesContent":["import { unit } from '@ant-design/cssinjs';\r\nimport { getStyle as getCheckboxStyle } from '../../checkbox/style';\r\nimport { genStyleHooks, mergeToken } from '../../theme/internal';\r\nimport { genTreeStyle, initComponentToken } from '../../tree/style';\r\n// =============================== Base ===============================\r\nconst genBaseStyle = token => {\r\n  const {\r\n    componentCls,\r\n    treePrefixCls,\r\n    colorBgElevated\r\n  } = token;\r\n  const treeCls = `.${treePrefixCls}`;\r\n  return [\r\n  // ======================================================\r\n  // ==                     Dropdown                     ==\r\n  // ======================================================\r\n  {\r\n    [`${componentCls}-dropdown`]: [{\r\n      padding: `${unit(token.paddingXS)} ${unit(token.calc(token.paddingXS).div(2).equal())}`\r\n    },\r\n    // ====================== Tree ======================\r\n    genTreeStyle(treePrefixCls, mergeToken(token, {\r\n      colorBgContainer: colorBgElevated\r\n    })), {\r\n      [treeCls]: {\r\n        borderRadius: 0,\r\n        [`${treeCls}-list-holder-inner`]: {\r\n          alignItems: 'stretch',\r\n          [`${treeCls}-treenode`]: {\r\n            [`${treeCls}-node-content-wrapper`]: {\r\n              flex: 'auto'\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    // ==================== Checkbox ====================\r\n    getCheckboxStyle(`${treePrefixCls}-checkbox`, token),\r\n    // ====================== RTL =======================\r\n    {\r\n      '&-rtl': {\r\n        direction: 'rtl',\r\n        [`${treeCls}-switcher${treeCls}-switcher_close`]: {\r\n          [`${treeCls}-switcher-icon svg`]: {\r\n            transform: 'rotate(90deg)'\r\n          }\r\n        }\r\n      }\r\n    }]\r\n  }];\r\n};\r\nexport const prepareComponentToken = initComponentToken;\r\n// ============================== Export ==============================\r\nexport default function useTreeSelectStyle(prefixCls, treePrefixCls, rootCls) {\r\n  return genStyleHooks('TreeSelect', token => {\r\n    const treeSelectToken = mergeToken(token, {\r\n      treePrefixCls\r\n    });\r\n    return [genBaseStyle(treeSelectToken)];\r\n  }, initComponentToken)(prefixCls, rootCls);\r\n}"],"mappings":"AAAA,SAASA,IAAI,QAAQ,qBAAqB;AAC1C,SAASC,QAAQ,IAAIC,gBAAgB,QAAQ,sBAAsB;AACnE,SAASC,aAAa,EAAEC,UAAU,QAAQ,sBAAsB;AAChE,SAASC,YAAY,EAAEC,kBAAkB,QAAQ,kBAAkB;AACnE;AACA,MAAMC,YAAY,GAAGC,KAAK,IAAI;EAC5B,MAAM;IACJC,YAAY;IACZC,aAAa;IACbC;EACF,CAAC,GAAGH,KAAK;EACT,MAAMI,OAAO,OAAAC,MAAA,CAAOH,aAAa,CAAE;EACnC,OAAO;EACP;EACA;EACA;EACA;IACE,IAAAG,MAAA,CAAIJ,YAAY,iBAAc,CAAC;MAC7BK,OAAO,KAAAD,MAAA,CAAKb,IAAI,CAACQ,KAAK,CAACO,SAAS,CAAC,OAAAF,MAAA,CAAIb,IAAI,CAACQ,KAAK,CAACQ,IAAI,CAACR,KAAK,CAACO,SAAS,CAAC,CAACE,GAAG,CAAC,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC,CAAC;IACvF,CAAC;IACD;IACAb,YAAY,CAACK,aAAa,EAAEN,UAAU,CAACI,KAAK,EAAE;MAC5CW,gBAAgB,EAAER;IACpB,CAAC,CAAC,CAAC,EAAE;MACH,CAACC,OAAO,GAAG;QACTQ,YAAY,EAAE,CAAC;QACf,IAAAP,MAAA,CAAID,OAAO,0BAAuB;UAChCS,UAAU,EAAE,SAAS;UACrB,IAAAR,MAAA,CAAID,OAAO,iBAAc;YACvB,IAAAC,MAAA,CAAID,OAAO,6BAA0B;cACnCU,IAAI,EAAE;YACR;UACF;QACF;MACF;IACF,CAAC;IACD;IACApB,gBAAgB,IAAAW,MAAA,CAAIH,aAAa,gBAAaF,KAAK,CAAC;IACpD;IACA;MACE,OAAO,EAAE;QACPe,SAAS,EAAE,KAAK;QAChB,IAAAV,MAAA,CAAID,OAAO,eAAAC,MAAA,CAAYD,OAAO,uBAAoB;UAChD,IAAAC,MAAA,CAAID,OAAO,0BAAuB;YAChCY,SAAS,EAAE;UACb;QACF;MACF;IACF,CAAC;EACH,CAAC,CAAC;AACJ,CAAC;AACD,OAAO,MAAMC,qBAAqB,GAAGnB,kBAAkB;AACvD;AACA,eAAe,SAASoB,kBAAkBA,CAACC,SAAS,EAAEjB,aAAa,EAAEkB,OAAO,EAAE;EAC5E,OAAOzB,aAAa,CAAC,YAAY,EAAEK,KAAK,IAAI;IAC1C,MAAMqB,eAAe,GAAGzB,UAAU,CAACI,KAAK,EAAE;MACxCE;IACF,CAAC,CAAC;IACF,OAAO,CAACH,YAAY,CAACsB,eAAe,CAAC,CAAC;EACxC,CAAC,EAAEvB,kBAAkB,CAAC,CAACqB,SAAS,EAAEC,OAAO,CAAC;AAC5C"},"metadata":{},"sourceType":"module","externalDependencies":[]}