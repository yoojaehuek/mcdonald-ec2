{"ast":null,"code":"\"use client\";\n\nimport classNames from 'classnames';\nimport React, { useEffect, useState } from 'react';\nimport InputNumber from '../../input-number';\nconst ColorSteppers = _ref => {\n  let {\n    prefixCls,\n    min = 0,\n    max = 100,\n    value,\n    onChange,\n    className,\n    formatter\n  } = _ref;\n  const colorSteppersPrefixCls = \"\".concat(prefixCls, \"-steppers\");\n  const [stepValue, setStepValue] = useState(value);\n  // Update step value\n  useEffect(() => {\n    if (!Number.isNaN(value)) {\n      setStepValue(value);\n    }\n  }, [value]);\n  return /*#__PURE__*/React.createElement(InputNumber, {\n    className: classNames(colorSteppersPrefixCls, className),\n    min: min,\n    max: max,\n    value: stepValue,\n    formatter: formatter,\n    size: \"small\",\n    onChange: step => {\n      if (!value) {\n        setStepValue(step || 0);\n      }\n      onChange === null || onChange === void 0 ? void 0 : onChange(step);\n    }\n  });\n};\nexport default ColorSteppers;","map":{"version":3,"names":["classNames","React","useEffect","useState","InputNumber","ColorSteppers","_ref","prefixCls","min","max","value","onChange","className","formatter","colorSteppersPrefixCls","concat","stepValue","setStepValue","Number","isNaN","createElement","size","step"],"sources":["C:/Users/user/Desktop/mcdonald-ec2/client/node_modules/antd/es/color-picker/components/ColorSteppers.js"],"sourcesContent":["\"use client\";\r\n\r\nimport classNames from 'classnames';\r\nimport React, { useEffect, useState } from 'react';\r\nimport InputNumber from '../../input-number';\r\nconst ColorSteppers = _ref => {\r\n  let {\r\n    prefixCls,\r\n    min = 0,\r\n    max = 100,\r\n    value,\r\n    onChange,\r\n    className,\r\n    formatter\r\n  } = _ref;\r\n  const colorSteppersPrefixCls = `${prefixCls}-steppers`;\r\n  const [stepValue, setStepValue] = useState(value);\r\n  // Update step value\r\n  useEffect(() => {\r\n    if (!Number.isNaN(value)) {\r\n      setStepValue(value);\r\n    }\r\n  }, [value]);\r\n  return /*#__PURE__*/React.createElement(InputNumber, {\r\n    className: classNames(colorSteppersPrefixCls, className),\r\n    min: min,\r\n    max: max,\r\n    value: stepValue,\r\n    formatter: formatter,\r\n    size: \"small\",\r\n    onChange: step => {\r\n      if (!value) {\r\n        setStepValue(step || 0);\r\n      }\r\n      onChange === null || onChange === void 0 ? void 0 : onChange(step);\r\n    }\r\n  });\r\n};\r\nexport default ColorSteppers;"],"mappings":"AAAA,YAAY;;AAEZ,OAAOA,UAAU,MAAM,YAAY;AACnC,OAAOC,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,WAAW,MAAM,oBAAoB;AAC5C,MAAMC,aAAa,GAAGC,IAAI,IAAI;EAC5B,IAAI;IACFC,SAAS;IACTC,GAAG,GAAG,CAAC;IACPC,GAAG,GAAG,GAAG;IACTC,KAAK;IACLC,QAAQ;IACRC,SAAS;IACTC;EACF,CAAC,GAAGP,IAAI;EACR,MAAMQ,sBAAsB,MAAAC,MAAA,CAAMR,SAAS,cAAW;EACtD,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAACO,KAAK,CAAC;EACjD;EACAR,SAAS,CAAC,MAAM;IACd,IAAI,CAACgB,MAAM,CAACC,KAAK,CAACT,KAAK,CAAC,EAAE;MACxBO,YAAY,CAACP,KAAK,CAAC;IACrB;EACF,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EACX,OAAO,aAAaT,KAAK,CAACmB,aAAa,CAAChB,WAAW,EAAE;IACnDQ,SAAS,EAAEZ,UAAU,CAACc,sBAAsB,EAAEF,SAAS,CAAC;IACxDJ,GAAG,EAAEA,GAAG;IACRC,GAAG,EAAEA,GAAG;IACRC,KAAK,EAAEM,SAAS;IAChBH,SAAS,EAAEA,SAAS;IACpBQ,IAAI,EAAE,OAAO;IACbV,QAAQ,EAAEW,IAAI,IAAI;MAChB,IAAI,CAACZ,KAAK,EAAE;QACVO,YAAY,CAACK,IAAI,IAAI,CAAC,CAAC;MACzB;MACAX,QAAQ,KAAK,IAAI,IAAIA,QAAQ,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,QAAQ,CAACW,IAAI,CAAC;IACpE;EACF,CAAC,CAAC;AACJ,CAAC;AACD,eAAejB,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}